  I0705 12:10:19.818492      21 e2e.go:109] Starting e2e run "6daaca73-4179-4178-a207-397389a7c087" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1751717419 - will randomize all specs

Will run 419 of 6731 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0705 12:10:20.074853 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  I0705 12:10:20.075773 21 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0705 12:10:36.266253 21 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0705 12:10:36.270320 21 e2e.go:153] 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I0705 12:10:36.270364 21 e2e.go:245] e2e test version: v1.33.2
  I0705 12:10:36.271448 21 e2e.go:254] kube-apiserver version: v1.33.2
  I0705 12:10:36.271534 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  I0705 12:10:36.276252 21 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [16.201 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 07/05/25 12:10:36.41
  I0705 12:10:36.410858 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename projected @ 07/05/25 12:10:36.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:10:36.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:10:36.428
  STEP: Creating a pod to test downward API volume plugin @ 07/05/25 12:10:36.431
  STEP: Saw pod success @ 07/05/25 12:10:44.476
  I0705 12:10:44.480731 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod downwardapi-volume-f78b1875-7749-4ce7-895f-7ce93d13163a container client-container: <nil>
  STEP: delete the pod @ 07/05/25 12:10:44.497
  I0705 12:10:44.521793 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6646" for this suite. @ 07/05/25 12:10:44.527
• [8.127 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 07/05/25 12:10:44.537
  I0705 12:10:44.537607 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename projected @ 07/05/25 12:10:44.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:10:44.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:10:44.553
  STEP: Creating secret with name s-test-opt-del-d6bec446-67f4-433d-9008-38e58e0b2a8f @ 07/05/25 12:10:44.628
  STEP: Creating secret with name s-test-opt-upd-22eb260f-1f88-42cc-8b4b-75e3f6af841b @ 07/05/25 12:10:44.635
  STEP: Creating the pod @ 07/05/25 12:10:44.641
  STEP: Deleting secret s-test-opt-del-d6bec446-67f4-433d-9008-38e58e0b2a8f @ 07/05/25 12:10:46.696
  STEP: Updating secret s-test-opt-upd-22eb260f-1f88-42cc-8b4b-75e3f6af841b @ 07/05/25 12:10:46.705
  STEP: Creating secret with name s-test-opt-create-637660ff-9550-4679-b708-7457ea2e6e7f @ 07/05/25 12:10:46.711
  STEP: waiting to observe update in volume @ 07/05/25 12:10:46.716
  I0705 12:12:05.142875 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8838" for this suite. @ 07/05/25 12:12:05.149
• [80.620 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 07/05/25 12:12:05.157
  I0705 12:12:05.157992 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename crd-selectable-fields @ 07/05/25 12:12:05.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:12:05.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:12:05.176
  STEP: Setting up server cert @ 07/05/25 12:12:05.179
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/05/25 12:12:05.658
  STEP: Deploying the custom resource conversion webhook pod @ 07/05/25 12:12:05.666
  STEP: Wait for the deployment to be ready @ 07/05/25 12:12:05.682
  I0705 12:12:05.694299 21 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  I0705 12:12:07.709388 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 5, 12, 12, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 12, 12, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 5, 12, 12, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 12, 12, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-99f4d744b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 07/05/25 12:12:09.714
  STEP: Verifying the service has paired with the endpoint @ 07/05/25 12:12:09.74
  I0705 12:12:10.741187 21 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 07/05/25 12:12:10.748
  I0705 12:12:10.748153 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Creating a custom resource conversion webhook @ 07/05/25 12:12:11.263
  STEP: Watching with field selectors @ 07/05/25 12:12:13.305
  STEP: Registering informers with field selectors @ 07/05/25 12:12:13.308
  STEP: Creating custom resources @ 07/05/25 12:12:13.308
  STEP: Listing v2 custom resources with field selector host=host1 @ 07/05/25 12:12:13.337
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 07/05/25 12:12:13.34
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 07/05/25 12:12:13.346
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 07/05/25 12:12:13.351
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 07/05/25 12:12:13.355
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 07/05/25 12:12:13.36
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 07/05/25 12:12:13.361
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 07/05/25 12:12:13.361
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 07/05/25 12:12:13.361
  STEP: Deleting one custom resources to ensure that deletions are observed @ 07/05/25 12:12:13.361
  STEP: Updating one custom resources to ensure that deletions are observed @ 07/05/25 12:12:13.391
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 07/05/25 12:12:13.406
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 07/05/25 12:12:13.41
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 07/05/25 12:12:13.414
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 07/05/25 12:12:13.419
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 07/05/25 12:12:13.419
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 07/05/25 12:12:13.419
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 07/05/25 12:12:13.419
  I0705 12:12:13.995892 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-1170" for this suite. @ 07/05/25 12:12:14
• [8.854 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 07/05/25 12:12:14.012
  I0705 12:12:14.012798 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename deployment @ 07/05/25 12:12:14.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:12:14.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:12:14.033
  I0705 12:12:14.035848 21 deployment.go:1215] Creating deployment "webserver-deployment"
  I0705 12:12:14.043249 21 deployment.go:1219] Waiting for observed generation 1
  I0705 12:12:16.054377 21 deployment.go:1224] Waiting for all required pods to come up
  I0705 12:12:16.061134 21 resource.go:81] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 07/05/25 12:12:16.061
  I0705 12:12:18.073099 21 deployment.go:1228] Waiting for deployment "webserver-deployment" to complete
  I0705 12:12:18.083787 21 deployment.go:1237] Updating deployment "webserver-deployment" with a non-existent image
  I0705 12:12:18.096418 21 deployment.go:314] Updating deployment webserver-deployment
  I0705 12:12:18.096456 21 deployment.go:1243] Waiting for observed generation 2
  I0705 12:12:20.108264 21 deployment.go:1253] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0705 12:12:20.112740 21 deployment.go:1258] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0705 12:12:20.116849 21 deployment.go:1263] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0705 12:12:20.131445 21 deployment.go:1277] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0705 12:12:20.131484 21 deployment.go:1282] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0705 12:12:20.135538 21 deployment.go:1287] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0705 12:12:20.143746 21 deployment.go:1294] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0705 12:12:20.143774 21 deployment.go:1302] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0705 12:12:20.155942 21 deployment.go:314] Updating deployment webserver-deployment
  I0705 12:12:20.155982 21 deployment.go:1308] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0705 12:12:20.164612 21 deployment.go:1316] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0705 12:12:20.175331 21 deployment.go:1322] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0705 12:12:20.200921 21 deployment.go:632] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "27d6c9e7-2bd5-4db2-a8da-638bac4ea7ed",
      ResourceVersion: (string) (len=4) "5354",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314334,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0705 12:12:20.233926 21 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d6ade19b-1688-4e2a-bb3a-c8d43f2c70fb",
      ResourceVersion: (string) (len=4) "5347",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "27d6c9e7-2bd5-4db2-a8da-638bac4ea7ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 37 64 36 63 39  65 37 2d 32 62 64 35 2d  |\"27d6c9e7-2bd5-|
              00000120  34 64 62 32 2d 61 38 64  61 2d 36 33 38 62 61 63  |4db2-a8da-638bac|
              00000130  34 65 61 37 65 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4ea7ed\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0705 12:12:20.234539 21 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0705 12:12:20.234728 21 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2f02a581-0d0a-4c9a-abe6-483f75b5a239",
      ResourceVersion: (string) (len=4) "5344",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314334,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "27d6c9e7-2bd5-4db2-a8da-638bac4ea7ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 37 64 36 63 39  65 37 2d 32 62 64 35 2d  |\"27d6c9e7-2bd5-|
              00000120  34 64 62 32 2d 61 38 64  61 2d 36 33 38 62 61 63  |4db2-a8da-638bac|
              00000130  34 65 61 37 65 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4ea7ed\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0705 12:12:20.255346 21 deployment.go:68] Pod "webserver-deployment-685b768f58-2r57n" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-2r57n",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4c44b438-d050-4d04-88b2-ee167ca40688",
      ResourceVersion: (string) (len=4) "5365",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314340,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2f02a581-0d0a-4c9a-abe6-483f75b5a239",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  30 32 61 35 38 31 2d 30  |d\":\"2f02a581-0|
              00000090  64 30 61 2d 34 63 39 61  2d 61 62 65 36 2d 34 38  |d0a-4c9a-abe6-48|
              000000a0  33 66 37 35 62 35 61 32  33 39 5c 22 7d 22 3a 7b  |3f75b5a239\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lhvs9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lhvs9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-90-231",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:12:20.256428 21 deployment.go:68] Pod "webserver-deployment-685b768f58-4wpts" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-4wpts",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ad99a11c-d047-458c-b136-44aad358d3fe",
      ResourceVersion: (string) (len=4) "5204",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314334,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2f02a581-0d0a-4c9a-abe6-483f75b5a239",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  30 32 61 35 38 31 2d 30  |d\":\"2f02a581-0|
              00000090  64 30 61 2d 34 63 39 61  2d 61 62 65 36 2d 34 38  |d0a-4c9a-abe6-48|
              000000a0  33 66 37 35 62 35 61 32  33 39 5c 22 7d 22 3a 7b  |3f75b5a239\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 2e  31 39 38 5c 22 7d 22 3a  |2.168.8.198\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vfngq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vfngq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-90-231",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.90.231",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.90.231"
        }
      },
      PodIP: (string) (len=13) "192.168.8.198",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.8.198"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314334,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63887314336,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://341675cf54b31543989000e5ba07c697153dd86d0102c4afdc2157a1f32f1a52",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vfngq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:12:20.258806 21 deployment.go:68] Pod "webserver-deployment-685b768f58-5jhmk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-5jhmk",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cfa5e5cf-f207-49ab-b4bb-853a8cdf7532",
      ResourceVersion: (string) (len=4) "5207",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314334,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2f02a581-0d0a-4c9a-abe6-483f75b5a239",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  30 32 61 35 38 31 2d 30  |d\":\"2f02a581-0|
              00000090  64 30 61 2d 34 63 39 61  2d 61 62 65 36 2d 34 38  |d0a-4c9a-abe6-48|
              000000a0  33 66 37 35 62 35 61 32  33 39 5c 22 7d 22 3a 7b  |3f75b5a239\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 2e  31 39 39 5c 22 7d 22 3a  |2.168.8.199\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nt8p6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nt8p6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-90-231",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.90.231",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.90.231"
        }
      },
      PodIP: (string) (len=13) "192.168.8.199",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.8.199"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314334,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63887314336,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://90db6d65701a42a5ce5d411c9926150721dc6f1ab18e40777a6b3cb5efc47077",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nt8p6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:12:20.260686 21 deployment.go:68] Pod "webserver-deployment-685b768f58-7ql6z" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-7ql6z",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "46ab55dd-73ff-4c10-9b48-13982e07ddb1",
      ResourceVersion: (string) (len=4) "5371",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314340,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2f02a581-0d0a-4c9a-abe6-483f75b5a239",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  30 32 61 35 38 31 2d 30  |d\":\"2f02a581-0|
              00000090  64 30 61 2d 34 63 39 61  2d 61 62 65 36 2d 34 38  |d0a-4c9a-abe6-48|
              000000a0  33 66 37 35 62 35 61 32  33 39 5c 22 7d 22 3a 7b  |3f75b5a239\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tkw77",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tkw77",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-171",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:12:20.262543 21 deployment.go:68] Pod "webserver-deployment-685b768f58-bh94c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-bh94c",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "75c3b9b5-62e5-433e-ae7d-101e78c1d3e6",
      ResourceVersion: (string) (len=4) "5390",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314340,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2f02a581-0d0a-4c9a-abe6-483f75b5a239",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  30 32 61 35 38 31 2d 30  |d\":\"2f02a581-0|
              00000090  64 30 61 2d 34 63 39 61  2d 61 62 65 36 2d 34 38  |d0a-4c9a-abe6-48|
              000000a0  33 66 37 35 62 35 61 32  33 39 5c 22 7d 22 3a 7b  |3f75b5a239\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p6hht",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p6hht",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-5-45",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:12:20.263577 21 deployment.go:68] Pod "webserver-deployment-685b768f58-cksjd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-cksjd",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f19b4a76-aaa6-4989-8e8a-44a05e8995cb",
      ResourceVersion: (string) (len=4) "5395",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314340,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2f02a581-0d0a-4c9a-abe6-483f75b5a239",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  30 32 61 35 38 31 2d 30  |d\":\"2f02a581-0|
              00000090  64 30 61 2d 34 63 39 61  2d 61 62 65 36 2d 34 38  |d0a-4c9a-abe6-48|
              000000a0  33 66 37 35 62 35 61 32  33 39 5c 22 7d 22 3a 7b  |3f75b5a239\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g4hl9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g4hl9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-5-45",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.5.45",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.5.45"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314340,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-g4hl9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:12:20.266570 21 deployment.go:68] Pod "webserver-deployment-685b768f58-d74kc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-d74kc",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5b265efc-952e-48c8-9a92-76fe63e537dd",
      ResourceVersion: (string) (len=4) "5211",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314334,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2f02a581-0d0a-4c9a-abe6-483f75b5a239",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  30 32 61 35 38 31 2d 30  |d\":\"2f02a581-0|
              00000090  64 30 61 2d 34 63 39 61  2d 61 62 65 36 2d 34 38  |d0a-4c9a-abe6-48|
              000000a0  33 66 37 35 62 35 61 32  33 39 5c 22 7d 22 3a 7b  |3f75b5a239\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 35 34  2e 31 39 39 5c 22 7d 22  |2.168.54.199\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cqhf5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cqhf5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-171",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.171",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.171"
        }
      },
      PodIP: (string) (len=14) "192.168.54.199",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.54.199"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314334,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63887314336,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a71428298e08c958b52e841d945fa26cdcdf7fd77f4f5636882db722d2c7ffd2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cqhf5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:12:20.268090 21 deployment.go:68] Pod "webserver-deployment-685b768f58-d7lqt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-d7lqt",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3743db2c-254b-4988-9515-1ba52bfa12db",
      ResourceVersion: (string) (len=4) "5220",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314334,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2f02a581-0d0a-4c9a-abe6-483f75b5a239",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  30 32 61 35 38 31 2d 30  |d\":\"2f02a581-0|
              00000090  64 30 61 2d 34 63 39 61  2d 61 62 65 36 2d 34 38  |d0a-4c9a-abe6-48|
              000000a0  33 66 37 35 62 35 61 32  33 39 5c 22 7d 22 3a 7b  |3f75b5a239\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 34  36 2e 35 5c 22 7d 22 3a  |2.168.146.5\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xz65j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xz65j",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-5-45",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.5.45",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.5.45"
        }
      },
      PodIP: (string) (len=13) "192.168.146.5",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.146.5"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314334,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63887314336,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0ce4b9bf452a3f38d29716a379112a457797f09337d557f71f03154d6e519013",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xz65j",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:12:20.269995 21 deployment.go:68] Pod "webserver-deployment-685b768f58-hf6qk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-hf6qk",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "16870c86-84f9-4c74-8ae0-d743397766e5",
      ResourceVersion: (string) (len=4) "5396",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314340,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2f02a581-0d0a-4c9a-abe6-483f75b5a239",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  30 32 61 35 38 31 2d 30  |d\":\"2f02a581-0|
              00000090  64 30 61 2d 34 63 39 61  2d 61 62 65 36 2d 34 38  |d0a-4c9a-abe6-48|
              000000a0  33 66 37 35 62 35 61 32  33 39 5c 22 7d 22 3a 7b  |3f75b5a239\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-slz7s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-slz7s",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-171",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:12:20.271817 21 deployment.go:68] Pod "webserver-deployment-685b768f58-hnqmd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-hnqmd",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d129992f-f1ee-48dc-a4c2-a098637e1dab",
      ResourceVersion: (string) (len=4) "5375",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314340,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2f02a581-0d0a-4c9a-abe6-483f75b5a239",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  30 32 61 35 38 31 2d 30  |d\":\"2f02a581-0|
              00000090  64 30 61 2d 34 63 39 61  2d 61 62 65 36 2d 34 38  |d0a-4c9a-abe6-48|
              000000a0  33 66 37 35 62 35 61 32  33 39 5c 22 7d 22 3a 7b  |3f75b5a239\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-444f7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-444f7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-171",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.171",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.171"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314340,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-444f7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:12:20.274337 21 deployment.go:68] Pod "webserver-deployment-685b768f58-jz6pm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-jz6pm",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e5e0bb26-7236-44a8-adf9-6e54b05d8d31",
      ResourceVersion: (string) (len=4) "5190",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314334,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2f02a581-0d0a-4c9a-abe6-483f75b5a239",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  30 32 61 35 38 31 2d 30  |d\":\"2f02a581-0|
              00000090  64 30 61 2d 34 63 39 61  2d 61 62 65 36 2d 34 38  |d0a-4c9a-abe6-48|
              000000a0  33 66 37 35 62 35 61 32  33 39 5c 22 7d 22 3a 7b  |3f75b5a239\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 34  36 2e 33 5c 22 7d 22 3a  |2.168.146.3\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9d8tv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9d8tv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-5-45",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.5.45",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.5.45"
        }
      },
      PodIP: (string) (len=13) "192.168.146.3",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.146.3"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314334,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63887314336,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d0d617a08154bf3a5f60b1a5b5909fe88343b358363843e12cbc524bef557e30",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9d8tv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:12:20.275692 21 deployment.go:68] Pod "webserver-deployment-685b768f58-pm6t7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-pm6t7",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "38ac0a5a-395b-455e-a7c3-e948033baeb6",
      ResourceVersion: (string) (len=4) "5369",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314340,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2f02a581-0d0a-4c9a-abe6-483f75b5a239",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  30 32 61 35 38 31 2d 30  |d\":\"2f02a581-0|
              00000090  64 30 61 2d 34 63 39 61  2d 61 62 65 36 2d 34 38  |d0a-4c9a-abe6-48|
              000000a0  33 66 37 35 62 35 61 32  33 39 5c 22 7d 22 3a 7b  |3f75b5a239\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b9t25",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b9t25",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-5-45",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:12:20.277760 21 deployment.go:68] Pod "webserver-deployment-685b768f58-pqsd2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-pqsd2",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "67b4cc5c-c519-4d14-a1b9-e825acb9e78c",
      ResourceVersion: (string) (len=4) "5392",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314340,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2f02a581-0d0a-4c9a-abe6-483f75b5a239",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  30 32 61 35 38 31 2d 30  |d\":\"2f02a581-0|
              00000090  64 30 61 2d 34 63 39 61  2d 61 62 65 36 2d 34 38  |d0a-4c9a-abe6-48|
              000000a0  33 66 37 35 62 35 61 32  33 39 5c 22 7d 22 3a 7b  |3f75b5a239\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k7v65",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k7v65",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-90-231",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:12:20.278744 21 deployment.go:68] Pod "webserver-deployment-685b768f58-r8lmb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-r8lmb",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c71d9e6e-a6df-4e85-a740-baf236b0098a",
      ResourceVersion: (string) (len=4) "5391",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314340,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2f02a581-0d0a-4c9a-abe6-483f75b5a239",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  30 32 61 35 38 31 2d 30  |d\":\"2f02a581-0|
              00000090  64 30 61 2d 34 63 39 61  2d 61 62 65 36 2d 34 38  |d0a-4c9a-abe6-48|
              000000a0  33 66 37 35 62 35 61 32  33 39 5c 22 7d 22 3a 7b  |3f75b5a239\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8st5q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8st5q",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-171",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:12:20.280139 21 deployment.go:68] Pod "webserver-deployment-685b768f58-s5xmt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-s5xmt",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9ff53251-9ea1-4713-990a-a6b47c1598eb",
      ResourceVersion: (string) (len=4) "5201",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314334,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2f02a581-0d0a-4c9a-abe6-483f75b5a239",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  30 32 61 35 38 31 2d 30  |d\":\"2f02a581-0|
              00000090  64 30 61 2d 34 63 39 61  2d 61 62 65 36 2d 34 38  |d0a-4c9a-abe6-48|
              000000a0  33 66 37 35 62 35 61 32  33 39 5c 22 7d 22 3a 7b  |3f75b5a239\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 2e  32 30 30 5c 22 7d 22 3a  |2.168.8.200\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hxd4p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hxd4p",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-90-231",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.90.231",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.90.231"
        }
      },
      PodIP: (string) (len=13) "192.168.8.200",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.8.200"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314334,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63887314336,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://cd49f274734a02eec7146b53af9cb2b9826b44b8487e5d34b19a4838574f0604",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hxd4p",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:12:20.282224 21 deployment.go:68] Pod "webserver-deployment-685b768f58-ss66d" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-ss66d",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "156200d4-62f0-495e-89ae-7c94f53e9cae",
      ResourceVersion: (string) (len=4) "5186",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314334,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2f02a581-0d0a-4c9a-abe6-483f75b5a239",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  30 32 61 35 38 31 2d 30  |d\":\"2f02a581-0|
              00000090  64 30 61 2d 34 63 39 61  2d 61 62 65 36 2d 34 38  |d0a-4c9a-abe6-48|
              000000a0  33 66 37 35 62 35 61 32  33 39 5c 22 7d 22 3a 7b  |3f75b5a239\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 34  36 2e 34 5c 22 7d 22 3a  |2.168.146.4\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bgdnt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bgdnt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-5-45",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.5.45",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.5.45"
        }
      },
      PodIP: (string) (len=13) "192.168.146.4",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.146.4"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314334,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63887314336,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e98b0aff368c2a7dfc22bf621ba77e2799bcdbcea096a2e248c05c878e17709d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bgdnt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:12:20.283612 21 deployment.go:68] Pod "webserver-deployment-685b768f58-v6xld" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-v6xld",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "20fba43b-b5bc-4e89-b7ef-612e12910026",
      ResourceVersion: (string) (len=4) "5370",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314340,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2f02a581-0d0a-4c9a-abe6-483f75b5a239",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  30 32 61 35 38 31 2d 30  |d\":\"2f02a581-0|
              00000090  64 30 61 2d 34 63 39 61  2d 61 62 65 36 2d 34 38  |d0a-4c9a-abe6-48|
              000000a0  33 66 37 35 62 35 61 32  33 39 5c 22 7d 22 3a 7b  |3f75b5a239\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-glwlk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-glwlk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-90-231",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:12:20.285624 21 deployment.go:68] Pod "webserver-deployment-685b768f58-wjwhf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-wjwhf",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8c90ef3e-5984-4f35-90ec-e9f246f0dc5e",
      ResourceVersion: (string) (len=4) "5215",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314334,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2f02a581-0d0a-4c9a-abe6-483f75b5a239",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  30 32 61 35 38 31 2d 30  |d\":\"2f02a581-0|
              00000090  64 30 61 2d 34 63 39 61  2d 61 62 65 36 2d 34 38  |d0a-4c9a-abe6-48|
              000000a0  33 66 37 35 62 35 61 32  33 39 5c 22 7d 22 3a 7b  |3f75b5a239\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 35 34  2e 31 39 37 5c 22 7d 22  |2.168.54.197\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zxm97",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zxm97",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-171",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.171",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.171"
        }
      },
      PodIP: (string) (len=14) "192.168.54.197",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.54.197"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314334,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63887314336,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c06be69fd56d5fc275df1c2c5a9f43019bddd4c373c6df4c99a6ef8303c0988b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zxm97",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:12:20.288127 21 deployment.go:68] Pod "webserver-deployment-685b768f58-zbnxb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-zbnxb",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3acf9462-9e99-4432-ac4f-cef41c13989c",
      ResourceVersion: (string) (len=4) "5410",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314340,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2f02a581-0d0a-4c9a-abe6-483f75b5a239",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  30 32 61 35 38 31 2d 30  |d\":\"2f02a581-0|
              00000090  64 30 61 2d 34 63 39 61  2d 61 62 65 36 2d 34 38  |d0a-4c9a-abe6-48|
              000000a0  33 66 37 35 62 35 61 32  33 39 5c 22 7d 22 3a 7b  |3f75b5a239\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2x25g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2x25g",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-171",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.171",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.171"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314340,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2x25g",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:12:20.290562 21 deployment.go:68] Pod "webserver-deployment-685b768f58-zhtxq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-zhtxq",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1039fc16-7315-4eec-af7d-729bf47146cd",
      ResourceVersion: (string) (len=4) "5394",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314340,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "2f02a581-0d0a-4c9a-abe6-483f75b5a239",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  30 32 61 35 38 31 2d 30  |d\":\"2f02a581-0|
              00000090  64 30 61 2d 34 63 39 61  2d 61 62 65 36 2d 34 38  |d0a-4c9a-abe6-48|
              000000a0  33 66 37 35 62 35 61 32  33 39 5c 22 7d 22 3a 7b  |3f75b5a239\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qbj6p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qbj6p",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-5-45",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:12:20.291501 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-82btd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-82btd",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3301cadc-7d0f-4d47-8fc7-d52f9950d172",
      ResourceVersion: (string) (len=4) "5406",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314340,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d6ade19b-1688-4e2a-bb3a-c8d43f2c70fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  61 64 65 31 39 62 2d 31  |d\":\"d6ade19b-1|
              00000090  36 38 38 2d 34 65 32 61  2d 62 62 33 61 2d 63 38  |688-4e2a-bb3a-c8|
              000000a0  64 34 33 66 32 63 37 30  66 62 5c 22 7d 22 3a 7b  |d43f2c70fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8jjl5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8jjl5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:12:20.292309 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-9jghj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-9jghj",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "da790eb0-801a-4bdb-b1cc-b23c5d1e9ef4",
      ResourceVersion: (string) (len=4) "5397",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314340,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d6ade19b-1688-4e2a-bb3a-c8d43f2c70fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  61 64 65 31 39 62 2d 31  |d\":\"d6ade19b-1|
              00000090  36 38 38 2d 34 65 32 61  2d 62 62 33 61 2d 63 38  |688-4e2a-bb3a-c8|
              000000a0  64 34 33 66 32 63 37 30  66 62 5c 22 7d 22 3a 7b  |d43f2c70fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lshtj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lshtj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-5-45",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:12:20.293385 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-fmbzv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-fmbzv",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1deb73ee-b95a-4857-9923-7f297f58ddb6",
      ResourceVersion: (string) (len=4) "5335",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d6ade19b-1688-4e2a-bb3a-c8d43f2c70fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  61 64 65 31 39 62 2d 31  |d\":\"d6ade19b-1|
              00000090  36 38 38 2d 34 65 32 61  2d 62 62 33 61 2d 63 38  |688-4e2a-bb3a-c8|
              000000a0  64 34 33 66 32 63 37 30  66 62 5c 22 7d 22 3a 7b  |d43f2c70fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 34 36 2e 37  5c 22 7d 22 3a 7b 22 2e  |68.146.7\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-np5ch",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-np5ch",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-5-45",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.5.45",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.5.45"
        }
      },
      PodIP: (string) (len=13) "192.168.146.7",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.146.7"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-np5ch",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:12:20.295460 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-gz6kd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-gz6kd",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "67810fcf-a8fc-4727-8fea-d5935a62b50e",
      ResourceVersion: (string) (len=4) "5399",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314340,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d6ade19b-1688-4e2a-bb3a-c8d43f2c70fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  61 64 65 31 39 62 2d 31  |d\":\"d6ade19b-1|
              00000090  36 38 38 2d 34 65 32 61  2d 62 62 33 61 2d 63 38  |688-4e2a-bb3a-c8|
              000000a0  64 34 33 66 32 63 37 30  66 62 5c 22 7d 22 3a 7b  |d43f2c70fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wzjtm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wzjtm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-90-231",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:12:20.296409 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-hx4jz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-hx4jz",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "25440e8a-ebbc-4663-85f4-f0659d11798b",
      ResourceVersion: (string) (len=4) "5338",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d6ade19b-1688-4e2a-bb3a-c8d43f2c70fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  61 64 65 31 39 62 2d 31  |d\":\"d6ade19b-1|
              00000090  36 38 38 2d 34 65 32 61  2d 62 62 33 61 2d 63 38  |688-4e2a-bb3a-c8|
              000000a0  64 34 33 66 32 63 37 30  66 62 5c 22 7d 22 3a 7b  |d43f2c70fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 34 36 2e 36  5c 22 7d 22 3a 7b 22 2e  |68.146.6\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fh7l6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fh7l6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-5-45",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.5.45",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.5.45"
        }
      },
      PodIP: (string) (len=13) "192.168.146.6",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.146.6"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fh7l6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:12:20.297919 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-k7w27" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-k7w27",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f1d921e1-4737-43d3-84ab-21638b1de080",
      ResourceVersion: (string) (len=4) "5372",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314340,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d6ade19b-1688-4e2a-bb3a-c8d43f2c70fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  61 64 65 31 39 62 2d 31  |d\":\"d6ade19b-1|
              00000090  36 38 38 2d 34 65 32 61  2d 62 62 33 61 2d 63 38  |688-4e2a-bb3a-c8|
              000000a0  64 34 33 66 32 63 37 30  66 62 5c 22 7d 22 3a 7b  |d43f2c70fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lrfvv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lrfvv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-171",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:12:20.298919 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-n7vxc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-n7vxc",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b70320ab-ae25-4b8d-8621-d5c42cca2642",
      ResourceVersion: (string) (len=4) "5408",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314340,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d6ade19b-1688-4e2a-bb3a-c8d43f2c70fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  61 64 65 31 39 62 2d 31  |d\":\"d6ade19b-1|
              00000090  36 38 38 2d 34 65 32 61  2d 62 62 33 61 2d 63 38  |688-4e2a-bb3a-c8|
              000000a0  64 34 33 66 32 63 37 30  66 62 5c 22 7d 22 3a 7b  |d43f2c70fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r9fvd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r9fvd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-90-231",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.90.231",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.90.231"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314340,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-r9fvd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:12:20.300247 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-pkslt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-pkslt",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d06f0a82-86e9-4687-bf6c-e95703675d97",
      ResourceVersion: (string) (len=4) "5380",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314340,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d6ade19b-1688-4e2a-bb3a-c8d43f2c70fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  61 64 65 31 39 62 2d 31  |d\":\"d6ade19b-1|
              00000090  36 38 38 2d 34 65 32 61  2d 62 62 33 61 2d 63 38  |688-4e2a-bb3a-c8|
              000000a0  64 34 33 66 32 63 37 30  66 62 5c 22 7d 22 3a 7b  |d43f2c70fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fhvw4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fhvw4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-5-45",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:12:20.301278 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-pwsgq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-pwsgq",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "475464aa-6c0c-471b-bee0-abd631cf6f0b",
      ResourceVersion: (string) (len=4) "5311",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d6ade19b-1688-4e2a-bb3a-c8d43f2c70fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  61 64 65 31 39 62 2d 31  |d\":\"d6ade19b-1|
              00000090  36 38 38 2d 34 65 32 61  2d 62 62 33 61 2d 63 38  |688-4e2a-bb3a-c8|
              000000a0  64 34 33 66 32 63 37 30  66 62 5c 22 7d 22 3a 7b  |d43f2c70fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 38 2e 32 30 31  5c 22 7d 22 3a 7b 22 2e  |68.8.201\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xxx8m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xxx8m",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-90-231",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.90.231",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.90.231"
        }
      },
      PodIP: (string) (len=13) "192.168.8.201",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.8.201"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xxx8m",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:12:20.303762 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-q4z4m" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-q4z4m",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "db16dfc2-b19d-4276-9126-bca73c3dcff9",
      ResourceVersion: (string) (len=4) "5327",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d6ade19b-1688-4e2a-bb3a-c8d43f2c70fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  61 64 65 31 39 62 2d 31  |d\":\"d6ade19b-1|
              00000090  36 38 38 2d 34 65 32 61  2d 62 62 33 61 2d 63 38  |688-4e2a-bb3a-c8|
              000000a0  64 34 33 66 32 63 37 30  66 62 5c 22 7d 22 3a 7b  |d43f2c70fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 35 34 2e 32 30  31 5c 22 7d 22 3a 7b 22  |68.54.201\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-84pwz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-84pwz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-171",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.171",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.171"
        }
      },
      PodIP: (string) (len=14) "192.168.54.201",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.54.201"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-84pwz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:12:20.305919 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-s92zl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-s92zl",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1394c04e-0418-424a-86de-6c5ca89cc82c",
      ResourceVersion: (string) (len=4) "5404",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314340,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d6ade19b-1688-4e2a-bb3a-c8d43f2c70fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  61 64 65 31 39 62 2d 31  |d\":\"d6ade19b-1|
              00000090  36 38 38 2d 34 65 32 61  2d 62 62 33 61 2d 63 38  |688-4e2a-bb3a-c8|
              000000a0  64 34 33 66 32 63 37 30  66 62 5c 22 7d 22 3a 7b  |d43f2c70fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bf9lh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bf9lh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-90-231",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:12:20.306746 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-sn848" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-sn848",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c1222d25-094d-462c-bb4c-1e1bdc61cb98",
      ResourceVersion: (string) (len=4) "5401",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314340,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d6ade19b-1688-4e2a-bb3a-c8d43f2c70fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  61 64 65 31 39 62 2d 31  |d\":\"d6ade19b-1|
              00000090  36 38 38 2d 34 65 32 61  2d 62 62 33 61 2d 63 38  |688-4e2a-bb3a-c8|
              000000a0  64 34 33 66 32 63 37 30  66 62 5c 22 7d 22 3a 7b  |d43f2c70fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pb9hc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pb9hc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-171",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:12:20.311137 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-zl2x9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-zl2x9",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-685",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8d6d769f-3265-4559-80de-f97c1a01a433",
      ResourceVersion: (string) (len=4) "5330",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d6ade19b-1688-4e2a-bb3a-c8d43f2c70fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  61 64 65 31 39 62 2d 31  |d\":\"d6ade19b-1|
              00000090  36 38 38 2d 34 65 32 61  2d 62 62 33 61 2d 63 38  |688-4e2a-bb3a-c8|
              000000a0  64 34 33 66 32 63 37 30  66 62 5c 22 7d 22 3a 7b  |d43f2c70fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 35 34 2e 32 30  30 5c 22 7d 22 3a 7b 22  |68.54.200\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4wqmr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4wqmr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-171",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.171",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.171"
        }
      },
      PodIP: (string) (len=14) "192.168.54.200",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.54.200"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4wqmr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:12:20.313686 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-685" for this suite. @ 07/05/25 12:12:20.323
• [6.324 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:753
  STEP: Creating a kubernetes client @ 07/05/25 12:12:20.338
  I0705 12:12:20.338032 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename services @ 07/05/25 12:12:20.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:12:20.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:12:20.358
  STEP: creating service endpoint-test2 in namespace services-9804 @ 07/05/25 12:12:20.361
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9804 to expose endpoints map[] @ 07/05/25 12:12:20.389
  I0705 12:12:20.397674      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0705 12:12:20.397724 21 service.go:4613] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  I0705 12:12:21.403741      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0705 12:12:21.410286 21 service.go:4645] successfully validated that service endpoint-test2 in namespace services-9804 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-9804 @ 07/05/25 12:12:21.41
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9804 to expose endpoints map[pod1:[80]] @ 07/05/25 12:12:23.44
  I0705 12:12:23.449907      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0705 12:12:23.457160 21 service.go:4645] successfully validated that service endpoint-test2 in namespace services-9804 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 07/05/25 12:12:23.457
  I0705 12:12:23.457223 21 resource.go:361] Creating new exec pod
  I0705 12:12:25.487380 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-9804 exec execpod9h5p2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0705 12:12:25.641619 21 builder.go:146] stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 (10.152.183.81) 80 port [tcp/http] succeeded!\n"
  I0705 12:12:25.641671 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0705 12:12:25.641744 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-9804 exec execpod9h5p2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.81 80'
  I0705 12:12:25.838982 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.81 80\nConnection to 10.152.183.81 80 port [tcp/http] succeeded!\n"
  I0705 12:12:25.839033 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-9804 @ 07/05/25 12:12:25.839
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9804 to expose endpoints map[pod1:[80] pod2:[80]] @ 07/05/25 12:12:27.867
  I0705 12:12:27.879110      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0705 12:12:27.884542 21 service.go:4645] successfully validated that service endpoint-test2 in namespace services-9804 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 07/05/25 12:12:27.884
  I0705 12:12:27.888288 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-9804 exec execpod9h5p2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0705 12:12:27.985369 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.152.183.81) 80 port [tcp/http] succeeded!\n"
  I0705 12:12:27.985419 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0705 12:12:27.985497 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-9804 exec execpod9h5p2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.81 80'
  I0705 12:12:28.078283 21 builder.go:146] stderr: "+ + ncecho hostName -v -t\n -w 2 10.152.183.81 80\nConnection to 10.152.183.81 80 port [tcp/http] succeeded!\n"
  I0705 12:12:28.078332 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-9804 @ 07/05/25 12:12:28.078
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9804 to expose endpoints map[pod2:[80]] @ 07/05/25 12:12:28.093
  I0705 12:12:28.107906      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0705 12:12:28.113932 21 service.go:4645] successfully validated that service endpoint-test2 in namespace services-9804 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 07/05/25 12:12:28.113
  I0705 12:12:28.119441 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-9804 exec execpod9h5p2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0705 12:12:28.211524 21 builder.go:146] stderr: "+ + nc -v -t -w 2 endpoint-test2 80\necho hostName\nConnection to endpoint-test2 (10.152.183.81) 80 port [tcp/http] succeeded!\n"
  I0705 12:12:28.211568 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0705 12:12:28.211664 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-9804 exec execpod9h5p2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.81 80'
  I0705 12:12:28.304229 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.81 80\nConnection to 10.152.183.81 80 port [tcp/http] succeeded!\n"
  I0705 12:12:28.304271 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-9804 @ 07/05/25 12:12:28.304
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9804 to expose endpoints map[] @ 07/05/25 12:12:28.324
  I0705 12:12:28.333523      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0705 12:12:28.341268 21 service.go:4645] successfully validated that service endpoint-test2 in namespace services-9804 exposes endpoints map[]
  I0705 12:12:28.370308 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9804" for this suite. @ 07/05/25 12:12:28.378
• [8.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:168
  STEP: Creating a kubernetes client @ 07/05/25 12:12:28.388
  I0705 12:12:28.388154 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename resourcequota @ 07/05/25 12:12:28.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:12:28.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:12:28.406
  STEP: Discovering how many secrets are in namespace by default @ 07/05/25 12:12:28.409
  STEP: Counting existing ResourceQuota @ 07/05/25 12:12:33.415
  STEP: Creating a ResourceQuota @ 07/05/25 12:12:38.422
  STEP: Ensuring resource quota status is calculated @ 07/05/25 12:12:38.43
  STEP: Creating a Secret @ 07/05/25 12:12:40.436
  STEP: Ensuring resource quota status captures secret creation @ 07/05/25 12:12:40.45
  STEP: Deleting a secret @ 07/05/25 12:12:42.457
  STEP: Ensuring resource quota status released usage @ 07/05/25 12:12:42.466
  I0705 12:12:44.472897 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1797" for this suite. @ 07/05/25 12:12:44.479
• [16.100 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 07/05/25 12:12:44.488
  I0705 12:12:44.488249 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename ingress @ 07/05/25 12:12:44.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:12:44.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:12:44.504
  STEP: getting /apis @ 07/05/25 12:12:44.506
  STEP: getting /apis/networking.k8s.io @ 07/05/25 12:12:44.509
  STEP: getting /apis/networking.k8s.iov1 @ 07/05/25 12:12:44.511
  STEP: creating @ 07/05/25 12:12:44.512
  STEP: getting @ 07/05/25 12:12:44.533
  STEP: listing @ 07/05/25 12:12:44.539
  STEP: watching @ 07/05/25 12:12:44.549
  I0705 12:12:44.549318 21 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 07/05/25 12:12:44.55
  STEP: cluster-wide watching @ 07/05/25 12:12:44.649
  I0705 12:12:44.649529 21 ingress.go:198] starting watch
  STEP: patching @ 07/05/25 12:12:44.651
  STEP: updating @ 07/05/25 12:12:44.657
  I0705 12:12:44.668972 21 ingress.go:221] waiting for watch events with expected annotations
  I0705 12:12:44.669007 21 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 07/05/25 12:12:44.669
  STEP: updating /status @ 07/05/25 12:12:44.675
  STEP: get /status @ 07/05/25 12:12:44.69
  STEP: deleting @ 07/05/25 12:12:44.695
  STEP: deleting a collection @ 07/05/25 12:12:44.714
  I0705 12:12:44.737536 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-6155" for this suite. @ 07/05/25 12:12:44.743
• [0.263 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 07/05/25 12:12:44.752
  I0705 12:12:44.752277 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename certificates @ 07/05/25 12:12:44.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:12:44.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:12:44.768
  STEP: getting /apis @ 07/05/25 12:12:45.314
  STEP: getting /apis/certificates.k8s.io @ 07/05/25 12:12:45.318
  STEP: getting /apis/certificates.k8s.io/v1 @ 07/05/25 12:12:45.319
  STEP: creating @ 07/05/25 12:12:45.32
  STEP: getting @ 07/05/25 12:12:45.343
  STEP: listing @ 07/05/25 12:12:45.347
  STEP: watching @ 07/05/25 12:12:45.351
  I0705 12:12:45.351547 21 certificates.go:316] starting watch
  STEP: patching @ 07/05/25 12:12:45.352
  STEP: updating @ 07/05/25 12:12:45.363
  I0705 12:12:45.370232 21 certificates.go:332] waiting for watch events with expected annotations
  I0705 12:12:45.370280 21 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 07/05/25 12:12:45.37
  STEP: patching /approval @ 07/05/25 12:12:45.374
  STEP: updating /approval @ 07/05/25 12:12:45.382
  STEP: getting /status @ 07/05/25 12:12:45.39
  STEP: patching /status @ 07/05/25 12:12:45.395
  STEP: updating /status @ 07/05/25 12:12:45.403
  STEP: deleting @ 07/05/25 12:12:45.412
  STEP: deleting a collection @ 07/05/25 12:12:45.428
  I0705 12:12:45.453450 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-9682" for this suite. @ 07/05/25 12:12:45.458
• [0.715 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 07/05/25 12:12:45.467
  I0705 12:12:45.467595 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename secrets @ 07/05/25 12:12:45.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:12:45.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:12:45.484
  STEP: Creating secret with name s-test-opt-del-e3c93868-46f0-4a91-9dd1-febbcd58b9b0 @ 07/05/25 12:12:45.559
  STEP: Creating secret with name s-test-opt-upd-b5747e3d-3dc0-4263-9064-06d09d398bb9 @ 07/05/25 12:12:45.567
  STEP: Creating the pod @ 07/05/25 12:12:45.572
  STEP: Deleting secret s-test-opt-del-e3c93868-46f0-4a91-9dd1-febbcd58b9b0 @ 07/05/25 12:12:47.626
  STEP: Updating secret s-test-opt-upd-b5747e3d-3dc0-4263-9064-06d09d398bb9 @ 07/05/25 12:12:47.635
  STEP: Creating secret with name s-test-opt-create-1d02f272-0df3-4728-bca2-a7329a2c03b8 @ 07/05/25 12:12:47.641
  STEP: waiting to observe update in volume @ 07/05/25 12:12:47.646
  I0705 12:13:52.006364 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3780" for this suite. @ 07/05/25 12:13:52.011
• [66.553 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:329
  STEP: Creating a kubernetes client @ 07/05/25 12:13:52.021
  I0705 12:13:52.021078 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename proxy @ 07/05/25 12:13:52.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:13:52.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:13:52.039
  I0705 12:13:52.042247 21 proxy.go:336] Creating pod...
  I0705 12:13:54.064869 21 proxy.go:360] Creating service...
  I0705 12:13:54.081906 21 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7621/pods/agnhost/proxy/some/path/with/DELETE
  I0705 12:13:54.089087 21 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0705 12:13:54.089136 21 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7621/pods/agnhost/proxy/some/path/with/GET
  I0705 12:13:54.097226 21 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0705 12:13:54.097283 21 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7621/pods/agnhost/proxy/some/path/with/HEAD
  I0705 12:13:54.101899 21 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I0705 12:13:54.101935 21 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7621/pods/agnhost/proxy/some/path/with/OPTIONS
  I0705 12:13:54.107387 21 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0705 12:13:54.107433 21 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7621/pods/agnhost/proxy/some/path/with/PATCH
  I0705 12:13:54.112931 21 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0705 12:13:54.112976 21 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7621/pods/agnhost/proxy/some/path/with/POST
  I0705 12:13:54.118721 21 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0705 12:13:54.118831 21 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7621/pods/agnhost/proxy/some/path/with/PUT
  I0705 12:13:54.124332 21 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0705 12:13:54.124366 21 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7621/services/test-service/proxy/some/path/with/DELETE
  I0705 12:13:54.132257 21 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0705 12:13:54.132296 21 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7621/services/test-service/proxy/some/path/with/GET
  I0705 12:13:54.139139 21 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0705 12:13:54.139176 21 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7621/services/test-service/proxy/some/path/with/HEAD
  I0705 12:13:54.147385 21 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I0705 12:13:54.147635 21 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7621/services/test-service/proxy/some/path/with/OPTIONS
  I0705 12:13:54.157374 21 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0705 12:13:54.157418 21 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7621/services/test-service/proxy/some/path/with/PATCH
  I0705 12:13:54.167659 21 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0705 12:13:54.167701 21 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7621/services/test-service/proxy/some/path/with/POST
  I0705 12:13:54.183103 21 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0705 12:13:54.183149 21 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7621/services/test-service/proxy/some/path/with/PUT
  I0705 12:13:54.195084 21 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0705 12:13:54.195307 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7621" for this suite. @ 07/05/25 12:13:54.202
• [2.191 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 07/05/25 12:13:54.212
  I0705 12:13:54.212719 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename controllerrevisions @ 07/05/25 12:13:54.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:13:54.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:13:54.229
  STEP: Creating DaemonSet "e2e-pvdjj-daemon-set" @ 07/05/25 12:13:54.315
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/05/25 12:13:54.324
  I0705 12:13:54.403754 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:13:54.403812 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:13:54.407953 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-pvdjj-daemon-set: 0
  I0705 12:13:54.407981 21 fixtures.go:131] Node ip-172-31-22-171 is running 0 daemon pod, expected 1
  I0705 12:13:55.331991 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:13:55.332039 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:13:55.336514 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-pvdjj-daemon-set: 1
  I0705 12:13:55.336538 21 fixtures.go:131] Node ip-172-31-22-171 is running 0 daemon pod, expected 1
  I0705 12:13:56.330702 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:13:56.330740 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:13:56.336858 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-pvdjj-daemon-set: 3
  I0705 12:13:56.336886 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-pvdjj-daemon-set
  STEP: Confirm DaemonSet "e2e-pvdjj-daemon-set" successfully created with "daemonset-name=e2e-pvdjj-daemon-set" label @ 07/05/25 12:13:56.341
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-pvdjj-daemon-set" @ 07/05/25 12:13:56.349
  I0705 12:13:56.354870 21 controller_revision.go:162] Located ControllerRevision: "e2e-pvdjj-daemon-set-9d7bfc4d6"
  STEP: Patching ControllerRevision "e2e-pvdjj-daemon-set-9d7bfc4d6" @ 07/05/25 12:13:56.359
  I0705 12:13:56.366757 21 controller_revision.go:173] e2e-pvdjj-daemon-set-9d7bfc4d6 has been patched
  STEP: Create a new ControllerRevision @ 07/05/25 12:13:56.366
  I0705 12:13:56.374518 21 controller_revision.go:191] Created ControllerRevision: e2e-pvdjj-daemon-set-5c94c87b84
  STEP: Confirm that there are two ControllerRevisions @ 07/05/25 12:13:56.374
  I0705 12:13:56.374584 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0705 12:13:56.378880 21 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-pvdjj-daemon-set-9d7bfc4d6" @ 07/05/25 12:13:56.378
  STEP: Confirm that there is only one ControllerRevision @ 07/05/25 12:13:56.387
  I0705 12:13:56.387497 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0705 12:13:56.392376 21 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-pvdjj-daemon-set-5c94c87b84" @ 07/05/25 12:13:56.396
  I0705 12:13:56.407865 21 controller_revision.go:220] e2e-pvdjj-daemon-set-5c94c87b84 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 07/05/25 12:13:56.407
  I0705 12:13:56.416720      21 warnings.go:110] "Warning: unknown field \"updateStrategy\""
  STEP: Confirm that there are two ControllerRevisions @ 07/05/25 12:13:56.416
  I0705 12:13:56.416850 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0705 12:13:56.447106 21 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-pvdjj-daemon-set-5c94c87b84=updated" @ 07/05/25 12:13:56.447
  STEP: Confirm that there is only one ControllerRevision @ 07/05/25 12:13:56.466
  I0705 12:13:56.466737 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0705 12:13:56.471396 21 controller_revision.go:265] Found 1 ControllerRevisions
  I0705 12:13:56.475468 21 controller_revision.go:246] ControllerRevision "e2e-pvdjj-daemon-set-5b54c58677" has revision 3
  STEP: Deleting DaemonSet "e2e-pvdjj-daemon-set" @ 07/05/25 12:13:56.48
  STEP: deleting DaemonSet.extensions e2e-pvdjj-daemon-set in namespace controllerrevisions-8506, will wait for the garbage collector to delete the pods @ 07/05/25 12:13:56.48
  I0705 12:13:56.544769 21 resources.go:139] Deleting DaemonSet.extensions e2e-pvdjj-daemon-set took: 9.642392ms
  I0705 12:13:56.645121 21 resources.go:163] Terminating DaemonSet.extensions e2e-pvdjj-daemon-set pods took: 100.346964ms
  I0705 12:13:57.951005 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-pvdjj-daemon-set: 0
  I0705 12:13:57.951042 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-pvdjj-daemon-set
  I0705 12:13:57.956825 21 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"6299"},"items":null}

  I0705 12:13:57.967224 21 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"6300"},"items":null}

  I0705 12:13:57.985566 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-8506" for this suite. @ 07/05/25 12:13:57.99
• [3.788 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2185
  STEP: Creating a kubernetes client @ 07/05/25 12:13:58
  I0705 12:13:58.000745 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename services @ 07/05/25 12:13:58.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:13:58.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:13:58.014
  STEP: creating service in namespace services-8569 @ 07/05/25 12:13:58.017
  STEP: creating service affinity-clusterip in namespace services-8569 @ 07/05/25 12:13:58.017
  I0705 12:13:58.052638 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0705 12:14:00.058013 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 5, 12, 13, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 12, 13, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 5, 12, 13, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 12, 13, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-clusterip-6dd57cf8dc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0705 12:14:02.080247 21 resource.go:361] Creating new exec pod
  I0705 12:14:04.104246 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-8569 exec execpod-affinityms477 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0705 12:14:04.199860 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.152.183.140) 80 port [tcp/http] succeeded!\n"
  I0705 12:14:04.199911 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0705 12:14:04.199991 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-8569 exec execpod-affinityms477 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.140 80'
  I0705 12:14:04.309421 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.140 80\nConnection to 10.152.183.140 80 port [tcp/http] succeeded!\n"
  I0705 12:14:04.309481 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0705 12:14:04.309547 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-8569 exec execpod-affinityms477 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.140:80/ ; done'
  I0705 12:14:04.460841 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.140:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.140:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.140:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.140:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.140:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.140:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.140:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.140:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.140:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.140:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.140:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.140:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.140:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.140:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.140:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.140:80/\n"
  I0705 12:14:04.460889 21 builder.go:147] stdout: "\naffinity-clusterip-6dd57cf8dc-g562h\naffinity-clusterip-6dd57cf8dc-g562h\naffinity-clusterip-6dd57cf8dc-g562h\naffinity-clusterip-6dd57cf8dc-g562h\naffinity-clusterip-6dd57cf8dc-g562h\naffinity-clusterip-6dd57cf8dc-g562h\naffinity-clusterip-6dd57cf8dc-g562h\naffinity-clusterip-6dd57cf8dc-g562h\naffinity-clusterip-6dd57cf8dc-g562h\naffinity-clusterip-6dd57cf8dc-g562h\naffinity-clusterip-6dd57cf8dc-g562h\naffinity-clusterip-6dd57cf8dc-g562h\naffinity-clusterip-6dd57cf8dc-g562h\naffinity-clusterip-6dd57cf8dc-g562h\naffinity-clusterip-6dd57cf8dc-g562h\naffinity-clusterip-6dd57cf8dc-g562h"
  I0705 12:14:04.460901 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-g562h
  I0705 12:14:04.460915 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-g562h
  I0705 12:14:04.460921 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-g562h
  I0705 12:14:04.460928 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-g562h
  I0705 12:14:04.460934 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-g562h
  I0705 12:14:04.460940 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-g562h
  I0705 12:14:04.460947 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-g562h
  I0705 12:14:04.460952 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-g562h
  I0705 12:14:04.460958 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-g562h
  I0705 12:14:04.460964 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-g562h
  I0705 12:14:04.460969 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-g562h
  I0705 12:14:04.460974 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-g562h
  I0705 12:14:04.460980 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-g562h
  I0705 12:14:04.460986 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-g562h
  I0705 12:14:04.460993 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-g562h
  I0705 12:14:04.460998 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-g562h
  I0705 12:14:04.461095 21 service.go:4352] Cleaning up the exec pod
  I0705 12:14:04.533471 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8569" for this suite. @ 07/05/25 12:14:04.538
• [6.545 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 07/05/25 12:14:04.546
  I0705 12:14:04.546277 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename projected @ 07/05/25 12:14:04.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:14:04.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:14:04.564
  STEP: Creating a pod to test downward API volume plugin @ 07/05/25 12:14:04.566
  STEP: Saw pod success @ 07/05/25 12:14:08.595
  I0705 12:14:08.600720 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod downwardapi-volume-2b35c09b-1aec-40d4-a53e-ff19b7a52682 container client-container: <nil>
  STEP: delete the pod @ 07/05/25 12:14:08.61
  I0705 12:14:08.630116 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2643" for this suite. @ 07/05/25 12:14:08.636
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 07/05/25 12:14:08.646
  I0705 12:14:08.646232 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/05/25 12:14:08.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:14:08.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:14:08.662
  STEP: getting /apis @ 07/05/25 12:14:08.672
  STEP: getting /apis/admissionregistration.k8s.io @ 07/05/25 12:14:08.675
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 07/05/25 12:14:08.676
  STEP: creating @ 07/05/25 12:14:08.677
  STEP: getting @ 07/05/25 12:14:08.698
  STEP: listing @ 07/05/25 12:14:08.703
  STEP: watching @ 07/05/25 12:14:08.708
  I0705 12:14:08.708104 21 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 07/05/25 12:14:08.709
  STEP: updating @ 07/05/25 12:14:08.714
  I0705 12:14:08.725783 21 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 07/05/25 12:14:08.725
  STEP: deleting a collection @ 07/05/25 12:14:08.742
  I0705 12:14:08.774249 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-4234" for this suite. @ 07/05/25 12:14:08.779
• [0.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 07/05/25 12:14:08.79
  I0705 12:14:08.790176 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename daemonsets @ 07/05/25 12:14:08.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:14:08.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:14:08.804
  I0705 12:14:08.893601 21 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 07/05/25 12:14:08.9
  I0705 12:14:08.908111 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0705 12:14:08.908141 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 07/05/25 12:14:08.908
  I0705 12:14:09.005403 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0705 12:14:09.005446 21 fixtures.go:131] Node ip-172-31-22-171 is running 0 daemon pod, expected 1
  I0705 12:14:10.003419 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0705 12:14:10.003456 21 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 07/05/25 12:14:10.007
  I0705 12:14:10.033320 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0705 12:14:10.033345 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 07/05/25 12:14:10.033
  I0705 12:14:10.103430 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0705 12:14:10.103469 21 fixtures.go:131] Node ip-172-31-22-171 is running 0 daemon pod, expected 1
  I0705 12:14:11.047594 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0705 12:14:11.047631 21 fixtures.go:131] Node ip-172-31-22-171 is running 0 daemon pod, expected 1
  I0705 12:14:12.048281 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0705 12:14:12.048314 21 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/05/25 12:14:12.058
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5741, will wait for the garbage collector to delete the pods @ 07/05/25 12:14:12.058
  I0705 12:14:12.122749 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.549984ms
  I0705 12:14:12.223217 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.466136ms
  I0705 12:14:13.929263 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0705 12:14:13.929300 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0705 12:14:13.933799 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"6654"},"items":null}

  I0705 12:14:13.937232 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"6654"},"items":null}

  I0705 12:14:13.963914 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5741" for this suite. @ 07/05/25 12:14:14.042
• [5.261 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 07/05/25 12:14:14.05
  I0705 12:14:14.050975 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename secrets @ 07/05/25 12:14:14.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:14:14.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:14:14.065
  STEP: Creating secret with name secret-test-2b3ea87c-a24a-47a7-be28-0490ba3904b7 @ 07/05/25 12:14:14.068
  STEP: Creating a pod to test consume secrets @ 07/05/25 12:14:14.073
  STEP: Saw pod success @ 07/05/25 12:14:16.11
  I0705 12:14:16.115855 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-secrets-cb27d240-bbc7-4912-a38b-1a8715dfb64d container secret-volume-test: <nil>
  STEP: delete the pod @ 07/05/25 12:14:16.125
  I0705 12:14:16.144419 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1497" for this suite. @ 07/05/25 12:14:16.149
• [2.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 07/05/25 12:14:16.159
  I0705 12:14:16.159691 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename subpath @ 07/05/25 12:14:16.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:14:16.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:14:16.175
  STEP: Setting up data @ 07/05/25 12:14:16.178
  STEP: Creating pod pod-subpath-test-configmap-sz87 @ 07/05/25 12:14:16.187
  STEP: Creating a pod to test atomic-volume-subpath @ 07/05/25 12:14:16.187
  STEP: Saw pod success @ 07/05/25 12:14:40.276
  I0705 12:14:40.281503 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-subpath-test-configmap-sz87 container test-container-subpath-configmap-sz87: <nil>
  STEP: delete the pod @ 07/05/25 12:14:40.29
  STEP: Deleting pod pod-subpath-test-configmap-sz87 @ 07/05/25 12:14:40.307
  I0705 12:14:40.308021 21 delete.go:62] Deleting pod "pod-subpath-test-configmap-sz87" in namespace "subpath-2049"
  I0705 12:14:40.312177 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2049" for this suite. @ 07/05/25 12:14:40.318
• [24.167 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1081
  STEP: Creating a kubernetes client @ 07/05/25 12:14:40.327
  I0705 12:14:40.327034 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename kubectl @ 07/05/25 12:14:40.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:14:40.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:14:40.347
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/05/25 12:14:40.35
  I0705 12:14:40.350281 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-9922 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0705 12:14:40.404648 21 builder.go:146] stderr: ""
  I0705 12:14:40.404686 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 07/05/25 12:14:40.404
  I0705 12:14:40.404826 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-9922 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0705 12:14:40.457457 21 builder.go:146] stderr: ""
  I0705 12:14:40.457494 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/05/25 12:14:40.457
  I0705 12:14:40.462331 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-9922 delete pods e2e-test-httpd-pod'
  I0705 12:14:41.907962 21 builder.go:146] stderr: ""
  I0705 12:14:41.908005 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0705 12:14:41.908139 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9922" for this suite. @ 07/05/25 12:14:41.914
• [1.596 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 07/05/25 12:14:41.922
  I0705 12:14:41.922633 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename endpointslice @ 07/05/25 12:14:41.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:14:41.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:14:41.938
  I0705 12:14:41.967373      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0705 12:14:43.973248      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0705 12:14:44.010397      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0705 12:14:44.080025 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5007" for this suite. @ 07/05/25 12:14:44.085
• [2.172 seconds]
------------------------------
SS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 07/05/25 12:14:44.094
  I0705 12:14:44.094228 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename pv @ 07/05/25 12:14:44.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:14:44.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:14:44.109
  STEP: Creating initial PV and PVC @ 07/05/25 12:14:44.112
  I0705 12:14:44.112856 21 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-7449" @ 07/05/25 12:14:44.13
  STEP: Listing PVCs in namespace "pv-7449" @ 07/05/25 12:14:44.135
  STEP: Reading "pvc-swzbf" Status @ 07/05/25 12:14:44.14
  STEP: Reading "pv-7449-9flr8" Status @ 07/05/25 12:14:44.145
  STEP: Patching "pvc-swzbf" Status @ 07/05/25 12:14:44.149
  STEP: Patching "pv-7449-9flr8" Status @ 07/05/25 12:14:44.155
  STEP: Updating "pvc-swzbf" Status @ 07/05/25 12:14:44.162
  STEP: Updating "pv-7449-9flr8" Status @ 07/05/25 12:14:44.174
  I0705 12:14:44.211237 21 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0705 12:14:44.211269 21 pv.go:205] Deleting PersistentVolumeClaim "pvc-swzbf"
  I0705 12:14:44.219035 21 pv.go:193] Deleting PersistentVolume "pv-7449-9flr8"
  I0705 12:14:44.228356 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-7449" for this suite. @ 07/05/25 12:14:44.233
• [0.148 seconds]
------------------------------
[sig-apps] Job should mark indexes as failed when the FailIndex action is matched in podFailurePolicy [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:730
  STEP: Creating a kubernetes client @ 07/05/25 12:14:44.241
  I0705 12:14:44.241953 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename job @ 07/05/25 12:14:44.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:14:44.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:14:44.261
  STEP: Creating an indexed job with failing pods matching the FailIndex action @ 07/05/25 12:14:44.263
  STEP: Awaiting for the job to fail as all indexes are failed @ 07/05/25 12:14:44.271
  STEP: Verifying the Job status fields to ensure the upper indexes didn't execute @ 07/05/25 12:14:48.288
  I0705 12:14:48.294651 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-743" for this suite. @ 07/05/25 12:14:48.301
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1086
  STEP: Creating a kubernetes client @ 07/05/25 12:14:48.312
  I0705 12:14:48.312207 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename pods @ 07/05/25 12:14:48.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:14:48.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:14:48.329
  STEP: Create a pod @ 07/05/25 12:14:48.331
  STEP: patching /status @ 07/05/25 12:14:50.351
  I0705 12:14:50.361323 21 pods.go:1123] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0705 12:14:50.361453 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1807" for this suite. @ 07/05/25 12:14:50.366
• [2.065 seconds]
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:826
  STEP: Creating a kubernetes client @ 07/05/25 12:14:50.377
  I0705 12:14:50.377541 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename gc @ 07/05/25 12:14:50.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:14:50.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:14:50.393
  I0705 12:14:50.439479 21 garbage_collector.go:848] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"bb7fb864-081d-4e47-b6f9-79e39dff08cc", Controller:(*bool)(0xc005513cde), BlockOwnerDeletion:(*bool)(0xc005513cdf)}}
  I0705 12:14:50.446851 21 garbage_collector.go:852] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"801c57c9-ea77-4328-8145-de55271f4dc0", Controller:(*bool)(0xc005513e86), BlockOwnerDeletion:(*bool)(0xc005513e87)}}
  I0705 12:14:50.456354 21 garbage_collector.go:856] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"3467e766-825e-4d33-8cff-244022f920de", Controller:(*bool)(0xc0050ac066), BlockOwnerDeletion:(*bool)(0xc0050ac067)}}
  I0705 12:14:55.491254 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5422" for this suite. @ 07/05/25 12:14:55.498
• [5.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 07/05/25 12:14:55.508
  I0705 12:14:55.508464 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename daemonsets @ 07/05/25 12:14:55.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:14:55.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:14:55.524
  I0705 12:14:55.612959 21 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/05/25 12:14:55.619
  I0705 12:14:55.698650 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:14:55.698695 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:14:55.703089 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0705 12:14:55.703115 21 fixtures.go:131] Node ip-172-31-22-171 is running 0 daemon pod, expected 1
  I0705 12:14:56.624873 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:14:56.624918 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:14:56.629869 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0705 12:14:56.629890 21 fixtures.go:131] Node ip-172-31-22-171 is running 0 daemon pod, expected 1
  I0705 12:14:57.624892 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:14:57.624936 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:14:57.629475 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0705 12:14:57.629499 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 07/05/25 12:14:57.647
  STEP: Check that daemon pods images are updated. @ 07/05/25 12:14:57.726
  I0705 12:14:57.730756 21 daemon_set.go:1193] Wrong image for pod: daemon-set-629pm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0705 12:14:57.730784 21 daemon_set.go:1193] Wrong image for pod: daemon-set-gkdq5. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0705 12:14:57.737377 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:14:57.737409 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:14:58.732017 21 daemon_set.go:1193] Wrong image for pod: daemon-set-629pm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0705 12:14:58.732053 21 daemon_set.go:1193] Wrong image for pod: daemon-set-gkdq5. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0705 12:14:58.732060 21 daemon_set.go:1198] Pod daemon-set-nh72c is not available
  I0705 12:14:58.739123 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:14:58.739155 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:14:59.731097 21 daemon_set.go:1193] Wrong image for pod: daemon-set-629pm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0705 12:14:59.731129 21 daemon_set.go:1198] Pod daemon-set-h6bn2 is not available
  I0705 12:14:59.736784 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:14:59.736819 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:15:00.731898 21 daemon_set.go:1193] Wrong image for pod: daemon-set-629pm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0705 12:15:00.731935 21 daemon_set.go:1198] Pod daemon-set-h6bn2 is not available
  I0705 12:15:00.737820 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:15:00.737857 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:15:01.733640 21 daemon_set.go:1198] Pod daemon-set-hztgt is not available
  I0705 12:15:01.738628 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:15:01.738663 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 07/05/25 12:15:01.738
  I0705 12:15:01.743305 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:15:01.743340 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:15:01.747342 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0705 12:15:01.747361 21 fixtures.go:131] Node ip-172-31-22-171 is running 0 daemon pod, expected 1
  I0705 12:15:02.745885 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:15:02.745935 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:15:02.751720 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0705 12:15:02.751748 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/05/25 12:15:02.776
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4822, will wait for the garbage collector to delete the pods @ 07/05/25 12:15:02.776
  I0705 12:15:02.841435 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 10.246941ms
  I0705 12:15:02.941777 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.324232ms
  I0705 12:15:04.047865 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0705 12:15:04.047906 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0705 12:15:04.052888 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"7234"},"items":null}

  I0705 12:15:04.057231 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"7234"},"items":null}

  I0705 12:15:04.077821 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4822" for this suite. @ 07/05/25 12:15:04.082
• [8.585 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 07/05/25 12:15:04.093
  I0705 12:15:04.093174 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename limitrange @ 07/05/25 12:15:04.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:15:04.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:15:04.113
  STEP: Creating LimitRange "e2e-limitrange-p4rcc" in namespace "limitrange-5948" @ 07/05/25 12:15:04.115
  STEP: Creating another limitRange in another namespace @ 07/05/25 12:15:04.123
  I0705 12:15:04.135512 21 limit_range.go:299] Namespace "e2e-limitrange-p4rcc-6147" created
  I0705 12:15:04.135539 21 limit_range.go:300] Creating LimitRange "e2e-limitrange-p4rcc" in namespace "e2e-limitrange-p4rcc-6147"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-p4rcc" @ 07/05/25 12:15:04.143
  I0705 12:15:04.146714 21 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-p4rcc" in "limitrange-5948" namespace @ 07/05/25 12:15:04.146
  I0705 12:15:04.155087 21 limit_range.go:335] LimitRange "e2e-limitrange-p4rcc" has been patched
  STEP: Delete LimitRange "e2e-limitrange-p4rcc" by Collection with labelSelector: "e2e-limitrange-p4rcc=patched" @ 07/05/25 12:15:04.155
  STEP: Confirm that the limitRange "e2e-limitrange-p4rcc" has been deleted @ 07/05/25 12:15:04.167
  I0705 12:15:04.167929 21 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0705 12:15:04.171841 21 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-p4rcc=patched"
  I0705 12:15:04.171866 21 limit_range.go:344] LimitRange "e2e-limitrange-p4rcc" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-p4rcc" @ 07/05/25 12:15:04.171
  I0705 12:15:04.177263 21 limit_range.go:350] Found 1 limitRange
  I0705 12:15:04.177370 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5948" for this suite. @ 07/05/25 12:15:04.182
  STEP: Destroying namespace "e2e-limitrange-p4rcc-6147" for this suite. @ 07/05/25 12:15:04.192
• [0.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 07/05/25 12:15:04.2
  I0705 12:15:04.200658 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename job @ 07/05/25 12:15:04.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:15:04.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:15:04.218
  STEP: Looking for a node to schedule job pods @ 07/05/25 12:15:04.22
  STEP: Creating a job @ 07/05/25 12:15:04.284
  STEP: Waiting for all the pods to be ready @ 07/05/25 12:15:04.291
  STEP: Fetch all running pods @ 07/05/25 12:15:08.307
  STEP: Evict all the Pods @ 07/05/25 12:15:08.312
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-pvhfs/job-3934 @ 07/05/25 12:15:08.312
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-7wgnk/job-3934 @ 07/05/25 12:15:08.313
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-bljrb/job-3934 @ 07/05/25 12:15:08.313
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-bljrb/job-3934 to be deleted @ 07/05/25 12:15:08.339
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-pvhfs/job-3934 to be deleted @ 07/05/25 12:15:08.339
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-7wgnk/job-3934 to be deleted @ 07/05/25 12:15:08.34
  STEP: Ensuring job reaches completions @ 07/05/25 12:15:14.36
  I0705 12:15:54.480460 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3934" for this suite. @ 07/05/25 12:15:54.486
• [50.295 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:311
  STEP: Creating a kubernetes client @ 07/05/25 12:15:54.496
  I0705 12:15:54.496778 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/05/25 12:15:54.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:15:54.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:15:54.514
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 07/05/25 12:15:54.518
  I0705 12:15:54.519630 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 07/05/25 12:15:59.578
  I0705 12:15:59.579194 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  I0705 12:16:00.792802 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  I0705 12:16:05.778571 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6141" for this suite. @ 07/05/25 12:16:05.789
• [11.304 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:850
  STEP: Creating a kubernetes client @ 07/05/25 12:16:05.8
  I0705 12:16:05.800545 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename pods @ 07/05/25 12:16:05.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:16:05.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:16:05.821
  STEP: Create set of pods @ 07/05/25 12:16:05.825
  I0705 12:16:05.839579 21 pods.go:874] created test-pod-1
  I0705 12:16:05.848170 21 pods.go:874] created test-pod-2
  I0705 12:16:05.867460 21 pods.go:874] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 07/05/25 12:16:05.867
  STEP: waiting for all pods to be deleted @ 07/05/25 12:16:07.922
  I0705 12:16:07.926711 21 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  I0705 12:16:08.930281 21 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  I0705 12:16:09.928277 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6760" for this suite. @ 07/05/25 12:16:09.934
• [4.143 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 07/05/25 12:16:09.943
  I0705 12:16:09.943675 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/05/25 12:16:09.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:16:09.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:16:09.96
  I0705 12:16:09.965773 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  I0705 12:16:10.509902 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6378" for this suite. @ 07/05/25 12:16:10.52
• [0.588 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1693
  STEP: Creating a kubernetes client @ 07/05/25 12:16:10.531
  I0705 12:16:10.531420 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename kubectl @ 07/05/25 12:16:10.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:16:10.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:16:10.547
  STEP: creating Agnhost RC @ 07/05/25 12:16:10.55
  I0705 12:16:10.550702 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-8657 create -f -'
  I0705 12:16:10.649089 21 builder.go:146] stderr: ""
  I0705 12:16:10.649127 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/05/25 12:16:10.649
  I0705 12:16:11.657216 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0705 12:16:11.657254 21 framework.go:733] Found 0 / 1
  I0705 12:16:12.657342 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0705 12:16:12.657369 21 framework.go:733] Found 1 / 1
  I0705 12:16:12.657383 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 07/05/25 12:16:12.657
  I0705 12:16:12.661921 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0705 12:16:12.661945 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0705 12:16:12.661992 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-8657 patch pod agnhost-primary-9g6cd -p {"metadata":{"annotations":{"x":"y"}}}'
  I0705 12:16:12.716259 21 builder.go:146] stderr: ""
  I0705 12:16:12.716388 21 builder.go:147] stdout: "pod/agnhost-primary-9g6cd patched\n"
  STEP: checking annotations @ 07/05/25 12:16:12.716
  I0705 12:16:12.720780 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0705 12:16:12.720801 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0705 12:16:12.720896 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8657" for this suite. @ 07/05/25 12:16:12.727
• [2.207 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:306
  STEP: Creating a kubernetes client @ 07/05/25 12:16:12.738
  I0705 12:16:12.738257 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename namespaces @ 07/05/25 12:16:12.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:16:12.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:16:12.755
  STEP: Read namespace status @ 07/05/25 12:16:12.758
  I0705 12:16:12.762511 21 namespace.go:319] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 07/05/25 12:16:12.762
  I0705 12:16:12.769726 21 namespace.go:339] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 07/05/25 12:16:12.769
  I0705 12:16:12.782099 21 namespace.go:364] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0705 12:16:12.782318 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7668" for this suite. @ 07/05/25 12:16:12.828
• [0.100 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:83
  STEP: Creating a kubernetes client @ 07/05/25 12:16:12.838
  I0705 12:16:12.838378 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename resourcequota @ 07/05/25 12:16:12.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:16:12.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:16:12.855
  STEP: Counting existing ResourceQuota @ 07/05/25 12:16:12.858
  STEP: Creating a ResourceQuota @ 07/05/25 12:16:17.863
  STEP: Ensuring resource quota status is calculated @ 07/05/25 12:16:17.87
  I0705 12:16:19.876488 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8570" for this suite. @ 07/05/25 12:16:19.882
• [7.054 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:131
  STEP: Creating a kubernetes client @ 07/05/25 12:16:19.892
  I0705 12:16:19.892059 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename dns @ 07/05/25 12:16:19.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:16:19.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:16:19.91
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-2663.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-2663.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 07/05/25 12:16:19.913
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-2663.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-2663.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 07/05/25 12:16:19.913
  STEP: creating a pod to probe /etc/hosts @ 07/05/25 12:16:19.913
  STEP: submitting the pod to kubernetes @ 07/05/25 12:16:19.913
  STEP: retrieving the pod @ 07/05/25 12:16:25.949
  STEP: looking for the results for each expected name from probers @ 07/05/25 12:16:25.954
  I0705 12:16:25.980749 21 dns_common.go:546] DNS probes using dns-2663/dns-test-801679ed-4805-45ed-bfa2-20b5ab6cc371 succeeded

  STEP: deleting the pod @ 07/05/25 12:16:25.98
  I0705 12:16:25.996239 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2663" for this suite. @ 07/05/25 12:16:26.002
• [6.121 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 07/05/25 12:16:26.013
  I0705 12:16:26.013464 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename deployment @ 07/05/25 12:16:26.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:16:26.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:16:26.029
  I0705 12:16:26.046331 21 resource.go:81] Pod name cleanup-pod: Found 0 pods out of 1
  I0705 12:16:31.125946 21 resource.go:81] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/05/25 12:16:31.125
  I0705 12:16:31.126026 21 deployment.go:854] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 07/05/25 12:16:31.139
  I0705 12:16:33.170527 21 deployment.go:632] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "156a5eef-c69d-4fb8-8ee9-7b9c6209552a",
      ResourceVersion: (string) (len=4) "7990",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=76) "ReplicaSet \"test-cleanup-deployment-69b989f764\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0705 12:16:33.176271 21 deployment.go:40] New ReplicaSet "test-cleanup-deployment-69b989f764" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2af43fef-5ccd-4ec3-9e48-d693dece28f9",
      ResourceVersion: (string) (len=4) "7980",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "156a5eef-c69d-4fb8-8ee9-7b9c6209552a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 35 36 61 35 65  65 66 2d 63 36 39 64 2d  |\"156a5eef-c69d-|
              00000120  34 66 62 38 2d 38 65 65  39 2d 37 62 39 63 36 32  |4fb8-8ee9-7b9c62|
              00000130  30 39 35 35 32 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |09552a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0705 12:16:33.183325 21 deployment.go:68] Pod "test-cleanup-deployment-69b989f764-q5l5d" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-69b989f764-q5l5d",
      GenerateName: (string) (len=35) "test-cleanup-deployment-69b989f764-",
      Namespace: (string) (len=15) "deployment-2549",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "14ca01e2-6c9c-451f-9df4-a8009d03b8ad",
      ResourceVersion: (string) (len=4) "7979",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
          UID: (types.UID) (len=36) "2af43fef-5ccd-4ec3-9e48-d693dece28f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 61  66 34 33 66 65 66 2d 35  |d\":\"2af43fef-5|
              00000090  63 63 64 2d 34 65 63 33  2d 39 65 34 38 2d 64 36  |ccd-4ec3-9e48-d6|
              000000a0  39 33 64 65 63 65 32 38  66 39 5c 22 7d 22 3a 7b  |93dece28f9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 34  36 2e 31 36 5c 22 7d 22  |2.168.146.16\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rqhqt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rqhqt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-5-45",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887314591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.5.45",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.5.45"
        }
      },
      PodIP: (string) (len=14) "192.168.146.16",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.146.16"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887314591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63887314591,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://b54a1d0d545b92b131601e5e6deb16c39cde578c475da13afc814a70c0f57a10",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rqhqt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:16:33.184492 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2549" for this suite. @ 07/05/25 12:16:33.19
• [7.185 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:401
  STEP: Creating a kubernetes client @ 07/05/25 12:16:33.199
  I0705 12:16:33.199199 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename namespaces @ 07/05/25 12:16:33.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:16:33.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:16:33.217
  STEP: Creating namespace "e2e-ns-294p2" @ 07/05/25 12:16:33.22
  I0705 12:16:33.234867 21 namespace.go:412] Namespace "e2e-ns-294p2-9999" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-294p2-9999" @ 07/05/25 12:16:33.234
  I0705 12:16:33.245107 21 namespace.go:435] Namespace "e2e-ns-294p2-9999" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-294p2-9999" @ 07/05/25 12:16:33.245
  I0705 12:16:33.258277 21 namespace.go:464] Namespace "e2e-ns-294p2-9999" has []v1.FinalizerName{"kubernetes"}
  I0705 12:16:33.258424 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1883" for this suite. @ 07/05/25 12:16:33.291
  STEP: Destroying namespace "e2e-ns-294p2-9999" for this suite. @ 07/05/25 12:16:33.299
• [0.111 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1394
  STEP: Creating a kubernetes client @ 07/05/25 12:16:33.31
  I0705 12:16:33.310768 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename kubectl @ 07/05/25 12:16:33.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:16:33.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:16:33.327
  I0705 12:16:33.330086 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-3151 create -f -'
  I0705 12:16:33.448290 21 builder.go:146] stderr: ""
  I0705 12:16:33.448351 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0705 12:16:33.448402 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-3151 create -f -'
  I0705 12:16:33.552286 21 builder.go:146] stderr: ""
  I0705 12:16:33.552563 21 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/05/25 12:16:33.552
  I0705 12:16:34.560708 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0705 12:16:34.560745 21 framework.go:733] Found 1 / 1
  I0705 12:16:34.560758 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0705 12:16:34.565663 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0705 12:16:34.565692 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0705 12:16:34.565742 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-3151 describe pod agnhost-primary-hpvps'
  I0705 12:16:34.623092 21 builder.go:146] stderr: ""
  I0705 12:16:34.623157 21 builder.go:147] stdout: "Name:             agnhost-primary-hpvps\nNamespace:        kubectl-3151\nPriority:         0\nService Account:  default\nNode:             ip-172-31-22-171/172.31.22.171\nStart Time:       Sat, 05 Jul 2025 12:16:33 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.54.228\nIPs:\n  IP:           192.168.54.228\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://5f1559fe0d85e664c56171190e83195b20259d3d011a1585593ed9fc3e082912\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 05 Jul 2025 12:16:34 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-fz8qb (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-fz8qb:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    Optional:                false\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-3151/agnhost-primary-hpvps to ip-172-31-22-171\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" already present on machine\n  Normal  Created    1s    kubelet            Created container: agnhost-primary\n  Normal  Started    0s    kubelet            Started container agnhost-primary\n"
  I0705 12:16:34.623226 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-3151 describe rc agnhost-primary'
  I0705 12:16:34.686896 21 builder.go:146] stderr: ""
  I0705 12:16:34.686947 21 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-3151\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-hpvps\n"
  I0705 12:16:34.687008 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-3151 describe service agnhost-primary'
  I0705 12:16:34.760254 21 builder.go:146] stderr: ""
  I0705 12:16:34.760300 21 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-3151\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.152.183.164\nIPs:                      10.152.183.164\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                192.168.54.228:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0705 12:16:34.766945 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-3151 describe node ip-172-31-22-171'
  I0705 12:16:34.881326 21 builder.go:146] stderr: ""
  I0705 12:16:34.881426 21 builder.go:147] stdout: "Name:               ip-172-31-22-171\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-worker\n                    juju-charm=kubernetes-worker\n                    juju.io/cloud=ec2\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-22-171\n                    kubernetes.io/os=linux\n                    topology.kubernetes.io/zone=us-east-1c\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 05 Jul 2025 11:58:29 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-22-171\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 05 Jul 2025 12:16:28 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 05 Jul 2025 12:09:22 +0000   Sat, 05 Jul 2025 12:09:22 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 05 Jul 2025 12:15:14 +0000   Sat, 05 Jul 2025 11:58:29 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 05 Jul 2025 12:15:14 +0000   Sat, 05 Jul 2025 11:58:29 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 05 Jul 2025 12:15:14 +0000   Sat, 05 Jul 2025 11:58:29 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 05 Jul 2025 12:15:14 +0000   Sat, 05 Jul 2025 11:59:03 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.31.22.171\n  Hostname:    ip-172-31-22-171\nCapacity:\n  cpu:                2\n  ephemeral-storage:  15159300Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7967616Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  13970810857\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7865216Ki\n  pods:               110\nSystem Info:\n  Machine ID:                      ec2d1b7b083dcb5902176a8edfd2713b\n  System UUID:                     ec2d1b7b-083d-cb59-0217-6a8edfd2713b\n  Boot ID:                         af93a94c-4be7-4ac0-9aac-4c8e334681e0\n  Kernel Version:                  6.8.0-1030-aws\n  OS Image:                        Ubuntu 24.04.2 LTS\n  Operating System:                linux\n  Architecture:                    amd64\n  Container Runtime Version:       containerd://1.6.38\n  Kubelet Version:                 v1.33.2\n  Kube-Proxy Version:              \nNon-terminated Pods:               (5 in total)\n  Namespace                        Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                        ----                                                       ------------  ----------  ---------------  -------------  ---\n  ingress-nginx-kubernetes-worker  nginx-ingress-controller-kubernetes-worker-pkb4j           0 (0%)        0 (0%)      0 (0%)           0 (0%)         17m\n  kube-system                      calico-node-kbhbz                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         7m15s\n  kubectl-3151                     agnhost-primary-hpvps                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         1s\n  sonobuoy                         sonobuoy                                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         6m24s\n  sonobuoy                         sonobuoy-systemd-logs-daemon-set-1b02295658074d3d-zpsp4    0 (0%)        0 (0%)      0 (0%)           0 (0%)         6m22s\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                250m (12%)  0 (0%)\n  memory             0 (0%)      0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type    Reason                   Age   From             Message\n  ----    ------                   ----  ----             -------\n  Normal  Starting                 18m   kube-proxy       \n  Normal  Starting                 17m   kube-proxy       \n  Normal  Starting                 17m   kube-proxy       \n  Normal  NodeHasSufficientPID     17m   kubelet          Node ip-172-31-22-171 status is now: NodeHasSufficientPID\n  Normal  Starting                 17m   kubelet          Starting kubelet.\n  Normal  NodeAllocatableEnforced  17m   kubelet          Updated Node Allocatable limit across pods\n  Normal  NodeHasSufficientMemory  17m   kubelet          Node ip-172-31-22-171 status is now: NodeHasSufficientMemory\n  Normal  NodeHasNoDiskPressure    17m   kubelet          Node ip-172-31-22-171 status is now: NodeHasNoDiskPressure\n  Normal  RegisteredNode           17m   node-controller  Node ip-172-31-22-171 event: Registered Node ip-172-31-22-171 in Controller\n  Normal  NodeReady                17m   kubelet          Node ip-172-31-22-171 status is now: NodeReady\n  Normal  RegisteredNode           16m   node-controller  Node ip-172-31-22-171 event: Registered Node ip-172-31-22-171 in Controller\n  Normal  RegisteredNode           16m   node-controller  Node ip-172-31-22-171 event: Registered Node ip-172-31-22-171 in Controller\n  Normal  RegisteredNode           11m   node-controller  Node ip-172-31-22-171 event: Registered Node ip-172-31-22-171 in Controller\n"
  I0705 12:16:34.881491 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-3151 describe namespace kubectl-3151'
  I0705 12:16:34.944496 21 builder.go:146] stderr: ""
  I0705 12:16:34.944545 21 builder.go:147] stdout: "Name:         kubectl-3151\nLabels:       e2e-framework=kubectl\n              e2e-run=6daaca73-4179-4178-a207-397389a7c087\n              kubernetes.io/metadata.name=kubectl-3151\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0705 12:16:34.944663 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3151" for this suite. @ 07/05/25 12:16:34.95
• [1.649 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 07/05/25 12:16:34.959
  I0705 12:16:34.959929 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename field-validation @ 07/05/25 12:16:34.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:16:34.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:16:34.979
  I0705 12:16:34.983115 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  W0705 12:16:34.983713      21 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc00146fa50 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  I0705 12:16:37.515407      21 warnings.go:110] "Warning: unknown field \"alpha\""
  I0705 12:16:37.515435      21 warnings.go:110] "Warning: unknown field \"beta\""
  I0705 12:16:37.515441      21 warnings.go:110] "Warning: unknown field \"delta\""
  I0705 12:16:37.515447      21 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0705 12:16:37.515452      21 warnings.go:110] "Warning: unknown field \"gamma\""
  I0705 12:16:38.067935 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5156" for this suite. @ 07/05/25 12:16:38.074
• [3.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 07/05/25 12:16:38.084
  I0705 12:16:38.084443 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename webhook @ 07/05/25 12:16:38.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:16:38.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:16:38.101
  STEP: Setting up server cert @ 07/05/25 12:16:38.126
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/05/25 12:16:38.823
  STEP: Deploying the webhook pod @ 07/05/25 12:16:38.829
  STEP: Wait for the deployment to be ready @ 07/05/25 12:16:38.844
  I0705 12:16:38.884582 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/05/25 12:16:40.9
  STEP: Verifying the service has paired with the endpoint @ 07/05/25 12:16:40.921
  I0705 12:16:41.922232 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 07/05/25 12:16:41.928
  STEP: create a configmap that should be updated by the webhook @ 07/05/25 12:16:41.944
  I0705 12:16:42.023861 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4845" for this suite. @ 07/05/25 12:16:42.031
  STEP: Destroying namespace "webhook-markers-8790" for this suite. @ 07/05/25 12:16:42.039
• [3.964 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 07/05/25 12:16:42.048
  I0705 12:16:42.048939 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename container-probe @ 07/05/25 12:16:42.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:16:42.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:16:42.063
  STEP: Creating pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751 @ 07/05/25 12:16:42.067
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/05/25 12:16:44.093
  I0705 12:16:44.098097 21 container_probe.go:1748] Initial restart count of pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 is 0
  I0705 12:16:44.102527 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:16:46.108106 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:16:48.114982 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:16:50.120873 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:16:52.127282 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:16:54.133105 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:16:56.139468 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:16:58.145464 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:17:00.152280 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:17:02.158492 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:17:04.164729 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:17:06.171020 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:17:08.177100 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:17:10.183286 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:17:12.190973 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:17:14.196350 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:17:16.202210 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:17:18.208368 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:17:20.214033 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:17:22.219838 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:17:24.226223 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:17:26.231778 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:17:28.238432 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:17:30.244566 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:17:32.251566 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:17:34.258330 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:17:36.263564 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:17:38.271330 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:17:40.276732 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:17:42.282680 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:17:44.288504 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:17:46.294397 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:17:48.300926 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:17:50.306890 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:17:52.312409 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:17:54.318589 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:17:56.324903 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:17:58.331641 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:18:00.338355 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:18:02.345299 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:18:04.350735 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:18:06.359121 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:18:08.364501 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:18:10.370561 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:18:12.376612 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:18:14.383750 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:18:16.389915 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:18:18.396245 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:18:20.402556 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:18:22.408011 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:18:24.415030 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:18:26.420623 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:18:28.427242 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:18:30.433114 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:18:32.439812 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:18:34.446244 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:18:36.451857 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:18:38.458744 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:18:40.464489 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:18:42.471437 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:18:44.477423 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:18:46.483329 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:18:48.490180 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:18:50.496434 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:18:52.502944 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:18:54.509447 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:18:56.516135 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:18:58.522925 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:19:00.528456 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:19:02.534854 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:19:04.541542 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:19:06.548734 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:19:08.555320 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:19:10.561508 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:19:12.568459 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:19:14.575376 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:19:16.581123 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:19:18.588160 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:19:20.593937 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:19:22.599156 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:19:24.606022 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:19:26.611958 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:19:28.617479 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:19:30.623538 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:19:32.629763 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:19:34.636247 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:19:36.642831 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:19:38.648990 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:19:40.655511 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:19:42.662556 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:19:44.669130 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:19:46.676189 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:19:48.681826 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:19:50.687947 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:19:52.693699 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:19:54.698991 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:19:56.705046 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:19:58.712391 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:20:00.718089 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:20:02.724427 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:20:04.731552 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:20:06.740202 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:20:08.745713 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:20:10.751865 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:20:12.758139 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:20:14.763973 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:20:16.769189 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:20:18.774435 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:20:20.779840 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:20:22.786238 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:20:24.792000 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:20:26.797923 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:20:28.804676 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:20:30.811373 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:20:32.818156 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:20:34.825147 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:20:36.831419 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:20:38.838023 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:20:40.843848 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  I0705 12:20:42.850282 21 container_probe.go:1758] Get pod test-grpc-57682f6a-a91e-4639-b0f2-60bf67d20f98 in namespace container-probe-8751
  STEP: deleting the pod @ 07/05/25 12:20:44.851
  I0705 12:20:44.872793 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8751" for this suite. @ 07/05/25 12:20:44.882
• [242.842 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:238
  STEP: Creating a kubernetes client @ 07/05/25 12:20:44.891
  I0705 12:20:44.891599 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/05/25 12:20:44.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:20:44.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:20:44.909
  I0705 12:20:44.913413 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/05/25 12:20:46.188
  I0705 12:20:46.188266 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=crd-publish-openapi-3768 --namespace=crd-publish-openapi-3768 create -f -'
  I0705 12:20:46.256582 21 builder.go:146] stderr: ""
  I0705 12:20:46.256619 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6726-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0705 12:20:46.256663 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=crd-publish-openapi-3768 --namespace=crd-publish-openapi-3768 delete e2e-test-crd-publish-openapi-6726-crds test-cr'
  I0705 12:20:46.315876 21 builder.go:146] stderr: ""
  I0705 12:20:46.315919 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6726-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0705 12:20:46.315970 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=crd-publish-openapi-3768 --namespace=crd-publish-openapi-3768 apply -f -'
  I0705 12:20:46.378298 21 builder.go:146] stderr: ""
  I0705 12:20:46.378354 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6726-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0705 12:20:46.378407 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=crd-publish-openapi-3768 --namespace=crd-publish-openapi-3768 delete e2e-test-crd-publish-openapi-6726-crds test-cr'
  I0705 12:20:46.434627 21 builder.go:146] stderr: ""
  I0705 12:20:46.434677 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6726-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 07/05/25 12:20:46.434
  I0705 12:20:46.434752 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=crd-publish-openapi-3768 explain e2e-test-crd-publish-openapi-6726-crds'
  I0705 12:20:46.479282 21 builder.go:146] stderr: ""
  I0705 12:20:46.479335 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-6726-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0705 12:20:47.762043 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3768" for this suite. @ 07/05/25 12:20:47.772
• [2.892 seconds]
------------------------------
S
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support ServiceCIDR API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:163
  STEP: Creating a kubernetes client @ 07/05/25 12:20:47.783
  I0705 12:20:47.783279 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename servicecidr @ 07/05/25 12:20:47.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:20:47.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:20:47.799
  STEP: getting @ 07/05/25 12:20:47.802
  STEP: patching @ 07/05/25 12:20:47.806
  STEP: updating @ 07/05/25 12:20:47.814
  STEP: listing @ 07/05/25 12:20:47.848
  STEP: watching @ 07/05/25 12:20:47.852
  I0705 12:20:47.854548 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-5358" for this suite. @ 07/05/25 12:20:47.872
• [0.099 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 07/05/25 12:20:47.882
  I0705 12:20:47.882599 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename pod-network-test @ 07/05/25 12:20:47.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:20:47.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:20:47.9
  STEP: Performing setup for networking test in namespace pod-network-test-8567 @ 07/05/25 12:20:47.903
  STEP: creating a selector @ 07/05/25 12:20:47.903
  STEP: Creating the service pods in kubernetes @ 07/05/25 12:20:47.903
  I0705 12:20:47.903837 21 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 07/05/25 12:21:02.075
  I0705 12:21:04.102511 21 utils.go:802] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0705 12:21:04.102549 21 networking.go:42] Breadth first check of 192.168.54.231 on host 172.31.22.171...
  I0705 12:21:04.107898 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.54.232:9080/dial?request=hostname&protocol=udp&host=192.168.54.231&port=8081&tries=1'] Namespace:pod-network-test-8567 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0705 12:21:04.107930 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0705 12:21:04.107980 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8567/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.54.232%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.54.231%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0705 12:21:04.153920 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0705 12:21:04.153987 21 utils.go:355] Waiting for responses: map[]
  I0705 12:21:04.153997 21 utils.go:359] reached 192.168.54.231 after 0/1 tries
  I0705 12:21:04.154006 21 networking.go:42] Breadth first check of 192.168.146.17 on host 172.31.5.45...
  I0705 12:21:04.159116 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.54.232:9080/dial?request=hostname&protocol=udp&host=192.168.146.17&port=8081&tries=1'] Namespace:pod-network-test-8567 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0705 12:21:04.159144 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0705 12:21:04.159201 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8567/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.54.232%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.146.17%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0705 12:21:04.209839 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0705 12:21:04.209936 21 utils.go:355] Waiting for responses: map[]
  I0705 12:21:04.209944 21 utils.go:359] reached 192.168.146.17 after 0/1 tries
  I0705 12:21:04.209951 21 networking.go:42] Breadth first check of 192.168.8.206 on host 172.31.90.231...
  I0705 12:21:04.215033 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.54.232:9080/dial?request=hostname&protocol=udp&host=192.168.8.206&port=8081&tries=1'] Namespace:pod-network-test-8567 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0705 12:21:04.215048 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0705 12:21:04.215106 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8567/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.54.232%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.8.206%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0705 12:21:04.260104 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0705 12:21:04.260160 21 utils.go:355] Waiting for responses: map[]
  I0705 12:21:04.260169 21 utils.go:359] reached 192.168.8.206 after 0/1 tries
  I0705 12:21:04.260177 21 networking.go:53] Going to retry 0 out of 3 pods....
  I0705 12:21:04.260373 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8567" for this suite. @ 07/05/25 12:21:04.267
• [16.396 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1068
  STEP: Creating a kubernetes client @ 07/05/25 12:21:04.279
  I0705 12:21:04.279309 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename job @ 07/05/25 12:21:04.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:21:04.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:21:04.297
  STEP: Creating a job @ 07/05/25 12:21:04.3
  STEP: Ensure pods equal to parallelism count is attached to the job @ 07/05/25 12:21:04.307
  STEP: patching /status @ 07/05/25 12:21:06.321
  STEP: updating /status @ 07/05/25 12:21:06.331
  STEP: get /status @ 07/05/25 12:21:06.341
  I0705 12:21:06.346273 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-19" for this suite. @ 07/05/25 12:21:06.352
• [2.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:149
  STEP: Creating a kubernetes client @ 07/05/25 12:21:06.362
  I0705 12:21:06.362503 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename emptydir @ 07/05/25 12:21:06.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:21:06.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:21:06.378
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 07/05/25 12:21:06.382
  STEP: Saw pod success @ 07/05/25 12:21:10.413
  I0705 12:21:10.418471 21 output.go:207] Trying to get logs from node ip-172-31-5-45 pod pod-df22d97a-33af-43b9-bf45-17c67403a3c6 container test-container: <nil>
  STEP: delete the pod @ 07/05/25 12:21:10.437
  I0705 12:21:10.457605 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-829" for this suite. @ 07/05/25 12:21:10.463
• [4.111 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 07/05/25 12:21:10.473
  I0705 12:21:10.473454 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename secrets @ 07/05/25 12:21:10.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:21:10.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:21:10.49
  STEP: Creating secret with name secret-test-map-0ac24045-b6ff-48e9-a83b-1626215ecee9 @ 07/05/25 12:21:10.493
  STEP: Creating a pod to test consume secrets @ 07/05/25 12:21:10.498
  STEP: Saw pod success @ 07/05/25 12:21:14.529
  I0705 12:21:14.534689 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-secrets-ffe52934-a4d2-43b0-9117-55eecba0d041 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/05/25 12:21:14.552
  I0705 12:21:14.575850 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-877" for this suite. @ 07/05/25 12:21:14.582
• [4.119 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:209
  STEP: Creating a kubernetes client @ 07/05/25 12:21:14.592
  I0705 12:21:14.592664 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename emptydir @ 07/05/25 12:21:14.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:21:14.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:21:14.607
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 07/05/25 12:21:14.609
  STEP: Saw pod success @ 07/05/25 12:21:18.64
  I0705 12:21:18.645102 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-ff398f7d-35bc-41c5-857a-c4769cb85985 container test-container: <nil>
  STEP: delete the pod @ 07/05/25 12:21:18.654
  I0705 12:21:18.680330 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6881" for this suite. @ 07/05/25 12:21:18.685
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:209
  STEP: Creating a kubernetes client @ 07/05/25 12:21:18.696
  I0705 12:21:18.696032 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename dns @ 07/05/25 12:21:18.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:21:18.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:21:18.711
  STEP: Creating a test headless service @ 07/05/25 12:21:18.714
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5889 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-5889;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5889 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-5889;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5889.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-5889.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5889.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-5889.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5889.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-5889.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5889.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-5889.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5889.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-5889.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5889.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-5889.svc;check="$$(dig +notcp +noall +answer +search 148.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.148_udp@PTR;check="$$(dig +tcp +noall +answer +search 148.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.148_tcp@PTR;sleep 1; done
   @ 07/05/25 12:21:18.744
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5889 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5889;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5889 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5889;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5889.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5889.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5889.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5889.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5889.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-5889.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5889.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-5889.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5889.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-5889.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5889.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-5889.svc;check="$$(dig +notcp +noall +answer +search 148.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.148_udp@PTR;check="$$(dig +tcp +noall +answer +search 148.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.148_tcp@PTR;sleep 1; done
   @ 07/05/25 12:21:18.744
  STEP: creating a pod to probe DNS @ 07/05/25 12:21:18.744
  STEP: submitting the pod to kubernetes @ 07/05/25 12:21:18.744
  STEP: retrieving the pod @ 07/05/25 12:21:20.772
  STEP: looking for the results for each expected name from probers @ 07/05/25 12:21:20.777
  I0705 12:21:20.783739 21 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-5889/dns-test-a0bc1265-a89c-4b53-87c0-a1ee1e34bcff: the server could not find the requested resource (get pods dns-test-a0bc1265-a89c-4b53-87c0-a1ee1e34bcff)
  I0705 12:21:20.789327 21 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-5889/dns-test-a0bc1265-a89c-4b53-87c0-a1ee1e34bcff: the server could not find the requested resource (get pods dns-test-a0bc1265-a89c-4b53-87c0-a1ee1e34bcff)
  I0705 12:21:20.794983 21 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5889 from pod dns-5889/dns-test-a0bc1265-a89c-4b53-87c0-a1ee1e34bcff: the server could not find the requested resource (get pods dns-test-a0bc1265-a89c-4b53-87c0-a1ee1e34bcff)
  I0705 12:21:20.799904 21 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5889 from pod dns-5889/dns-test-a0bc1265-a89c-4b53-87c0-a1ee1e34bcff: the server could not find the requested resource (get pods dns-test-a0bc1265-a89c-4b53-87c0-a1ee1e34bcff)
  I0705 12:21:20.805453 21 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5889.svc from pod dns-5889/dns-test-a0bc1265-a89c-4b53-87c0-a1ee1e34bcff: the server could not find the requested resource (get pods dns-test-a0bc1265-a89c-4b53-87c0-a1ee1e34bcff)
  I0705 12:21:20.810640 21 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5889.svc from pod dns-5889/dns-test-a0bc1265-a89c-4b53-87c0-a1ee1e34bcff: the server could not find the requested resource (get pods dns-test-a0bc1265-a89c-4b53-87c0-a1ee1e34bcff)
  I0705 12:21:20.815775 21 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-5889.svc from pod dns-5889/dns-test-a0bc1265-a89c-4b53-87c0-a1ee1e34bcff: the server could not find the requested resource (get pods dns-test-a0bc1265-a89c-4b53-87c0-a1ee1e34bcff)
  I0705 12:21:20.821210 21 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-5889.svc from pod dns-5889/dns-test-a0bc1265-a89c-4b53-87c0-a1ee1e34bcff: the server could not find the requested resource (get pods dns-test-a0bc1265-a89c-4b53-87c0-a1ee1e34bcff)
  I0705 12:21:20.847643 21 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-5889/dns-test-a0bc1265-a89c-4b53-87c0-a1ee1e34bcff: the server could not find the requested resource (get pods dns-test-a0bc1265-a89c-4b53-87c0-a1ee1e34bcff)
  I0705 12:21:20.853243 21 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-5889/dns-test-a0bc1265-a89c-4b53-87c0-a1ee1e34bcff: the server could not find the requested resource (get pods dns-test-a0bc1265-a89c-4b53-87c0-a1ee1e34bcff)
  I0705 12:21:20.858659 21 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5889 from pod dns-5889/dns-test-a0bc1265-a89c-4b53-87c0-a1ee1e34bcff: the server could not find the requested resource (get pods dns-test-a0bc1265-a89c-4b53-87c0-a1ee1e34bcff)
  I0705 12:21:20.863777 21 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5889 from pod dns-5889/dns-test-a0bc1265-a89c-4b53-87c0-a1ee1e34bcff: the server could not find the requested resource (get pods dns-test-a0bc1265-a89c-4b53-87c0-a1ee1e34bcff)
  I0705 12:21:20.869226 21 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5889.svc from pod dns-5889/dns-test-a0bc1265-a89c-4b53-87c0-a1ee1e34bcff: the server could not find the requested resource (get pods dns-test-a0bc1265-a89c-4b53-87c0-a1ee1e34bcff)
  I0705 12:21:20.874815 21 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5889.svc from pod dns-5889/dns-test-a0bc1265-a89c-4b53-87c0-a1ee1e34bcff: the server could not find the requested resource (get pods dns-test-a0bc1265-a89c-4b53-87c0-a1ee1e34bcff)
  I0705 12:21:20.879443 21 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5889.svc from pod dns-5889/dns-test-a0bc1265-a89c-4b53-87c0-a1ee1e34bcff: the server could not find the requested resource (get pods dns-test-a0bc1265-a89c-4b53-87c0-a1ee1e34bcff)
  I0705 12:21:20.885155 21 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5889.svc from pod dns-5889/dns-test-a0bc1265-a89c-4b53-87c0-a1ee1e34bcff: the server could not find the requested resource (get pods dns-test-a0bc1265-a89c-4b53-87c0-a1ee1e34bcff)
  I0705 12:21:20.906692 21 dns_common.go:506] Lookups using dns-5889/dns-test-a0bc1265-a89c-4b53-87c0-a1ee1e34bcff failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-5889 agnhost_tcp@dns-test-service.dns-5889 agnhost_udp@dns-test-service.dns-5889.svc agnhost_tcp@dns-test-service.dns-5889.svc agnhost_udp@_http._tcp.dns-test-service.dns-5889.svc agnhost_tcp@_http._tcp.dns-test-service.dns-5889.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5889 jessie_tcp@dns-test-service.dns-5889 jessie_udp@dns-test-service.dns-5889.svc jessie_tcp@dns-test-service.dns-5889.svc jessie_udp@_http._tcp.dns-test-service.dns-5889.svc jessie_tcp@_http._tcp.dns-test-service.dns-5889.svc]

  I0705 12:21:20.915838 21 dns_common.go:514] Pod client logs for webserver: 
  I0705 12:21:20.924945 21 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0705 12:21:20.933163 21 dns_common.go:514] Pod client logs for jessie-querier: 
  I0705 12:21:25.907474 21 dns_common.go:546] DNS probes using dns-5889/dns-test-a0bc1265-a89c-4b53-87c0-a1ee1e34bcff succeeded

  STEP: deleting the pod @ 07/05/25 12:21:25.907
  STEP: deleting the test service @ 07/05/25 12:21:25.933
  STEP: deleting the test headless service @ 07/05/25 12:21:25.975
  I0705 12:21:25.993323 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5889" for this suite. @ 07/05/25 12:21:26
• [7.314 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 07/05/25 12:21:26.01
  I0705 12:21:26.010186 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename downward-api @ 07/05/25 12:21:26.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:21:26.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:21:26.026
  STEP: Creating the pod @ 07/05/25 12:21:26.028
  I0705 12:21:28.591161 21 pod_client.go:173] Successfully updated pod "labelsupdate95663ce6-32dc-4902-bf76-ede611b5c6ad"
  I0705 12:21:32.623042 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4280" for this suite. @ 07/05/25 12:21:32.629
• [6.628 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 07/05/25 12:21:32.638
  I0705 12:21:32.638400 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename disruption @ 07/05/25 12:21:32.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:21:32.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:21:32.657
  STEP: Waiting for the pdb to be processed @ 07/05/25 12:21:32.666
  STEP: Waiting for all pods to be running @ 07/05/25 12:21:34.712
  I0705 12:21:34.722450 21 disruption.go:691] running pods: 0 < 3
  I0705 12:21:36.723230 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1075" for this suite. @ 07/05/25 12:21:36.729
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 07/05/25 12:21:36.738
  I0705 12:21:36.738554 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename server-version @ 07/05/25 12:21:36.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:21:36.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:21:36.754
  STEP: Request ServerVersion @ 07/05/25 12:21:36.757
  STEP: Confirm major version @ 07/05/25 12:21:36.758
  I0705 12:21:36.758673 21 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 07/05/25 12:21:36.758
  I0705 12:21:36.758742 21 server_version.go:58] cleanMinorVersion: 33
  I0705 12:21:36.758799 21 server_version.go:62] Minor version: 33
  I0705 12:21:36.759389 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-1811" for this suite. @ 07/05/25 12:21:36.829
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2244
  STEP: Creating a kubernetes client @ 07/05/25 12:21:36.84
  I0705 12:21:36.840771 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename services @ 07/05/25 12:21:36.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:21:36.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:21:36.857
  STEP: creating service in namespace services-5724 @ 07/05/25 12:21:36.86
  STEP: creating service affinity-nodeport-transition in namespace services-5724 @ 07/05/25 12:21:36.86
  I0705 12:21:36.910013 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0705 12:21:38.943798 21 resource.go:361] Creating new exec pod
  I0705 12:21:40.975550 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-5724 exec execpod-affinityhbqkp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0705 12:21:41.069739 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.152.183.217) 80 port [tcp/http] succeeded!\n"
  I0705 12:21:41.069820 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0705 12:21:41.069898 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-5724 exec execpod-affinityhbqkp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.217 80'
  I0705 12:21:41.159507 21 builder.go:146] stderr: "+ + echo hostName\nnc -v -t -w 2 10.152.183.217 80\nConnection to 10.152.183.217 80 port [tcp/http] succeeded!\n"
  I0705 12:21:41.159551 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0705 12:21:41.159637 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-5724 exec execpod-affinityhbqkp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.90.231 31847'
  I0705 12:21:41.250059 21 builder.go:146] stderr: "+ nc -v -t -w 2+ echo hostName\n 172.31.90.231 31847\nConnection to 172.31.90.231 31847 port [tcp/*] succeeded!\n"
  I0705 12:21:41.250128 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0705 12:21:41.250209 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-5724 exec execpod-affinityhbqkp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.5.45 31847'
  I0705 12:21:41.336596 21 builder.go:146] stderr: "+ + nc -v -t -w 2 172.31.5.45 31847\necho hostName\nConnection to 172.31.5.45 31847 port [tcp/*] succeeded!\n"
  I0705 12:21:41.336642 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0705 12:21:41.348435 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-5724 exec execpod-affinityhbqkp -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31847/ ; done'
  I0705 12:21:41.530780 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31847/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31847/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31847/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31847/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31847/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31847/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31847/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31847/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31847/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31847/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31847/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31847/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31847/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31847/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31847/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31847/\n"
  I0705 12:21:41.530833 21 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-kt9jx\naffinity-nodeport-transition-7d57658b6c-kt9jx\naffinity-nodeport-transition-7d57658b6c-k4t7c\naffinity-nodeport-transition-7d57658b6c-k4t7c\naffinity-nodeport-transition-7d57658b6c-k4t7c\naffinity-nodeport-transition-7d57658b6c-49jhn\naffinity-nodeport-transition-7d57658b6c-kt9jx\naffinity-nodeport-transition-7d57658b6c-kt9jx\naffinity-nodeport-transition-7d57658b6c-k4t7c\naffinity-nodeport-transition-7d57658b6c-kt9jx\naffinity-nodeport-transition-7d57658b6c-49jhn\naffinity-nodeport-transition-7d57658b6c-49jhn\naffinity-nodeport-transition-7d57658b6c-k4t7c\naffinity-nodeport-transition-7d57658b6c-49jhn\naffinity-nodeport-transition-7d57658b6c-kt9jx\naffinity-nodeport-transition-7d57658b6c-kt9jx"
  I0705 12:21:41.530845 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kt9jx
  I0705 12:21:41.530854 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kt9jx
  I0705 12:21:41.530860 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-k4t7c
  I0705 12:21:41.530867 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-k4t7c
  I0705 12:21:41.530873 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-k4t7c
  I0705 12:21:41.530879 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-49jhn
  I0705 12:21:41.530885 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kt9jx
  I0705 12:21:41.530891 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kt9jx
  I0705 12:21:41.530898 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-k4t7c
  I0705 12:21:41.530904 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kt9jx
  I0705 12:21:41.530909 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-49jhn
  I0705 12:21:41.530916 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-49jhn
  I0705 12:21:41.530922 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-k4t7c
  I0705 12:21:41.530928 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-49jhn
  I0705 12:21:41.530933 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kt9jx
  I0705 12:21:41.530938 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kt9jx
  I0705 12:21:41.543096 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-5724 exec execpod-affinityhbqkp -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31847/ ; done'
  I0705 12:21:41.724676 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31847/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31847/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31847/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31847/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31847/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31847/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31847/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31847/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31847/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31847/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31847/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31847/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31847/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31847/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31847/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31847/\n"
  I0705 12:21:41.724730 21 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-kt9jx\naffinity-nodeport-transition-7d57658b6c-kt9jx\naffinity-nodeport-transition-7d57658b6c-kt9jx\naffinity-nodeport-transition-7d57658b6c-kt9jx\naffinity-nodeport-transition-7d57658b6c-kt9jx\naffinity-nodeport-transition-7d57658b6c-kt9jx\naffinity-nodeport-transition-7d57658b6c-kt9jx\naffinity-nodeport-transition-7d57658b6c-kt9jx\naffinity-nodeport-transition-7d57658b6c-kt9jx\naffinity-nodeport-transition-7d57658b6c-kt9jx\naffinity-nodeport-transition-7d57658b6c-kt9jx\naffinity-nodeport-transition-7d57658b6c-kt9jx\naffinity-nodeport-transition-7d57658b6c-kt9jx\naffinity-nodeport-transition-7d57658b6c-kt9jx\naffinity-nodeport-transition-7d57658b6c-kt9jx\naffinity-nodeport-transition-7d57658b6c-kt9jx"
  I0705 12:21:41.724751 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kt9jx
  I0705 12:21:41.724760 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kt9jx
  I0705 12:21:41.724767 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kt9jx
  I0705 12:21:41.724772 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kt9jx
  I0705 12:21:41.724778 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kt9jx
  I0705 12:21:41.724784 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kt9jx
  I0705 12:21:41.724791 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kt9jx
  I0705 12:21:41.724797 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kt9jx
  I0705 12:21:41.724804 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kt9jx
  I0705 12:21:41.724809 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kt9jx
  I0705 12:21:41.724816 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kt9jx
  I0705 12:21:41.724849 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kt9jx
  I0705 12:21:41.724856 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kt9jx
  I0705 12:21:41.724863 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kt9jx
  I0705 12:21:41.724870 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kt9jx
  I0705 12:21:41.724877 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kt9jx
  I0705 12:21:41.725043 21 service.go:4352] Cleaning up the exec pod
  I0705 12:21:41.807148 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5724" for this suite. @ 07/05/25 12:21:41.816
• [4.984 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 07/05/25 12:21:41.824
  I0705 12:21:41.824394 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename configmap @ 07/05/25 12:21:41.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:21:41.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:21:41.844
  STEP: Creating configMap that has name configmap-test-emptyKey-c475a18a-c902-4729-82c4-f6325d44e342 @ 07/05/25 12:21:41.848
  I0705 12:21:41.850499 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9911" for this suite. @ 07/05/25 12:21:41.933
• [0.122 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 07/05/25 12:21:41.946
  I0705 12:21:41.946766 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename projected @ 07/05/25 12:21:41.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:21:41.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:21:41.964
  STEP: Creating configMap with name projected-configmap-test-volume-4127b6ef-5d86-439f-b0e1-c36a5a704f75 @ 07/05/25 12:21:41.968
  STEP: Creating a pod to test consume configMaps @ 07/05/25 12:21:41.976
  STEP: Saw pod success @ 07/05/25 12:21:46.107
  I0705 12:21:46.112769 21 output.go:207] Trying to get logs from node ip-172-31-5-45 pod pod-projected-configmaps-ca4815b3-bef7-47d7-a1ec-06d19234a7d9 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 07/05/25 12:21:46.124
  I0705 12:21:46.146181 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7871" for this suite. @ 07/05/25 12:21:46.151
• [4.216 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 07/05/25 12:21:46.162
  I0705 12:21:46.162772 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename secrets @ 07/05/25 12:21:46.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:21:46.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:21:46.18
  STEP: Creating secret with name secret-test-a270d7b6-fb86-4224-9247-751f2810c273 @ 07/05/25 12:21:46.184
  STEP: Creating a pod to test consume secrets @ 07/05/25 12:21:46.19
  STEP: Saw pod success @ 07/05/25 12:21:50.219
  I0705 12:21:50.224412 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-secrets-db910261-41ff-4940-b410-c05fda001933 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/05/25 12:21:50.234
  I0705 12:21:50.257349 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5210" for this suite. @ 07/05/25 12:21:50.262
• [4.110 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 07/05/25 12:21:50.272
  I0705 12:21:50.272536 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename events @ 07/05/25 12:21:50.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:21:50.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:21:50.29
  STEP: creating a test event @ 07/05/25 12:21:50.293
  STEP: listing all events in all namespaces @ 07/05/25 12:21:50.302
  STEP: patching the test event @ 07/05/25 12:21:50.314
  STEP: fetching the test event @ 07/05/25 12:21:50.324
  STEP: updating the test event @ 07/05/25 12:21:50.329
  STEP: getting the test event @ 07/05/25 12:21:50.344
  STEP: deleting the test event @ 07/05/25 12:21:50.349
  STEP: listing all events in all namespaces @ 07/05/25 12:21:50.361
  I0705 12:21:50.382016 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5275" for this suite. @ 07/05/25 12:21:50.4
• [0.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 07/05/25 12:21:50.41
  I0705 12:21:50.410825 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename discovery @ 07/05/25 12:21:50.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:21:50.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:21:50.432
  STEP: Setting up server cert @ 07/05/25 12:21:50.442
  I0705 12:21:51.050621 21 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0705 12:21:51.051862 21 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0705 12:21:51.051883 21 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0705 12:21:51.051891 21 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0705 12:21:51.051897 21 discovery.go:139] Checking APIGroup: apps
  I0705 12:21:51.053142 21 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0705 12:21:51.053154 21 discovery.go:148] Versions found [{apps/v1 v1}]
  I0705 12:21:51.053161 21 discovery.go:154] apps/v1 matches apps/v1
  I0705 12:21:51.053167 21 discovery.go:139] Checking APIGroup: events.k8s.io
  I0705 12:21:51.054541 21 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0705 12:21:51.054571 21 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0705 12:21:51.054576 21 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0705 12:21:51.054580 21 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0705 12:21:51.056219 21 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0705 12:21:51.056243 21 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0705 12:21:51.056250 21 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0705 12:21:51.056256 21 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0705 12:21:51.057510 21 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0705 12:21:51.057523 21 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0705 12:21:51.057529 21 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0705 12:21:51.057536 21 discovery.go:139] Checking APIGroup: autoscaling
  I0705 12:21:51.058684 21 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0705 12:21:51.058696 21 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0705 12:21:51.058702 21 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0705 12:21:51.058709 21 discovery.go:139] Checking APIGroup: batch
  I0705 12:21:51.059854 21 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0705 12:21:51.059864 21 discovery.go:148] Versions found [{batch/v1 v1}]
  I0705 12:21:51.059870 21 discovery.go:154] batch/v1 matches batch/v1
  I0705 12:21:51.059876 21 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0705 12:21:51.061329 21 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0705 12:21:51.061354 21 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0705 12:21:51.061360 21 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0705 12:21:51.061366 21 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0705 12:21:51.062740 21 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0705 12:21:51.062760 21 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0705 12:21:51.062766 21 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0705 12:21:51.062772 21 discovery.go:139] Checking APIGroup: policy
  I0705 12:21:51.064170 21 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0705 12:21:51.064184 21 discovery.go:148] Versions found [{policy/v1 v1}]
  I0705 12:21:51.064190 21 discovery.go:154] policy/v1 matches policy/v1
  I0705 12:21:51.064196 21 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0705 12:21:51.065563 21 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0705 12:21:51.065573 21 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0705 12:21:51.065579 21 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0705 12:21:51.065585 21 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0705 12:21:51.066831 21 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0705 12:21:51.066841 21 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0705 12:21:51.066861 21 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0705 12:21:51.066879 21 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0705 12:21:51.068031 21 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0705 12:21:51.068041 21 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0705 12:21:51.068047 21 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0705 12:21:51.068053 21 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0705 12:21:51.069300 21 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0705 12:21:51.069311 21 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0705 12:21:51.069326 21 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0705 12:21:51.069336 21 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0705 12:21:51.070510 21 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0705 12:21:51.070522 21 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0705 12:21:51.070528 21 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0705 12:21:51.070534 21 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0705 12:21:51.071774 21 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0705 12:21:51.071786 21 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0705 12:21:51.071792 21 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0705 12:21:51.071797 21 discovery.go:139] Checking APIGroup: node.k8s.io
  I0705 12:21:51.073450 21 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0705 12:21:51.073478 21 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0705 12:21:51.073485 21 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0705 12:21:51.073491 21 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0705 12:21:51.074957 21 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0705 12:21:51.074971 21 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0705 12:21:51.074978 21 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0705 12:21:51.074984 21 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0705 12:21:51.076489 21 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0705 12:21:51.076511 21 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0705 12:21:51.076517 21 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0705 12:21:51.076524 21 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0705 12:21:51.077810 21 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0705 12:21:51.077823 21 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0705 12:21:51.077830 21 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0705 12:21:51.077925 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-1759" for this suite. @ 07/05/25 12:21:51.084
• [0.684 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1861
  STEP: Creating a kubernetes client @ 07/05/25 12:21:51.094
  I0705 12:21:51.095012 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename kubectl @ 07/05/25 12:21:51.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:21:51.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:21:51.111
  STEP: Starting the proxy @ 07/05/25 12:21:51.114
  I0705 12:21:51.115291 21 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-8980 proxy --unix-socket=/tmp/kubectl-proxy-unix2689133941/test'
  STEP: retrieving proxy /api/ output @ 07/05/25 12:21:51.148
  I0705 12:21:51.148946 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8980" for this suite. @ 07/05/25 12:21:51.185
• [0.101 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 07/05/25 12:21:51.196
  I0705 12:21:51.196488 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename init-container @ 07/05/25 12:21:51.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:21:51.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:21:51.211
  STEP: creating the pod @ 07/05/25 12:21:51.214
  I0705 12:21:51.214752 21 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I0705 12:21:54.718763 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-180" for this suite. @ 07/05/25 12:21:54.725
• [3.538 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 07/05/25 12:21:54.735
  I0705 12:21:54.735037 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename container-probe @ 07/05/25 12:21:54.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:21:54.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:21:54.752
  I0705 12:22:16.845185 21 container_probe.go:91] Container started at 2025-07-05 12:21:55 +0000 UTC, pod became ready at 2025-07-05 12:22:16 +0000 UTC
  I0705 12:22:16.845316 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-465" for this suite. @ 07/05/25 12:22:16.851
• [22.129 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 07/05/25 12:22:16.863
  I0705 12:22:16.863829 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/05/25 12:22:16.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:22:16.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:22:16.879
  I0705 12:22:16.883125 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  I0705 12:22:17.906748 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7506" for this suite. @ 07/05/25 12:22:17.913
• [1.058 seconds]
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:877
  STEP: Creating a kubernetes client @ 07/05/25 12:22:17.921
  I0705 12:22:17.921904 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename svcaccounts @ 07/05/25 12:22:17.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:22:17.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:22:17.938
  STEP: Creating a Serviceaccount "e2e-sa-6ntm8" in namespace "svcaccounts-6320" @ 07/05/25 12:22:17.941
  STEP: Creating a ServiceaccountToken "e2e-sa-6ntm8" in namespace "svcaccounts-6320" @ 07/05/25 12:22:17.947
  STEP: Creating a TokenReview for "e2e-sa-6ntm8" in namespace "svcaccounts-6320" @ 07/05/25 12:22:17.954
  I0705 12:22:17.956157 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6320" for this suite. @ 07/05/25 12:22:18.014
• [0.103 seconds]
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:69
  STEP: Creating a kubernetes client @ 07/05/25 12:22:18.025
  I0705 12:22:18.025402 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename emptydir-wrapper @ 07/05/25 12:22:18.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:22:18.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:22:18.041
  STEP: Cleaning up the secret @ 07/05/25 12:22:20.101
  STEP: Cleaning up the configmap @ 07/05/25 12:22:20.11
  STEP: Cleaning up the pod @ 07/05/25 12:22:20.119
  I0705 12:22:20.138977 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-7490" for this suite. @ 07/05/25 12:22:20.144
• [2.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:743
  STEP: Creating a kubernetes client @ 07/05/25 12:22:20.153
  I0705 12:22:20.153709 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename services @ 07/05/25 12:22:20.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:22:20.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:22:20.176
  I0705 12:22:20.183243 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9330" for this suite. @ 07/05/25 12:22:20.245
• [0.103 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 07/05/25 12:22:20.256
  I0705 12:22:20.256597 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename projected @ 07/05/25 12:22:20.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:22:20.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:22:20.272
  STEP: Creating a pod to test downward API volume plugin @ 07/05/25 12:22:20.275
  STEP: Saw pod success @ 07/05/25 12:22:24.306
  I0705 12:22:24.310778 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod downwardapi-volume-7ebe879b-95c0-407e-aa18-c37ffb1980b2 container client-container: <nil>
  STEP: delete the pod @ 07/05/25 12:22:24.32
  I0705 12:22:24.343969 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3804" for this suite. @ 07/05/25 12:22:24.349
• [4.103 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 07/05/25 12:22:24.359
  I0705 12:22:24.359523 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename container-probe @ 07/05/25 12:22:24.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:22:24.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:22:24.374
  STEP: Creating pod liveness-b7813e26-a7d7-4095-b42f-0c153da48642 in namespace container-probe-961 @ 07/05/25 12:22:24.377
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/05/25 12:22:26.404
  I0705 12:22:26.409431 21 container_probe.go:1748] Initial restart count of pod liveness-b7813e26-a7d7-4095-b42f-0c153da48642 is 0
  I0705 12:22:26.414922 21 container_probe.go:1758] Get pod liveness-b7813e26-a7d7-4095-b42f-0c153da48642 in namespace container-probe-961
  I0705 12:22:28.421188 21 container_probe.go:1758] Get pod liveness-b7813e26-a7d7-4095-b42f-0c153da48642 in namespace container-probe-961
  I0705 12:22:30.426838 21 container_probe.go:1758] Get pod liveness-b7813e26-a7d7-4095-b42f-0c153da48642 in namespace container-probe-961
  I0705 12:22:32.432811 21 container_probe.go:1758] Get pod liveness-b7813e26-a7d7-4095-b42f-0c153da48642 in namespace container-probe-961
  I0705 12:22:34.438597 21 container_probe.go:1758] Get pod liveness-b7813e26-a7d7-4095-b42f-0c153da48642 in namespace container-probe-961
  I0705 12:22:36.444480 21 container_probe.go:1758] Get pod liveness-b7813e26-a7d7-4095-b42f-0c153da48642 in namespace container-probe-961
  I0705 12:22:38.450464 21 container_probe.go:1758] Get pod liveness-b7813e26-a7d7-4095-b42f-0c153da48642 in namespace container-probe-961
  I0705 12:22:40.456782 21 container_probe.go:1758] Get pod liveness-b7813e26-a7d7-4095-b42f-0c153da48642 in namespace container-probe-961
  I0705 12:22:42.462164 21 container_probe.go:1758] Get pod liveness-b7813e26-a7d7-4095-b42f-0c153da48642 in namespace container-probe-961
  I0705 12:22:44.469102 21 container_probe.go:1758] Get pod liveness-b7813e26-a7d7-4095-b42f-0c153da48642 in namespace container-probe-961
  I0705 12:22:46.477003 21 container_probe.go:1758] Get pod liveness-b7813e26-a7d7-4095-b42f-0c153da48642 in namespace container-probe-961
  I0705 12:22:46.477049 21 container_probe.go:1762] Restart count of pod container-probe-961/liveness-b7813e26-a7d7-4095-b42f-0c153da48642 is now 1 (20.06758593s elapsed)
  STEP: deleting the pod @ 07/05/25 12:22:46.477
  I0705 12:22:46.491000 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-961" for this suite. @ 07/05/25 12:22:46.497
• [22.149 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:458
  STEP: Creating a kubernetes client @ 07/05/25 12:22:46.509
  I0705 12:22:46.509115 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename resourcequota @ 07/05/25 12:22:46.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:22:46.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:22:46.526
  STEP: Counting existing ResourceQuota @ 07/05/25 12:22:46.529
  STEP: Creating a ResourceQuota @ 07/05/25 12:22:51.534
  STEP: Ensuring resource quota status is calculated @ 07/05/25 12:22:51.545
  STEP: Creating a ReplicaSet @ 07/05/25 12:22:53.551
  STEP: Ensuring resource quota status captures replicaset creation @ 07/05/25 12:22:53.57
  STEP: Deleting a ReplicaSet @ 07/05/25 12:22:55.576
  STEP: Ensuring resource quota status released usage @ 07/05/25 12:22:55.585
  I0705 12:22:57.592193 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9185" for this suite. @ 07/05/25 12:22:57.598
• [11.099 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 07/05/25 12:22:57.608
  I0705 12:22:57.608535 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename field-validation @ 07/05/25 12:22:57.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:22:57.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:22:57.625
  I0705 12:22:57.628699 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  I0705 12:23:00.161027      21 warnings.go:110] "Warning: unknown field \"alpha\""
  I0705 12:23:00.161052      21 warnings.go:110] "Warning: unknown field \"beta\""
  I0705 12:23:00.161058      21 warnings.go:110] "Warning: unknown field \"delta\""
  I0705 12:23:00.161087      21 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0705 12:23:00.161095      21 warnings.go:110] "Warning: unknown field \"gamma\""
  I0705 12:23:00.711952 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1914" for this suite. @ 07/05/25 12:23:00.718
• [3.118 seconds]
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:216
  STEP: Creating a kubernetes client @ 07/05/25 12:23:00.726
  I0705 12:23:00.726861 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename sched-preemption @ 07/05/25 12:23:00.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:23:00.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:23:00.744
  I0705 12:23:00.767748 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0705 12:24:00.774305 21 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 07/05/25 12:24:00.779
  STEP: Adding a custom resource @ 07/05/25 12:24:00.779
  I0705 12:24:00.801469 21 preemption.go:257] Created pod: pod0-0-sched-preemption-low-priority
  I0705 12:24:00.810968 21 preemption.go:257] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 07/05/25 12:24:00.811
  I0705 12:24:00.832733 21 preemption.go:257] Created pod: pod1-0-sched-preemption-medium-priority
  I0705 12:24:00.845953 21 preemption.go:257] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 07/05/25 12:24:00.846
  I0705 12:24:00.865327 21 preemption.go:257] Created pod: pod2-0-sched-preemption-medium-priority
  I0705 12:24:00.876637 21 preemption.go:257] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 07/05/25 12:24:00.876
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 07/05/25 12:24:02.913
  STEP: Removing a custom resource @ 07/05/25 12:24:05.018
  STEP: Removing a custom resource @ 07/05/25 12:24:05.031
  STEP: Removing a custom resource @ 07/05/25 12:24:05.044
  I0705 12:24:05.060236 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1932" for this suite. @ 07/05/25 12:24:05.065
• [64.349 seconds]
------------------------------
SS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 07/05/25 12:24:05.075
  I0705 12:24:05.075549 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename events @ 07/05/25 12:24:05.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:24:05.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:24:05.094
  STEP: creating a test event @ 07/05/25 12:24:05.097
  STEP: listing events in all namespaces @ 07/05/25 12:24:05.104
  STEP: listing events in test namespace @ 07/05/25 12:24:05.12
  STEP: listing events with field selection filtering on source @ 07/05/25 12:24:05.125
  STEP: listing events with field selection filtering on reportingController @ 07/05/25 12:24:05.13
  STEP: getting the test event @ 07/05/25 12:24:05.134
  STEP: patching the test event @ 07/05/25 12:24:05.138
  STEP: getting the test event @ 07/05/25 12:24:05.151
  STEP: updating the test event @ 07/05/25 12:24:05.155
  STEP: getting the test event @ 07/05/25 12:24:05.164
  STEP: deleting the test event @ 07/05/25 12:24:05.167
  STEP: listing events in all namespaces @ 07/05/25 12:24:05.184
  STEP: listing events in test namespace @ 07/05/25 12:24:05.204
  I0705 12:24:05.209608 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7808" for this suite. @ 07/05/25 12:24:05.215
• [0.149 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:866
  STEP: Creating a kubernetes client @ 07/05/25 12:24:05.224
  I0705 12:24:05.224789 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename webhook @ 07/05/25 12:24:05.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:24:05.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:24:05.241
  STEP: Setting up server cert @ 07/05/25 12:24:05.266
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/05/25 12:24:05.512
  STEP: Deploying the webhook pod @ 07/05/25 12:24:05.519
  STEP: Wait for the deployment to be ready @ 07/05/25 12:24:05.535
  I0705 12:24:05.551471 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/05/25 12:24:07.567
  STEP: Verifying the service has paired with the endpoint @ 07/05/25 12:24:07.589
  I0705 12:24:08.590183 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 07/05/25 12:24:08.596
  STEP: create the configmap with a random name @ 07/05/25 12:24:08.62
  STEP: verify the configmap is mutated @ 07/05/25 12:24:08.633
  STEP: create the configmap with 'skip-me' name @ 07/05/25 12:24:08.633
  I0705 12:24:08.712423 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9708" for this suite. @ 07/05/25 12:24:08.718
  STEP: Destroying namespace "webhook-markers-6072" for this suite. @ 07/05/25 12:24:08.726
• [3.510 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 07/05/25 12:24:08.734
  I0705 12:24:08.734702 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename configmap @ 07/05/25 12:24:08.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:24:08.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:24:08.75
  STEP: Creating configMap with name configmap-test-volume-map-a1a0a624-aa71-44a4-b5cf-9fb6d64b43ee @ 07/05/25 12:24:08.753
  STEP: Creating a pod to test consume configMaps @ 07/05/25 12:24:08.759
  STEP: Saw pod success @ 07/05/25 12:24:12.79
  I0705 12:24:12.795239 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-configmaps-c0a0eaa9-0447-4f00-92c0-b02c7b9c62d2 container agnhost-container: <nil>
  STEP: delete the pod @ 07/05/25 12:24:12.808
  I0705 12:24:12.831464 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-855" for this suite. @ 07/05/25 12:24:12.837
• [4.112 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 07/05/25 12:24:12.847
  I0705 12:24:12.847273 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename podtemplate @ 07/05/25 12:24:12.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:24:12.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:24:12.863
  STEP: Create a pod template @ 07/05/25 12:24:12.865
  STEP: Replace a pod template @ 07/05/25 12:24:12.874
  I0705 12:24:12.884278 21 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0705 12:24:12.884387 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6300" for this suite. @ 07/05/25 12:24:12.938
• [0.101 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 07/05/25 12:24:12.948
  I0705 12:24:12.948874 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename projected @ 07/05/25 12:24:12.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:24:12.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:24:12.963
  STEP: Creating a pod to test downward API volume plugin @ 07/05/25 12:24:12.967
  STEP: Saw pod success @ 07/05/25 12:24:16.998
  I0705 12:24:17.003471 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod downwardapi-volume-c1e48547-90a2-4c92-acd4-89d255d7d39e container client-container: <nil>
  STEP: delete the pod @ 07/05/25 12:24:17.013
  I0705 12:24:17.039301 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5235" for this suite. @ 07/05/25 12:24:17.045
• [4.107 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 07/05/25 12:24:17.056
  I0705 12:24:17.056052 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename projected @ 07/05/25 12:24:17.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:24:17.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:24:17.073
  STEP: Creating configMap with name projected-configmap-test-volume-05f6ef96-9238-4c69-96f3-a5910dc49b8f @ 07/05/25 12:24:17.076
  STEP: Creating a pod to test consume configMaps @ 07/05/25 12:24:17.081
  STEP: Saw pod success @ 07/05/25 12:24:21.108
  I0705 12:24:21.113430 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-projected-configmaps-51ea4a36-0602-4c12-8271-2e06097eb06d container agnhost-container: <nil>
  STEP: delete the pod @ 07/05/25 12:24:21.123
  I0705 12:24:21.147400 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1454" for this suite. @ 07/05/25 12:24:21.153
• [4.106 seconds]
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 07/05/25 12:24:21.162
  I0705 12:24:21.162570 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename cronjob @ 07/05/25 12:24:21.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:24:21.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:24:21.178
  STEP: Creating a cronjob @ 07/05/25 12:24:21.181
  STEP: Ensuring more than one job is running at a time @ 07/05/25 12:24:21.188
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 07/05/25 12:26:01.194
  STEP: Removing cronjob @ 07/05/25 12:26:01.202
  I0705 12:26:01.213554 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6788" for this suite. @ 07/05/25 12:26:01.219
• [100.066 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 07/05/25 12:26:01.228
  I0705 12:26:01.228785 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename projected @ 07/05/25 12:26:01.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:26:01.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:26:01.251
  STEP: Creating secret with name projected-secret-test-1dd5e4fc-aa6f-4e70-980a-dabec97ab34d @ 07/05/25 12:26:01.254
  STEP: Creating a pod to test consume secrets @ 07/05/25 12:26:01.259
  STEP: Saw pod success @ 07/05/25 12:26:05.291
  I0705 12:26:05.295863 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-projected-secrets-1c1ac9f4-48a1-4ec6-bf9d-b09b2bc44a1c container secret-volume-test: <nil>
  STEP: delete the pod @ 07/05/25 12:26:05.308
  I0705 12:26:05.330602 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-453" for this suite. @ 07/05/25 12:26:05.336
• [4.120 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 07/05/25 12:26:05.348
  I0705 12:26:05.348650 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename kubelet-test @ 07/05/25 12:26:05.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:26:05.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:26:05.369
  I0705 12:26:07.411976 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1617" for this suite. @ 07/05/25 12:26:07.417
• [2.080 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:189
  STEP: Creating a kubernetes client @ 07/05/25 12:26:07.428
  I0705 12:26:07.428640 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename emptydir @ 07/05/25 12:26:07.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:26:07.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:26:07.444
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 07/05/25 12:26:07.447
  STEP: Saw pod success @ 07/05/25 12:26:11.479
  I0705 12:26:11.484010 21 output.go:207] Trying to get logs from node ip-172-31-5-45 pod pod-165f57e1-de6c-4680-887c-6812182c4768 container test-container: <nil>
  STEP: delete the pod @ 07/05/25 12:26:11.504
  I0705 12:26:11.528943 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3492" for this suite. @ 07/05/25 12:26:11.535
• [4.116 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 07/05/25 12:26:11.545
  I0705 12:26:11.545227 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename pods @ 07/05/25 12:26:11.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:26:11.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:26:11.563
  STEP: creating the pod @ 07/05/25 12:26:11.566
  STEP: setting up watch @ 07/05/25 12:26:11.566
  STEP: submitting the pod to kubernetes @ 07/05/25 12:26:11.673
  STEP: verifying the pod is in kubernetes @ 07/05/25 12:26:11.685
  STEP: verifying pod creation was observed @ 07/05/25 12:26:11.692
  STEP: deleting the pod gracefully @ 07/05/25 12:26:13.708
  STEP: verifying pod deletion was observed @ 07/05/25 12:26:13.719
  I0705 12:26:15.200081 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6877" for this suite. @ 07/05/25 12:26:15.205
• [3.671 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 07/05/25 12:26:15.216
  I0705 12:26:15.216482 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename disruption @ 07/05/25 12:26:15.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:26:15.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:26:15.234
  STEP: Creating a pdb that targets all three pods in a test replica set @ 07/05/25 12:26:15.237
  STEP: Waiting for the pdb to be processed @ 07/05/25 12:26:15.243
  STEP: First trying to evict a pod which shouldn't be evictable @ 07/05/25 12:26:15.261
  STEP: Waiting for all pods to be running @ 07/05/25 12:26:15.261
  I0705 12:26:15.267036 21 disruption.go:680] pods: 0 < 3
  STEP: locating a running pod @ 07/05/25 12:26:17.269
  STEP: Updating the pdb to allow a pod to be evicted @ 07/05/25 12:26:17.282
  STEP: Waiting for the pdb to be processed @ 07/05/25 12:26:17.293
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 07/05/25 12:26:19.298
  STEP: Waiting for all pods to be running @ 07/05/25 12:26:19.298
  STEP: Waiting for the pdb to observed all healthy pods @ 07/05/25 12:26:19.304
  STEP: Patching the pdb to disallow a pod to be evicted @ 07/05/25 12:26:19.343
  STEP: Waiting for the pdb to be processed @ 07/05/25 12:26:19.362
  STEP: Waiting for all pods to be running @ 07/05/25 12:26:21.368
  STEP: locating a running pod @ 07/05/25 12:26:21.374
  STEP: Deleting the pdb to allow a pod to be evicted @ 07/05/25 12:26:21.387
  STEP: Waiting for the pdb to be deleted @ 07/05/25 12:26:21.397
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 07/05/25 12:26:21.401
  STEP: Waiting for all pods to be running @ 07/05/25 12:26:21.401
  I0705 12:26:21.498192 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-744" for this suite. @ 07/05/25 12:26:21.509
• [6.305 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 07/05/25 12:26:21.521
  I0705 12:26:21.521874 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/05/25 12:26:21.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:26:21.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:26:21.546
  I0705 12:26:21.549450 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  I0705 12:26:24.599257 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-1735" for this suite. @ 07/05/25 12:26:24.606
• [3.097 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:838
  STEP: Creating a kubernetes client @ 07/05/25 12:26:24.618
  I0705 12:26:24.618781 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename svcaccounts @ 07/05/25 12:26:24.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:26:24.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:26:24.635
  STEP: Creating ServiceAccount "e2e-sa-g27b8"  @ 07/05/25 12:26:24.638
  I0705 12:26:24.644238 21 service_accounts.go:853] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-g27b8"  @ 07/05/25 12:26:24.644
  I0705 12:26:24.652876 21 service_accounts.go:867] AutomountServiceAccountToken: true
  I0705 12:26:24.652983 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6767" for this suite. @ 07/05/25 12:26:24.706
• [0.098 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 07/05/25 12:26:24.717
  I0705 12:26:24.717337 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename csiinlinevolumes @ 07/05/25 12:26:24.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:26:24.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:26:24.734
  STEP: creating @ 07/05/25 12:26:24.736
  STEP: getting @ 07/05/25 12:26:24.76
  STEP: listing in namespace @ 07/05/25 12:26:24.764
  STEP: patching @ 07/05/25 12:26:24.77
  STEP: deleting @ 07/05/25 12:26:24.789
  I0705 12:26:24.803498 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-707" for this suite. @ 07/05/25 12:26:24.809
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 07/05/25 12:26:24.82
  I0705 12:26:24.820391 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename container-runtime @ 07/05/25 12:26:24.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:26:24.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:26:24.836
  STEP: create the container @ 07/05/25 12:26:24.84
  I0705 12:26:24.849597      21 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 07/05/25 12:26:24.849
  STEP: get the container status @ 07/05/25 12:26:27.873
  STEP: the container should be terminated @ 07/05/25 12:26:27.878
  STEP: the termination message should be set @ 07/05/25 12:26:27.878
  I0705 12:26:27.878621 21 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 07/05/25 12:26:27.878
  I0705 12:26:27.898880 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2708" for this suite. @ 07/05/25 12:26:27.904
• [3.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 07/05/25 12:26:27.914
  I0705 12:26:27.914196 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename downward-api @ 07/05/25 12:26:27.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:26:27.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:26:27.93
  STEP: Creating a pod to test downward api env vars @ 07/05/25 12:26:27.933
  STEP: Saw pod success @ 07/05/25 12:26:31.96
  I0705 12:26:31.964669 21 output.go:207] Trying to get logs from node ip-172-31-5-45 pod downward-api-8e341503-753e-482a-b9db-e5fe6d856334 container dapi-container: <nil>
  STEP: delete the pod @ 07/05/25 12:26:31.974
  I0705 12:26:31.992222 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7467" for this suite. @ 07/05/25 12:26:31.997
• [4.093 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 07/05/25 12:26:32.007
  I0705 12:26:32.007602 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename cronjob @ 07/05/25 12:26:32.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:26:32.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:26:32.029
  STEP: Creating a ForbidConcurrent cronjob @ 07/05/25 12:26:32.035
  STEP: Ensuring a job is scheduled @ 07/05/25 12:26:32.047
  STEP: Ensuring exactly one is scheduled @ 07/05/25 12:27:02.054
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 07/05/25 12:27:02.058
  STEP: Ensuring no more jobs are scheduled @ 07/05/25 12:27:02.064
  STEP: Removing cronjob @ 07/05/25 12:27:02.068
  I0705 12:27:02.078825 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8025" for this suite. @ 07/05/25 12:27:02.085
• [30.089 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 07/05/25 12:27:02.096
  I0705 12:27:02.096764 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename downward-api @ 07/05/25 12:27:02.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:27:02.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:27:02.121
  STEP: Creating a pod to test downward API volume plugin @ 07/05/25 12:27:02.124
  STEP: Saw pod success @ 07/05/25 12:27:06.158
  I0705 12:27:06.163452 21 output.go:207] Trying to get logs from node ip-172-31-5-45 pod downwardapi-volume-6d8e8111-e3a7-4365-a5c8-3d1045481992 container client-container: <nil>
  STEP: delete the pod @ 07/05/25 12:27:06.176
  I0705 12:27:06.203164 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-643" for this suite. @ 07/05/25 12:27:06.209
• [4.121 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 07/05/25 12:27:06.217
  I0705 12:27:06.217586 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename endpointslicemirroring @ 07/05/25 12:27:06.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:27:06.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:27:06.234
  STEP: mirroring a new custom Endpoint @ 07/05/25 12:27:06.257
  I0705 12:27:06.265753      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0705 12:27:06.271242 21 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 07/05/25 12:27:08.279
  I0705 12:27:08.287645      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: mirroring deletion of a custom Endpoint @ 07/05/25 12:27:08.295
  I0705 12:27:08.308302      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0705 12:27:08.317566 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-5821" for this suite. @ 07/05/25 12:27:08.325
• [2.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 07/05/25 12:27:08.334
  I0705 12:27:08.334475 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename container-probe @ 07/05/25 12:27:08.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:27:08.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:27:08.35
  STEP: Creating pod busybox-c35f9bf1-a48b-46ae-852b-b8364d25011f in namespace container-probe-5443 @ 07/05/25 12:27:08.354
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/05/25 12:27:10.378
  I0705 12:27:10.382956 21 container_probe.go:1748] Initial restart count of pod busybox-c35f9bf1-a48b-46ae-852b-b8364d25011f is 0
  I0705 12:27:10.387357 21 container_probe.go:1758] Get pod busybox-c35f9bf1-a48b-46ae-852b-b8364d25011f in namespace container-probe-5443
  I0705 12:27:12.393704 21 container_probe.go:1758] Get pod busybox-c35f9bf1-a48b-46ae-852b-b8364d25011f in namespace container-probe-5443
  I0705 12:27:14.399642 21 container_probe.go:1758] Get pod busybox-c35f9bf1-a48b-46ae-852b-b8364d25011f in namespace container-probe-5443
  I0705 12:27:16.405815 21 container_probe.go:1758] Get pod busybox-c35f9bf1-a48b-46ae-852b-b8364d25011f in namespace container-probe-5443
  I0705 12:27:18.411567 21 container_probe.go:1758] Get pod busybox-c35f9bf1-a48b-46ae-852b-b8364d25011f in namespace container-probe-5443
  I0705 12:27:20.418143 21 container_probe.go:1758] Get pod busybox-c35f9bf1-a48b-46ae-852b-b8364d25011f in namespace container-probe-5443
  I0705 12:27:22.424983 21 container_probe.go:1758] Get pod busybox-c35f9bf1-a48b-46ae-852b-b8364d25011f in namespace container-probe-5443
  I0705 12:27:24.431845 21 container_probe.go:1758] Get pod busybox-c35f9bf1-a48b-46ae-852b-b8364d25011f in namespace container-probe-5443
  I0705 12:27:26.438087 21 container_probe.go:1758] Get pod busybox-c35f9bf1-a48b-46ae-852b-b8364d25011f in namespace container-probe-5443
  I0705 12:27:28.444439 21 container_probe.go:1758] Get pod busybox-c35f9bf1-a48b-46ae-852b-b8364d25011f in namespace container-probe-5443
  I0705 12:27:30.450734 21 container_probe.go:1758] Get pod busybox-c35f9bf1-a48b-46ae-852b-b8364d25011f in namespace container-probe-5443
  I0705 12:27:32.455978 21 container_probe.go:1758] Get pod busybox-c35f9bf1-a48b-46ae-852b-b8364d25011f in namespace container-probe-5443
  I0705 12:27:34.461334 21 container_probe.go:1758] Get pod busybox-c35f9bf1-a48b-46ae-852b-b8364d25011f in namespace container-probe-5443
  I0705 12:27:36.468016 21 container_probe.go:1758] Get pod busybox-c35f9bf1-a48b-46ae-852b-b8364d25011f in namespace container-probe-5443
  I0705 12:27:38.474386 21 container_probe.go:1758] Get pod busybox-c35f9bf1-a48b-46ae-852b-b8364d25011f in namespace container-probe-5443
  I0705 12:27:40.480179 21 container_probe.go:1758] Get pod busybox-c35f9bf1-a48b-46ae-852b-b8364d25011f in namespace container-probe-5443
  I0705 12:27:42.486626 21 container_probe.go:1758] Get pod busybox-c35f9bf1-a48b-46ae-852b-b8364d25011f in namespace container-probe-5443
  I0705 12:27:44.492502 21 container_probe.go:1758] Get pod busybox-c35f9bf1-a48b-46ae-852b-b8364d25011f in namespace container-probe-5443
  I0705 12:27:46.497709 21 container_probe.go:1758] Get pod busybox-c35f9bf1-a48b-46ae-852b-b8364d25011f in namespace container-probe-5443
  I0705 12:27:48.504130 21 container_probe.go:1758] Get pod busybox-c35f9bf1-a48b-46ae-852b-b8364d25011f in namespace container-probe-5443
  I0705 12:27:50.509904 21 container_probe.go:1758] Get pod busybox-c35f9bf1-a48b-46ae-852b-b8364d25011f in namespace container-probe-5443
  I0705 12:27:52.515374 21 container_probe.go:1758] Get pod busybox-c35f9bf1-a48b-46ae-852b-b8364d25011f in namespace container-probe-5443
  I0705 12:27:54.522544 21 container_probe.go:1758] Get pod busybox-c35f9bf1-a48b-46ae-852b-b8364d25011f in namespace container-probe-5443
  I0705 12:27:56.528706 21 container_probe.go:1758] Get pod busybox-c35f9bf1-a48b-46ae-852b-b8364d25011f in namespace container-probe-5443
  I0705 12:27:58.535268 21 container_probe.go:1758] Get pod busybox-c35f9bf1-a48b-46ae-852b-b8364d25011f in namespace container-probe-5443
  I0705 12:28:00.541970 21 container_probe.go:1758] Get pod busybox-c35f9bf1-a48b-46ae-852b-b8364d25011f in namespace container-probe-5443
  I0705 12:28:00.542010 21 container_probe.go:1762] Restart count of pod container-probe-5443/busybox-c35f9bf1-a48b-46ae-852b-b8364d25011f is now 1 (50.159025655s elapsed)
  STEP: deleting the pod @ 07/05/25 12:28:00.542
  I0705 12:28:00.558096 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5443" for this suite. @ 07/05/25 12:28:00.564
• [52.240 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1726
  STEP: Creating a kubernetes client @ 07/05/25 12:28:00.574
  I0705 12:28:00.574591 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename kubectl @ 07/05/25 12:28:00.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:28:00.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:28:00.595
  I0705 12:28:00.598553 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-6707 version'
  I0705 12:28:00.638287 21 builder.go:146] stderr: ""
  I0705 12:28:00.638336 21 builder.go:147] stdout: "Client Version: v1.33.2\nKustomize Version: v5.6.0\nServer Version: v1.33.2\n"
  I0705 12:28:00.638537 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6707" for this suite. @ 07/05/25 12:28:00.666
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 07/05/25 12:28:00.677
  I0705 12:28:00.677910 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename webhook @ 07/05/25 12:28:00.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:28:00.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:28:00.693
  STEP: Setting up server cert @ 07/05/25 12:28:00.715
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/05/25 12:28:01.137
  STEP: Deploying the webhook pod @ 07/05/25 12:28:01.144
  STEP: Wait for the deployment to be ready @ 07/05/25 12:28:01.159
  I0705 12:28:01.172287 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/05/25 12:28:03.189
  STEP: Verifying the service has paired with the endpoint @ 07/05/25 12:28:03.21
  I0705 12:28:04.211204 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 07/05/25 12:28:04.218
  STEP: create a namespace for the webhook @ 07/05/25 12:28:04.234
  STEP: create a configmap should be unconditionally rejected by the webhook @ 07/05/25 12:28:04.26
  I0705 12:28:04.349885 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6461" for this suite. @ 07/05/25 12:28:04.356
  STEP: Destroying namespace "webhook-markers-4689" for this suite. @ 07/05/25 12:28:04.365
  STEP: Destroying namespace "fail-closed-namespace-3063" for this suite. @ 07/05/25 12:28:04.375
• [3.709 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 07/05/25 12:28:04.386
  I0705 12:28:04.386585 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename secrets @ 07/05/25 12:28:04.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:28:04.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:28:04.402
  STEP: Creating secret with name secret-test-ad5b7380-0767-4701-9c77-7009d36189c6 @ 07/05/25 12:28:04.405
  STEP: Creating a pod to test consume secrets @ 07/05/25 12:28:04.41
  STEP: Saw pod success @ 07/05/25 12:28:08.442
  I0705 12:28:08.446915 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-secrets-d503a011-3dd2-4784-8327-922534bb4351 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/05/25 12:28:08.463
  I0705 12:28:08.483217 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5904" for this suite. @ 07/05/25 12:28:08.488
• [4.111 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 07/05/25 12:28:08.497
  I0705 12:28:08.497679 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename configmap @ 07/05/25 12:28:08.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:28:08.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:28:08.516
  STEP: Creating configMap with name configmap-test-volume-map-9d3ecdcb-6c8c-4437-a76b-b05e471f0a80 @ 07/05/25 12:28:08.519
  STEP: Creating a pod to test consume configMaps @ 07/05/25 12:28:08.524
  STEP: Saw pod success @ 07/05/25 12:28:10.547
  I0705 12:28:10.552184 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-configmaps-10f36c46-216c-41fb-8aa6-d18a0225159f container agnhost-container: <nil>
  STEP: delete the pod @ 07/05/25 12:28:10.561
  I0705 12:28:10.583840 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1583" for this suite. @ 07/05/25 12:28:10.589
• [2.101 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 07/05/25 12:28:10.598
  I0705 12:28:10.598905 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename pv @ 07/05/25 12:28:10.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:28:10.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:28:10.616
  STEP: Creating initial PV and PVC @ 07/05/25 12:28:10.619
  I0705 12:28:10.619460 21 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-6461" @ 07/05/25 12:28:10.636
  STEP: Listing PVCs in namespace "pv-6461" @ 07/05/25 12:28:10.643
  STEP: Patching the PV "pv-6461-dtwg6" @ 07/05/25 12:28:10.652
  STEP: Patching the PVC "pvc-rb4mh" @ 07/05/25 12:28:10.665
  STEP: Getting PV "pv-6461-dtwg6" @ 07/05/25 12:28:10.672
  STEP: Getting PVC "pvc-rb4mh" @ 07/05/25 12:28:10.676
  STEP: Deleting PVC "pvc-rb4mh" @ 07/05/25 12:28:10.682
  STEP: Confirm deletion of PVC "pvc-rb4mh" @ 07/05/25 12:28:10.693
  STEP: Deleting PV "pv-6461-dtwg6" @ 07/05/25 12:28:12.704
  STEP: Confirm deletion of PV "pv-6461-dtwg6" @ 07/05/25 12:28:12.713
  STEP: Recreating another PV & PVC @ 07/05/25 12:28:14.725
  I0705 12:28:14.725793 21 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-6461-7g875" @ 07/05/25 12:28:14.741
  STEP: Updating the PVC "pvc-dgp4k" @ 07/05/25 12:28:14.781
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-dgp4k=updated" @ 07/05/25 12:28:14.793
  STEP: Deleting PVC "pvc-dgp4k" via DeleteCollection @ 07/05/25 12:28:14.798
  STEP: Confirm deletion of PVC "pvc-dgp4k" @ 07/05/25 12:28:14.814
  STEP: Deleting PV "pv-6461-7g875" via DeleteCollection @ 07/05/25 12:28:16.825
  STEP: Confirm deletion of PV "pv-6461-7g875" @ 07/05/25 12:28:16.843
  I0705 12:28:18.855853 21 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0705 12:28:18.855893 21 pv.go:205] Deleting PersistentVolumeClaim "pvc-dgp4k"
  I0705 12:28:18.860865 21 pv.go:193] Deleting PersistentVolume "pv-6461-7g875"
  I0705 12:28:18.866038 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-6461" for this suite. @ 07/05/25 12:28:18.871
• [8.284 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 07/05/25 12:28:18.882
  I0705 12:28:18.882423 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename webhook @ 07/05/25 12:28:18.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:28:18.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:28:18.899
  STEP: Setting up server cert @ 07/05/25 12:28:18.92
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/05/25 12:28:19.248
  STEP: Deploying the webhook pod @ 07/05/25 12:28:19.255
  STEP: Wait for the deployment to be ready @ 07/05/25 12:28:19.271
  I0705 12:28:19.283542 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/05/25 12:28:21.3
  STEP: Verifying the service has paired with the endpoint @ 07/05/25 12:28:21.32
  I0705 12:28:22.321183 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 07/05/25 12:28:22.328
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/05/25 12:28:22.344
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 07/05/25 12:28:22.349
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/05/25 12:28:22.363
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 07/05/25 12:28:22.378
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/05/25 12:28:22.387
  I0705 12:28:22.454498 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6177" for this suite. @ 07/05/25 12:28:22.46
  STEP: Destroying namespace "webhook-markers-3132" for this suite. @ 07/05/25 12:28:22.471
• [3.597 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 07/05/25 12:28:22.479
  I0705 12:28:22.479602 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename taint-multiple-pods @ 07/05/25 12:28:22.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:28:22.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:28:22.497
  I0705 12:28:22.500039 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0705 12:29:22.501262 21 util.go:390] Waiting for terminating namespaces to be deleted...
  I0705 12:29:22.507055 21 taints.go:144] Starting informer...
  STEP: Starting pods... @ 07/05/25 12:29:22.507
  I0705 12:29:22.727311 21 taints.go:463] Pod1 is running on ip-172-31-22-171. Tainting Node
  I0705 12:29:24.955032 21 taints.go:471] Pod2 is running on ip-172-31-22-171. Tainting Node
  STEP: Trying to apply a taint on the Node @ 07/05/25 12:29:24.955
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/05/25 12:29:24.966
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 07/05/25 12:29:24.975
  I0705 12:29:30.518016 21 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  I0705 12:29:50.545992 21 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/05/25 12:29:50.557
  I0705 12:29:50.561895 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-3949" for this suite. @ 07/05/25 12:29:50.568
• [88.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 07/05/25 12:29:50.58
  I0705 12:29:50.580192 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename downward-api @ 07/05/25 12:29:50.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:29:50.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:29:50.598
  STEP: Creating a pod to test downward API volume plugin @ 07/05/25 12:29:50.601
  STEP: Saw pod success @ 07/05/25 12:29:52.69
  I0705 12:29:52.694736 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod downwardapi-volume-87aa7e07-a12b-4c88-a7fb-7e166273d943 container client-container: <nil>
  STEP: delete the pod @ 07/05/25 12:29:52.708
  I0705 12:29:52.731420 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7340" for this suite. @ 07/05/25 12:29:52.738
• [2.170 seconds]
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:770
  STEP: Creating a kubernetes client @ 07/05/25 12:29:52.75
  I0705 12:29:52.750253 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename svcaccounts @ 07/05/25 12:29:52.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:29:52.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:29:52.768
  I0705 12:29:52.774601 21 service_accounts.go:782] Got root ca configmap in namespace "svcaccounts-7354"
  I0705 12:29:52.782653 21 service_accounts.go:785] Deleted root ca configmap in namespace "svcaccounts-7354"
  STEP: waiting for a new root ca configmap created @ 07/05/25 12:29:53.283
  I0705 12:29:53.288903 21 service_accounts.go:799] Recreated root ca configmap in namespace "svcaccounts-7354"
  I0705 12:29:53.295499 21 service_accounts.go:810] Updated root ca configmap in namespace "svcaccounts-7354"
  STEP: waiting for the root ca configmap reconciled @ 07/05/25 12:29:53.796
  I0705 12:29:53.801390 21 service_accounts.go:828] Reconciled root ca configmap in namespace "svcaccounts-7354"
  I0705 12:29:53.801508 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7354" for this suite. @ 07/05/25 12:29:53.809
• [1.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 07/05/25 12:29:53.819
  I0705 12:29:53.819755 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename projected @ 07/05/25 12:29:53.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:29:53.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:29:53.836
  STEP: Creating projection with secret that has name projected-secret-test-026c07d2-1a60-483e-8ac4-c191bf198615 @ 07/05/25 12:29:53.839
  STEP: Creating a pod to test consume secrets @ 07/05/25 12:29:53.845
  STEP: Saw pod success @ 07/05/25 12:29:57.873
  I0705 12:29:57.878109 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-projected-secrets-77eb3815-593a-4302-8035-0676067d8415 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/05/25 12:29:57.888
  I0705 12:29:57.906893 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6449" for this suite. @ 07/05/25 12:29:57.912
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:71
  STEP: Creating a kubernetes client @ 07/05/25 12:29:57.923
  I0705 12:29:57.923694 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/05/25 12:29:57.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:29:57.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:29:57.939
  I0705 12:29:57.943094 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 07/05/25 12:29:59.157
  I0705 12:29:59.157169 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=crd-publish-openapi-6601 --namespace=crd-publish-openapi-6601 create -f -'
  I0705 12:29:59.222883 21 builder.go:146] stderr: ""
  I0705 12:29:59.222924 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7244-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0705 12:29:59.223008 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=crd-publish-openapi-6601 --namespace=crd-publish-openapi-6601 delete e2e-test-crd-publish-openapi-7244-crds test-foo'
  I0705 12:29:59.284092 21 builder.go:146] stderr: ""
  I0705 12:29:59.284137 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7244-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0705 12:29:59.284182 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=crd-publish-openapi-6601 --namespace=crd-publish-openapi-6601 apply -f -'
  I0705 12:29:59.349794 21 builder.go:146] stderr: ""
  I0705 12:29:59.349860 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7244-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0705 12:29:59.350019 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=crd-publish-openapi-6601 --namespace=crd-publish-openapi-6601 delete e2e-test-crd-publish-openapi-7244-crds test-foo'
  I0705 12:29:59.432970 21 builder.go:146] stderr: ""
  I0705 12:29:59.433010 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7244-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 07/05/25 12:29:59.433
  I0705 12:29:59.433104 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=crd-publish-openapi-6601 --namespace=crd-publish-openapi-6601 create -f -'
  I0705 12:29:59.479549 21 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 07/05/25 12:29:59.479
  I0705 12:29:59.479692 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=crd-publish-openapi-6601 --namespace=crd-publish-openapi-6601 create -f -'
  I0705 12:29:59.526444 21 builder.go:135] rc: 1
  I0705 12:29:59.526582 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=crd-publish-openapi-6601 --namespace=crd-publish-openapi-6601 apply -f -'
  I0705 12:29:59.580843 21 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 07/05/25 12:29:59.58
  I0705 12:29:59.580959 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=crd-publish-openapi-6601 --namespace=crd-publish-openapi-6601 create -f -'
  I0705 12:29:59.626088 21 builder.go:135] rc: 1
  I0705 12:29:59.626174 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=crd-publish-openapi-6601 --namespace=crd-publish-openapi-6601 apply -f -'
  I0705 12:29:59.680787 21 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 07/05/25 12:29:59.68
  I0705 12:29:59.680938 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=crd-publish-openapi-6601 explain e2e-test-crd-publish-openapi-7244-crds'
  I0705 12:29:59.725209 21 builder.go:146] stderr: ""
  I0705 12:29:59.725258 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7244-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 07/05/25 12:29:59.725
  I0705 12:29:59.725594 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=crd-publish-openapi-6601 explain e2e-test-crd-publish-openapi-7244-crds.metadata'
  I0705 12:29:59.770004 21 builder.go:146] stderr: ""
  I0705 12:29:59.770210 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7244-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0705 12:29:59.770511 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=crd-publish-openapi-6601 explain e2e-test-crd-publish-openapi-7244-crds.spec'
  I0705 12:29:59.813712 21 builder.go:146] stderr: ""
  I0705 12:29:59.813752 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7244-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0705 12:29:59.813857 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=crd-publish-openapi-6601 explain e2e-test-crd-publish-openapi-7244-crds.spec.bars'
  I0705 12:29:59.858130 21 builder.go:146] stderr: ""
  I0705 12:29:59.858177 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7244-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 07/05/25 12:29:59.858
  I0705 12:29:59.858425 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=crd-publish-openapi-6601 explain e2e-test-crd-publish-openapi-7244-crds.spec.bars2'
  I0705 12:29:59.902200 21 builder.go:135] rc: 1
  I0705 12:30:01.223023 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6601" for this suite. @ 07/05/25 12:30:01.234
• [3.321 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:126
  STEP: Creating a kubernetes client @ 07/05/25 12:30:01.244
  I0705 12:30:01.244937 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename sched-preemption @ 07/05/25 12:30:01.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:30:01.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:30:01.261
  I0705 12:30:01.283787 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0705 12:31:01.293502 21 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 07/05/25 12:31:01.301
  STEP: Adding a custom resource @ 07/05/25 12:31:01.301
  I0705 12:31:01.325432 21 preemption.go:170] Created pod: pod0-0-sched-preemption-low-priority
  I0705 12:31:01.336878 21 preemption.go:170] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 07/05/25 12:31:01.336
  I0705 12:31:01.352123 21 preemption.go:170] Created pod: pod1-0-sched-preemption-medium-priority
  I0705 12:31:01.363315 21 preemption.go:170] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 07/05/25 12:31:01.363
  I0705 12:31:01.382290 21 preemption.go:170] Created pod: pod2-0-sched-preemption-medium-priority
  I0705 12:31:01.391778 21 preemption.go:170] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 07/05/25 12:31:01.391
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 07/05/25 12:31:03.429
  STEP: Removing a custom resource @ 07/05/25 12:31:05.512
  STEP: Removing a custom resource @ 07/05/25 12:31:05.527
  STEP: Removing a custom resource @ 07/05/25 12:31:05.542
  I0705 12:31:05.554953 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1421" for this suite. @ 07/05/25 12:31:05.562
• [64.330 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:190
  STEP: Creating a kubernetes client @ 07/05/25 12:31:05.574
  I0705 12:31:05.574963 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename emptydir-wrapper @ 07/05/25 12:31:05.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:31:05.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:31:05.59
  STEP: Creating 50 configmaps @ 07/05/25 12:31:05.594
  STEP: Creating RC which spawns configmap-volume pods @ 07/05/25 12:31:05.906
  I0705 12:31:05.932193 21 resource.go:81] Pod name wrapped-volume-race-febb8829-ad49-47d3-92b5-cf6e65b426b0: Found 1 pods out of 5
  I0705 12:31:10.942126 21 resource.go:81] Pod name wrapped-volume-race-febb8829-ad49-47d3-92b5-cf6e65b426b0: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/05/25 12:31:10.942
  STEP: Creating RC which spawns configmap-volume pods @ 07/05/25 12:31:10.974
  I0705 12:31:11.004607 21 resource.go:81] Pod name wrapped-volume-race-1bc8ac47-3025-487c-a77d-6ee68b7af722: Found 1 pods out of 5
  I0705 12:31:16.012592 21 resource.go:81] Pod name wrapped-volume-race-1bc8ac47-3025-487c-a77d-6ee68b7af722: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/05/25 12:31:16.012
  STEP: Creating RC which spawns configmap-volume pods @ 07/05/25 12:31:16.048
  I0705 12:31:16.068576 21 resource.go:81] Pod name wrapped-volume-race-ff0d91ca-cdb7-4df7-b43a-6e33b18f6552: Found 1 pods out of 5
  I0705 12:31:21.078771 21 resource.go:81] Pod name wrapped-volume-race-ff0d91ca-cdb7-4df7-b43a-6e33b18f6552: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/05/25 12:31:21.078
  STEP: deleting ReplicationController wrapped-volume-race-ff0d91ca-cdb7-4df7-b43a-6e33b18f6552 in namespace emptydir-wrapper-2454, will wait for the garbage collector to delete the pods @ 07/05/25 12:31:21.105
  I0705 12:31:21.170755 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-ff0d91ca-cdb7-4df7-b43a-6e33b18f6552 took: 9.005973ms
  I0705 12:31:21.271506 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-ff0d91ca-cdb7-4df7-b43a-6e33b18f6552 pods took: 100.744727ms
  STEP: deleting ReplicationController wrapped-volume-race-1bc8ac47-3025-487c-a77d-6ee68b7af722 in namespace emptydir-wrapper-2454, will wait for the garbage collector to delete the pods @ 07/05/25 12:31:22.972
  I0705 12:31:23.039469 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-1bc8ac47-3025-487c-a77d-6ee68b7af722 took: 9.271248ms
  I0705 12:31:23.140093 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-1bc8ac47-3025-487c-a77d-6ee68b7af722 pods took: 100.588486ms
  STEP: deleting ReplicationController wrapped-volume-race-febb8829-ad49-47d3-92b5-cf6e65b426b0 in namespace emptydir-wrapper-2454, will wait for the garbage collector to delete the pods @ 07/05/25 12:31:24.241
  I0705 12:31:24.307415 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-febb8829-ad49-47d3-92b5-cf6e65b426b0 took: 8.381482ms
  I0705 12:31:24.408391 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-febb8829-ad49-47d3-92b5-cf6e65b426b0 pods took: 100.971229ms
  STEP: Cleaning up the configMaps @ 07/05/25 12:31:26.008
  I0705 12:31:26.468969 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-2454" for this suite. @ 07/05/25 12:31:26.476
• [20.909 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should terminate job execution when the number of failed indexes exceeds maxFailedIndexes [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:643
  STEP: Creating a kubernetes client @ 07/05/25 12:31:26.484
  I0705 12:31:26.484404 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename job @ 07/05/25 12:31:26.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:31:26.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:31:26.504
  STEP: Creating an indexed job with backoffLimit per index and maxFailedIndexes @ 07/05/25 12:31:26.507
  STEP: Awaiting for the job to fail as the number of max failed indexes is exceeded @ 07/05/25 12:31:26.516
  STEP: Verifying the Job status fields to ensure early termination of the job @ 07/05/25 12:31:30.534
  I0705 12:31:30.538367 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3752" for this suite. @ 07/05/25 12:31:30.546
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:55
  STEP: Creating a kubernetes client @ 07/05/25 12:31:30.557
  I0705 12:31:30.557155 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename dns @ 07/05/25 12:31:30.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:31:30.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:31:30.574
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 07/05/25 12:31:30.577
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 07/05/25 12:31:30.577
  STEP: creating a pod to probe DNS @ 07/05/25 12:31:30.577
  STEP: submitting the pod to kubernetes @ 07/05/25 12:31:30.577
  STEP: retrieving the pod @ 07/05/25 12:31:32.609
  STEP: looking for the results for each expected name from probers @ 07/05/25 12:31:32.612
  I0705 12:31:32.640195 21 dns_common.go:546] DNS probes using dns-3994/dns-test-456516b4-a9b7-465e-9184-2624b128c391 succeeded

  STEP: deleting the pod @ 07/05/25 12:31:32.64
  I0705 12:31:32.661651 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3994" for this suite. @ 07/05/25 12:31:32.667
• [2.121 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:105
  STEP: Creating a kubernetes client @ 07/05/25 12:31:32.677
  I0705 12:31:32.677923 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename replication-controller @ 07/05/25 12:31:32.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:31:32.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:31:32.693
  STEP: Given a ReplicationController is created @ 07/05/25 12:31:32.696
  STEP: When the matched label of one of its pods change @ 07/05/25 12:31:32.704
  I0705 12:31:32.709940 21 resource.go:81] Pod name pod-release: Found 0 pods out of 1
  I0705 12:31:37.717897 21 resource.go:81] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 07/05/25 12:31:37.732
  I0705 12:31:38.745424 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7883" for this suite. @ 07/05/25 12:31:38.752
• [6.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:942
  STEP: Creating a kubernetes client @ 07/05/25 12:31:38.762
  I0705 12:31:38.762701 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename sched-preemption @ 07/05/25 12:31:38.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:31:38.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:31:38.779
  I0705 12:31:38.804728 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0705 12:32:38.815398 21 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 07/05/25 12:32:38.822
  I0705 12:32:38.822964 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename sched-preemption-path @ 07/05/25 12:32:38.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:32:38.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:32:38.839
  I0705 12:32:38.862925 21 preemption.go:948] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0705 12:32:38.868385 21 preemption.go:954] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 07/05/25 12:32:38.945
  STEP: Removing a custom resource @ 07/05/25 12:32:38.958
  STEP: Removing a custom resource @ 07/05/25 12:32:38.971
  I0705 12:32:38.982524 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-3032" for this suite. @ 07/05/25 12:32:38.99
  I0705 12:32:39.002523 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9167" for this suite. @ 07/05/25 12:32:39.09
• [60.337 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 07/05/25 12:32:39.099
  I0705 12:32:39.099875 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename webhook @ 07/05/25 12:32:39.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:32:39.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:32:39.117
  STEP: Setting up server cert @ 07/05/25 12:32:39.139
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/05/25 12:32:39.46
  STEP: Deploying the webhook pod @ 07/05/25 12:32:39.468
  STEP: Wait for the deployment to be ready @ 07/05/25 12:32:39.485
  I0705 12:32:39.495541 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/05/25 12:32:41.515
  STEP: Verifying the service has paired with the endpoint @ 07/05/25 12:32:41.538
  I0705 12:32:42.539192 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0705 12:32:42.545371 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9981-crds.webhook.example.com via the AdmissionRegistration API @ 07/05/25 12:32:43.059
  STEP: Creating a custom resource while v1 is storage version @ 07/05/25 12:32:43.076
  STEP: Patching Custom Resource Definition to set v2 as storage @ 07/05/25 12:32:45.107
  STEP: Patching the custom resource while v2 is storage version @ 07/05/25 12:32:45.119
  I0705 12:32:45.732113 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8496" for this suite. @ 07/05/25 12:32:45.739
  STEP: Destroying namespace "webhook-markers-1552" for this suite. @ 07/05/25 12:32:45.749
• [6.661 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 07/05/25 12:32:45.761
  I0705 12:32:45.761505 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename replicaset @ 07/05/25 12:32:45.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:32:45.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:32:45.779
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 07/05/25 12:32:45.782
  I0705 12:32:45.798204 21 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  I0705 12:32:50.805490 21 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/05/25 12:32:50.805
  STEP: getting scale subresource @ 07/05/25 12:32:50.805
  STEP: updating a scale subresource @ 07/05/25 12:32:50.81
  STEP: verifying the replicaset Spec.Replicas was modified @ 07/05/25 12:32:50.818
  STEP: Patch a scale subresource @ 07/05/25 12:32:50.826
  I0705 12:32:50.846157 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2383" for this suite. @ 07/05/25 12:32:50.856
• [5.108 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 07/05/25 12:32:50.869
  I0705 12:32:50.869176 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename security-context-test @ 07/05/25 12:32:50.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:32:50.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:32:50.886
  I0705 12:32:54.937360 21 security_context.go:619] Got logs for pod "busybox-privileged-false-e20b232c-9d69-40ff-bf49-7197fa2488a5": "ip: RTNETLINK answers: Operation not permitted\n"
  I0705 12:32:54.937493 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7996" for this suite. @ 07/05/25 12:32:54.944
• [4.085 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:99
  STEP: Creating a kubernetes client @ 07/05/25 12:32:54.954
  I0705 12:32:54.954360 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename emptydir @ 07/05/25 12:32:54.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:32:54.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:32:54.969
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 07/05/25 12:32:54.973
  STEP: Saw pod success @ 07/05/25 12:32:59.005
  I0705 12:32:59.011315 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-2aed7a41-7568-4697-8757-d35fe751e1e7 container test-container: <nil>
  STEP: delete the pod @ 07/05/25 12:32:59.024
  I0705 12:32:59.048303 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3512" for this suite. @ 07/05/25 12:32:59.053
• [4.111 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 07/05/25 12:32:59.064
  I0705 12:32:59.064991 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename kubectl-logs @ 07/05/25 12:32:59.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:32:59.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:32:59.081
  STEP: creating a pod @ 07/05/25 12:32:59.085
  I0705 12:32:59.085215 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-logs-2208 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0705 12:32:59.139491 21 builder.go:146] stderr: ""
  I0705 12:32:59.139546 21 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 07/05/25 12:32:59.139
  I0705 12:32:59.139643 21 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0705 12:33:01.149660 21 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 07/05/25 12:33:01.149
  I0705 12:33:01.149758 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-logs-2208 logs logs-generator logs-generator'
  I0705 12:33:01.210946 21 builder.go:146] stderr: ""
  I0705 12:33:01.211003 21 builder.go:147] stdout: "I0705 12:32:59.751800       1 logs_generator.go:76] 0 GET /api/v1/namespaces/ns/pods/rwj 421\nI0705 12:32:59.952183       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/t7l 513\nI0705 12:33:00.152497       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/lgg 479\nI0705 12:33:00.352797       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/zm6 230\nI0705 12:33:00.551920       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/f5pn 433\nI0705 12:33:00.752248       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/spn6 325\nI0705 12:33:00.952592       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/wzvx 457\nI0705 12:33:01.151861       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/b96 370\n"
  STEP: limiting log lines @ 07/05/25 12:33:01.211
  I0705 12:33:01.211118 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-logs-2208 logs logs-generator logs-generator --tail=1'
  I0705 12:33:01.266044 21 builder.go:146] stderr: ""
  I0705 12:33:01.266129 21 builder.go:147] stdout: "I0705 12:33:01.151861       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/b96 370\n"
  I0705 12:33:01.266139 21 logs.go:180] got output "I0705 12:33:01.151861       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/b96 370\n"
  STEP: limiting log bytes @ 07/05/25 12:33:01.266
  I0705 12:33:01.266237 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-logs-2208 logs logs-generator logs-generator --limit-bytes=1'
  I0705 12:33:01.324294 21 builder.go:146] stderr: ""
  I0705 12:33:01.324336 21 builder.go:147] stdout: "I"
  I0705 12:33:01.324344 21 logs.go:186] got output "I"
  STEP: exposing timestamps @ 07/05/25 12:33:01.324
  I0705 12:33:01.324425 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-logs-2208 logs logs-generator logs-generator --tail=1 --timestamps'
  I0705 12:33:01.379438 21 builder.go:146] stderr: ""
  I0705 12:33:01.379491 21 builder.go:147] stdout: "2025-07-05T12:33:01.352293771Z I0705 12:33:01.352183       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/6xmd 236\n"
  I0705 12:33:01.379501 21 logs.go:192] got output "2025-07-05T12:33:01.352293771Z I0705 12:33:01.352183       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/6xmd 236\n"
  STEP: restricting to a time range @ 07/05/25 12:33:01.379
  I0705 12:33:03.881165 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-logs-2208 logs logs-generator logs-generator --since=1s'
  I0705 12:33:03.941420 21 builder.go:146] stderr: ""
  I0705 12:33:03.941469 21 builder.go:147] stdout: "I0705 12:33:02.951964       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/bpv 434\nI0705 12:33:03.152285       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/pkb 205\nI0705 12:33:03.352619       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/zdhg 214\nI0705 12:33:03.551872       1 logs_generator.go:76] 19 GET /api/v1/namespaces/default/pods/2fwp 478\nI0705 12:33:03.752198       1 logs_generator.go:76] 20 POST /api/v1/namespaces/kube-system/pods/w2lr 478\n"
  I0705 12:33:03.941522 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-logs-2208 logs logs-generator logs-generator --since=24h'
  I0705 12:33:03.997610 21 builder.go:146] stderr: ""
  I0705 12:33:03.997688 21 builder.go:147] stdout: "I0705 12:32:59.751800       1 logs_generator.go:76] 0 GET /api/v1/namespaces/ns/pods/rwj 421\nI0705 12:32:59.952183       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/t7l 513\nI0705 12:33:00.152497       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/lgg 479\nI0705 12:33:00.352797       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/zm6 230\nI0705 12:33:00.551920       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/f5pn 433\nI0705 12:33:00.752248       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/spn6 325\nI0705 12:33:00.952592       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/wzvx 457\nI0705 12:33:01.151861       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/b96 370\nI0705 12:33:01.352183       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/6xmd 236\nI0705 12:33:01.552500       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/kube-system/pods/skkf 480\nI0705 12:33:01.752833       1 logs_generator.go:76] 10 GET /api/v1/namespaces/kube-system/pods/m4nn 214\nI0705 12:33:01.952165       1 logs_generator.go:76] 11 GET /api/v1/namespaces/default/pods/gwr 401\nI0705 12:33:02.152498       1 logs_generator.go:76] 12 POST /api/v1/namespaces/kube-system/pods/6hl 437\nI0705 12:33:02.352860       1 logs_generator.go:76] 13 POST /api/v1/namespaces/kube-system/pods/bmwx 372\nI0705 12:33:02.552158       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/ns/pods/86xx 352\nI0705 12:33:02.752536       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/ns/pods/7vs 206\nI0705 12:33:02.951964       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/bpv 434\nI0705 12:33:03.152285       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/pkb 205\nI0705 12:33:03.352619       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/zdhg 214\nI0705 12:33:03.551872       1 logs_generator.go:76] 19 GET /api/v1/namespaces/default/pods/2fwp 478\nI0705 12:33:03.752198       1 logs_generator.go:76] 20 POST /api/v1/namespaces/kube-system/pods/w2lr 478\nI0705 12:33:03.952502       1 logs_generator.go:76] 21 GET /api/v1/namespaces/default/pods/cnp 400\n"
  I0705 12:33:03.997880 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-logs-2208 delete pod logs-generator'
  I0705 12:33:05.080225 21 builder.go:146] stderr: ""
  I0705 12:33:05.080270 21 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0705 12:33:05.080384 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-2208" for this suite. @ 07/05/25 12:33:05.089
• [6.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 07/05/25 12:33:05.098
  I0705 12:33:05.098998 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename container-probe @ 07/05/25 12:33:05.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:33:05.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:33:05.115
  STEP: Creating pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 in namespace container-probe-9755 @ 07/05/25 12:33:05.119
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/05/25 12:33:07.147
  I0705 12:33:07.153294 21 container_probe.go:1748] Initial restart count of pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 is 0
  I0705 12:33:07.157429 21 container_probe.go:1758] Get pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 in namespace container-probe-9755
  I0705 12:33:09.163902 21 container_probe.go:1758] Get pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 in namespace container-probe-9755
  I0705 12:33:11.168860 21 container_probe.go:1758] Get pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 in namespace container-probe-9755
  I0705 12:33:13.175293 21 container_probe.go:1758] Get pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 in namespace container-probe-9755
  I0705 12:33:15.182532 21 container_probe.go:1758] Get pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 in namespace container-probe-9755
  I0705 12:33:17.187957 21 container_probe.go:1758] Get pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 in namespace container-probe-9755
  I0705 12:33:19.195388 21 container_probe.go:1758] Get pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 in namespace container-probe-9755
  I0705 12:33:21.203679 21 container_probe.go:1758] Get pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 in namespace container-probe-9755
  I0705 12:33:23.208611 21 container_probe.go:1758] Get pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 in namespace container-probe-9755
  I0705 12:33:25.215040 21 container_probe.go:1758] Get pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 in namespace container-probe-9755
  I0705 12:33:27.223488 21 container_probe.go:1758] Get pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 in namespace container-probe-9755
  I0705 12:33:29.229211 21 container_probe.go:1758] Get pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 in namespace container-probe-9755
  I0705 12:33:31.237446 21 container_probe.go:1758] Get pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 in namespace container-probe-9755
  I0705 12:33:33.242372 21 container_probe.go:1758] Get pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 in namespace container-probe-9755
  I0705 12:33:35.248906 21 container_probe.go:1758] Get pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 in namespace container-probe-9755
  I0705 12:33:37.256781 21 container_probe.go:1758] Get pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 in namespace container-probe-9755
  I0705 12:33:39.262371 21 container_probe.go:1758] Get pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 in namespace container-probe-9755
  I0705 12:33:41.268964 21 container_probe.go:1758] Get pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 in namespace container-probe-9755
  I0705 12:33:43.277200 21 container_probe.go:1758] Get pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 in namespace container-probe-9755
  I0705 12:33:45.283126 21 container_probe.go:1758] Get pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 in namespace container-probe-9755
  I0705 12:33:47.289316 21 container_probe.go:1758] Get pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 in namespace container-probe-9755
  I0705 12:33:49.297563 21 container_probe.go:1758] Get pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 in namespace container-probe-9755
  I0705 12:33:51.303590 21 container_probe.go:1758] Get pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 in namespace container-probe-9755
  I0705 12:33:53.310864 21 container_probe.go:1758] Get pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 in namespace container-probe-9755
  I0705 12:33:55.318935 21 container_probe.go:1758] Get pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 in namespace container-probe-9755
  I0705 12:33:57.324177 21 container_probe.go:1758] Get pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 in namespace container-probe-9755
  I0705 12:33:59.330137 21 container_probe.go:1758] Get pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 in namespace container-probe-9755
  I0705 12:34:01.338381 21 container_probe.go:1758] Get pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 in namespace container-probe-9755
  I0705 12:34:03.343957 21 container_probe.go:1758] Get pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 in namespace container-probe-9755
  I0705 12:34:05.351046 21 container_probe.go:1758] Get pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 in namespace container-probe-9755
  I0705 12:34:07.359354 21 container_probe.go:1758] Get pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 in namespace container-probe-9755
  I0705 12:34:09.365104 21 container_probe.go:1758] Get pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 in namespace container-probe-9755
  I0705 12:34:11.370589 21 container_probe.go:1758] Get pod test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 in namespace container-probe-9755
  I0705 12:34:11.370628 21 container_probe.go:1762] Restart count of pod container-probe-9755/test-grpc-78022f42-ee8d-40e6-815e-5b2e6e84b835 is now 1 (1m4.217296783s elapsed)
  STEP: deleting the pod @ 07/05/25 12:34:11.37
  I0705 12:34:11.386947 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9755" for this suite. @ 07/05/25 12:34:11.394
• [66.307 seconds]
------------------------------
SS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 07/05/25 12:34:11.405
  I0705 12:34:11.405673 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 07/05/25 12:34:11.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:34:11.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:34:11.423
  STEP: Setting up the test @ 07/05/25 12:34:11.427
  STEP: Creating hostNetwork=false pod @ 07/05/25 12:34:11.427
  STEP: Creating hostNetwork=true pod @ 07/05/25 12:34:13.46
  STEP: Running the test @ 07/05/25 12:34:15.487
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 07/05/25 12:34:15.487
  I0705 12:34:15.487579 21 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5729 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0705 12:34:15.487598 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0705 12:34:15.487637 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5729/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0705 12:34:15.527466 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0705 12:34:15.527511 21 exec_util.go:112] Exec stderr: ""
  I0705 12:34:15.527531 21 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5729 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0705 12:34:15.527539 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0705 12:34:15.527607 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5729/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0705 12:34:15.571338 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0705 12:34:15.571380 21 exec_util.go:112] Exec stderr: ""
  I0705 12:34:15.571402 21 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5729 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0705 12:34:15.571410 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0705 12:34:15.571472 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5729/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0705 12:34:15.614449 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0705 12:34:15.614494 21 exec_util.go:112] Exec stderr: ""
  I0705 12:34:15.614513 21 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5729 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0705 12:34:15.614520 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0705 12:34:15.614577 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5729/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0705 12:34:15.655435 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0705 12:34:15.655478 21 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 07/05/25 12:34:15.655
  I0705 12:34:15.655530 21 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5729 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0705 12:34:15.655537 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0705 12:34:15.655593 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5729/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0705 12:34:15.692788 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0705 12:34:15.692836 21 exec_util.go:112] Exec stderr: ""
  I0705 12:34:15.692859 21 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5729 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0705 12:34:15.692867 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0705 12:34:15.692923 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5729/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0705 12:34:15.735532 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0705 12:34:15.735577 21 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 07/05/25 12:34:15.735
  I0705 12:34:15.735638 21 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5729 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0705 12:34:15.735645 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0705 12:34:15.735710 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5729/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0705 12:34:15.778427 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0705 12:34:15.778472 21 exec_util.go:112] Exec stderr: ""
  I0705 12:34:15.778492 21 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5729 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0705 12:34:15.778499 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0705 12:34:15.778562 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5729/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0705 12:34:15.815326 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0705 12:34:15.815391 21 exec_util.go:112] Exec stderr: ""
  I0705 12:34:15.815414 21 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5729 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0705 12:34:15.815426 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0705 12:34:15.815578 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5729/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0705 12:34:15.855298 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0705 12:34:15.855339 21 exec_util.go:112] Exec stderr: ""
  I0705 12:34:15.855358 21 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5729 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0705 12:34:15.855364 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0705 12:34:15.855422 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5729/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0705 12:34:15.896109 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0705 12:34:15.896151 21 exec_util.go:112] Exec stderr: ""
  I0705 12:34:15.896372 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-5729" for this suite. @ 07/05/25 12:34:15.902
• [4.506 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:191
  STEP: Creating a kubernetes client @ 07/05/25 12:34:15.912
  I0705 12:34:15.912122 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename svcaccounts @ 07/05/25 12:34:15.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:34:15.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:34:15.927
  I0705 12:34:15.956607 21 service_accounts.go:281] created pod pod-service-account-defaultsa
  I0705 12:34:15.956639 21 service_accounts.go:295] pod pod-service-account-defaultsa service account token volume mount: true
  I0705 12:34:15.965896 21 service_accounts.go:281] created pod pod-service-account-mountsa
  I0705 12:34:15.965925 21 service_accounts.go:295] pod pod-service-account-mountsa service account token volume mount: true
  I0705 12:34:15.973867 21 service_accounts.go:281] created pod pod-service-account-nomountsa
  I0705 12:34:15.973897 21 service_accounts.go:295] pod pod-service-account-nomountsa service account token volume mount: false
  I0705 12:34:15.986813 21 service_accounts.go:281] created pod pod-service-account-defaultsa-mountspec
  I0705 12:34:15.986843 21 service_accounts.go:295] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0705 12:34:15.994040 21 service_accounts.go:281] created pod pod-service-account-mountsa-mountspec
  I0705 12:34:15.994085 21 service_accounts.go:295] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0705 12:34:16.007981 21 service_accounts.go:281] created pod pod-service-account-nomountsa-mountspec
  I0705 12:34:16.008012 21 service_accounts.go:295] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0705 12:34:16.017286 21 service_accounts.go:281] created pod pod-service-account-defaultsa-nomountspec
  I0705 12:34:16.017313 21 service_accounts.go:295] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0705 12:34:16.030240 21 service_accounts.go:281] created pod pod-service-account-mountsa-nomountspec
  I0705 12:34:16.030274 21 service_accounts.go:295] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0705 12:34:16.039700 21 service_accounts.go:281] created pod pod-service-account-nomountsa-nomountspec
  I0705 12:34:16.039731 21 service_accounts.go:295] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0705 12:34:16.039834 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-357" for this suite. @ 07/05/25 12:34:16.052
• [0.153 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 07/05/25 12:34:16.065
  I0705 12:34:16.065551 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename projected @ 07/05/25 12:34:16.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:34:16.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:34:16.087
  STEP: Creating configMap with name projected-configmap-test-volume-map-7c8059b4-6190-4d6e-88ea-c64df684aacc @ 07/05/25 12:34:16.091
  STEP: Creating a pod to test consume configMaps @ 07/05/25 12:34:16.098
  STEP: Saw pod success @ 07/05/25 12:34:18.121
  I0705 12:34:18.127841 21 output.go:207] Trying to get logs from node ip-172-31-5-45 pod pod-projected-configmaps-6911665d-b1b2-4f9c-aa71-63cf3662184c container agnhost-container: <nil>
  STEP: delete the pod @ 07/05/25 12:34:18.147
  I0705 12:34:18.168318 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5126" for this suite. @ 07/05/25 12:34:18.173
• [2.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 07/05/25 12:34:18.184
  I0705 12:34:18.184241 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename ingressclass @ 07/05/25 12:34:18.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:34:18.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:34:18.202
  STEP: getting /apis @ 07/05/25 12:34:18.205
  STEP: getting /apis/networking.k8s.io @ 07/05/25 12:34:18.209
  STEP: getting /apis/networking.k8s.iov1 @ 07/05/25 12:34:18.21
  STEP: creating @ 07/05/25 12:34:18.212
  STEP: getting @ 07/05/25 12:34:18.232
  STEP: listing @ 07/05/25 12:34:18.237
  STEP: watching @ 07/05/25 12:34:18.241
  I0705 12:34:18.241182 21 ingressclass.go:348] starting watch
  STEP: patching @ 07/05/25 12:34:18.242
  STEP: updating @ 07/05/25 12:34:18.249
  I0705 12:34:18.255956 21 ingressclass.go:364] waiting for watch events with expected annotations
  I0705 12:34:18.255988 21 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 07/05/25 12:34:18.256
  STEP: deleting a collection @ 07/05/25 12:34:18.273
  I0705 12:34:18.302140 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-5489" for this suite. @ 07/05/25 12:34:18.308
• [0.137 seconds]
------------------------------
SSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 07/05/25 12:34:18.321
  I0705 12:34:18.321673 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename configmap @ 07/05/25 12:34:18.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:34:18.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:34:18.337
  STEP: creating a ConfigMap @ 07/05/25 12:34:18.341
  STEP: fetching the ConfigMap @ 07/05/25 12:34:18.345
  STEP: patching the ConfigMap @ 07/05/25 12:34:18.35
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 07/05/25 12:34:18.357
  STEP: deleting the ConfigMap by collection with a label selector @ 07/05/25 12:34:18.36
  STEP: listing all ConfigMaps in test namespace @ 07/05/25 12:34:18.376
  I0705 12:34:18.382857 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2967" for this suite. @ 07/05/25 12:34:18.409
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 07/05/25 12:34:18.423
  I0705 12:34:18.423024 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename deployment @ 07/05/25 12:34:18.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:34:18.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:34:18.439
  I0705 12:34:18.456439 21 resource.go:81] Pod name rollover-pod: Found 0 pods out of 1
  I0705 12:34:23.466980 21 resource.go:81] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/05/25 12:34:23.467
  I0705 12:34:23.467057 21 deployment.go:930] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I0705 12:34:25.474953 21 deployment.go:940] Creating deployment "test-rollover-deployment"
  I0705 12:34:25.489645 21 deployment.go:953] Make sure deployment "test-rollover-deployment" performs scaling operations
  I0705 12:34:27.503386 21 deployment.go:958] Check revision of new replica set for deployment "test-rollover-deployment"
  I0705 12:34:27.515814 21 deployment.go:962] Ensure that both replica sets have 1 created replica
  I0705 12:34:27.527596 21 deployment.go:971] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0705 12:34:27.538748 21 deployment.go:314] Updating deployment test-rollover-deployment
  I0705 12:34:27.538795 21 deployment.go:980] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I0705 12:34:29.551918 21 deployment.go:985] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0705 12:34:29.563089 21 deployment.go:989] Make sure deployment "test-rollover-deployment" is complete
  I0705 12:34:29.574388 21 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0705 12:34:29.574450 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 5, 12, 34, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 12, 34, 25, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 5, 12, 34, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 12, 34, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0705 12:34:31.587170 21 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0705 12:34:31.587239 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 5, 12, 34, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 12, 34, 25, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 5, 12, 34, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 12, 34, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0705 12:34:33.586184 21 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0705 12:34:33.586242 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 5, 12, 34, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 12, 34, 25, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 5, 12, 34, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 12, 34, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0705 12:34:35.592169 21 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0705 12:34:35.592234 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 5, 12, 34, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 12, 34, 25, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 5, 12, 34, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 12, 34, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0705 12:34:37.585381 21 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0705 12:34:37.585445 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 5, 12, 34, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 12, 34, 25, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 5, 12, 34, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 12, 34, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0705 12:34:39.587708 21 deployment.go:95] 
  I0705 12:34:39.587760 21 deployment.go:993] Ensure that both old replica sets have no replicas
  I0705 12:34:39.606098 21 deployment.go:632] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2321",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4fa8ee11-7468-46e5-bfd9-901c95881517",
      ResourceVersion: (string) (len=5) "14691",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887315665,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887315667,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887315678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887315665,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887315665,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887315678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887315665,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0705 12:34:39.611757 21 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2321",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "97c9f05b-877c-4e79-9d99-17015fad5c14",
      ResourceVersion: (string) (len=5) "14681",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887315667,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "4fa8ee11-7468-46e5-bfd9-901c95881517",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887315667,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 66 61 38 65 65  31 31 2d 37 34 36 38 2d  |\"4fa8ee11-7468-|
              00000120  34 36 65 35 2d 62 66 64  39 2d 39 30 31 63 39 35  |46e5-bfd9-901c95|
              00000130  38 38 31 35 31 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |881517\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887315678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0705 12:34:39.612244 21 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0705 12:34:39.612472 21 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2321",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8407acef-6bcd-49ae-94c1-8f6d0b8a3dff",
      ResourceVersion: (string) (len=5) "14690",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887315658,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "4fa8ee11-7468-46e5-bfd9-901c95881517",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887315658,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887315678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  34 66 61 38 65 65 31 31  2d 37 34 36 38 2d 34 36  |4fa8ee11-7468-46|
              000000c0  65 35 2d 62 66 64 39 2d  39 30 31 63 39 35 38 38  |e5-bfd9-901c9588|
              000000d0  31 35 31 37 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |1517\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887315678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0705 12:34:39.613852 21 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2321",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b04e1dbe-eb48-4904-b820-78908db18112",
      ResourceVersion: (string) (len=5) "14643",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887315665,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "4fa8ee11-7468-46e5-bfd9-901c95881517",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887315667,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 66 61 38 65 65  31 31 2d 37 34 36 38 2d  |\"4fa8ee11-7468-|
              00000120  34 36 65 35 2d 62 66 64  39 2d 39 30 31 63 39 35  |46e5-bfd9-901c95|
              00000130  38 38 31 35 31 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |881517\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887315667,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0705 12:34:39.621590 21 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-pjvlx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-pjvlx",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-2321",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d9509a14-a94b-4d10-a6be-90aa9eda8c69",
      ResourceVersion: (string) (len=5) "14657",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887315667,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "97c9f05b-877c-4e79-9d99-17015fad5c14",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887315667,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 37  63 39 66 30 35 62 2d 38  |d\":\"97c9f05b-8|
              00000090  37 37 63 2d 34 65 37 39  2d 39 64 39 39 2d 31 37  |77c-4e79-9d99-17|
              000000a0  30 31 35 66 61 64 35 63  31 34 5c 22 7d 22 3a 7b  |015fad5c14\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887315668,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 35 34  2e 32 33 38 5c 22 7d 22  |2.168.54.238\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lz4wr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lz4wr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-171",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887315668,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887315667,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887315668,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887315668,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887315667,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.171",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.171"
        }
      },
      PodIP: (string) (len=14) "192.168.54.238",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.54.238"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887315667,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63887315668,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://07a8b704d93a9390375a72e0b1aa6776acd0e2afe79d617ebb4d0ab995a1ca9c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lz4wr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:34:39.622683 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2321" for this suite. @ 07/05/25 12:34:39.628
• [21.216 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1504
  STEP: Creating a kubernetes client @ 07/05/25 12:34:39.639
  I0705 12:34:39.639824 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename services @ 07/05/25 12:34:39.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:34:39.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:34:39.657
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-1637 @ 07/05/25 12:34:39.66
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 07/05/25 12:34:39.687
  STEP: creating service externalsvc in namespace services-1637 @ 07/05/25 12:34:39.687
  I0705 12:34:39.723795 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  STEP: changing the NodePort service to type=ExternalName @ 07/05/25 12:34:41.747
  I0705 12:34:41.784617 21 resource.go:361] Creating new exec pod
  I0705 12:34:43.811476 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-1637 exec execpod8mbsz -- /bin/sh -x -c nslookup nodeport-service.services-1637.svc.cluster.local'
  I0705 12:34:43.929598 21 builder.go:146] stderr: "+ nslookup nodeport-service.services-1637.svc.cluster.local\n"
  I0705 12:34:43.929644 21 builder.go:147] stdout: "Server:\t\t10.152.183.51\nAddress:\t10.152.183.51#53\n\nnodeport-service.services-1637.svc.cluster.local\tcanonical name = externalsvc.services-1637.svc.cluster.local.\nName:\texternalsvc.services-1637.svc.cluster.local\nAddress: 10.152.183.104\n\n"
  I0705 12:34:43.979641 21 service.go:1515] Cleaning up the NodePort to ExternalName test service
  I0705 12:34:43.998758 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1637" for this suite. @ 07/05/25 12:34:44.006
• [4.377 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 07/05/25 12:34:44.017
  I0705 12:34:44.017930 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename projected @ 07/05/25 12:34:44.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:34:44.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:34:44.033
  STEP: Creating configMap with name projected-configmap-test-volume-map-2a5c0b1e-adf6-48c9-8c44-c018a35a3971 @ 07/05/25 12:34:44.036
  STEP: Creating a pod to test consume configMaps @ 07/05/25 12:34:44.041
  STEP: Saw pod success @ 07/05/25 12:34:46.068
  I0705 12:34:46.075009 21 output.go:207] Trying to get logs from node ip-172-31-5-45 pod pod-projected-configmaps-8a7deec0-a3c2-4219-b0da-6305566f6ed9 container agnhost-container: <nil>
  STEP: delete the pod @ 07/05/25 12:34:46.085
  I0705 12:34:46.107670 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-856" for this suite. @ 07/05/25 12:34:46.126
• [2.124 seconds]
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 07/05/25 12:34:46.141
  I0705 12:34:46.141584 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename container-probe @ 07/05/25 12:34:46.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:34:46.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:34:46.156
  STEP: Creating pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792 @ 07/05/25 12:34:46.161
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/05/25 12:34:48.185
  I0705 12:34:48.191707 21 container_probe.go:1748] Initial restart count of pod liveness-302312f5-6f1f-43b0-aa88-49573597286f is 0
  I0705 12:34:48.195341 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:34:50.203114 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:34:52.210325 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:34:54.215376 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:34:56.221634 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:34:58.229461 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:35:00.235139 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:35:02.242482 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:35:04.250373 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:35:06.256004 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:35:08.263426 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:35:10.271018 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:35:12.278355 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:35:14.286113 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:35:16.292336 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:35:18.299173 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:35:20.306888 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:35:22.312106 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:35:24.319276 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:35:26.326895 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:35:28.332363 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:35:30.338156 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:35:32.343843 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:35:34.350122 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:35:36.358386 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:35:38.364258 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:35:40.370707 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:35:42.378543 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:35:44.383590 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:35:46.390057 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:35:48.398244 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:35:50.403114 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:35:52.410345 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:35:54.415837 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:35:56.421761 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:35:58.429353 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:36:00.434485 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:36:02.440456 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:36:04.448028 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:36:06.453500 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:36:08.460556 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:36:10.468305 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:36:12.475287 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:36:14.480407 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:36:16.488502 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:36:18.496299 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:36:20.501326 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:36:22.506953 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:36:24.515049 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:36:26.520242 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:36:28.529333 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:36:30.535036 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:36:32.539495 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:36:34.546203 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:36:36.554088 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:36:38.559037 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:36:40.566167 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:36:42.574091 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:36:44.579849 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:36:46.586395 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:36:48.595246 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:36:50.600928 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:36:52.607663 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:36:54.613569 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:36:56.620580 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:36:58.628232 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:37:00.634226 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:37:02.640890 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:37:04.648296 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:37:06.653320 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:37:08.659849 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:37:10.667409 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:37:12.674244 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:37:14.682343 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:37:16.688638 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:37:18.695238 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:37:20.702456 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:37:22.708300 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:37:24.716002 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:37:26.722531 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:37:28.728802 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:37:30.733691 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:37:32.739871 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:37:34.747532 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:37:36.753905 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:37:38.760193 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:37:40.768416 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:37:42.774168 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:37:44.781471 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:37:46.789985 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:37:48.794913 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:37:50.802123 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:37:52.807822 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:37:54.814230 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:37:56.823632 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:37:58.829340 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:38:00.836341 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:38:02.843628 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:38:04.848663 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:38:06.855611 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:38:08.863269 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:38:10.870202 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:38:12.877800 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:38:14.883409 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:38:16.890261 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:38:18.898025 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:38:20.902606 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:38:22.908809 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:38:24.917030 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:38:26.922390 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:38:28.931299 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:38:30.936431 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:38:32.943177 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:38:34.950263 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:38:36.955816 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:38:38.962973 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:38:40.969425 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:38:42.976608 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:38:44.981736 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  I0705 12:38:46.988728 21 container_probe.go:1758] Get pod liveness-302312f5-6f1f-43b0-aa88-49573597286f in namespace container-probe-792
  STEP: deleting the pod @ 07/05/25 12:38:48.988
  I0705 12:38:49.011420 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-792" for this suite. @ 07/05/25 12:38:49.017
• [242.888 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 07/05/25 12:38:49.029
  I0705 12:38:49.029323 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename containers @ 07/05/25 12:38:49.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:38:49.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:38:49.045
  STEP: Creating a pod to test override arguments @ 07/05/25 12:38:49.049
  STEP: Saw pod success @ 07/05/25 12:38:53.08
  I0705 12:38:53.087432 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod client-containers-ee253b0a-ccd1-4721-a553-27a67d2ca03a container agnhost-container: <nil>
  STEP: delete the pod @ 07/05/25 12:38:53.107
  I0705 12:38:53.128852 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7142" for this suite. @ 07/05/25 12:38:53.134
• [4.117 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 07/05/25 12:38:53.146
  I0705 12:38:53.146504 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename init-container @ 07/05/25 12:38:53.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:38:53.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:38:53.161
  STEP: creating the pod @ 07/05/25 12:38:53.164
  I0705 12:38:53.165009 21 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I0705 12:38:56.824566 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5260" for this suite. @ 07/05/25 12:38:56.831
• [3.695 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 07/05/25 12:38:56.841
  I0705 12:38:56.841790 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename configmap @ 07/05/25 12:38:56.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:38:56.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:38:56.857
  STEP: Creating configMap configmap-5483/configmap-test-8eda535e-8032-4f52-bf47-bd187fa3662c @ 07/05/25 12:38:56.861
  STEP: Creating a pod to test consume configMaps @ 07/05/25 12:38:56.866
  STEP: Saw pod success @ 07/05/25 12:38:58.892
  I0705 12:38:58.897389 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-configmaps-5dfd2b3c-d68f-4413-ac50-fdf682dcf1bc container env-test: <nil>
  STEP: delete the pod @ 07/05/25 12:38:58.911
  I0705 12:38:58.936130 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5483" for this suite. @ 07/05/25 12:38:58.943
• [2.112 seconds]
------------------------------
SS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 07/05/25 12:38:58.953
  I0705 12:38:58.953785 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename podtemplate @ 07/05/25 12:38:58.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:38:58.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:38:58.973
  STEP: Create set of pod templates @ 07/05/25 12:38:58.976
  I0705 12:38:58.983421 21 podtemplates.go:143] created test-podtemplate-1
  I0705 12:38:58.990829 21 podtemplates.go:143] created test-podtemplate-2
  I0705 12:38:58.998159 21 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 07/05/25 12:38:58.998
  STEP: delete collection of pod templates @ 07/05/25 12:38:59.003
  I0705 12:38:59.003852 21 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 07/05/25 12:38:59.032
  I0705 12:38:59.032662 21 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0705 12:38:59.037296 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8811" for this suite. @ 07/05/25 12:38:59.043
• [0.098 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 07/05/25 12:38:59.051
  I0705 12:38:59.051795 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/05/25 12:38:59.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:38:59.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:38:59.069
  STEP: creating a policy with variables @ 07/05/25 12:38:59.08
  STEP: waiting until the marker is denied @ 07/05/25 12:38:59.098
  STEP: testing a replicated Deployment to be allowed @ 07/05/25 12:39:00.007
  STEP: testing a non-replicated ReplicaSet not to be denied @ 07/05/25 12:39:00.027
  I0705 12:39:00.085397 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-5963" for this suite. @ 07/05/25 12:39:00.095
• [1.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:305
  STEP: Creating a kubernetes client @ 07/05/25 12:39:00.108
  I0705 12:39:00.108975 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename svcaccounts @ 07/05/25 12:39:00.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:39:00.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:39:00.124
  STEP: Creating a pod to test service account token:  @ 07/05/25 12:39:00.127
  STEP: Saw pod success @ 07/05/25 12:39:04.153
  I0705 12:39:04.157747 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod test-pod-1c609305-49e4-46b8-819c-4f48837bb766 container agnhost-container: <nil>
  STEP: delete the pod @ 07/05/25 12:39:04.167
  I0705 12:39:04.191582 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7210" for this suite. @ 07/05/25 12:39:04.198
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 07/05/25 12:39:04.208
  I0705 12:39:04.208017 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename statefulset @ 07/05/25 12:39:04.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:39:04.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:39:04.223
  STEP: Creating service test in namespace statefulset-8482 @ 07/05/25 12:39:04.227
  STEP: Creating a new StatefulSet @ 07/05/25 12:39:04.234
  I0705 12:39:04.252906 21 wait.go:44] Found 0 stateful pods, waiting for 3
  I0705 12:39:14.258638 21 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0705 12:39:14.258679 21 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0705 12:39:14.258686 21 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0705 12:39:14.272190 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=statefulset-8482 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0705 12:39:14.373001 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0705 12:39:14.373040 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0705 12:39:14.373051 21 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 07/05/25 12:39:24.387
  I0705 12:39:24.397594 21 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 07/05/25 12:39:24.397
  STEP: Updating Pods in reverse ordinal order @ 07/05/25 12:39:34.413
  I0705 12:39:34.417369 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=statefulset-8482 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0705 12:39:34.510613 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0705 12:39:34.510654 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0705 12:39:34.510664 21 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0705 12:39:44.535556 21 wait.go:158] Waiting for StatefulSet statefulset-8482/ss2 to complete update
  STEP: Rolling back to a previous revision @ 07/05/25 12:39:54.543
  I0705 12:39:54.544020 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=statefulset-8482 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0705 12:39:54.638887 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0705 12:39:54.638940 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0705 12:39:54.638956 21 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0705 12:40:04.669739 21 statefulset.go:2542] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 07/05/25 12:40:14.685
  I0705 12:40:14.691180 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=statefulset-8482 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0705 12:40:14.778649 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0705 12:40:14.778690 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0705 12:40:14.778700 21 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0705 12:40:24.805168 21 statefulset.go:138] Deleting all statefulset in ns statefulset-8482
  I0705 12:40:24.811903 21 rest.go:153] Scaling statefulset ss2 to 0
  I0705 12:40:34.831050 21 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0705 12:40:34.837769 21 rest.go:91] Deleting statefulset ss2
  I0705 12:40:34.862893 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8482" for this suite. @ 07/05/25 12:40:34.87
• [90.672 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 07/05/25 12:40:34.88
  I0705 12:40:34.880119 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename runtimeclass @ 07/05/25 12:40:34.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:40:34.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:40:34.894
  I0705 12:40:34.908355 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5773" for this suite. @ 07/05/25 12:40:34.97
• [0.099 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:129
  STEP: Creating a kubernetes client @ 07/05/25 12:40:34.978
  I0705 12:40:34.978961 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename emptydir @ 07/05/25 12:40:34.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:40:34.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:40:34.994
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 07/05/25 12:40:34.998
  STEP: Saw pod success @ 07/05/25 12:40:39.029
  I0705 12:40:39.036038 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-5ec3f164-05d5-485d-b3c5-848d1e491bc0 container test-container: <nil>
  STEP: delete the pod @ 07/05/25 12:40:39.05
  I0705 12:40:39.070675 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1817" for this suite. @ 07/05/25 12:40:39.078
• [4.110 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1387
  STEP: Creating a kubernetes client @ 07/05/25 12:40:39.089
  I0705 12:40:39.089030 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename services @ 07/05/25 12:40:39.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:40:39.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:40:39.104
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3604 @ 07/05/25 12:40:39.108
  STEP: changing the ExternalName service to type=ClusterIP @ 07/05/25 12:40:39.115
  I0705 12:40:39.155430 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0705 12:40:41.161020 21 resource.go:361] Creating new exec pod
  I0705 12:40:43.195571 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-3604 exec execpodrq8zx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0705 12:40:43.298235 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.209) 80 port [tcp/http] succeeded!\n"
  I0705 12:40:43.298275 21 builder.go:147] stdout: "externalname-service-68576864cc-rb4rz"
  I0705 12:40:43.298408 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-3604 exec execpodrq8zx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.209 80'
  I0705 12:40:43.391287 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.209 80\nConnection to 10.152.183.209 80 port [tcp/http] succeeded!\n"
  I0705 12:40:43.391338 21 builder.go:147] stdout: "externalname-service-68576864cc-j6xfg"
  I0705 12:40:43.391422 21 service.go:1396] Cleaning up the ExternalName to ClusterIP test service
  I0705 12:40:43.420122 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3604" for this suite. @ 07/05/25 12:40:43.428
• [4.350 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 07/05/25 12:40:43.439
  I0705 12:40:43.439182 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/05/25 12:40:43.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:40:43.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:40:43.455
  STEP: getting /apis @ 07/05/25 12:40:43.465
  STEP: getting /apis/admissionregistration.k8s.io @ 07/05/25 12:40:43.469
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 07/05/25 12:40:43.47
  STEP: creating @ 07/05/25 12:40:43.472
  STEP: getting @ 07/05/25 12:40:43.498
  STEP: listing @ 07/05/25 12:40:43.502
  STEP: watching @ 07/05/25 12:40:43.508
  I0705 12:40:43.508830 21 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 07/05/25 12:40:43.51
  STEP: updating @ 07/05/25 12:40:43.515
  I0705 12:40:43.550188 21 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  I0705 12:40:43.550234 21 validatingadmissionpolicy.go:573] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 07/05/25 12:40:43.55
  STEP: patching /status @ 07/05/25 12:40:43.556
  STEP: updating /status @ 07/05/25 12:40:43.563
  STEP: deleting @ 07/05/25 12:40:43.576
  STEP: deleting a collection @ 07/05/25 12:40:43.593
  I0705 12:40:43.629141 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6758" for this suite. @ 07/05/25 12:40:43.634
• [0.207 seconds]
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:108
  STEP: Creating a kubernetes client @ 07/05/25 12:40:43.646
  I0705 12:40:43.646095 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename runtimeclass @ 07/05/25 12:40:43.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:40:43.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:40:43.662
  I0705 12:40:45.706734 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6104" for this suite. @ 07/05/25 12:40:45.714
• [2.079 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2207
  STEP: Creating a kubernetes client @ 07/05/25 12:40:45.725
  I0705 12:40:45.725344 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename services @ 07/05/25 12:40:45.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:40:45.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:40:45.74
  STEP: creating service in namespace services-9153 @ 07/05/25 12:40:45.743
  STEP: creating service affinity-clusterip-transition in namespace services-9153 @ 07/05/25 12:40:45.744
  I0705 12:40:45.777904 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0705 12:40:47.808170 21 resource.go:361] Creating new exec pod
  I0705 12:40:49.839801 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-9153 exec execpod-affinitywjrg9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0705 12:40:49.932858 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.152.183.86) 80 port [tcp/http] succeeded!\n"
  I0705 12:40:49.932903 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0705 12:40:49.932985 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-9153 exec execpod-affinitywjrg9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.86 80'
  I0705 12:40:50.022261 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.86 80\nConnection to 10.152.183.86 80 port [tcp/http] succeeded!\n"
  I0705 12:40:50.022311 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0705 12:40:50.036536 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-9153 exec execpod-affinitywjrg9 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.86:80/ ; done'
  I0705 12:40:50.194753 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.86:80/\n"
  I0705 12:40:50.194847 21 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-zhp7m\naffinity-clusterip-transition-5cffb65545-zkptl\naffinity-clusterip-transition-5cffb65545-zkptl\naffinity-clusterip-transition-5cffb65545-zkptl\naffinity-clusterip-transition-5cffb65545-zkptl\naffinity-clusterip-transition-5cffb65545-zhp7m\naffinity-clusterip-transition-5cffb65545-zkptl\naffinity-clusterip-transition-5cffb65545-zhp7m\naffinity-clusterip-transition-5cffb65545-zhp7m\naffinity-clusterip-transition-5cffb65545-zhp7m\naffinity-clusterip-transition-5cffb65545-zkptl\naffinity-clusterip-transition-5cffb65545-jwdln\naffinity-clusterip-transition-5cffb65545-zhp7m\naffinity-clusterip-transition-5cffb65545-zkptl\naffinity-clusterip-transition-5cffb65545-jwdln\naffinity-clusterip-transition-5cffb65545-zhp7m"
  I0705 12:40:50.194877 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zhp7m
  I0705 12:40:50.194886 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zkptl
  I0705 12:40:50.194895 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zkptl
  I0705 12:40:50.194936 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zkptl
  I0705 12:40:50.194944 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zkptl
  I0705 12:40:50.194980 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zhp7m
  I0705 12:40:50.194990 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zkptl
  I0705 12:40:50.194997 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zhp7m
  I0705 12:40:50.195033 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zhp7m
  I0705 12:40:50.195084 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zhp7m
  I0705 12:40:50.195091 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zkptl
  I0705 12:40:50.195099 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-jwdln
  I0705 12:40:50.195105 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zhp7m
  I0705 12:40:50.195112 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zkptl
  I0705 12:40:50.195119 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-jwdln
  I0705 12:40:50.195126 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zhp7m
  I0705 12:40:50.204799 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-9153 exec execpod-affinitywjrg9 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.86:80/ ; done'
  I0705 12:40:50.369829 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.86:80/\n"
  I0705 12:40:50.369884 21 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-zhp7m\naffinity-clusterip-transition-5cffb65545-zhp7m\naffinity-clusterip-transition-5cffb65545-zhp7m\naffinity-clusterip-transition-5cffb65545-zhp7m\naffinity-clusterip-transition-5cffb65545-zhp7m\naffinity-clusterip-transition-5cffb65545-zhp7m\naffinity-clusterip-transition-5cffb65545-zhp7m\naffinity-clusterip-transition-5cffb65545-zhp7m\naffinity-clusterip-transition-5cffb65545-zhp7m\naffinity-clusterip-transition-5cffb65545-zhp7m\naffinity-clusterip-transition-5cffb65545-zhp7m\naffinity-clusterip-transition-5cffb65545-zhp7m\naffinity-clusterip-transition-5cffb65545-zhp7m\naffinity-clusterip-transition-5cffb65545-zhp7m\naffinity-clusterip-transition-5cffb65545-zhp7m\naffinity-clusterip-transition-5cffb65545-zhp7m"
  I0705 12:40:50.369903 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zhp7m
  I0705 12:40:50.369918 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zhp7m
  I0705 12:40:50.369925 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zhp7m
  I0705 12:40:50.369932 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zhp7m
  I0705 12:40:50.369939 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zhp7m
  I0705 12:40:50.369945 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zhp7m
  I0705 12:40:50.369952 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zhp7m
  I0705 12:40:50.369959 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zhp7m
  I0705 12:40:50.369970 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zhp7m
  I0705 12:40:50.369976 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zhp7m
  I0705 12:40:50.369981 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zhp7m
  I0705 12:40:50.369990 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zhp7m
  I0705 12:40:50.369997 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zhp7m
  I0705 12:40:50.370003 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zhp7m
  I0705 12:40:50.370046 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zhp7m
  I0705 12:40:50.370056 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zhp7m
  I0705 12:40:50.370215 21 service.go:4352] Cleaning up the exec pod
  I0705 12:40:50.444990 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9153" for this suite. @ 07/05/25 12:40:50.455
• [4.737 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:444
  STEP: Creating a kubernetes client @ 07/05/25 12:40:50.463
  I0705 12:40:50.463137 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/05/25 12:40:50.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:40:50.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:40:50.48
  STEP: set up a multi version CRD @ 07/05/25 12:40:50.484
  I0705 12:40:50.484867 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: mark a version not serverd @ 07/05/25 12:40:53.669
  STEP: check the unserved version gets removed @ 07/05/25 12:40:53.684
  STEP: check the other version is not changed @ 07/05/25 12:40:54.396
  I0705 12:40:56.874033 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3340" for this suite. @ 07/05/25 12:40:56.883
• [6.429 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 07/05/25 12:40:56.892
  I0705 12:40:56.892473 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename configmap @ 07/05/25 12:40:56.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:40:56.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:40:56.907
  STEP: Creating configMap with name cm-test-opt-del-104bcb2f-ce5d-45f5-860e-6f2aa3dfc595 @ 07/05/25 12:40:56.984
  STEP: Creating configMap with name cm-test-opt-upd-6299e13a-fb1c-41e1-bba7-484b0f2883ab @ 07/05/25 12:40:56.991
  STEP: Creating the pod @ 07/05/25 12:40:56.996
  STEP: Deleting configmap cm-test-opt-del-104bcb2f-ce5d-45f5-860e-6f2aa3dfc595 @ 07/05/25 12:40:59.062
  STEP: Updating configmap cm-test-opt-upd-6299e13a-fb1c-41e1-bba7-484b0f2883ab @ 07/05/25 12:40:59.073
  STEP: Creating configMap with name cm-test-opt-create-18d1c86d-b0b3-429c-a28a-727825305246 @ 07/05/25 12:40:59.078
  STEP: waiting to observe update in volume @ 07/05/25 12:40:59.084
  I0705 12:42:07.529685 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1941" for this suite. @ 07/05/25 12:42:07.537
• [70.655 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 07/05/25 12:42:07.547
  I0705 12:42:07.547385 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename daemonsets @ 07/05/25 12:42:07.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:42:07.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:42:07.564
  I0705 12:42:07.659631 21 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0705 12:42:07.666645 21 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0705 12:42:07.738606 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:42:07.738648 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:42:07.742200 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0705 12:42:07.742219 21 fixtures.go:131] Node ip-172-31-22-171 is running 0 daemon pod, expected 1
  I0705 12:42:08.675051 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:42:08.675123 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:42:08.682441 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0705 12:42:08.682464 21 fixtures.go:131] Node ip-172-31-22-171 is running 0 daemon pod, expected 1
  I0705 12:42:09.676649 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:42:09.676695 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:42:09.684309 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0705 12:42:09.684342 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I0705 12:42:09.684355 21 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0705 12:42:09.697172 21 daemon_set.go:102] Updating DaemonSet daemon-set
  I0705 12:42:10.728149 21 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0705 12:42:10.741241 21 daemon_set.go:102] Updating DaemonSet daemon-set
  I0705 12:42:10.741281 21 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0705 12:42:10.829558 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:42:10.829601 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:42:11.755657 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:42:11.755704 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:42:12.747816 21 daemon_set.go:1198] Pod daemon-set-vp7ff is not available
  I0705 12:42:12.753715 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 12:42:12.753748 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 07/05/25 12:42:12.765
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5144, will wait for the garbage collector to delete the pods @ 07/05/25 12:42:12.765
  I0705 12:42:12.830911 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.490633ms
  I0705 12:42:12.931245 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.31978ms
  I0705 12:42:14.037517 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0705 12:42:14.037557 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0705 12:42:14.043859 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"17248"},"items":null}

  I0705 12:42:14.048655 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"17248"},"items":null}

  I0705 12:42:14.069662 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5144" for this suite. @ 07/05/25 12:42:14.076
• [6.538 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:239
  STEP: Creating a kubernetes client @ 07/05/25 12:42:14.085
  I0705 12:42:14.085827 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename resourcequota @ 07/05/25 12:42:14.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:42:14.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:42:14.1
  STEP: Counting existing ResourceQuota @ 07/05/25 12:42:14.103
  STEP: Creating a ResourceQuota @ 07/05/25 12:42:19.111
  STEP: Ensuring resource quota status is calculated @ 07/05/25 12:42:19.12
  STEP: Creating a Pod that fits quota @ 07/05/25 12:42:21.125
  STEP: Ensuring ResourceQuota status captures the pod usage @ 07/05/25 12:42:21.147
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 07/05/25 12:42:23.155
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 07/05/25 12:42:23.158
  STEP: Ensuring a pod cannot update its resource requirements @ 07/05/25 12:42:23.16
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 07/05/25 12:42:23.165
  STEP: Deleting the pod @ 07/05/25 12:42:25.17
  STEP: Ensuring resource quota status released the pod usage @ 07/05/25 12:42:25.186
  I0705 12:42:27.194604 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1747" for this suite. @ 07/05/25 12:42:27.201
• [13.126 seconds]
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 07/05/25 12:42:27.212
  I0705 12:42:27.212038 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename configmap @ 07/05/25 12:42:27.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:42:27.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:42:27.227
  STEP: Creating configMap with name configmap-test-upd-6e2f56da-8519-43fd-a273-d20cb530c4b7 @ 07/05/25 12:42:27.302
  STEP: Creating the pod @ 07/05/25 12:42:27.308
  STEP: Updating configmap configmap-test-upd-6e2f56da-8519-43fd-a273-d20cb530c4b7 @ 07/05/25 12:42:29.349
  STEP: waiting to observe update in volume @ 07/05/25 12:42:29.355
  I0705 12:43:59.919674 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2770" for this suite. @ 07/05/25 12:43:59.927
• [92.726 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:863
  STEP: Creating a kubernetes client @ 07/05/25 12:43:59.938
  I0705 12:43:59.938104 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename resourcequota @ 07/05/25 12:43:59.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:43:59.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:43:59.954
  STEP: Creating a ResourceQuota with best effort scope @ 07/05/25 12:43:59.958
  STEP: Ensuring ResourceQuota status is calculated @ 07/05/25 12:43:59.963
  STEP: Creating a ResourceQuota with not best effort scope @ 07/05/25 12:44:01.97
  STEP: Ensuring ResourceQuota status is calculated @ 07/05/25 12:44:01.978
  STEP: Creating a best-effort pod @ 07/05/25 12:44:03.984
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 07/05/25 12:44:04.007
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 07/05/25 12:44:06.015
  STEP: Deleting the pod @ 07/05/25 12:44:08.02
  STEP: Ensuring resource quota status released the pod usage @ 07/05/25 12:44:08.041
  STEP: Creating a not best-effort pod @ 07/05/25 12:44:10.048
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 07/05/25 12:44:10.061
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 07/05/25 12:44:12.066
  STEP: Deleting the pod @ 07/05/25 12:44:14.073
  STEP: Ensuring resource quota status released the pod usage @ 07/05/25 12:44:14.095
  I0705 12:44:16.102437 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3491" for this suite. @ 07/05/25 12:44:16.108
• [16.181 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 07/05/25 12:44:16.119
  I0705 12:44:16.119673 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename webhook @ 07/05/25 12:44:16.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:44:16.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:44:16.137
  STEP: Setting up server cert @ 07/05/25 12:44:16.162
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/05/25 12:44:16.434
  STEP: Deploying the webhook pod @ 07/05/25 12:44:16.44
  STEP: Wait for the deployment to be ready @ 07/05/25 12:44:16.458
  I0705 12:44:16.467913 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/05/25 12:44:18.487
  STEP: Verifying the service has paired with the endpoint @ 07/05/25 12:44:18.508
  I0705 12:44:19.509256 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 07/05/25 12:44:19.515
  STEP: Creating a custom resource definition that should be denied by the webhook @ 07/05/25 12:44:19.533
  I0705 12:44:19.533856 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  I0705 12:44:19.609842 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8874" for this suite. @ 07/05/25 12:44:19.616
  STEP: Destroying namespace "webhook-markers-4704" for this suite. @ 07/05/25 12:44:19.626
• [3.519 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:359
  STEP: Creating a kubernetes client @ 07/05/25 12:44:19.639
  I0705 12:44:19.639229 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/05/25 12:44:19.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:44:19.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:44:19.654
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 07/05/25 12:44:19.658
  I0705 12:44:19.658590 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  I0705 12:44:20.885750 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  I0705 12:44:25.755364 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4905" for this suite. @ 07/05/25 12:44:25.765
• [6.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 07/05/25 12:44:25.778
  I0705 12:44:25.778240 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename replicaset @ 07/05/25 12:44:25.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:44:25.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:44:25.793
  I0705 12:44:25.796488 21 replica_set.go:192] Creating ReplicaSet my-hostname-basic-b2de5964-4f84-4a58-9708-5372e331d619
  I0705 12:44:25.809861 21 resource.go:81] Pod name my-hostname-basic-b2de5964-4f84-4a58-9708-5372e331d619: Found 0 pods out of 1
  I0705 12:44:30.816940 21 resource.go:81] Pod name my-hostname-basic-b2de5964-4f84-4a58-9708-5372e331d619: Found 1 pods out of 1
  I0705 12:44:30.816998 21 replica_set.go:205] Ensuring a pod for ReplicaSet "my-hostname-basic-b2de5964-4f84-4a58-9708-5372e331d619" is running
  I0705 12:44:30.823585 21 replica_set.go:221] Pod "my-hostname-basic-b2de5964-4f84-4a58-9708-5372e331d619-88qjt" is running (conditions: [{Type:PodReadyToStartContainers ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-05 12:44:27 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-05 12:44:25 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-05 12:44:27 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-05 12:44:27 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-05 12:44:25 +0000 UTC Reason: Message:}])
  I0705 12:44:30.823625 21 replica_set.go:229] Trying to dial the pod
  STEP: trying to dial each unique pod @ 07/05/25 12:44:30.823
  I0705 12:44:30.931421 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3471" for this suite. @ 07/05/25 12:44:30.939
• [5.170 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 07/05/25 12:44:30.947
  I0705 12:44:30.947845 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename volumeattachment @ 07/05/25 12:44:30.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:44:30.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:44:30.966
  STEP: Create VolumeAttachment "va-e2e-4shnl" on node "ip-172-31-87-237" @ 07/05/25 12:44:31.041
  STEP: Patch VolumeAttachment "va-e2e-4shnl" on node "ip-172-31-87-237" @ 07/05/25 12:44:31.047
  STEP: Reading "va-e2e-4shnl" Status @ 07/05/25 12:44:31.063
  STEP: Patching "va-e2e-4shnl" Status @ 07/05/25 12:44:31.07
  I0705 12:44:31.075341 21 volume_attachment.go:224] "va-e2e-4shnl" Status.Attached: true
  STEP: Updating "va-e2e-4shnl" Status @ 07/05/25 12:44:31.075
  I0705 12:44:31.088145 21 volume_attachment.go:240] "va-e2e-4shnl" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-4shnl" on node "ip-172-31-87-237" @ 07/05/25 12:44:31.088
  STEP: Confirm deletion of VolumeAttachment "va-e2e-4shnl" on node "ip-172-31-87-237" @ 07/05/25 12:44:31.096
  I0705 12:44:31.102620 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-5474" for this suite. @ 07/05/25 12:44:31.142
• [0.204 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 07/05/25 12:44:31.151
  I0705 12:44:31.151516 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename watch @ 07/05/25 12:44:31.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:44:31.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:44:31.168
  STEP: getting a starting resourceVersion @ 07/05/25 12:44:31.171
  STEP: starting a background goroutine to produce watch events @ 07/05/25 12:44:31.175
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 07/05/25 12:44:31.175
  I0705 12:44:33.960548 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7442" for this suite. @ 07/05/25 12:44:34.01
• [2.910 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 07/05/25 12:44:34.062
  I0705 12:44:34.062269 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename webhook @ 07/05/25 12:44:34.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:44:34.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:44:34.079
  STEP: Setting up server cert @ 07/05/25 12:44:34.1
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/05/25 12:44:34.345
  STEP: Deploying the webhook pod @ 07/05/25 12:44:34.351
  STEP: Wait for the deployment to be ready @ 07/05/25 12:44:34.368
  I0705 12:44:34.377720 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/05/25 12:44:36.393
  STEP: Verifying the service has paired with the endpoint @ 07/05/25 12:44:36.415
  I0705 12:44:37.416032 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 07/05/25 12:44:37.424
  STEP: create a pod that should be denied by the webhook @ 07/05/25 12:44:37.442
  STEP: create a pod that causes the webhook to hang @ 07/05/25 12:44:37.458
  STEP: create a configmap that should be denied by the webhook @ 07/05/25 12:44:47.466
  STEP: create a configmap that should be admitted by the webhook @ 07/05/25 12:44:47.496
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 07/05/25 12:44:47.506
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 07/05/25 12:44:47.52
  STEP: create a namespace that bypass the webhook @ 07/05/25 12:44:47.526
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 07/05/25 12:44:47.538
  I0705 12:44:47.621135 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5283" for this suite. @ 07/05/25 12:44:47.631
  STEP: Destroying namespace "webhook-markers-2246" for this suite. @ 07/05/25 12:44:47.639
  STEP: Destroying namespace "exempted-namespace-435" for this suite. @ 07/05/25 12:44:47.648
• [13.599 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 07/05/25 12:44:47.661
  I0705 12:44:47.661885 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename proxy @ 07/05/25 12:44:47.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:44:47.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:44:47.685
  STEP: starting an echo server on multiple ports @ 07/05/25 12:44:47.707
  I0705 12:44:47.725132 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0705 12:44:49.754304      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0705 12:44:49.754377 21 proxy.go:273] setup took 2.065346435s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 07/05/25 12:44:49.754
  I0705 12:44:49.761389 21 proxy.go:601] (0) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 6.613446ms)
  I0705 12:44:49.762724 21 proxy.go:601] (0) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 8.116396ms)
  I0705 12:44:49.762752 21 proxy.go:601] (0) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 7.900455ms)
  I0705 12:44:49.764191 21 proxy.go:601] (0) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/rewri... (200; 9.383034ms)
  I0705 12:44:49.764449 21 proxy.go:601] (0) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/rewriteme"... (200; 9.578181ms)
  I0705 12:44:49.764452 21 proxy.go:601] (0) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 9.558269ms)
  I0705 12:44:49.764687 21 proxy.go:601] (0) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:460/proxy/: tls baz (200; 10.061671ms)
  I0705 12:44:49.764689 21 proxy.go:601] (0) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/... (200; 9.867279ms)
  I0705 12:44:49.765559 21 proxy.go:601] (0) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname1/proxy/: foo (200; 10.990144ms)
  I0705 12:44:49.765637 21 proxy.go:601] (0) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname2/proxy/: bar (200; 10.954084ms)
  I0705 12:44:49.765809 21 proxy.go:601] (0) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/... (200; 11.275284ms)
  I0705 12:44:49.765828 21 proxy.go:601] (0) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname1/proxy/: foo (200; 11.162758ms)
  I0705 12:44:49.765868 21 proxy.go:601] (0) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname1/proxy/: tls baz (200; 11.088301ms)
  I0705 12:44:49.766782 21 proxy.go:601] (0) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:462/proxy/: tls qux (200; 12.141283ms)
  I0705 12:44:49.766786 21 proxy.go:601] (0) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname2/proxy/: tls qux (200; 12.052019ms)
  I0705 12:44:49.767409 21 proxy.go:601] (0) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname2/proxy/: bar (200; 12.697238ms)
  I0705 12:44:49.773597 21 proxy.go:601] (1) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/rewriteme"... (200; 5.857312ms)
  I0705 12:44:49.773599 21 proxy.go:601] (1) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:460/proxy/: tls baz (200; 6.116025ms)
  I0705 12:44:49.773830 21 proxy.go:601] (1) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:462/proxy/: tls qux (200; 6.294499ms)
  I0705 12:44:49.774058 21 proxy.go:601] (1) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/... (200; 6.367985ms)
  I0705 12:44:49.774191 21 proxy.go:601] (1) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/... (200; 6.559541ms)
  I0705 12:44:49.775124 21 proxy.go:601] (1) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/rewri... (200; 7.686506ms)
  I0705 12:44:49.775314 21 proxy.go:601] (1) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 7.601654ms)
  I0705 12:44:49.775482 21 proxy.go:601] (1) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname1/proxy/: tls baz (200; 7.830198ms)
  I0705 12:44:49.775496 21 proxy.go:601] (1) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 7.745413ms)
  I0705 12:44:49.775920 21 proxy.go:601] (1) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 8.249833ms)
  I0705 12:44:49.775991 21 proxy.go:601] (1) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 8.21263ms)
  I0705 12:44:49.777746 21 proxy.go:601] (1) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname1/proxy/: foo (200; 10.187005ms)
  I0705 12:44:49.777876 21 proxy.go:601] (1) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname2/proxy/: bar (200; 10.272137ms)
  I0705 12:44:49.777976 21 proxy.go:601] (1) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname2/proxy/: bar (200; 10.401543ms)
  I0705 12:44:49.779287 21 proxy.go:601] (1) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname1/proxy/: foo (200; 11.491637ms)
  I0705 12:44:49.779630 21 proxy.go:601] (1) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname2/proxy/: tls qux (200; 12.015691ms)
  I0705 12:44:49.785531 21 proxy.go:601] (2) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/rewri... (200; 5.669727ms)
  I0705 12:44:49.786083 21 proxy.go:601] (2) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 6.09837ms)
  I0705 12:44:49.786091 21 proxy.go:601] (2) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 6.160885ms)
  I0705 12:44:49.786130 21 proxy.go:601] (2) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 6.471385ms)
  I0705 12:44:49.786273 21 proxy.go:601] (2) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname2/proxy/: tls qux (200; 6.539419ms)
  I0705 12:44:49.788295 21 proxy.go:601] (2) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/... (200; 8.430753ms)
  I0705 12:44:49.788315 21 proxy.go:601] (2) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 8.427064ms)
  I0705 12:44:49.788509 21 proxy.go:601] (2) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/rewriteme"... (200; 8.601804ms)
  I0705 12:44:49.788509 21 proxy.go:601] (2) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:462/proxy/: tls qux (200; 8.56157ms)
  I0705 12:44:49.788640 21 proxy.go:601] (2) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/... (200; 8.838663ms)
  I0705 12:44:49.788660 21 proxy.go:601] (2) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:460/proxy/: tls baz (200; 8.676228ms)
  I0705 12:44:49.789162 21 proxy.go:601] (2) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname2/proxy/: bar (200; 9.160003ms)
  I0705 12:44:49.789770 21 proxy.go:601] (2) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname2/proxy/: bar (200; 9.725859ms)
  I0705 12:44:49.789934 21 proxy.go:601] (2) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname1/proxy/: foo (200; 10.162683ms)
  I0705 12:44:49.790924 21 proxy.go:601] (2) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname1/proxy/: tls baz (200; 11.094578ms)
  I0705 12:44:49.791866 21 proxy.go:601] (2) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname1/proxy/: foo (200; 11.837841ms)
  I0705 12:44:49.797759 21 proxy.go:601] (3) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 5.844952ms)
  I0705 12:44:49.798163 21 proxy.go:601] (3) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 5.962669ms)
  I0705 12:44:49.798186 21 proxy.go:601] (3) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 5.826871ms)
  I0705 12:44:49.798447 21 proxy.go:601] (3) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:462/proxy/: tls qux (200; 6.160188ms)
  I0705 12:44:49.799831 21 proxy.go:601] (3) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname2/proxy/: bar (200; 7.50319ms)
  I0705 12:44:49.799850 21 proxy.go:601] (3) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/rewriteme"... (200; 7.632854ms)
  I0705 12:44:49.799866 21 proxy.go:601] (3) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname2/proxy/: bar (200; 7.901431ms)
  I0705 12:44:49.799885 21 proxy.go:601] (3) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 7.621564ms)
  I0705 12:44:49.799899 21 proxy.go:601] (3) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/... (200; 7.790136ms)
  I0705 12:44:49.799987 21 proxy.go:601] (3) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/rewri... (200; 7.830997ms)
  I0705 12:44:49.801831 21 proxy.go:601] (3) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/... (200; 9.650401ms)
  I0705 12:44:49.801827 21 proxy.go:601] (3) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:460/proxy/: tls baz (200; 9.585317ms)
  I0705 12:44:49.802414 21 proxy.go:601] (3) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname1/proxy/: foo (200; 10.070784ms)
  I0705 12:44:49.803653 21 proxy.go:601] (3) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname2/proxy/: tls qux (200; 11.566421ms)
  I0705 12:44:49.803665 21 proxy.go:601] (3) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname1/proxy/: foo (200; 11.341988ms)
  I0705 12:44:49.805786 21 proxy.go:601] (3) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname1/proxy/: tls baz (200; 13.648337ms)
  I0705 12:44:49.822581 21 proxy.go:601] (4) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:460/proxy/: tls baz (200; 16.750327ms)
  I0705 12:44:49.822581 21 proxy.go:601] (4) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:462/proxy/: tls qux (200; 16.652039ms)
  I0705 12:44:49.824480 21 proxy.go:601] (4) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/rewriteme"... (200; 18.427934ms)
  I0705 12:44:49.828134 21 proxy.go:601] (4) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname1/proxy/: foo (200; 22.166263ms)
  I0705 12:44:49.828136 21 proxy.go:601] (4) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/... (200; 22.148341ms)
  I0705 12:44:49.832095 21 proxy.go:601] (4) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/... (200; 25.91064ms)
  I0705 12:44:49.832095 21 proxy.go:601] (4) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 25.932374ms)
  I0705 12:44:49.834716 21 proxy.go:601] (4) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/rewri... (200; 28.827463ms)
  I0705 12:44:49.834710 21 proxy.go:601] (4) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 28.59958ms)
  I0705 12:44:49.838527 21 proxy.go:601] (4) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 32.443071ms)
  I0705 12:44:49.838527 21 proxy.go:601] (4) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname1/proxy/: foo (200; 32.385229ms)
  I0705 12:44:49.838550 21 proxy.go:601] (4) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname1/proxy/: tls baz (200; 32.353457ms)
  I0705 12:44:49.838561 21 proxy.go:601] (4) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname2/proxy/: bar (200; 32.438979ms)
  I0705 12:44:49.838563 21 proxy.go:601] (4) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 32.53737ms)
  I0705 12:44:49.839443 21 proxy.go:601] (4) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname2/proxy/: tls qux (200; 33.225925ms)
  I0705 12:44:49.839787 21 proxy.go:601] (4) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname2/proxy/: bar (200; 33.776104ms)
  I0705 12:44:49.851984 21 proxy.go:601] (5) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 11.918125ms)
  I0705 12:44:49.854569 21 proxy.go:601] (5) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:460/proxy/: tls baz (200; 14.469147ms)
  I0705 12:44:49.856792 21 proxy.go:601] (5) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/rewri... (200; 16.784248ms)
  I0705 12:44:49.856863 21 proxy.go:601] (5) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 16.695831ms)
  I0705 12:44:49.857789 21 proxy.go:601] (5) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname2/proxy/: tls qux (200; 17.842833ms)
  I0705 12:44:49.865937 21 proxy.go:601] (5) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname1/proxy/: foo (200; 26.04537ms)
  I0705 12:44:49.865948 21 proxy.go:601] (5) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 25.921811ms)
  I0705 12:44:49.865964 21 proxy.go:601] (5) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname1/proxy/: foo (200; 25.921909ms)
  I0705 12:44:49.865979 21 proxy.go:601] (5) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/... (200; 26.159419ms)
  I0705 12:44:49.865989 21 proxy.go:601] (5) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 25.842118ms)
  I0705 12:44:49.865992 21 proxy.go:601] (5) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/... (200; 26.027495ms)
  I0705 12:44:49.865999 21 proxy.go:601] (5) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/rewriteme"... (200; 25.875718ms)
  I0705 12:44:49.866004 21 proxy.go:601] (5) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:462/proxy/: tls qux (200; 26.191026ms)
  I0705 12:44:49.867685 21 proxy.go:601] (5) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname2/proxy/: bar (200; 27.764165ms)
  I0705 12:44:49.868625 21 proxy.go:601] (5) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname2/proxy/: bar (200; 28.721474ms)
  I0705 12:44:49.873408 21 proxy.go:601] (5) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname1/proxy/: tls baz (200; 33.422341ms)
  I0705 12:44:49.884664 21 proxy.go:601] (6) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/... (200; 11.051224ms)
  I0705 12:44:49.884861 21 proxy.go:601] (6) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 11.296368ms)
  I0705 12:44:49.884886 21 proxy.go:601] (6) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname2/proxy/: tls qux (200; 11.434294ms)
  I0705 12:44:49.886250 21 proxy.go:601] (6) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:460/proxy/: tls baz (200; 12.445529ms)
  I0705 12:44:49.886821 21 proxy.go:601] (6) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:462/proxy/: tls qux (200; 13.077575ms)
  I0705 12:44:49.887314 21 proxy.go:601] (6) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 13.52917ms)
  I0705 12:44:49.887336 21 proxy.go:601] (6) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 13.613329ms)
  I0705 12:44:49.887347 21 proxy.go:601] (6) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname1/proxy/: foo (200; 13.587818ms)
  I0705 12:44:49.887839 21 proxy.go:601] (6) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/rewriteme"... (200; 14.136199ms)
  I0705 12:44:49.887840 21 proxy.go:601] (6) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 14.157098ms)
  I0705 12:44:49.887908 21 proxy.go:601] (6) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/... (200; 14.245401ms)
  I0705 12:44:49.888390 21 proxy.go:601] (6) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/rewri... (200; 14.749068ms)
  I0705 12:44:49.888841 21 proxy.go:601] (6) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname2/proxy/: bar (200; 15.021089ms)
  I0705 12:44:49.888986 21 proxy.go:601] (6) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname1/proxy/: tls baz (200; 15.364485ms)
  I0705 12:44:49.890173 21 proxy.go:601] (6) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname2/proxy/: bar (200; 16.314374ms)
  I0705 12:44:49.890883 21 proxy.go:601] (6) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname1/proxy/: foo (200; 17.042311ms)
  I0705 12:44:49.896249 21 proxy.go:601] (7) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/... (200; 5.14369ms)
  I0705 12:44:49.896686 21 proxy.go:601] (7) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 5.761946ms)
  I0705 12:44:49.897154 21 proxy.go:601] (7) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/... (200; 5.997799ms)
  I0705 12:44:49.897483 21 proxy.go:601] (7) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 6.302492ms)
  I0705 12:44:49.897994 21 proxy.go:601] (7) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/rewri... (200; 6.855791ms)
  I0705 12:44:49.898352 21 proxy.go:601] (7) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 7.030425ms)
  I0705 12:44:49.898520 21 proxy.go:601] (7) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/rewriteme"... (200; 7.318709ms)
  I0705 12:44:49.898731 21 proxy.go:601] (7) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 7.466344ms)
  I0705 12:44:49.899219 21 proxy.go:601] (7) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname1/proxy/: tls baz (200; 8.099929ms)
  I0705 12:44:49.899843 21 proxy.go:601] (7) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:462/proxy/: tls qux (200; 8.600395ms)
  I0705 12:44:49.899989 21 proxy.go:601] (7) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:460/proxy/: tls baz (200; 8.761326ms)
  I0705 12:44:49.900247 21 proxy.go:601] (7) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname1/proxy/: foo (200; 8.905108ms)
  I0705 12:44:49.900426 21 proxy.go:601] (7) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname2/proxy/: tls qux (200; 9.363748ms)
  I0705 12:44:49.901661 21 proxy.go:601] (7) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname2/proxy/: bar (200; 10.62151ms)
  I0705 12:44:49.902430 21 proxy.go:601] (7) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname2/proxy/: bar (200; 11.068609ms)
  I0705 12:44:49.903804 21 proxy.go:601] (7) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname1/proxy/: foo (200; 12.507263ms)
  I0705 12:44:49.908860 21 proxy.go:601] (8) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/... (200; 4.863041ms)
  I0705 12:44:49.909328 21 proxy.go:601] (8) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/rewriteme"... (200; 5.217702ms)
  I0705 12:44:49.910396 21 proxy.go:601] (8) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:462/proxy/: tls qux (200; 6.207552ms)
  I0705 12:44:49.910397 21 proxy.go:601] (8) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 6.551483ms)
  I0705 12:44:49.910713 21 proxy.go:601] (8) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname2/proxy/: bar (200; 6.813362ms)
  I0705 12:44:49.911303 21 proxy.go:601] (8) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 7.090613ms)
  I0705 12:44:49.911562 21 proxy.go:601] (8) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/rewri... (200; 7.526949ms)
  I0705 12:44:49.911872 21 proxy.go:601] (8) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/... (200; 7.819762ms)
  I0705 12:44:49.912256 21 proxy.go:601] (8) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 8.165423ms)
  I0705 12:44:49.912405 21 proxy.go:601] (8) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 8.254467ms)
  I0705 12:44:49.912497 21 proxy.go:601] (8) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:460/proxy/: tls baz (200; 8.366117ms)
  I0705 12:44:49.912800 21 proxy.go:601] (8) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname1/proxy/: foo (200; 8.631524ms)
  I0705 12:44:49.913257 21 proxy.go:601] (8) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname2/proxy/: tls qux (200; 9.286833ms)
  I0705 12:44:49.914517 21 proxy.go:601] (8) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname1/proxy/: foo (200; 10.289147ms)
  I0705 12:44:49.915027 21 proxy.go:601] (8) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname1/proxy/: tls baz (200; 11.013324ms)
  I0705 12:44:49.916437 21 proxy.go:601] (8) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname2/proxy/: bar (200; 12.191053ms)
  I0705 12:44:49.921645 21 proxy.go:601] (9) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:462/proxy/: tls qux (200; 5.183844ms)
  I0705 12:44:49.922272 21 proxy.go:601] (9) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 5.464838ms)
  I0705 12:44:49.922272 21 proxy.go:601] (9) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/rewriteme"... (200; 5.535668ms)
  I0705 12:44:49.922285 21 proxy.go:601] (9) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:460/proxy/: tls baz (200; 5.40538ms)
  I0705 12:44:49.922880 21 proxy.go:601] (9) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/... (200; 6.362782ms)
  I0705 12:44:49.924652 21 proxy.go:601] (9) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname1/proxy/: tls baz (200; 7.991503ms)
  I0705 12:44:49.924664 21 proxy.go:601] (9) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 7.96052ms)
  I0705 12:44:49.924652 21 proxy.go:601] (9) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 7.793539ms)
  I0705 12:44:49.925907 21 proxy.go:601] (9) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname1/proxy/: foo (200; 9.359521ms)
  I0705 12:44:49.926170 21 proxy.go:601] (9) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname2/proxy/: bar (200; 9.570804ms)
  I0705 12:44:49.926167 21 proxy.go:601] (9) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/rewri... (200; 9.263476ms)
  I0705 12:44:49.926306 21 proxy.go:601] (9) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/... (200; 9.664845ms)
  I0705 12:44:49.926670 21 proxy.go:601] (9) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 9.899399ms)
  I0705 12:44:49.927653 21 proxy.go:601] (9) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname2/proxy/: bar (200; 11.083978ms)
  I0705 12:44:49.928136 21 proxy.go:601] (9) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname2/proxy/: tls qux (200; 11.516252ms)
  I0705 12:44:49.928149 21 proxy.go:601] (9) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname1/proxy/: foo (200; 11.314104ms)
  I0705 12:44:49.933832 21 proxy.go:601] (10) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 5.395292ms)
  I0705 12:44:49.933833 21 proxy.go:601] (10) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 5.661718ms)
  I0705 12:44:49.934378 21 proxy.go:601] (10) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 6.005777ms)
  I0705 12:44:49.934394 21 proxy.go:601] (10) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/rewriteme"... (200; 5.987829ms)
  I0705 12:44:49.935373 21 proxy.go:601] (10) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:460/proxy/: tls baz (200; 6.94966ms)
  I0705 12:44:49.935565 21 proxy.go:601] (10) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 7.178589ms)
  I0705 12:44:49.935753 21 proxy.go:601] (10) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/... (200; 7.397886ms)
  I0705 12:44:49.935811 21 proxy.go:601] (10) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname1/proxy/: foo (200; 7.355394ms)
  I0705 12:44:49.937309 21 proxy.go:601] (10) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/rewri... (200; 8.97302ms)
  I0705 12:44:49.937325 21 proxy.go:601] (10) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname1/proxy/: foo (200; 9.063817ms)
  I0705 12:44:49.937528 21 proxy.go:601] (10) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname2/proxy/: tls qux (200; 9.302669ms)
  I0705 12:44:49.937529 21 proxy.go:601] (10) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:462/proxy/: tls qux (200; 9.056423ms)
  I0705 12:44:49.937545 21 proxy.go:601] (10) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/... (200; 9.247222ms)
  I0705 12:44:49.938087 21 proxy.go:601] (10) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname1/proxy/: tls baz (200; 9.768989ms)
  I0705 12:44:49.939195 21 proxy.go:601] (10) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname2/proxy/: bar (200; 10.703928ms)
  I0705 12:44:49.939895 21 proxy.go:601] (10) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname2/proxy/: bar (200; 11.386447ms)
  I0705 12:44:49.945495 21 proxy.go:601] (11) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 5.508096ms)
  I0705 12:44:49.946158 21 proxy.go:601] (11) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 6.011942ms)
  I0705 12:44:49.946173 21 proxy.go:601] (11) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:460/proxy/: tls baz (200; 5.946113ms)
  I0705 12:44:49.946368 21 proxy.go:601] (11) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 6.181761ms)
  I0705 12:44:49.946656 21 proxy.go:601] (11) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/... (200; 6.713178ms)
  I0705 12:44:49.947974 21 proxy.go:601] (11) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname1/proxy/: foo (200; 7.805192ms)
  I0705 12:44:49.948356 21 proxy.go:601] (11) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:462/proxy/: tls qux (200; 8.43576ms)
  I0705 12:44:49.948361 21 proxy.go:601] (11) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 8.234541ms)
  I0705 12:44:49.949023 21 proxy.go:601] (11) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/rewriteme"... (200; 8.920795ms)
  I0705 12:44:49.949018 21 proxy.go:601] (11) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/... (200; 8.773425ms)
  I0705 12:44:49.949112 21 proxy.go:601] (11) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/rewri... (200; 8.796336ms)
  I0705 12:44:49.950045 21 proxy.go:601] (11) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname2/proxy/: bar (200; 9.761531ms)
  I0705 12:44:49.950594 21 proxy.go:601] (11) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname1/proxy/: tls baz (200; 10.32659ms)
  I0705 12:44:49.951037 21 proxy.go:601] (11) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname1/proxy/: foo (200; 10.983452ms)
  I0705 12:44:49.953344 21 proxy.go:601] (11) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname2/proxy/: bar (200; 13.141874ms)
  I0705 12:44:49.953427 21 proxy.go:601] (11) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname2/proxy/: tls qux (200; 13.092787ms)
  I0705 12:44:49.958119 21 proxy.go:601] (12) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 4.662658ms)
  I0705 12:44:49.959021 21 proxy.go:601] (12) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 5.428396ms)
  I0705 12:44:49.959042 21 proxy.go:601] (12) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 5.283541ms)
  I0705 12:44:49.959289 21 proxy.go:601] (12) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/rewriteme"... (200; 5.493867ms)
  I0705 12:44:49.960962 21 proxy.go:601] (12) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 7.429781ms)
  I0705 12:44:49.961502 21 proxy.go:601] (12) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/rewri... (200; 7.758497ms)
  I0705 12:44:49.961863 21 proxy.go:601] (12) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/... (200; 8.084859ms)
  I0705 12:44:49.961879 21 proxy.go:601] (12) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname1/proxy/: tls baz (200; 8.186055ms)
  I0705 12:44:49.961882 21 proxy.go:601] (12) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:462/proxy/: tls qux (200; 8.20482ms)
  I0705 12:44:49.963000 21 proxy.go:601] (12) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:460/proxy/: tls baz (200; 9.389347ms)
  I0705 12:44:49.963013 21 proxy.go:601] (12) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname2/proxy/: bar (200; 9.554543ms)
  I0705 12:44:49.963246 21 proxy.go:601] (12) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/... (200; 9.589221ms)
  I0705 12:44:49.963982 21 proxy.go:601] (12) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname1/proxy/: foo (200; 10.432508ms)
  I0705 12:44:49.964054 21 proxy.go:601] (12) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname2/proxy/: bar (200; 10.327876ms)
  I0705 12:44:49.964404 21 proxy.go:601] (12) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname1/proxy/: foo (200; 10.695624ms)
  I0705 12:44:49.966680 21 proxy.go:601] (12) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname2/proxy/: tls qux (200; 13.045728ms)
  I0705 12:44:49.973046 21 proxy.go:601] (13) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 6.281089ms)
  I0705 12:44:49.973046 21 proxy.go:601] (13) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/rewriteme"... (200; 6.058748ms)
  I0705 12:44:49.973088 21 proxy.go:601] (13) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 6.271472ms)
  I0705 12:44:49.973157 21 proxy.go:601] (13) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/... (200; 6.22189ms)
  I0705 12:44:49.973172 21 proxy.go:601] (13) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 6.224353ms)
  I0705 12:44:49.974043 21 proxy.go:601] (13) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:462/proxy/: tls qux (200; 7.006374ms)
  I0705 12:44:49.974049 21 proxy.go:601] (13) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:460/proxy/: tls baz (200; 7.049681ms)
  I0705 12:44:49.974202 21 proxy.go:601] (13) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname1/proxy/: foo (200; 7.188685ms)
  I0705 12:44:49.974438 21 proxy.go:601] (13) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 7.471737ms)
  I0705 12:44:49.974746 21 proxy.go:601] (13) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname2/proxy/: bar (200; 8.044306ms)
  I0705 12:44:49.974987 21 proxy.go:601] (13) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/... (200; 8.126332ms)
  I0705 12:44:49.975179 21 proxy.go:601] (13) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/rewri... (200; 8.263539ms)
  I0705 12:44:49.976524 21 proxy.go:601] (13) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname2/proxy/: bar (200; 9.472301ms)
  I0705 12:44:49.977030 21 proxy.go:601] (13) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname1/proxy/: tls baz (200; 10.151641ms)
  I0705 12:44:49.978140 21 proxy.go:601] (13) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname2/proxy/: tls qux (200; 11.30058ms)
  I0705 12:44:49.978649 21 proxy.go:601] (13) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname1/proxy/: foo (200; 11.753898ms)
  I0705 12:44:49.983321 21 proxy.go:601] (14) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:460/proxy/: tls baz (200; 4.593784ms)
  I0705 12:44:49.984263 21 proxy.go:601] (14) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:462/proxy/: tls qux (200; 5.520002ms)
  I0705 12:44:49.984546 21 proxy.go:601] (14) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 5.619165ms)
  I0705 12:44:49.984549 21 proxy.go:601] (14) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/... (200; 5.69599ms)
  I0705 12:44:49.984764 21 proxy.go:601] (14) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 6.072549ms)
  I0705 12:44:49.985254 21 proxy.go:601] (14) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname1/proxy/: foo (200; 6.48969ms)
  I0705 12:44:49.986129 21 proxy.go:601] (14) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/rewri... (200; 7.295919ms)
  I0705 12:44:49.986320 21 proxy.go:601] (14) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/... (200; 7.378213ms)
  I0705 12:44:49.986833 21 proxy.go:601] (14) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/rewriteme"... (200; 7.925119ms)
  I0705 12:44:49.986853 21 proxy.go:601] (14) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 7.984102ms)
  I0705 12:44:49.986890 21 proxy.go:601] (14) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 7.935796ms)
  I0705 12:44:49.987493 21 proxy.go:601] (14) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname2/proxy/: bar (200; 8.684947ms)
  I0705 12:44:49.987685 21 proxy.go:601] (14) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname1/proxy/: tls baz (200; 9.014696ms)
  I0705 12:44:49.989164 21 proxy.go:601] (14) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname2/proxy/: bar (200; 10.374513ms)
  I0705 12:44:49.989528 21 proxy.go:601] (14) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname2/proxy/: tls qux (200; 10.637482ms)
  I0705 12:44:49.991870 21 proxy.go:601] (14) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname1/proxy/: foo (200; 12.894676ms)
  I0705 12:44:49.997631 21 proxy.go:601] (15) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/... (200; 5.627987ms)
  I0705 12:44:49.998413 21 proxy.go:601] (15) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:462/proxy/: tls qux (200; 6.254563ms)
  I0705 12:44:49.998438 21 proxy.go:601] (15) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/... (200; 6.22772ms)
  I0705 12:44:49.998451 21 proxy.go:601] (15) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:460/proxy/: tls baz (200; 6.310368ms)
  I0705 12:44:49.999126 21 proxy.go:601] (15) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 7.018154ms)
  I0705 12:44:49.999210 21 proxy.go:601] (15) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 7.161114ms)
  I0705 12:44:49.999370 21 proxy.go:601] (15) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/rewri... (200; 7.195407ms)
  I0705 12:44:49.999693 21 proxy.go:601] (15) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname1/proxy/: foo (200; 7.605693ms)
  I0705 12:44:49.999698 21 proxy.go:601] (15) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 7.450678ms)
  I0705 12:44:50.000373 21 proxy.go:601] (15) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname2/proxy/: bar (200; 8.448892ms)
  I0705 12:44:50.001863 21 proxy.go:601] (15) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/rewriteme"... (200; 9.594747ms)
  I0705 12:44:50.001862 21 proxy.go:601] (15) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 9.964765ms)
  I0705 12:44:50.001881 21 proxy.go:601] (15) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname2/proxy/: tls qux (200; 9.906566ms)
  I0705 12:44:50.001981 21 proxy.go:601] (15) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname2/proxy/: bar (200; 9.755739ms)
  I0705 12:44:50.003256 21 proxy.go:601] (15) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname1/proxy/: foo (200; 11.065263ms)
  I0705 12:44:50.003255 21 proxy.go:601] (15) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname1/proxy/: tls baz (200; 11.131143ms)
  I0705 12:44:50.008924 21 proxy.go:601] (16) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 5.325428ms)
  I0705 12:44:50.009092 21 proxy.go:601] (16) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 5.788549ms)
  I0705 12:44:50.009743 21 proxy.go:601] (16) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 6.350336ms)
  I0705 12:44:50.009746 21 proxy.go:601] (16) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/rewri... (200; 6.193389ms)
  I0705 12:44:50.010691 21 proxy.go:601] (16) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/... (200; 7.10851ms)
  I0705 12:44:50.010789 21 proxy.go:601] (16) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname2/proxy/: tls qux (200; 7.470594ms)
  I0705 12:44:50.013423 21 proxy.go:601] (16) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:462/proxy/: tls qux (200; 9.992889ms)
  I0705 12:44:50.013436 21 proxy.go:601] (16) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/rewriteme"... (200; 9.800106ms)
  I0705 12:44:50.013466 21 proxy.go:601] (16) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname1/proxy/: foo (200; 10.09307ms)
  I0705 12:44:50.015036 21 proxy.go:601] (16) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/... (200; 11.517714ms)
  I0705 12:44:50.015052 21 proxy.go:601] (16) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 11.551314ms)
  I0705 12:44:50.015036 21 proxy.go:601] (16) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:460/proxy/: tls baz (200; 11.625082ms)
  I0705 12:44:50.015834 21 proxy.go:601] (16) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname1/proxy/: foo (200; 12.387604ms)
  I0705 12:44:50.016146 21 proxy.go:601] (16) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname2/proxy/: bar (200; 12.679861ms)
  I0705 12:44:50.016521 21 proxy.go:601] (16) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname1/proxy/: tls baz (200; 12.985085ms)
  I0705 12:44:50.018149 21 proxy.go:601] (16) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname2/proxy/: bar (200; 14.66656ms)
  I0705 12:44:50.023848 21 proxy.go:601] (17) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 5.59858ms)
  I0705 12:44:50.024207 21 proxy.go:601] (17) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 5.718078ms)
  I0705 12:44:50.024482 21 proxy.go:601] (17) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/rewriteme"... (200; 6.307823ms)
  I0705 12:44:50.024651 21 proxy.go:601] (17) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:462/proxy/: tls qux (200; 6.128406ms)
  I0705 12:44:50.024669 21 proxy.go:601] (17) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname2/proxy/: bar (200; 6.453588ms)
  I0705 12:44:50.025610 21 proxy.go:601] (17) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/rewri... (200; 7.221104ms)
  I0705 12:44:50.025766 21 proxy.go:601] (17) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 7.34179ms)
  I0705 12:44:50.026127 21 proxy.go:601] (17) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/... (200; 7.775719ms)
  I0705 12:44:50.026366 21 proxy.go:601] (17) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:460/proxy/: tls baz (200; 7.859999ms)
  I0705 12:44:50.026428 21 proxy.go:601] (17) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 7.976931ms)
  I0705 12:44:50.026671 21 proxy.go:601] (17) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/... (200; 8.264231ms)
  I0705 12:44:50.027038 21 proxy.go:601] (17) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname2/proxy/: tls qux (200; 8.706431ms)
  I0705 12:44:50.027409 21 proxy.go:601] (17) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname1/proxy/: tls baz (200; 9.036828ms)
  I0705 12:44:50.028265 21 proxy.go:601] (17) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname2/proxy/: bar (200; 9.971318ms)
  I0705 12:44:50.029102 21 proxy.go:601] (17) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname1/proxy/: foo (200; 10.562209ms)
  I0705 12:44:50.029859 21 proxy.go:601] (17) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname1/proxy/: foo (200; 11.395071ms)
  I0705 12:44:50.034856 21 proxy.go:601] (18) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 4.970101ms)
  I0705 12:44:50.035648 21 proxy.go:601] (18) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 5.668501ms)
  I0705 12:44:50.035818 21 proxy.go:601] (18) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/rewriteme"... (200; 5.645639ms)
  I0705 12:44:50.036095 21 proxy.go:601] (18) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/rewri... (200; 5.866636ms)
  I0705 12:44:50.036101 21 proxy.go:601] (18) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 5.967313ms)
  I0705 12:44:50.037454 21 proxy.go:601] (18) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 7.264986ms)
  I0705 12:44:50.037588 21 proxy.go:601] (18) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:462/proxy/: tls qux (200; 7.574004ms)
  I0705 12:44:50.037734 21 proxy.go:601] (18) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:460/proxy/: tls baz (200; 7.737115ms)
  I0705 12:44:50.038303 21 proxy.go:601] (18) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname2/proxy/: tls qux (200; 8.400787ms)
  I0705 12:44:50.038557 21 proxy.go:601] (18) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname1/proxy/: foo (200; 8.60969ms)
  I0705 12:44:50.039108 21 proxy.go:601] (18) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/... (200; 8.951661ms)
  I0705 12:44:50.039136 21 proxy.go:601] (18) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/... (200; 9.02077ms)
  I0705 12:44:50.039937 21 proxy.go:601] (18) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname1/proxy/: foo (200; 9.905281ms)
  I0705 12:44:50.040215 21 proxy.go:601] (18) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname2/proxy/: bar (200; 10.163105ms)
  I0705 12:44:50.040500 21 proxy.go:601] (18) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname1/proxy/: tls baz (200; 10.295061ms)
  I0705 12:44:50.042239 21 proxy.go:601] (18) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname2/proxy/: bar (200; 12.141835ms)
  I0705 12:44:50.047952 21 proxy.go:601] (19) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:460/proxy/: tls baz (200; 5.413334ms)
  I0705 12:44:50.048422 21 proxy.go:601] (19) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 5.978218ms)
  I0705 12:44:50.048446 21 proxy.go:601] (19) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 5.941224ms)
  I0705 12:44:50.049897 21 proxy.go:601] (19) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:160/proxy/: foo (200; 7.472273ms)
  I0705 12:44:50.050038 21 proxy.go:601] (19) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:162/proxy/: bar (200; 7.771102ms)
  I0705 12:44:50.050042 21 proxy.go:601] (19) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname1/proxy/: foo (200; 7.581417ms)
  I0705 12:44:50.050054 21 proxy.go:601] (19) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5/proxy/rewriteme"... (200; 7.64866ms)
  I0705 12:44:50.050220 21 proxy.go:601] (19) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:443/proxy/... (200; 7.851191ms)
  I0705 12:44:50.050473 21 proxy.go:601] (19) /api/v1/namespaces/proxy-4673/services/proxy-service-g2qph:portname2/proxy/: bar (200; 8.151001ms)
  I0705 12:44:50.050665 21 proxy.go:601] (19) /api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/http:proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/... (200; 8.145311ms)
  I0705 12:44:50.050829 21 proxy.go:601] (19) /api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/: <a href="/api/v1/namespaces/proxy-4673/pods/proxy-service-g2qph-6576b8c7c9-4hqb5:1080/proxy/rewri... (200; 8.345992ms)
  I0705 12:44:50.051121 21 proxy.go:601] (19) /api/v1/namespaces/proxy-4673/pods/https:proxy-service-g2qph-6576b8c7c9-4hqb5:462/proxy/: tls qux (200; 8.569406ms)
  I0705 12:44:50.051134 21 proxy.go:601] (19) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname1/proxy/: foo (200; 8.866753ms)
  I0705 12:44:50.051440 21 proxy.go:601] (19) /api/v1/namespaces/proxy-4673/services/http:proxy-service-g2qph:portname2/proxy/: bar (200; 9.100824ms)
  I0705 12:44:50.052578 21 proxy.go:601] (19) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname1/proxy/: tls baz (200; 10.193209ms)
  I0705 12:44:50.053035 21 proxy.go:601] (19) /api/v1/namespaces/proxy-4673/services/https:proxy-service-g2qph:tlsportname2/proxy/: tls qux (200; 10.680267ms)
  I0705 12:44:50.063875 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4673" for this suite. @ 07/05/25 12:44:50.073
• [2.420 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 07/05/25 12:44:50.081
  I0705 12:44:50.081667 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename pods @ 07/05/25 12:44:50.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:44:50.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:44:50.099
  STEP: Saw pod success @ 07/05/25 12:44:54.177
  I0705 12:44:54.184679 21 output.go:207] Trying to get logs from node ip-172-31-5-45 pod client-envvars-0311da2d-1f47-4647-8e8c-74b5a20f22c4 container env3cont: <nil>
  STEP: delete the pod @ 07/05/25 12:44:54.202
  I0705 12:44:54.231662 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-956" for this suite. @ 07/05/25 12:44:54.238
• [4.167 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:255
  STEP: Creating a kubernetes client @ 07/05/25 12:44:54.248
  I0705 12:44:54.248971 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename namespaces @ 07/05/25 12:44:54.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:44:54.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:44:54.264
  STEP: Creating a test namespace @ 07/05/25 12:44:54.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:44:54.281
  STEP: Creating a service in the namespace @ 07/05/25 12:44:54.284
  STEP: Deleting the namespace @ 07/05/25 12:44:54.305
  STEP: Waiting for the namespace to be removed. @ 07/05/25 12:44:54.316
  STEP: Recreating the namespace @ 07/05/25 12:45:00.321
  STEP: Verifying there is no service in the namespace @ 07/05/25 12:45:00.335
  I0705 12:45:00.343589 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-966" for this suite. @ 07/05/25 12:45:00.351
  STEP: Destroying namespace "nsdeletetest-800" for this suite. @ 07/05/25 12:45:00.36
  I0705 12:45:00.366257 21 framework.go:370] Namespace nsdeletetest-800 was already deleted
  STEP: Destroying namespace "nsdeletetest-4269" for this suite. @ 07/05/25 12:45:00.366
• [6.127 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:750
  STEP: Creating a kubernetes client @ 07/05/25 12:45:00.376
  I0705 12:45:00.376676 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename resourcequota @ 07/05/25 12:45:00.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:45:00.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:45:00.391
  STEP: Creating a ResourceQuota with terminating scope @ 07/05/25 12:45:00.395
  STEP: Ensuring ResourceQuota status is calculated @ 07/05/25 12:45:00.401
  STEP: Creating a ResourceQuota with not terminating scope @ 07/05/25 12:45:02.41
  STEP: Ensuring ResourceQuota status is calculated @ 07/05/25 12:45:02.415
  STEP: Creating a long running pod @ 07/05/25 12:45:04.421
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 07/05/25 12:45:04.44
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 07/05/25 12:45:06.445
  STEP: Deleting the pod @ 07/05/25 12:45:08.451
  STEP: Ensuring resource quota status released the pod usage @ 07/05/25 12:45:08.473
  STEP: Creating a terminating pod @ 07/05/25 12:45:10.48
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 07/05/25 12:45:10.491
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 07/05/25 12:45:12.498
  STEP: Deleting the pod @ 07/05/25 12:45:14.505
  STEP: Ensuring resource quota status released the pod usage @ 07/05/25 12:45:14.525
  I0705 12:45:16.531593 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8440" for this suite. @ 07/05/25 12:45:16.538
• [16.172 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 07/05/25 12:45:16.548
  I0705 12:45:16.548708 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename secrets @ 07/05/25 12:45:16.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:45:16.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:45:16.566
  STEP: Creating secret with name secret-test-e01841a0-714c-4172-af6b-71f6a76a83d3 @ 07/05/25 12:45:16.588
  STEP: Creating a pod to test consume secrets @ 07/05/25 12:45:16.594
  STEP: Saw pod success @ 07/05/25 12:45:18.619
  I0705 12:45:18.624593 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-secrets-253bdfd5-a495-4577-9a78-3d80f5c8c68e container secret-volume-test: <nil>
  STEP: delete the pod @ 07/05/25 12:45:18.637
  I0705 12:45:18.663400 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9100" for this suite. @ 07/05/25 12:45:18.669
  STEP: Destroying namespace "secret-namespace-9823" for this suite. @ 07/05/25 12:45:18.681
• [2.143 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 07/05/25 12:45:18.691
  I0705 12:45:18.691359 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename container-probe @ 07/05/25 12:45:18.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:45:18.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:45:18.707
  STEP: Creating pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319 @ 07/05/25 12:45:18.711
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/05/25 12:45:20.736
  I0705 12:45:20.740481 21 container_probe.go:1748] Initial restart count of pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 is 0
  I0705 12:45:20.745826 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:45:22.754388 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:45:24.759907 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:45:26.766269 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:45:28.774876 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:45:30.780943 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:45:32.788198 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:45:34.794139 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:45:36.800180 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:45:38.808275 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:45:40.814182 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:45:40.814220 21 container_probe.go:1762] Restart count of pod container-probe-9319/liveness-7a45f53c-9449-4a88-acfb-deae99a45618 is now 1 (20.073712518s elapsed)
  I0705 12:45:42.821671 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:45:44.827180 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:45:46.832890 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:45:48.840563 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:45:50.847491 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:45:52.855409 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:45:54.860170 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:45:56.867114 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:45:58.873995 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:46:00.880484 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:46:00.880522 21 container_probe.go:1762] Restart count of pod container-probe-9319/liveness-7a45f53c-9449-4a88-acfb-deae99a45618 is now 2 (40.14001375s elapsed)
  I0705 12:46:02.888339 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:46:04.894317 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:46:06.901094 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:46:08.909421 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:46:10.916613 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:46:12.924094 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:46:14.929546 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:46:16.935842 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:46:18.943957 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:46:20.950171 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:46:20.950207 21 container_probe.go:1762] Restart count of pod container-probe-9319/liveness-7a45f53c-9449-4a88-acfb-deae99a45618 is now 3 (1m0.209699343s elapsed)
  I0705 12:46:22.958277 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:46:24.964011 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:46:26.971187 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:46:28.979567 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:46:30.985462 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:46:32.996720 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:46:35.000978 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:46:37.008273 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:46:39.013880 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:46:41.021284 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:46:41.021325 21 container_probe.go:1762] Restart count of pod container-probe-9319/liveness-7a45f53c-9449-4a88-acfb-deae99a45618 is now 4 (1m20.280817289s elapsed)
  I0705 12:46:43.027002 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:46:45.034151 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:46:47.041815 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:46:49.047059 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:46:51.054568 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:46:53.060301 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:46:55.066848 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:46:57.074423 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:46:59.080002 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:47:01.086464 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:47:03.095109 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:47:05.100526 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:47:07.106951 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:47:09.114877 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:47:11.121086 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:47:13.128999 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:47:15.134783 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:47:17.141711 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:47:19.150027 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:47:21.154800 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:47:23.161310 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:47:25.168930 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:47:27.175630 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:47:29.183520 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:47:31.189925 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:47:33.197015 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:47:35.202213 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:47:37.209119 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:47:39.217384 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:47:41.222920 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:47:43.231011 21 container_probe.go:1758] Get pod liveness-7a45f53c-9449-4a88-acfb-deae99a45618 in namespace container-probe-9319
  I0705 12:47:43.231045 21 container_probe.go:1762] Restart count of pod container-probe-9319/liveness-7a45f53c-9449-4a88-acfb-deae99a45618 is now 5 (2m22.490537025s elapsed)
  STEP: deleting the pod @ 07/05/25 12:47:43.231
  I0705 12:47:43.250107 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9319" for this suite. @ 07/05/25 12:47:43.255
• [144.573 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 07/05/25 12:47:43.264
  I0705 12:47:43.264575 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename tables @ 07/05/25 12:47:43.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:47:43.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:47:43.281
  I0705 12:47:43.287895 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-8471" for this suite. @ 07/05/25 12:47:43.356
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:802
  STEP: Creating a kubernetes client @ 07/05/25 12:47:43.369
  I0705 12:47:43.369477 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename job @ 07/05/25 12:47:43.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:47:43.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:47:43.387
  STEP: Creating a job @ 07/05/25 12:47:43.391
  STEP: Ensuring job reaches completions @ 07/05/25 12:47:43.397
  I0705 12:47:53.440168 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6250" for this suite. @ 07/05/25 12:47:53.448
• [10.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 07/05/25 12:47:53.46
  I0705 12:47:53.460835 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename crd-webhook @ 07/05/25 12:47:53.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:47:53.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:47:53.474
  STEP: Setting up server cert @ 07/05/25 12:47:53.477
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/05/25 12:47:53.647
  STEP: Deploying the custom resource conversion webhook pod @ 07/05/25 12:47:53.654
  STEP: Wait for the deployment to be ready @ 07/05/25 12:47:53.67
  I0705 12:47:53.692558 21 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/05/25 12:47:55.708
  STEP: Verifying the service has paired with the endpoint @ 07/05/25 12:47:55.726
  I0705 12:47:56.726432 21 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0705 12:47:56.735333 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Creating a v1 custom resource @ 07/05/25 12:47:59.297
  STEP: v2 custom resource should be converted @ 07/05/25 12:47:59.305
  I0705 12:47:59.893690 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-3500" for this suite. @ 07/05/25 12:47:59.901
• [6.454 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 07/05/25 12:47:59.914
  I0705 12:47:59.914507 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename cronjob @ 07/05/25 12:47:59.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:47:59.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:47:59.929
  STEP: Creating a ReplaceConcurrent cronjob @ 07/05/25 12:47:59.932
  STEP: Ensuring a job is scheduled @ 07/05/25 12:47:59.938
  STEP: Ensuring exactly one is scheduled @ 07/05/25 12:48:01.945
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 07/05/25 12:48:01.951
  STEP: Ensuring the job is replaced with a new one @ 07/05/25 12:48:01.959
  STEP: Removing cronjob @ 07/05/25 12:49:01.968
  I0705 12:49:01.980643 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3050" for this suite. @ 07/05/25 12:49:01.988
• [62.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 07/05/25 12:49:01.995
  I0705 12:49:01.995817 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename pods @ 07/05/25 12:49:01.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:49:02.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:49:02.013
  STEP: creating pod @ 07/05/25 12:49:02.016
  I0705 12:49:04.051508 21 pods.go:83] Pod pod-hostip-1edad589-0abd-4bd8-912c-7b3b881847c4 has hostIP: 172.31.22.171
  I0705 12:49:04.051632 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1573" for this suite. @ 07/05/25 12:49:04.057
• [2.071 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 07/05/25 12:49:04.067
  I0705 12:49:04.067134 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename downward-api @ 07/05/25 12:49:04.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:49:04.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:49:04.086
  STEP: Creating a pod to test downward api env vars @ 07/05/25 12:49:04.09
  STEP: Saw pod success @ 07/05/25 12:49:08.12
  I0705 12:49:08.126004 21 output.go:207] Trying to get logs from node ip-172-31-5-45 pod downward-api-8fb0531e-ad8e-4352-9f2b-1e7dc908d8fe container dapi-container: <nil>
  STEP: delete the pod @ 07/05/25 12:49:08.143
  I0705 12:49:08.168574 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1637" for this suite. @ 07/05/25 12:49:08.174
• [4.117 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:445
  STEP: Creating a kubernetes client @ 07/05/25 12:49:08.184
  I0705 12:49:08.184316 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename sched-pred @ 07/05/25 12:49:08.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:49:08.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:49:08.201
  I0705 12:49:08.204775 21 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0705 12:49:08.282217 21 util.go:390] Waiting for terminating namespaces to be deleted...
  I0705 12:49:08.287183 21 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-22-171 before test
  I0705 12:49:08.295054 21 predicates.go:958] replace-29195328-dlq52 from cronjob-3050 started at 2025-07-05 12:48:00 +0000 UTC (1 container statuses recorded)
  I0705 12:49:08.295107 21 predicates.go:960] 	Container c ready: true, restart count 0
  I0705 12:49:08.295115 21 predicates.go:958] nginx-ingress-controller-kubernetes-worker-4z9gz from ingress-nginx-kubernetes-worker started at 2025-07-05 12:29:50 +0000 UTC (1 container statuses recorded)
  I0705 12:49:08.295119 21 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0705 12:49:08.295125 21 predicates.go:958] calico-node-kbhbz from kube-system started at 2025-07-05 12:09:19 +0000 UTC (1 container statuses recorded)
  I0705 12:49:08.295130 21 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0705 12:49:08.295137 21 predicates.go:958] pod-hostip-1edad589-0abd-4bd8-912c-7b3b881847c4 from pods-1573 started at 2025-07-05 12:49:02 +0000 UTC (1 container statuses recorded)
  I0705 12:49:08.295185 21 predicates.go:960] 	Container test ready: true, restart count 0
  I0705 12:49:08.295190 21 predicates.go:958] sonobuoy from sonobuoy started at 2025-07-05 12:10:10 +0000 UTC (1 container statuses recorded)
  I0705 12:49:08.295195 21 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0705 12:49:08.295206 21 predicates.go:958] sonobuoy-systemd-logs-daemon-set-1b02295658074d3d-zpsp4 from sonobuoy started at 2025-07-05 12:10:12 +0000 UTC (2 container statuses recorded)
  I0705 12:49:08.295210 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0705 12:49:08.295215 21 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0705 12:49:08.295222 21 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-5-45 before test
  I0705 12:49:08.299289 21 predicates.go:958] replace-29195329-sl79s from cronjob-3050 started at 2025-07-05 12:49:00 +0000 UTC (1 container statuses recorded)
  I0705 12:49:08.299312 21 predicates.go:960] 	Container c ready: true, restart count 0
  I0705 12:49:08.299320 21 predicates.go:958] nginx-ingress-controller-kubernetes-worker-tjt2x from ingress-nginx-kubernetes-worker started at 2025-07-05 11:59:03 +0000 UTC (1 container statuses recorded)
  I0705 12:49:08.299326 21 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0705 12:49:08.299331 21 predicates.go:958] calico-node-zxgh6 from kube-system started at 2025-07-05 12:09:49 +0000 UTC (1 container statuses recorded)
  I0705 12:49:08.299336 21 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0705 12:49:08.299343 21 predicates.go:958] sonobuoy-e2e-job-c9143e3b27b14a19 from sonobuoy started at 2025-07-05 12:10:12 +0000 UTC (2 container statuses recorded)
  I0705 12:49:08.299347 21 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0705 12:49:08.299352 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0705 12:49:08.299357 21 predicates.go:958] sonobuoy-systemd-logs-daemon-set-1b02295658074d3d-466tt from sonobuoy started at 2025-07-05 12:10:12 +0000 UTC (2 container statuses recorded)
  I0705 12:49:08.299361 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0705 12:49:08.299366 21 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0705 12:49:08.299373 21 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-90-231 before test
  I0705 12:49:08.306813 21 predicates.go:958] nginx-ingress-controller-kubernetes-worker-lbgkc from ingress-nginx-kubernetes-worker started at 2025-07-05 11:59:03 +0000 UTC (1 container statuses recorded)
  I0705 12:49:08.306833 21 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0705 12:49:08.306839 21 predicates.go:958] calico-node-dlmq7 from kube-system started at 2025-07-05 12:10:03 +0000 UTC (1 container statuses recorded)
  I0705 12:49:08.306844 21 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0705 12:49:08.306869 21 predicates.go:958] coredns-5d946bb58-br4tm from kube-system started at 2025-07-05 11:59:03 +0000 UTC (1 container statuses recorded)
  I0705 12:49:08.306874 21 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0705 12:49:08.306880 21 predicates.go:958] kube-state-metrics-b84f44f45-lv24k from kube-system started at 2025-07-05 11:59:03 +0000 UTC (1 container statuses recorded)
  I0705 12:49:08.306885 21 predicates.go:960] 	Container kube-state-metrics ready: true, restart count 0
  I0705 12:49:08.306890 21 predicates.go:958] metrics-server-v0.7.2-7d878b47f8-gfn72 from kube-system started at 2025-07-05 11:59:03 +0000 UTC (2 container statuses recorded)
  I0705 12:49:08.306895 21 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0705 12:49:08.306901 21 predicates.go:960] 	Container metrics-server-nanny ready: true, restart count 0
  I0705 12:49:08.306906 21 predicates.go:958] dashboard-metrics-scraper-5cf87bc988-2nxl2 from kubernetes-dashboard started at 2025-07-05 11:59:03 +0000 UTC (1 container statuses recorded)
  I0705 12:49:08.306917 21 predicates.go:960] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0705 12:49:08.306922 21 predicates.go:958] kubernetes-dashboard-6858576c98-mrksb from kubernetes-dashboard started at 2025-07-05 11:59:03 +0000 UTC (1 container statuses recorded)
  I0705 12:49:08.306935 21 predicates.go:960] 	Container kubernetes-dashboard ready: true, restart count 0
  I0705 12:49:08.306940 21 predicates.go:958] sonobuoy-systemd-logs-daemon-set-1b02295658074d3d-kxgxg from sonobuoy started at 2025-07-05 12:10:12 +0000 UTC (2 container statuses recorded)
  I0705 12:49:08.306945 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0705 12:49:08.306950 21 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 07/05/25 12:49:08.307
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.184f5bd481832d83], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 07/05/25 12:49:08.34
  I0705 12:49:09.342529 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7806" for this suite. @ 07/05/25 12:49:09.348
• [1.175 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 07/05/25 12:49:09.359
  I0705 12:49:09.359431 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename projected @ 07/05/25 12:49:09.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:49:09.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:49:09.376
  STEP: Creating configMap with name configmap-projected-all-test-volume-c795c9e9-1fa3-4aa0-b0f4-9b2c99952835 @ 07/05/25 12:49:09.379
  STEP: Creating secret with name secret-projected-all-test-volume-1c18c1d4-be85-4d4a-be2e-4fb06eeebf55 @ 07/05/25 12:49:09.385
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 07/05/25 12:49:09.391
  I0705 12:49:09.401736      21 warnings.go:110] "Warning: volume \"podinfo\" (Projected): overlapping paths: \"podname\" (DownwardAPI) with \"podname\" (DownwardAPI)"
  STEP: Saw pod success @ 07/05/25 12:49:13.42
  I0705 12:49:13.425538 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod projected-volume-a0cdb5d5-395e-4209-b089-c46d7d0313ed container projected-all-volume-test: <nil>
  STEP: delete the pod @ 07/05/25 12:49:13.447
  I0705 12:49:13.473300 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6114" for this suite. @ 07/05/25 12:49:13.48
• [4.131 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:89
  STEP: Creating a kubernetes client @ 07/05/25 12:49:13.49
  I0705 12:49:13.490577 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename emptydir @ 07/05/25 12:49:13.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:49:13.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:49:13.506
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 07/05/25 12:49:13.509
  STEP: Saw pod success @ 07/05/25 12:49:17.539
  I0705 12:49:17.544766 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-95324b75-ac31-49e3-8bb5-f0f3ce24606a container test-container: <nil>
  STEP: delete the pod @ 07/05/25 12:49:17.554
  I0705 12:49:17.579586 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9704" for this suite. @ 07/05/25 12:49:17.586
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 07/05/25 12:49:17.595
  I0705 12:49:17.595952 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename container-probe @ 07/05/25 12:49:17.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:49:17.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:49:17.611
  I0705 12:50:17.631981 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8014" for this suite. @ 07/05/25 12:50:17.638
• [60.054 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1464
  STEP: Creating a kubernetes client @ 07/05/25 12:50:17.65
  I0705 12:50:17.650409 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename services @ 07/05/25 12:50:17.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:50:17.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:50:17.665
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-8719 @ 07/05/25 12:50:17.668
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 07/05/25 12:50:17.691
  STEP: creating service externalsvc in namespace services-8719 @ 07/05/25 12:50:17.691
  I0705 12:50:17.721608 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  STEP: changing the ClusterIP service to type=ExternalName @ 07/05/25 12:50:19.745
  I0705 12:50:19.771191 21 resource.go:361] Creating new exec pod
  I0705 12:50:21.795599 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-8719 exec execpodr28fx -- /bin/sh -x -c nslookup clusterip-service.services-8719.svc.cluster.local'
  I0705 12:50:21.918451 21 builder.go:146] stderr: "+ nslookup clusterip-service.services-8719.svc.cluster.local\n"
  I0705 12:50:21.918495 21 builder.go:147] stdout: "Server:\t\t10.152.183.51\nAddress:\t10.152.183.51#53\n\nclusterip-service.services-8719.svc.cluster.local\tcanonical name = externalsvc.services-8719.svc.cluster.local.\nName:\texternalsvc.services-8719.svc.cluster.local\nAddress: 10.152.183.212\n\n"
  I0705 12:50:21.967649 21 service.go:1473] Cleaning up the ClusterIP to ExternalName test service
  I0705 12:50:21.986701 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8719" for this suite. @ 07/05/25 12:50:21.995
• [4.353 seconds]
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:431
  STEP: Creating a kubernetes client @ 07/05/25 12:50:22.003
  I0705 12:50:22.003524 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename security-context-test @ 07/05/25 12:50:22.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:50:22.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:50:22.018
  I0705 12:50:26.051018 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8452" for this suite. @ 07/05/25 12:50:26.059
• [4.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:275
  STEP: Creating a kubernetes client @ 07/05/25 12:50:26.07
  I0705 12:50:26.070530 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename namespaces @ 07/05/25 12:50:26.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:50:26.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:50:26.088
  STEP: creating a Namespace @ 07/05/25 12:50:26.091
  STEP: patching the Namespace @ 07/05/25 12:50:26.105
  STEP: get the Namespace and ensuring it has the label @ 07/05/25 12:50:26.114
  I0705 12:50:26.117309 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5938" for this suite. @ 07/05/25 12:50:26.159
  STEP: Destroying namespace "nspatchtest-e4575767-177d-403f-9dad-84f7cb53c022-5231" for this suite. @ 07/05/25 12:50:26.17
• [0.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 07/05/25 12:50:26.18
  I0705 12:50:26.180660 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename crd-watch @ 07/05/25 12:50:26.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:50:26.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:50:26.194
  I0705 12:50:26.198165 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Creating first CR  @ 07/05/25 12:50:28.737
  I0705 12:50:28.744190 21 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-05T12:50:28Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-05T12:50:28Z]] name:name1 resourceVersion:19809 uid:ecf5b9e7-b22e-49c4-bb74-ceb14b8caf3c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 07/05/25 12:50:38.746
  I0705 12:50:38.752740 21 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-05T12:50:38Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-05T12:50:38Z]] name:name2 resourceVersion:19856 uid:d825e591-9427-4759-8e71-5b66a38bb6b6] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 07/05/25 12:50:48.752
  I0705 12:50:48.761988 21 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-05T12:50:28Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-05T12:50:48Z]] name:name1 resourceVersion:19877 uid:ecf5b9e7-b22e-49c4-bb74-ceb14b8caf3c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 07/05/25 12:50:58.762
  I0705 12:50:58.771391 21 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-05T12:50:38Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-05T12:50:58Z]] name:name2 resourceVersion:19898 uid:d825e591-9427-4759-8e71-5b66a38bb6b6] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 07/05/25 12:51:08.772
  I0705 12:51:08.781688 21 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-05T12:50:28Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-05T12:50:48Z]] name:name1 resourceVersion:19920 uid:ecf5b9e7-b22e-49c4-bb74-ceb14b8caf3c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 07/05/25 12:51:18.785
  I0705 12:51:18.795963 21 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-05T12:50:38Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-05T12:50:58Z]] name:name2 resourceVersion:19944 uid:d825e591-9427-4759-8e71-5b66a38bb6b6] num:map[num1:9223372036854775807 num2:1000000]]}
  I0705 12:51:29.316305 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-3844" for this suite. @ 07/05/25 12:51:29.323
• [63.152 seconds]
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:153
  STEP: Creating a kubernetes client @ 07/05/25 12:51:29.332
  I0705 12:51:29.332546 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename dns @ 07/05/25 12:51:29.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:51:29.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:51:29.349
  STEP: Creating a test headless service @ 07/05/25 12:51:29.353
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8057.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-8057.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8057.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-8057.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8057.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-8057.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8057.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-8057.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8057.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-8057.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8057.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-8057.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 70.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.70_udp@PTR;check="$$(dig +tcp +noall +answer +search 70.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.70_tcp@PTR;sleep 1; done
   @ 07/05/25 12:51:29.388
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8057.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8057.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8057.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8057.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8057.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8057.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8057.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8057.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8057.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8057.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8057.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8057.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 70.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.70_udp@PTR;check="$$(dig +tcp +noall +answer +search 70.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.70_tcp@PTR;sleep 1; done
   @ 07/05/25 12:51:29.388
  STEP: creating a pod to probe DNS @ 07/05/25 12:51:29.388
  STEP: submitting the pod to kubernetes @ 07/05/25 12:51:29.388
  STEP: retrieving the pod @ 07/05/25 12:51:31.418
  STEP: looking for the results for each expected name from probers @ 07/05/25 12:51:31.422
  I0705 12:51:31.430891 21 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-8057.svc.cluster.local from pod dns-8057/dns-test-b0a5378c-8910-4dfd-b6b1-1fb9cde9d49a: the server could not find the requested resource (get pods dns-test-b0a5378c-8910-4dfd-b6b1-1fb9cde9d49a)
  I0705 12:51:31.438197 21 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-8057.svc.cluster.local from pod dns-8057/dns-test-b0a5378c-8910-4dfd-b6b1-1fb9cde9d49a: the server could not find the requested resource (get pods dns-test-b0a5378c-8910-4dfd-b6b1-1fb9cde9d49a)
  I0705 12:51:31.443438 21 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-8057.svc.cluster.local from pod dns-8057/dns-test-b0a5378c-8910-4dfd-b6b1-1fb9cde9d49a: the server could not find the requested resource (get pods dns-test-b0a5378c-8910-4dfd-b6b1-1fb9cde9d49a)
  I0705 12:51:31.450131 21 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-8057.svc.cluster.local from pod dns-8057/dns-test-b0a5378c-8910-4dfd-b6b1-1fb9cde9d49a: the server could not find the requested resource (get pods dns-test-b0a5378c-8910-4dfd-b6b1-1fb9cde9d49a)
  I0705 12:51:31.483162 21 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-8057.svc.cluster.local from pod dns-8057/dns-test-b0a5378c-8910-4dfd-b6b1-1fb9cde9d49a: the server could not find the requested resource (get pods dns-test-b0a5378c-8910-4dfd-b6b1-1fb9cde9d49a)
  I0705 12:51:31.489454 21 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-8057.svc.cluster.local from pod dns-8057/dns-test-b0a5378c-8910-4dfd-b6b1-1fb9cde9d49a: the server could not find the requested resource (get pods dns-test-b0a5378c-8910-4dfd-b6b1-1fb9cde9d49a)
  I0705 12:51:31.496593 21 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8057.svc.cluster.local from pod dns-8057/dns-test-b0a5378c-8910-4dfd-b6b1-1fb9cde9d49a: the server could not find the requested resource (get pods dns-test-b0a5378c-8910-4dfd-b6b1-1fb9cde9d49a)
  I0705 12:51:31.501675 21 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8057.svc.cluster.local from pod dns-8057/dns-test-b0a5378c-8910-4dfd-b6b1-1fb9cde9d49a: the server could not find the requested resource (get pods dns-test-b0a5378c-8910-4dfd-b6b1-1fb9cde9d49a)
  I0705 12:51:31.527599 21 dns_common.go:506] Lookups using dns-8057/dns-test-b0a5378c-8910-4dfd-b6b1-1fb9cde9d49a failed for: [agnhost_udp@dns-test-service.dns-8057.svc.cluster.local agnhost_tcp@dns-test-service.dns-8057.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-8057.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-8057.svc.cluster.local jessie_udp@dns-test-service.dns-8057.svc.cluster.local jessie_tcp@dns-test-service.dns-8057.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-8057.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-8057.svc.cluster.local]

  I0705 12:51:31.542622 21 dns_common.go:514] Pod client logs for webserver: 
  I0705 12:51:31.551476 21 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0705 12:51:31.563006 21 dns_common.go:514] Pod client logs for jessie-querier: 
  I0705 12:51:36.529880 21 dns_common.go:546] DNS probes using dns-8057/dns-test-b0a5378c-8910-4dfd-b6b1-1fb9cde9d49a succeeded

  STEP: deleting the pod @ 07/05/25 12:51:36.53
  STEP: deleting the test service @ 07/05/25 12:51:36.552
  STEP: deleting the test headless service @ 07/05/25 12:51:36.59
  I0705 12:51:36.605157 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8057" for this suite. @ 07/05/25 12:51:36.611
• [7.290 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 07/05/25 12:51:36.622
  I0705 12:51:36.622503 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename configmap @ 07/05/25 12:51:36.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:51:36.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:51:36.639
  STEP: Creating configMap with name configmap-test-volume-e3c46686-951c-4835-bc1f-0a5c2dca0254 @ 07/05/25 12:51:36.645
  STEP: Creating a pod to test consume configMaps @ 07/05/25 12:51:36.651
  STEP: Saw pod success @ 07/05/25 12:51:40.681
  I0705 12:51:40.686482 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-configmaps-d71ab6be-07fb-4250-adde-5a807efdc8f1 container configmap-volume-test: <nil>
  STEP: delete the pod @ 07/05/25 12:51:40.698
  I0705 12:51:40.722868 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9323" for this suite. @ 07/05/25 12:51:40.728
• [4.116 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 07/05/25 12:51:40.738
  I0705 12:51:40.738579 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename csiinlinevolumes @ 07/05/25 12:51:40.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:51:40.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:51:40.755
  STEP: Creating two CSIDrivers @ 07/05/25 12:51:40.759
  STEP: Getting "inline-driver-488aa5c2-ca8f-45ea-8f55-e4c9fbbcc74b" & "inline-driver-a45965ef-00eb-4d68-a71c-24cc63d24d67" @ 07/05/25 12:51:40.781
  STEP: Patching the CSIDriver "inline-driver-a45965ef-00eb-4d68-a71c-24cc63d24d67" @ 07/05/25 12:51:40.792
  STEP: Updating the CSIDriver "inline-driver-a45965ef-00eb-4d68-a71c-24cc63d24d67" @ 07/05/25 12:51:40.797
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-5045" @ 07/05/25 12:51:40.81
  STEP: Deleting CSIDriver "inline-driver-488aa5c2-ca8f-45ea-8f55-e4c9fbbcc74b" @ 07/05/25 12:51:40.814
  STEP: Confirm deletion of CSIDriver "inline-driver-488aa5c2-ca8f-45ea-8f55-e4c9fbbcc74b" @ 07/05/25 12:51:40.825
  STEP: Deleting CSIDriver "inline-driver-a45965ef-00eb-4d68-a71c-24cc63d24d67" via DeleteCollection @ 07/05/25 12:51:40.829
  STEP: Confirm deletion of CSIDriver "inline-driver-a45965ef-00eb-4d68-a71c-24cc63d24d67" @ 07/05/25 12:51:40.844
  I0705 12:51:40.850972 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-5045" for this suite. @ 07/05/25 12:51:40.857
• [0.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1049
  STEP: Creating a kubernetes client @ 07/05/25 12:51:40.868
  I0705 12:51:40.868765 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename statefulset @ 07/05/25 12:51:40.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:51:40.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:51:40.884
  STEP: Creating service test in namespace statefulset-688 @ 07/05/25 12:51:40.887
  STEP: Creating statefulset ss in namespace statefulset-688 @ 07/05/25 12:51:40.899
  I0705 12:51:40.916108 21 wait.go:44] Found 0 stateful pods, waiting for 1
  I0705 12:51:50.914423 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 07/05/25 12:51:50.927
  STEP: Getting /status @ 07/05/25 12:51:50.934
  I0705 12:51:50.940024 21 statefulset.go:1085] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 07/05/25 12:51:50.94
  I0705 12:51:50.954207 21 statefulset.go:1105] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 07/05/25 12:51:50.954
  I0705 12:51:50.956477 21 statefulset.go:1133] Observed &StatefulSet event: ADDED
  I0705 12:51:50.956505 21 statefulset.go:1126] Found Statefulset ss in namespace statefulset-688 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0705 12:51:50.956517 21 statefulset.go:1137] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 07/05/25 12:51:50.956
  I0705 12:51:50.956544 21 statefulset.go:1141] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0705 12:51:50.965186 21 statefulset.go:1145] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 07/05/25 12:51:50.965
  I0705 12:51:50.967169 21 statefulset.go:1170] Observed &StatefulSet event: ADDED
  I0705 12:51:50.967238 21 statefulset.go:138] Deleting all statefulset in ns statefulset-688
  I0705 12:51:50.973103 21 rest.go:153] Scaling statefulset ss to 0
  I0705 12:52:00.992636 21 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0705 12:52:00.998887 21 rest.go:91] Deleting statefulset ss
  I0705 12:52:01.019508 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-688" for this suite. @ 07/05/25 12:52:01.025
• [20.166 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 07/05/25 12:52:01.034
  I0705 12:52:01.034574 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename deployment @ 07/05/25 12:52:01.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:52:01.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:52:01.052
  STEP: creating a Deployment @ 07/05/25 12:52:01.062
  I0705 12:52:01.062413 21 deployment.go:506] Creating simple deployment test-deployment-z8m9r
  I0705 12:52:01.081342 21 deployment.go:223] deployment "test-deployment-z8m9r" doesn't have the required revision set
  STEP: Getting /status @ 07/05/25 12:52:03.105
  I0705 12:52:03.111254 21 deployment.go:531] Deployment test-deployment-z8m9r has Conditions: [{Available True 2025-07-05 12:52:02 +0000 UTC 2025-07-05 12:52:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-07-05 12:52:02 +0000 UTC 2025-07-05 12:52:01 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-z8m9r-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 07/05/25 12:52:03.111
  I0705 12:52:03.123571 21 deployment.go:551] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 5, 12, 52, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 12, 52, 2, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 5, 12, 52, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 12, 52, 1, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-z8m9r-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 07/05/25 12:52:03.123
  I0705 12:52:03.125661 21 deployment.go:578] Observed &Deployment event: ADDED
  I0705 12:52:03.125690 21 deployment.go:574] Observed Deployment test-deployment-z8m9r in namespace deployment-2933 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-05 12:52:01 +0000 UTC 2025-07-05 12:52:01 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-z8m9r-6fb4c74686"}
  I0705 12:52:03.125756 21 deployment.go:578] Observed &Deployment event: MODIFIED
  I0705 12:52:03.125772 21 deployment.go:574] Observed Deployment test-deployment-z8m9r in namespace deployment-2933 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-05 12:52:01 +0000 UTC 2025-07-05 12:52:01 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-z8m9r-6fb4c74686"}
  I0705 12:52:03.125782 21 deployment.go:574] Observed Deployment test-deployment-z8m9r in namespace deployment-2933 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-07-05 12:52:01 +0000 UTC 2025-07-05 12:52:01 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0705 12:52:03.125850 21 deployment.go:578] Observed &Deployment event: MODIFIED
  I0705 12:52:03.125994 21 deployment.go:574] Observed Deployment test-deployment-z8m9r in namespace deployment-2933 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-07-05 12:52:01 +0000 UTC 2025-07-05 12:52:01 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0705 12:52:03.126008 21 deployment.go:574] Observed Deployment test-deployment-z8m9r in namespace deployment-2933 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-05 12:52:01 +0000 UTC 2025-07-05 12:52:01 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-z8m9r-6fb4c74686" is progressing.}
  I0705 12:52:03.126194 21 deployment.go:578] Observed &Deployment event: MODIFIED
  I0705 12:52:03.126211 21 deployment.go:574] Observed Deployment test-deployment-z8m9r in namespace deployment-2933 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-07-05 12:52:02 +0000 UTC 2025-07-05 12:52:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0705 12:52:03.126220 21 deployment.go:574] Observed Deployment test-deployment-z8m9r in namespace deployment-2933 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-05 12:52:02 +0000 UTC 2025-07-05 12:52:01 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-z8m9r-6fb4c74686" has successfully progressed.}
  I0705 12:52:03.126319 21 deployment.go:578] Observed &Deployment event: MODIFIED
  I0705 12:52:03.126377 21 deployment.go:574] Observed Deployment test-deployment-z8m9r in namespace deployment-2933 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-07-05 12:52:02 +0000 UTC 2025-07-05 12:52:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0705 12:52:03.126389 21 deployment.go:574] Observed Deployment test-deployment-z8m9r in namespace deployment-2933 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-05 12:52:02 +0000 UTC 2025-07-05 12:52:01 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-z8m9r-6fb4c74686" has successfully progressed.}
  I0705 12:52:03.126400 21 deployment.go:571] Found Deployment test-deployment-z8m9r in namespace deployment-2933 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0705 12:52:03.126411 21 deployment.go:582] Deployment test-deployment-z8m9r has an updated status
  STEP: patching the Statefulset Status @ 07/05/25 12:52:03.126
  I0705 12:52:03.126529 21 deployment.go:586] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0705 12:52:03.135661 21 deployment.go:590] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 07/05/25 12:52:03.135
  I0705 12:52:03.137435 21 deployment.go:615] Observed &Deployment event: ADDED
  I0705 12:52:03.137461 21 deployment.go:611] Observed deployment test-deployment-z8m9r in namespace deployment-2933 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-05 12:52:01 +0000 UTC 2025-07-05 12:52:01 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-z8m9r-6fb4c74686"}
  I0705 12:52:03.137526 21 deployment.go:615] Observed &Deployment event: MODIFIED
  I0705 12:52:03.137542 21 deployment.go:611] Observed deployment test-deployment-z8m9r in namespace deployment-2933 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-05 12:52:01 +0000 UTC 2025-07-05 12:52:01 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-z8m9r-6fb4c74686"}
  I0705 12:52:03.137551 21 deployment.go:611] Observed deployment test-deployment-z8m9r in namespace deployment-2933 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-07-05 12:52:01 +0000 UTC 2025-07-05 12:52:01 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0705 12:52:03.137621 21 deployment.go:615] Observed &Deployment event: MODIFIED
  I0705 12:52:03.137725 21 deployment.go:611] Observed deployment test-deployment-z8m9r in namespace deployment-2933 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-07-05 12:52:01 +0000 UTC 2025-07-05 12:52:01 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0705 12:52:03.137748 21 deployment.go:611] Observed deployment test-deployment-z8m9r in namespace deployment-2933 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-05 12:52:01 +0000 UTC 2025-07-05 12:52:01 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-z8m9r-6fb4c74686" is progressing.}
  I0705 12:52:03.137864 21 deployment.go:615] Observed &Deployment event: MODIFIED
  I0705 12:52:03.137882 21 deployment.go:611] Observed deployment test-deployment-z8m9r in namespace deployment-2933 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-07-05 12:52:02 +0000 UTC 2025-07-05 12:52:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0705 12:52:03.137898 21 deployment.go:611] Observed deployment test-deployment-z8m9r in namespace deployment-2933 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-05 12:52:02 +0000 UTC 2025-07-05 12:52:01 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-z8m9r-6fb4c74686" has successfully progressed.}
  I0705 12:52:03.137963 21 deployment.go:615] Observed &Deployment event: MODIFIED
  I0705 12:52:03.137976 21 deployment.go:611] Observed deployment test-deployment-z8m9r in namespace deployment-2933 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-07-05 12:52:02 +0000 UTC 2025-07-05 12:52:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0705 12:52:03.137984 21 deployment.go:611] Observed deployment test-deployment-z8m9r in namespace deployment-2933 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-05 12:52:02 +0000 UTC 2025-07-05 12:52:01 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-z8m9r-6fb4c74686" has successfully progressed.}
  I0705 12:52:03.137992 21 deployment.go:611] Observed deployment test-deployment-z8m9r in namespace deployment-2933 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0705 12:52:03.138057 21 deployment.go:615] Observed &Deployment event: MODIFIED
  I0705 12:52:03.138112 21 deployment.go:608] Found deployment test-deployment-z8m9r in namespace deployment-2933 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0705 12:52:03.138133 21 deployment.go:619] Deployment test-deployment-z8m9r has a patched status
  I0705 12:52:03.144908 21 deployment.go:632] Deployment "test-deployment-z8m9r":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-z8m9r",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2933",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8d394c21-3800-491c-9762-843439975d6d",
      ResourceVersion: (string) (len=5) "20260",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887316721,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887316721,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887316723,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887316723,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887316723,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887316723,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-z8m9r-6fb4c74686\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0705 12:52:03.196305 21 deployment.go:40] New ReplicaSet "test-deployment-z8m9r-6fb4c74686" of Deployment "test-deployment-z8m9r":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-z8m9r-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2933",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8c08a5e7-e2d2-490d-a2ed-e08653a389ea",
      ResourceVersion: (string) (len=5) "20254",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887316721,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-z8m9r",
          UID: (types.UID) (len=36) "8d394c21-3800-491c-9762-843439975d6d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887316721,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 38 64 33  |k:{\"uid\":\"8d3|
              00000120  39 34 63 32 31 2d 33 38  30 30 2d 34 39 31 63 2d  |94c21-3800-491c-|
              00000130  39 37 36 32 2d 38 34 33  34 33 39 39 37 35 64 36  |9762-843439975d6|
              00000140  64 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |d\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887316722,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0705 12:52:03.204901 21 deployment.go:68] Pod "test-deployment-z8m9r-6fb4c74686-9jts7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-z8m9r-6fb4c74686-9jts7",
      GenerateName: (string) (len=33) "test-deployment-z8m9r-6fb4c74686-",
      Namespace: (string) (len=15) "deployment-2933",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3967e333-3f5c-4605-9925-9111eab895e3",
      ResourceVersion: (string) (len=5) "20253",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887316721,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-z8m9r-6fb4c74686",
          UID: (types.UID) (len=36) "8c08a5e7-e2d2-490d-a2ed-e08653a389ea",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887316721,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 38 63 30 38 61 35 65  37 2d 65 32 64 32 2d 34  |"8c08a5e7-e2d2-4|
              000000a0  39 30 64 2d 61 32 65 64  2d 65 30 38 36 35 33 61  |90d-a2ed-e08653a|
              000000b0  33 38 39 65 61 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |389ea\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887316721,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 35 34  2e 32 31 39 5c 22 7d 22  |2.168.54.219\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r6tt4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r6tt4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-171",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887316721,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887316721,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887316721,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887316721,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887316721,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.171",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.171"
        }
      },
      PodIP: (string) (len=14) "192.168.54.219",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.54.219"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887316721,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63887316721,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://cba4b9d077e56eb642db9fa7ba9b406ba4f5fe569a08569647743c8d040e8095",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-r6tt4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 12:52:03.206136 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2933" for this suite. @ 07/05/25 12:52:03.213
• [2.190 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 07/05/25 12:52:03.224
  I0705 12:52:03.224339 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename downward-api @ 07/05/25 12:52:03.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:52:03.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:52:03.239
  STEP: Creating the pod @ 07/05/25 12:52:03.242
  I0705 12:52:05.800125 21 pod_client.go:173] Successfully updated pod "annotationupdate4fb7c373-7343-4c66-b280-3395550c20eb"
  I0705 12:52:09.833297 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-97" for this suite. @ 07/05/25 12:52:09.84
• [6.626 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 07/05/25 12:52:09.85
  I0705 12:52:09.850406 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/05/25 12:52:09.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:52:09.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:52:09.866
  STEP: creating the policy @ 07/05/25 12:52:09.878
  STEP: waiting until the marker is denied @ 07/05/25 12:52:09.892
  STEP: testing a replicated Deployment to be allowed @ 07/05/25 12:52:10.501
  STEP: testing a non-replicated ReplicaSet not to be denied @ 07/05/25 12:52:10.524
  I0705 12:52:10.580005 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-1492" for this suite. @ 07/05/25 12:52:10.587
• [0.750 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 07/05/25 12:52:10.6
  I0705 12:52:10.600080 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename projected @ 07/05/25 12:52:10.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:52:10.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:52:10.618
  STEP: Creating projection with secret that has name projected-secret-test-map-81f4bbda-2608-495e-a457-ae9f22e869e5 @ 07/05/25 12:52:10.622
  STEP: Creating a pod to test consume secrets @ 07/05/25 12:52:10.628
  STEP: Saw pod success @ 07/05/25 12:52:14.664
  I0705 12:52:14.670590 21 output.go:207] Trying to get logs from node ip-172-31-5-45 pod pod-projected-secrets-80bfaf27-2e02-4525-b5cc-f10d6655e931 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/05/25 12:52:14.693
  I0705 12:52:14.715114 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-890" for this suite. @ 07/05/25 12:52:14.723
• [4.131 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:706
  STEP: Creating a kubernetes client @ 07/05/25 12:52:14.731
  I0705 12:52:14.731279 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename sched-pred @ 07/05/25 12:52:14.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:52:14.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:52:14.749
  I0705 12:52:14.752889 21 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0705 12:52:14.827894 21 util.go:390] Waiting for terminating namespaces to be deleted...
  I0705 12:52:14.833926 21 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-22-171 before test
  I0705 12:52:14.841284 21 predicates.go:958] annotationupdate4fb7c373-7343-4c66-b280-3395550c20eb from downward-api-97 started at 2025-07-05 12:52:03 +0000 UTC (1 container statuses recorded)
  I0705 12:52:14.841313 21 predicates.go:960] 	Container client-container ready: true, restart count 0
  I0705 12:52:14.841353 21 predicates.go:958] nginx-ingress-controller-kubernetes-worker-4z9gz from ingress-nginx-kubernetes-worker started at 2025-07-05 12:29:50 +0000 UTC (1 container statuses recorded)
  I0705 12:52:14.841372 21 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0705 12:52:14.841380 21 predicates.go:958] calico-node-kbhbz from kube-system started at 2025-07-05 12:09:19 +0000 UTC (1 container statuses recorded)
  I0705 12:52:14.841385 21 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0705 12:52:14.841390 21 predicates.go:958] sonobuoy from sonobuoy started at 2025-07-05 12:10:10 +0000 UTC (1 container statuses recorded)
  I0705 12:52:14.841395 21 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0705 12:52:14.841401 21 predicates.go:958] sonobuoy-systemd-logs-daemon-set-1b02295658074d3d-zpsp4 from sonobuoy started at 2025-07-05 12:10:12 +0000 UTC (2 container statuses recorded)
  I0705 12:52:14.841406 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0705 12:52:14.841424 21 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0705 12:52:14.841432 21 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-5-45 before test
  I0705 12:52:14.848136 21 predicates.go:958] nginx-ingress-controller-kubernetes-worker-tjt2x from ingress-nginx-kubernetes-worker started at 2025-07-05 11:59:03 +0000 UTC (1 container statuses recorded)
  I0705 12:52:14.848290 21 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0705 12:52:14.848435 21 predicates.go:958] calico-node-zxgh6 from kube-system started at 2025-07-05 12:09:49 +0000 UTC (1 container statuses recorded)
  I0705 12:52:14.848500 21 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0705 12:52:14.848566 21 predicates.go:958] sonobuoy-e2e-job-c9143e3b27b14a19 from sonobuoy started at 2025-07-05 12:10:12 +0000 UTC (2 container statuses recorded)
  I0705 12:52:14.848688 21 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0705 12:52:14.848695 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0705 12:52:14.848702 21 predicates.go:958] sonobuoy-systemd-logs-daemon-set-1b02295658074d3d-466tt from sonobuoy started at 2025-07-05 12:10:12 +0000 UTC (2 container statuses recorded)
  I0705 12:52:14.848708 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0705 12:52:14.848714 21 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0705 12:52:14.848832 21 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-90-231 before test
  I0705 12:52:14.853354 21 predicates.go:958] nginx-ingress-controller-kubernetes-worker-lbgkc from ingress-nginx-kubernetes-worker started at 2025-07-05 11:59:03 +0000 UTC (1 container statuses recorded)
  I0705 12:52:14.853380 21 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0705 12:52:14.853389 21 predicates.go:958] calico-node-dlmq7 from kube-system started at 2025-07-05 12:10:03 +0000 UTC (1 container statuses recorded)
  I0705 12:52:14.853394 21 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0705 12:52:14.853400 21 predicates.go:958] coredns-5d946bb58-br4tm from kube-system started at 2025-07-05 11:59:03 +0000 UTC (1 container statuses recorded)
  I0705 12:52:14.853407 21 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0705 12:52:14.853414 21 predicates.go:958] kube-state-metrics-b84f44f45-lv24k from kube-system started at 2025-07-05 11:59:03 +0000 UTC (1 container statuses recorded)
  I0705 12:52:14.853419 21 predicates.go:960] 	Container kube-state-metrics ready: true, restart count 0
  I0705 12:52:14.853425 21 predicates.go:958] metrics-server-v0.7.2-7d878b47f8-gfn72 from kube-system started at 2025-07-05 11:59:03 +0000 UTC (2 container statuses recorded)
  I0705 12:52:14.853431 21 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0705 12:52:14.853435 21 predicates.go:960] 	Container metrics-server-nanny ready: true, restart count 0
  I0705 12:52:14.853442 21 predicates.go:958] dashboard-metrics-scraper-5cf87bc988-2nxl2 from kubernetes-dashboard started at 2025-07-05 11:59:03 +0000 UTC (1 container statuses recorded)
  I0705 12:52:14.853447 21 predicates.go:960] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0705 12:52:14.853453 21 predicates.go:958] kubernetes-dashboard-6858576c98-mrksb from kubernetes-dashboard started at 2025-07-05 11:59:03 +0000 UTC (1 container statuses recorded)
  I0705 12:52:14.853458 21 predicates.go:960] 	Container kubernetes-dashboard ready: true, restart count 0
  I0705 12:52:14.853463 21 predicates.go:958] sonobuoy-systemd-logs-daemon-set-1b02295658074d3d-kxgxg from sonobuoy started at 2025-07-05 12:10:12 +0000 UTC (2 container statuses recorded)
  I0705 12:52:14.853468 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0705 12:52:14.853473 21 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/05/25 12:52:14.853
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/05/25 12:52:16.881
  STEP: Trying to apply a random label on the found node. @ 07/05/25 12:52:16.905
  STEP: verifying the node has the label kubernetes.io/e2e-f2a99026-c248-4e4e-8052-e63fe3b5841b 95 @ 07/05/25 12:52:16.916
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 07/05/25 12:52:16.919
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.5.45 on the node which pod4 resides and expect not scheduled @ 07/05/25 12:52:18.942
  STEP: removing the label kubernetes.io/e2e-f2a99026-c248-4e4e-8052-e63fe3b5841b off the node ip-172-31-5-45 @ 07/05/25 12:57:18.953
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-f2a99026-c248-4e4e-8052-e63fe3b5841b @ 07/05/25 12:57:18.972
  I0705 12:57:18.976640 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8714" for this suite. @ 07/05/25 12:57:18.986
• [304.264 seconds]
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 07/05/25 12:57:18.995
  I0705 12:57:18.995580 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename disruption @ 07/05/25 12:57:18.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:57:19.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:57:19.014
  STEP: Creating a kubernetes client @ 07/05/25 12:57:19.018
  I0705 12:57:19.019226 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename disruption-2 @ 07/05/25 12:57:19.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:57:19.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:57:19.037
  STEP: Waiting for the pdb to be processed @ 07/05/25 12:57:19.048
  STEP: Waiting for the pdb to be processed @ 07/05/25 12:57:21.061
  STEP: Waiting for the pdb to be processed @ 07/05/25 12:57:21.075
  STEP: listing a collection of PDBs across all namespaces @ 07/05/25 12:57:23.083
  STEP: listing a collection of PDBs in namespace disruption-8939 @ 07/05/25 12:57:23.088
  STEP: deleting a collection of PDBs @ 07/05/25 12:57:23.094
  STEP: Waiting for the PDB collection to be deleted @ 07/05/25 12:57:23.118
  I0705 12:57:23.123745 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-8900" for this suite. @ 07/05/25 12:57:23.131
  I0705 12:57:23.140468 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8939" for this suite. @ 07/05/25 12:57:23.232
• [4.247 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 07/05/25 12:57:23.244
  I0705 12:57:23.244141 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename sysctl @ 07/05/25 12:57:23.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:57:23.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:57:23.26
  STEP: Creating a pod with one valid and two invalid sysctls @ 07/05/25 12:57:23.265
  I0705 12:57:23.274520 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-6791" for this suite. @ 07/05/25 12:57:23.333
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 07/05/25 12:57:23.343
  I0705 12:57:23.343040 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename downward-api @ 07/05/25 12:57:23.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:57:23.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:57:23.374
  STEP: Creating a pod to test downward API volume plugin @ 07/05/25 12:57:23.381
  STEP: Saw pod success @ 07/05/25 12:57:27.417
  I0705 12:57:27.423353 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod downwardapi-volume-be3b97f5-5268-4782-81d1-63f3e3de2c22 container client-container: <nil>
  STEP: delete the pod @ 07/05/25 12:57:27.445
  I0705 12:57:27.470538 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-976" for this suite. @ 07/05/25 12:57:27.477
• [4.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 07/05/25 12:57:27.487
  I0705 12:57:27.487537 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename container-probe @ 07/05/25 12:57:27.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 12:57:27.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 12:57:27.504
  STEP: Creating pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393 @ 07/05/25 12:57:27.507
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/05/25 12:57:29.531
  I0705 12:57:29.536037 21 container_probe.go:1748] Initial restart count of pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 is 0
  I0705 12:57:29.542020 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:57:31.548446 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:57:33.556108 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:57:35.561375 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:57:37.567962 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:57:39.575588 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:57:41.580872 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:57:43.587019 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:57:45.594371 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:57:47.599102 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:57:49.606157 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:57:51.611542 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:57:53.618818 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:57:55.625875 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:57:57.630849 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:57:59.637871 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:58:01.645431 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:58:03.651269 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:58:05.658690 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:58:07.667216 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:58:09.672179 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:58:11.680333 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:58:13.686156 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:58:15.693989 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:58:17.699525 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:58:19.706961 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:58:21.715439 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:58:23.719910 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:58:25.726394 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:58:27.733784 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:58:29.740223 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:58:31.746739 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:58:33.753720 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:58:35.761186 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:58:37.768651 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:58:39.774413 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:58:41.781631 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:58:43.786660 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:58:45.793744 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:58:47.801059 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:58:49.806950 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:58:51.811811 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:58:53.817730 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:58:55.825334 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:58:57.830415 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:58:59.837388 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:59:01.845136 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:59:03.852551 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:59:05.859060 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:59:07.866926 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:59:09.874931 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:59:11.883294 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:59:13.888971 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:59:15.895550 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:59:17.902979 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:59:19.908223 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:59:21.914792 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:59:23.921856 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:59:25.926712 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:59:27.933231 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:59:29.940614 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:59:31.947454 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:59:33.954664 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:59:35.959736 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:59:37.966174 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:59:39.973401 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:59:41.978375 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:59:43.984681 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:59:45.992084 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:59:47.998055 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:59:50.004255 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:59:52.011013 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:59:54.016848 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:59:56.023258 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 12:59:58.032056 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:00:00.037207 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:00:02.044303 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:00:04.052339 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:00:06.057894 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:00:08.064637 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:00:10.072877 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:00:12.079158 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:00:14.087396 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:00:16.092935 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:00:18.100590 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:00:20.108250 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:00:22.114338 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:00:24.121435 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:00:26.129380 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:00:28.135175 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:00:30.141604 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:00:32.147109 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:00:34.154559 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:00:36.162152 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:00:38.169802 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:00:40.176912 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:00:42.185295 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:00:44.190404 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:00:46.197633 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:00:48.205354 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:00:50.210958 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:00:52.218322 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:00:54.224098 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:00:56.231172 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:00:58.236947 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:01:00.242768 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:01:02.250435 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:01:04.256044 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:01:06.262790 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:01:08.271102 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:01:10.277336 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:01:12.285150 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:01:14.290919 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:01:16.296468 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:01:18.303946 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:01:20.309536 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:01:22.316622 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:01:24.324963 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:01:26.330338 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  I0705 13:01:28.337633 21 container_probe.go:1758] Get pod test-webserver-7f3f78e7-e0a0-45ec-83de-ad4c1304a2c3 in namespace container-probe-7393
  STEP: deleting the pod @ 07/05/25 13:01:30.337
  I0705 13:01:30.361214 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7393" for this suite. @ 07/05/25 13:01:30.369
• [242.892 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:388
  STEP: Creating a kubernetes client @ 07/05/25 13:01:30.379
  I0705 13:01:30.379845 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename gc @ 07/05/25 13:01:30.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:01:30.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:01:30.404
  STEP: create the rc @ 07/05/25 13:01:30.47
  I0705 13:01:30.480049      21 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: delete the rc @ 07/05/25 13:01:34.487
  STEP: wait for the rc to be deleted @ 07/05/25 13:01:34.496
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 07/05/25 13:01:39.505
  STEP: Gathering metrics @ 07/05/25 13:02:09.521
  W0705 13:02:09.527391      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0705 13:02:09.527435 21 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0705 13:02:09.527493 21 delete.go:95] Deleting pod "simpletest.rc-28b5b" in namespace "gc-8011"
  I0705 13:02:09.543835 21 delete.go:95] Deleting pod "simpletest.rc-2d9vl" in namespace "gc-8011"
  I0705 13:02:09.559698 21 delete.go:95] Deleting pod "simpletest.rc-2lhwh" in namespace "gc-8011"
  I0705 13:02:09.576844 21 delete.go:95] Deleting pod "simpletest.rc-2nrnf" in namespace "gc-8011"
  I0705 13:02:09.595614 21 delete.go:95] Deleting pod "simpletest.rc-44f2n" in namespace "gc-8011"
  I0705 13:02:09.612033 21 delete.go:95] Deleting pod "simpletest.rc-4768j" in namespace "gc-8011"
  I0705 13:02:09.629092 21 delete.go:95] Deleting pod "simpletest.rc-4glbh" in namespace "gc-8011"
  I0705 13:02:09.644917 21 delete.go:95] Deleting pod "simpletest.rc-4wq2x" in namespace "gc-8011"
  I0705 13:02:09.660439 21 delete.go:95] Deleting pod "simpletest.rc-5c9j4" in namespace "gc-8011"
  I0705 13:02:09.676700 21 delete.go:95] Deleting pod "simpletest.rc-5kdbw" in namespace "gc-8011"
  I0705 13:02:09.692443 21 delete.go:95] Deleting pod "simpletest.rc-5zwm6" in namespace "gc-8011"
  I0705 13:02:09.708240 21 delete.go:95] Deleting pod "simpletest.rc-6bcs6" in namespace "gc-8011"
  I0705 13:02:09.722763 21 delete.go:95] Deleting pod "simpletest.rc-6gmb2" in namespace "gc-8011"
  I0705 13:02:09.738344 21 delete.go:95] Deleting pod "simpletest.rc-6jmjj" in namespace "gc-8011"
  I0705 13:02:09.758960 21 delete.go:95] Deleting pod "simpletest.rc-6zc74" in namespace "gc-8011"
  I0705 13:02:09.780291 21 delete.go:95] Deleting pod "simpletest.rc-77m4g" in namespace "gc-8011"
  I0705 13:02:09.795865 21 delete.go:95] Deleting pod "simpletest.rc-7jhll" in namespace "gc-8011"
  I0705 13:02:09.810947 21 delete.go:95] Deleting pod "simpletest.rc-7jsg8" in namespace "gc-8011"
  I0705 13:02:09.831697 21 delete.go:95] Deleting pod "simpletest.rc-94zbg" in namespace "gc-8011"
  I0705 13:02:09.847284 21 delete.go:95] Deleting pod "simpletest.rc-9ffxz" in namespace "gc-8011"
  I0705 13:02:09.862357 21 delete.go:95] Deleting pod "simpletest.rc-9lc22" in namespace "gc-8011"
  I0705 13:02:09.881936 21 delete.go:95] Deleting pod "simpletest.rc-9nrb8" in namespace "gc-8011"
  I0705 13:02:09.902244 21 delete.go:95] Deleting pod "simpletest.rc-9vr4f" in namespace "gc-8011"
  I0705 13:02:09.919910 21 delete.go:95] Deleting pod "simpletest.rc-b5qdw" in namespace "gc-8011"
  I0705 13:02:09.934881 21 delete.go:95] Deleting pod "simpletest.rc-bnh2z" in namespace "gc-8011"
  I0705 13:02:09.950313 21 delete.go:95] Deleting pod "simpletest.rc-bntz5" in namespace "gc-8011"
  I0705 13:02:09.967627 21 delete.go:95] Deleting pod "simpletest.rc-brlld" in namespace "gc-8011"
  I0705 13:02:09.986188 21 delete.go:95] Deleting pod "simpletest.rc-bvfn5" in namespace "gc-8011"
  I0705 13:02:10.002780 21 delete.go:95] Deleting pod "simpletest.rc-bxqbz" in namespace "gc-8011"
  I0705 13:02:10.019235 21 delete.go:95] Deleting pod "simpletest.rc-bxx9b" in namespace "gc-8011"
  I0705 13:02:10.034798 21 delete.go:95] Deleting pod "simpletest.rc-c8hj2" in namespace "gc-8011"
  I0705 13:02:10.050612 21 delete.go:95] Deleting pod "simpletest.rc-csnl7" in namespace "gc-8011"
  I0705 13:02:10.070817 21 delete.go:95] Deleting pod "simpletest.rc-dg8ww" in namespace "gc-8011"
  I0705 13:02:10.088807 21 delete.go:95] Deleting pod "simpletest.rc-ftlpr" in namespace "gc-8011"
  I0705 13:02:10.105085 21 delete.go:95] Deleting pod "simpletest.rc-fx5w6" in namespace "gc-8011"
  I0705 13:02:10.120666 21 delete.go:95] Deleting pod "simpletest.rc-fzkcr" in namespace "gc-8011"
  I0705 13:02:10.137311 21 delete.go:95] Deleting pod "simpletest.rc-gd78k" in namespace "gc-8011"
  I0705 13:02:10.152385 21 delete.go:95] Deleting pod "simpletest.rc-ggpt8" in namespace "gc-8011"
  I0705 13:02:10.169448 21 delete.go:95] Deleting pod "simpletest.rc-gm5dc" in namespace "gc-8011"
  I0705 13:02:10.185052 21 delete.go:95] Deleting pod "simpletest.rc-h89tx" in namespace "gc-8011"
  I0705 13:02:10.200812 21 delete.go:95] Deleting pod "simpletest.rc-h8l5m" in namespace "gc-8011"
  I0705 13:02:10.215687 21 delete.go:95] Deleting pod "simpletest.rc-hhznv" in namespace "gc-8011"
  I0705 13:02:10.232758 21 delete.go:95] Deleting pod "simpletest.rc-hn92m" in namespace "gc-8011"
  I0705 13:02:10.248634 21 delete.go:95] Deleting pod "simpletest.rc-j776c" in namespace "gc-8011"
  I0705 13:02:10.265898 21 delete.go:95] Deleting pod "simpletest.rc-jzdhg" in namespace "gc-8011"
  I0705 13:02:10.281440 21 delete.go:95] Deleting pod "simpletest.rc-kdw4c" in namespace "gc-8011"
  I0705 13:02:10.299714 21 delete.go:95] Deleting pod "simpletest.rc-kf9v7" in namespace "gc-8011"
  I0705 13:02:10.316858 21 delete.go:95] Deleting pod "simpletest.rc-kfbbq" in namespace "gc-8011"
  I0705 13:02:10.334013 21 delete.go:95] Deleting pod "simpletest.rc-kqbt4" in namespace "gc-8011"
  I0705 13:02:10.348899 21 delete.go:95] Deleting pod "simpletest.rc-ldcr6" in namespace "gc-8011"
  I0705 13:02:10.366864 21 delete.go:95] Deleting pod "simpletest.rc-ljrrg" in namespace "gc-8011"
  I0705 13:02:10.382363 21 delete.go:95] Deleting pod "simpletest.rc-m9c9f" in namespace "gc-8011"
  I0705 13:02:10.398436 21 delete.go:95] Deleting pod "simpletest.rc-mpltf" in namespace "gc-8011"
  I0705 13:02:10.414625 21 delete.go:95] Deleting pod "simpletest.rc-mrskq" in namespace "gc-8011"
  I0705 13:02:10.429553 21 delete.go:95] Deleting pod "simpletest.rc-mzkvf" in namespace "gc-8011"
  I0705 13:02:10.445682 21 delete.go:95] Deleting pod "simpletest.rc-nd7zb" in namespace "gc-8011"
  I0705 13:02:10.461660 21 delete.go:95] Deleting pod "simpletest.rc-nf2pt" in namespace "gc-8011"
  I0705 13:02:10.477655 21 delete.go:95] Deleting pod "simpletest.rc-nvk5r" in namespace "gc-8011"
  I0705 13:02:10.493061 21 delete.go:95] Deleting pod "simpletest.rc-p5867" in namespace "gc-8011"
  I0705 13:02:10.508981 21 delete.go:95] Deleting pod "simpletest.rc-p6pvt" in namespace "gc-8011"
  I0705 13:02:10.525482 21 delete.go:95] Deleting pod "simpletest.rc-pfcld" in namespace "gc-8011"
  I0705 13:02:10.551473 21 delete.go:95] Deleting pod "simpletest.rc-pg8wv" in namespace "gc-8011"
  I0705 13:02:10.579545 21 delete.go:95] Deleting pod "simpletest.rc-pqs5h" in namespace "gc-8011"
  I0705 13:02:10.599987 21 delete.go:95] Deleting pod "simpletest.rc-prc4m" in namespace "gc-8011"
  I0705 13:02:10.616347 21 delete.go:95] Deleting pod "simpletest.rc-q6wnq" in namespace "gc-8011"
  I0705 13:02:10.632392 21 delete.go:95] Deleting pod "simpletest.rc-qfbv7" in namespace "gc-8011"
  I0705 13:02:10.648566 21 delete.go:95] Deleting pod "simpletest.rc-qgthv" in namespace "gc-8011"
  I0705 13:02:10.667477 21 delete.go:95] Deleting pod "simpletest.rc-qgzxw" in namespace "gc-8011"
  I0705 13:02:10.688677 21 delete.go:95] Deleting pod "simpletest.rc-qp79r" in namespace "gc-8011"
  I0705 13:02:10.707365 21 delete.go:95] Deleting pod "simpletest.rc-rdfv2" in namespace "gc-8011"
  I0705 13:02:10.724156 21 delete.go:95] Deleting pod "simpletest.rc-s5qhr" in namespace "gc-8011"
  I0705 13:02:10.738467 21 delete.go:95] Deleting pod "simpletest.rc-s792n" in namespace "gc-8011"
  I0705 13:02:10.759011 21 delete.go:95] Deleting pod "simpletest.rc-spk7f" in namespace "gc-8011"
  I0705 13:02:10.773533 21 delete.go:95] Deleting pod "simpletest.rc-strdc" in namespace "gc-8011"
  I0705 13:02:10.829430 21 delete.go:95] Deleting pod "simpletest.rc-t5j8r" in namespace "gc-8011"
  I0705 13:02:10.879757 21 delete.go:95] Deleting pod "simpletest.rc-t9rnt" in namespace "gc-8011"
  I0705 13:02:10.928281 21 delete.go:95] Deleting pod "simpletest.rc-tjrtv" in namespace "gc-8011"
  I0705 13:02:10.976242 21 delete.go:95] Deleting pod "simpletest.rc-tt55r" in namespace "gc-8011"
  I0705 13:02:11.024682 21 delete.go:95] Deleting pod "simpletest.rc-tz7jr" in namespace "gc-8011"
  I0705 13:02:11.075433 21 delete.go:95] Deleting pod "simpletest.rc-v6k8d" in namespace "gc-8011"
  I0705 13:02:11.127259 21 delete.go:95] Deleting pod "simpletest.rc-v6rtb" in namespace "gc-8011"
  I0705 13:02:11.185771 21 delete.go:95] Deleting pod "simpletest.rc-v7h6f" in namespace "gc-8011"
  I0705 13:02:11.230937 21 delete.go:95] Deleting pod "simpletest.rc-v7shd" in namespace "gc-8011"
  I0705 13:02:11.277833 21 delete.go:95] Deleting pod "simpletest.rc-v8h66" in namespace "gc-8011"
  I0705 13:02:11.324481 21 delete.go:95] Deleting pod "simpletest.rc-vbb94" in namespace "gc-8011"
  I0705 13:02:11.375193 21 delete.go:95] Deleting pod "simpletest.rc-vksht" in namespace "gc-8011"
  I0705 13:02:11.425692 21 delete.go:95] Deleting pod "simpletest.rc-vqdjg" in namespace "gc-8011"
  I0705 13:02:11.479854 21 delete.go:95] Deleting pod "simpletest.rc-vvhf7" in namespace "gc-8011"
  I0705 13:02:11.532997 21 delete.go:95] Deleting pod "simpletest.rc-w6b7l" in namespace "gc-8011"
  I0705 13:02:11.578763 21 delete.go:95] Deleting pod "simpletest.rc-w8vxf" in namespace "gc-8011"
  I0705 13:02:11.624714 21 delete.go:95] Deleting pod "simpletest.rc-wclzd" in namespace "gc-8011"
  I0705 13:02:11.677705 21 delete.go:95] Deleting pod "simpletest.rc-wfgxr" in namespace "gc-8011"
  I0705 13:02:11.724420 21 delete.go:95] Deleting pod "simpletest.rc-wkrd4" in namespace "gc-8011"
  I0705 13:02:11.775560 21 delete.go:95] Deleting pod "simpletest.rc-wssmb" in namespace "gc-8011"
  I0705 13:02:11.824759 21 delete.go:95] Deleting pod "simpletest.rc-wxzdl" in namespace "gc-8011"
  I0705 13:02:11.881340 21 delete.go:95] Deleting pod "simpletest.rc-wz6f7" in namespace "gc-8011"
  I0705 13:02:11.935124 21 delete.go:95] Deleting pod "simpletest.rc-x6gjb" in namespace "gc-8011"
  I0705 13:02:11.976058 21 delete.go:95] Deleting pod "simpletest.rc-xks2f" in namespace "gc-8011"
  I0705 13:02:12.029700 21 delete.go:95] Deleting pod "simpletest.rc-xt62v" in namespace "gc-8011"
  I0705 13:02:12.081423 21 delete.go:95] Deleting pod "simpletest.rc-z8bg7" in namespace "gc-8011"
  I0705 13:02:12.131373 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8011" for this suite. @ 07/05/25 13:02:12.168
• [41.840 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:373
  STEP: Creating a kubernetes client @ 07/05/25 13:02:12.219
  I0705 13:02:12.219651 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename namespaces @ 07/05/25 13:02:12.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:02:12.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:02:12.25
  STEP: Updating Namespace "namespaces-2506" @ 07/05/25 13:02:12.261
  I0705 13:02:12.275827 21 namespace.go:390] Namespace "namespaces-2506" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"6daaca73-4179-4178-a207-397389a7c087", "kubernetes.io/metadata.name":"namespaces-2506", "namespaces-2506":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0705 13:02:12.277739 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2506" for this suite. @ 07/05/25 13:02:12.304
• [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 07/05/25 13:02:12.326
  I0705 13:02:12.326340 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename configmap @ 07/05/25 13:02:12.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:02:12.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:02:12.383
  STEP: Creating configMap with name configmap-test-upd-e7a6f9b2-e6fd-4553-9d6f-acf5c8e414b0 @ 07/05/25 13:02:12.418
  STEP: Creating the pod @ 07/05/25 13:02:12.427
  STEP: Waiting for pod with text data @ 07/05/25 13:02:16.474
  STEP: Waiting for pod with binary data @ 07/05/25 13:02:16.489
  I0705 13:02:16.501491 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2341" for this suite. @ 07/05/25 13:02:16.509
• [4.193 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:108
  STEP: Creating a kubernetes client @ 07/05/25 13:02:16.519
  I0705 13:02:16.519714 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename resourcequota @ 07/05/25 13:02:16.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:02:16.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:02:16.536
  STEP: Counting existing ResourceQuota @ 07/05/25 13:02:16.541
  STEP: Creating a ResourceQuota @ 07/05/25 13:02:21.547
  STEP: Ensuring resource quota status is calculated @ 07/05/25 13:02:21.557
  STEP: Creating a Service @ 07/05/25 13:02:23.564
  STEP: Creating a NodePort Service @ 07/05/25 13:02:23.591
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 07/05/25 13:02:23.625
  STEP: Ensuring resource quota status captures service creation @ 07/05/25 13:02:23.669
  STEP: Deleting Services @ 07/05/25 13:02:25.677
  STEP: Ensuring resource quota status released usage @ 07/05/25 13:02:25.742
  I0705 13:02:27.747472 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8993" for this suite. @ 07/05/25 13:02:27.755
• [11.245 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 07/05/25 13:02:27.765
  I0705 13:02:27.765368 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename projected @ 07/05/25 13:02:27.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:02:27.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:02:27.783
  STEP: Creating a pod to test downward API volume plugin @ 07/05/25 13:02:27.786
  STEP: Saw pod success @ 07/05/25 13:02:31.82
  I0705 13:02:31.826809 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod downwardapi-volume-7ccdfbb6-0fc4-4021-abc5-54416c9b56f5 container client-container: <nil>
  STEP: delete the pod @ 07/05/25 13:02:31.844
  I0705 13:02:31.865763 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4530" for this suite. @ 07/05/25 13:02:31.871
• [4.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1426
  STEP: Creating a kubernetes client @ 07/05/25 13:02:31.881
  I0705 13:02:31.881612 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename services @ 07/05/25 13:02:31.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:02:31.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:02:31.896
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-303 @ 07/05/25 13:02:31.899
  STEP: changing the ExternalName service to type=NodePort @ 07/05/25 13:02:31.905
  I0705 13:02:31.950839 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0705 13:02:33.957902 21 resource.go:361] Creating new exec pod
  I0705 13:02:35.999409 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-303 exec execpoddzj4b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0705 13:02:36.099386 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.222) 80 port [tcp/http] succeeded!\n"
  I0705 13:02:36.099433 21 builder.go:147] stdout: ""
  I0705 13:02:37.000259 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-303 exec execpoddzj4b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0705 13:02:37.090010 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.222) 80 port [tcp/http] succeeded!\n"
  I0705 13:02:37.090054 21 builder.go:147] stdout: ""
  I0705 13:02:37.999626 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-303 exec execpoddzj4b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0705 13:02:38.094486 21 builder.go:146] stderr: "+ + echo hostName\nnc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.222) 80 port [tcp/http] succeeded!\n"
  I0705 13:02:38.094526 21 builder.go:147] stdout: "externalname-service-79f95ccd74-tjfpp"
  I0705 13:02:38.094611 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-303 exec execpoddzj4b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.222 80'
  I0705 13:02:38.187356 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.222 80\nConnection to 10.152.183.222 80 port [tcp/http] succeeded!\n"
  I0705 13:02:38.187518 21 builder.go:147] stdout: "externalname-service-79f95ccd74-tjfpp"
  I0705 13:02:38.187645 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-303 exec execpoddzj4b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.90.231 32543'
  I0705 13:02:38.297714 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.90.231 32543\nConnection to 172.31.90.231 32543 port [tcp/*] succeeded!\n"
  I0705 13:02:38.297765 21 builder.go:147] stdout: ""
  I0705 13:02:39.187787 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-303 exec execpoddzj4b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.90.231 32543'
  I0705 13:02:39.275699 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.90.231 32543\nConnection to 172.31.90.231 32543 port [tcp/*] succeeded!\n"
  I0705 13:02:39.275740 21 builder.go:147] stdout: "externalname-service-79f95ccd74-tjfpp"
  I0705 13:02:39.275816 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-303 exec execpoddzj4b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.22.171 32543'
  I0705 13:02:39.366982 21 builder.go:146] stderr: "+ + echonc -v hostName -t\n -w 2 172.31.22.171 32543\nConnection to 172.31.22.171 32543 port [tcp/*] succeeded!\n"
  I0705 13:02:39.367031 21 builder.go:147] stdout: "externalname-service-79f95ccd74-q4z7d"
  I0705 13:02:39.367133 21 service.go:1435] Cleaning up the ExternalName to NodePort test service
  I0705 13:02:39.411142 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-303" for this suite. @ 07/05/25 13:02:39.417
• [7.544 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1251
  STEP: Creating a kubernetes client @ 07/05/25 13:02:39.425
  I0705 13:02:39.425935 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename services @ 07/05/25 13:02:39.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:02:39.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:02:39.442
  STEP: creating service nodeport-test with type=NodePort in namespace services-1079 @ 07/05/25 13:02:39.445
  I0705 13:02:39.485550 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0705 13:02:41.490833 21 resource.go:361] Creating new exec pod
  I0705 13:02:43.528994 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-1079 exec execpodplfp7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0705 13:02:43.627211 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.152.183.59) 80 port [tcp/http] succeeded!\n"
  I0705 13:02:43.627251 21 builder.go:147] stdout: "nodeport-test-68cbf59b6-9k8d6"
  I0705 13:02:43.627342 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-1079 exec execpodplfp7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.59 80'
  I0705 13:02:43.717510 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.59 80\nConnection to 10.152.183.59 80 port [tcp/http] succeeded!\n"
  I0705 13:02:43.717551 21 builder.go:147] stdout: "nodeport-test-68cbf59b6-9k8d6"
  I0705 13:02:43.717640 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-1079 exec execpodplfp7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.5.45 32354'
  I0705 13:02:43.811013 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.5.45 32354\nConnection to 172.31.5.45 32354 port [tcp/*] succeeded!\n"
  I0705 13:02:43.811060 21 builder.go:147] stdout: "nodeport-test-68cbf59b6-xgjkb"
  I0705 13:02:43.811156 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-1079 exec execpodplfp7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.90.231 32354'
  I0705 13:02:43.907459 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.90.231 32354\nConnection to 172.31.90.231 32354 port [tcp/*] succeeded!\n"
  I0705 13:02:43.907509 21 builder.go:147] stdout: ""
  I0705 13:02:44.811288 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-1079 exec execpodplfp7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.90.231 32354'
  I0705 13:02:44.902398 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.90.231 32354\nConnection to 172.31.90.231 32354 port [tcp/*] succeeded!\n"
  I0705 13:02:44.902439 21 builder.go:147] stdout: ""
  I0705 13:02:45.811294 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-1079 exec execpodplfp7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.90.231 32354'
  I0705 13:02:45.920278 21 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.90.231 32354\n+ echo hostName\nConnection to 172.31.90.231 32354 port [tcp/*] succeeded!\n"
  I0705 13:02:45.920329 21 builder.go:147] stdout: "nodeport-test-68cbf59b6-9k8d6"
  I0705 13:02:45.920547 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1079" for this suite. @ 07/05/25 13:02:45.928
• [6.513 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 07/05/25 13:02:45.939
  I0705 13:02:45.939254 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename configmap @ 07/05/25 13:02:45.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:02:45.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:02:45.955
  STEP: Creating configMap configmap-1899/configmap-test-2e0c5f98-7c4b-4ce1-b022-98cecfea74ca @ 07/05/25 13:02:45.958
  STEP: Creating a pod to test consume configMaps @ 07/05/25 13:02:45.963
  STEP: Saw pod success @ 07/05/25 13:02:49.996
  I0705 13:02:50.002762 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-configmaps-e682770e-47a6-4891-9190-840eb70945a0 container env-test: <nil>
  STEP: delete the pod @ 07/05/25 13:02:50.011
  I0705 13:02:50.031328 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1899" for this suite. @ 07/05/25 13:02:50.038
• [4.111 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 07/05/25 13:02:50.05
  I0705 13:02:50.050686 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename var-expansion @ 07/05/25 13:02:50.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:02:50.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:02:50.064
  STEP: Creating a pod to test substitution in volume subpath @ 07/05/25 13:02:50.068
  STEP: Saw pod success @ 07/05/25 13:02:54.101
  I0705 13:02:54.105113 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod var-expansion-be9af147-f2cf-4565-8758-ed9c30c89e4f container dapi-container: <nil>
  STEP: delete the pod @ 07/05/25 13:02:54.117
  I0705 13:02:54.142077 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2246" for this suite. @ 07/05/25 13:02:54.148
• [4.109 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:892
  STEP: Creating a kubernetes client @ 07/05/25 13:02:54.159
  I0705 13:02:54.159747 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename job @ 07/05/25 13:02:54.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:02:54.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:02:54.176
  STEP: Creating a job @ 07/05/25 13:02:54.18
  STEP: Ensuring active pods == parallelism @ 07/05/25 13:02:54.189
  STEP: delete a job @ 07/05/25 13:02:56.204
  STEP: deleting Job.batch foo in namespace job-9831, will wait for the garbage collector to delete the pods @ 07/05/25 13:02:56.204
  I0705 13:02:56.270841 21 resources.go:139] Deleting Job.batch foo took: 12.3396ms
  I0705 13:02:56.371133 21 resources.go:163] Terminating Job.batch foo pods took: 100.288436ms
  STEP: Ensuring job was deleted @ 07/05/25 13:02:57.671
  I0705 13:02:57.675582 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9831" for this suite. @ 07/05/25 13:02:57.682
• [3.532 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:139
  STEP: Creating a kubernetes client @ 07/05/25 13:02:57.692
  I0705 13:02:57.692347 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename emptydir @ 07/05/25 13:02:57.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:02:57.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:02:57.71
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 07/05/25 13:02:57.713
  STEP: Saw pod success @ 07/05/25 13:03:01.744
  I0705 13:03:01.751798 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-48c6aaba-c2f2-449f-9c87-e6c3013f4b6f container test-container: <nil>
  STEP: delete the pod @ 07/05/25 13:03:01.761
  I0705 13:03:01.783839 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4890" for this suite. @ 07/05/25 13:03:01.788
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 07/05/25 13:03:01.797
  I0705 13:03:01.797608 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename webhook @ 07/05/25 13:03:01.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:03:01.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:03:01.814
  STEP: Setting up server cert @ 07/05/25 13:03:01.833
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/05/25 13:03:02.196
  STEP: Deploying the webhook pod @ 07/05/25 13:03:02.203
  STEP: Wait for the deployment to be ready @ 07/05/25 13:03:02.219
  I0705 13:03:02.230162 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/05/25 13:03:04.251
  STEP: Verifying the service has paired with the endpoint @ 07/05/25 13:03:04.272
  I0705 13:03:05.273194 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 07/05/25 13:03:05.281
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 07/05/25 13:03:05.298
  STEP: Creating a dummy validating-webhook-configuration object @ 07/05/25 13:03:05.314
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 07/05/25 13:03:05.328
  STEP: Creating a dummy mutating-webhook-configuration object @ 07/05/25 13:03:05.336
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 07/05/25 13:03:05.347
  I0705 13:03:05.431102 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5156" for this suite. @ 07/05/25 13:03:05.438
  STEP: Destroying namespace "webhook-markers-7959" for this suite. @ 07/05/25 13:03:05.449
• [3.661 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 07/05/25 13:03:05.458
  I0705 13:03:05.458369 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename pods @ 07/05/25 13:03:05.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:03:05.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:03:05.475
  STEP: creating the pod @ 07/05/25 13:03:05.478
  STEP: submitting the pod to kubernetes @ 07/05/25 13:03:05.479
  STEP: verifying the pod is in kubernetes @ 07/05/25 13:03:07.507
  STEP: updating the pod @ 07/05/25 13:03:07.515
  I0705 13:03:08.029735 21 pod_client.go:173] Successfully updated pod "pod-update-655f4547-3a84-47b5-a302-7758ab5f440f"
  STEP: verifying the updated pod is in kubernetes @ 07/05/25 13:03:08.036
  I0705 13:03:08.041691 21 pods.go:391] Pod update OK
  I0705 13:03:08.041836 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5263" for this suite. @ 07/05/25 13:03:08.049
• [2.599 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1003
  STEP: Creating a kubernetes client @ 07/05/25 13:03:08.058
  I0705 13:03:08.058181 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename resourcequota @ 07/05/25 13:03:08.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:03:08.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:03:08.075
  STEP: Creating a ResourceQuota @ 07/05/25 13:03:08.078
  STEP: Getting a ResourceQuota @ 07/05/25 13:03:08.085
  STEP: Listing all ResourceQuotas with LabelSelector @ 07/05/25 13:03:08.091
  STEP: Patching the ResourceQuota @ 07/05/25 13:03:08.095
  STEP: Deleting a Collection of ResourceQuotas @ 07/05/25 13:03:08.103
  STEP: Verifying the deleted ResourceQuota @ 07/05/25 13:03:08.12
  I0705 13:03:08.124006 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-163" for this suite. @ 07/05/25 13:03:08.151
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 07/05/25 13:03:08.16
  I0705 13:03:08.160222 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/05/25 13:03:08.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:03:08.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:03:08.175
  STEP: fetching the /apis discovery document @ 07/05/25 13:03:08.179
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 07/05/25 13:03:08.18
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 07/05/25 13:03:08.18
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 07/05/25 13:03:08.18
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 07/05/25 13:03:08.182
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 07/05/25 13:03:08.182
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 07/05/25 13:03:08.184
  I0705 13:03:08.184417 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8861" for this suite. @ 07/05/25 13:03:08.251
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 07/05/25 13:03:08.263
  I0705 13:03:08.263117 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename field-validation @ 07/05/25 13:03:08.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:03:08.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:03:08.282
  I0705 13:03:08.285712 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  I0705 13:03:11.377766 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8476" for this suite. @ 07/05/25 13:03:11.383
• [3.133 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:155
  STEP: Creating a kubernetes client @ 07/05/25 13:03:11.396
  I0705 13:03:11.396212 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/05/25 13:03:11.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:03:11.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:03:11.411
  I0705 13:03:11.415250 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/05/25 13:03:12.648
  I0705 13:03:12.649010 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=crd-publish-openapi-9139 --namespace=crd-publish-openapi-9139 create -f -'
  I0705 13:03:14.720013 21 builder.go:146] stderr: ""
  I0705 13:03:14.720055 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9841-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0705 13:03:14.720125 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=crd-publish-openapi-9139 --namespace=crd-publish-openapi-9139 delete e2e-test-crd-publish-openapi-9841-crds test-cr'
  I0705 13:03:14.785981 21 builder.go:146] stderr: ""
  I0705 13:03:14.786023 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9841-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0705 13:03:14.786092 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=crd-publish-openapi-9139 --namespace=crd-publish-openapi-9139 apply -f -'
  I0705 13:03:14.846966 21 builder.go:146] stderr: ""
  I0705 13:03:14.847004 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9841-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0705 13:03:14.847048 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=crd-publish-openapi-9139 --namespace=crd-publish-openapi-9139 delete e2e-test-crd-publish-openapi-9841-crds test-cr'
  I0705 13:03:14.904136 21 builder.go:146] stderr: ""
  I0705 13:03:14.904180 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9841-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 07/05/25 13:03:14.904
  I0705 13:03:14.904334 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=crd-publish-openapi-9139 explain e2e-test-crd-publish-openapi-9841-crds'
  I0705 13:03:14.951383 21 builder.go:146] stderr: ""
  I0705 13:03:14.951431 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-9841-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0705 13:03:16.150631 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9139" for this suite. @ 07/05/25 13:03:16.16
• [4.777 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 07/05/25 13:03:16.172
  I0705 13:03:16.172810 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename limitrange @ 07/05/25 13:03:16.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:03:16.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:03:16.188
  STEP: Creating a LimitRange @ 07/05/25 13:03:16.192
  STEP: Setting up watch @ 07/05/25 13:03:16.192
  STEP: Submitting a LimitRange @ 07/05/25 13:03:16.296
  STEP: Verifying LimitRange creation was observed @ 07/05/25 13:03:16.305
  STEP: Fetching the LimitRange to ensure it has proper values @ 07/05/25 13:03:16.305
  I0705 13:03:16.311638 21 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0705 13:03:16.311677 21 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 07/05/25 13:03:16.311
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 07/05/25 13:03:16.32
  I0705 13:03:16.326623 21 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0705 13:03:16.326656 21 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 07/05/25 13:03:16.326
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 07/05/25 13:03:16.332
  I0705 13:03:16.342579 21 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0705 13:03:16.342617 21 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 07/05/25 13:03:16.342
  STEP: Failing to create a Pod with more than max resources @ 07/05/25 13:03:16.344
  STEP: Updating a LimitRange @ 07/05/25 13:03:16.346
  STEP: Verifying LimitRange updating is effective @ 07/05/25 13:03:16.352
  STEP: Creating a Pod with less than former min resources @ 07/05/25 13:03:18.358
  STEP: Failing to create a Pod with more than max resources @ 07/05/25 13:03:18.365
  STEP: Deleting a LimitRange @ 07/05/25 13:03:18.367
  STEP: Verifying the LimitRange was deleted @ 07/05/25 13:03:18.378
  I0705 13:03:23.387095 21 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 07/05/25 13:03:23.387
  I0705 13:03:23.401662 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-1802" for this suite. @ 07/05/25 13:03:23.411
• [7.250 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 07/05/25 13:03:23.423
  I0705 13:03:23.423465 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename configmap @ 07/05/25 13:03:23.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:03:23.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:03:23.438
  I0705 13:03:23.494640 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8414" for this suite. @ 07/05/25 13:03:23.511
• [0.101 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 07/05/25 13:03:23.524
  I0705 13:03:23.524196 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename secrets @ 07/05/25 13:03:23.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:03:23.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:03:23.539
  STEP: Creating secret with name secret-test-e470f0a5-2815-4fd0-9d5a-0c129e7a11d0 @ 07/05/25 13:03:23.542
  STEP: Creating a pod to test consume secrets @ 07/05/25 13:03:23.548
  STEP: Saw pod success @ 07/05/25 13:03:27.577
  I0705 13:03:27.583598 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-secrets-791b33e7-0729-4b9d-8062-390240db6d54 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/05/25 13:03:27.594
  I0705 13:03:27.614744 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5613" for this suite. @ 07/05/25 13:03:27.62
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:351
  STEP: Creating a kubernetes client @ 07/05/25 13:03:27.632
  I0705 13:03:27.632503 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename kubectl @ 07/05/25 13:03:27.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:03:27.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:03:27.652
  STEP: creating a replication controller @ 07/05/25 13:03:27.656
  I0705 13:03:27.656247 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-5400 create -f -'
  I0705 13:03:27.748570 21 builder.go:146] stderr: ""
  I0705 13:03:27.748606 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/05/25 13:03:27.748
  I0705 13:03:27.748696 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-5400 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0705 13:03:27.804391 21 builder.go:146] stderr: ""
  I0705 13:03:27.804442 21 builder.go:147] stdout: "update-demo-nautilus-s6jxz update-demo-nautilus-s6zvz "
  I0705 13:03:27.804492 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-5400 get pods update-demo-nautilus-s6jxz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0705 13:03:27.851424 21 builder.go:146] stderr: ""
  I0705 13:03:27.851463 21 builder.go:147] stdout: ""
  I0705 13:03:27.851473 21 kubectl.go:2505] update-demo-nautilus-s6jxz is created but not running
  I0705 13:03:32.851691 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-5400 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0705 13:03:32.903500 21 builder.go:146] stderr: ""
  I0705 13:03:32.903552 21 builder.go:147] stdout: "update-demo-nautilus-s6jxz update-demo-nautilus-s6zvz "
  I0705 13:03:32.903603 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-5400 get pods update-demo-nautilus-s6jxz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0705 13:03:32.949295 21 builder.go:146] stderr: ""
  I0705 13:03:32.949333 21 builder.go:147] stdout: "true"
  I0705 13:03:32.949385 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-5400 get pods update-demo-nautilus-s6jxz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0705 13:03:32.994501 21 builder.go:146] stderr: ""
  I0705 13:03:32.994540 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0705 13:03:32.994551 21 kubectl.go:2396] validating pod update-demo-nautilus-s6jxz
  I0705 13:03:33.000885 21 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0705 13:03:33.000949 21 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0705 13:03:33.000959 21 kubectl.go:2523] update-demo-nautilus-s6jxz is verified up and running
  I0705 13:03:33.000998 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-5400 get pods update-demo-nautilus-s6zvz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0705 13:03:33.047260 21 builder.go:146] stderr: ""
  I0705 13:03:33.047313 21 builder.go:147] stdout: "true"
  I0705 13:03:33.047385 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-5400 get pods update-demo-nautilus-s6zvz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0705 13:03:33.092705 21 builder.go:146] stderr: ""
  I0705 13:03:33.092745 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0705 13:03:33.092755 21 kubectl.go:2396] validating pod update-demo-nautilus-s6zvz
  I0705 13:03:33.104830 21 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0705 13:03:33.104881 21 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0705 13:03:33.104891 21 kubectl.go:2523] update-demo-nautilus-s6zvz is verified up and running
  STEP: scaling down the replication controller @ 07/05/25 13:03:33.104
  I0705 13:03:33.105912 21 kubectl.go:320] scanned /root for discovery docs: <nil>
  I0705 13:03:33.105954 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-5400 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I0705 13:03:34.170951 21 builder.go:146] stderr: ""
  I0705 13:03:34.170989 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/05/25 13:03:34.171
  I0705 13:03:34.171108 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-5400 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0705 13:03:34.220573 21 builder.go:146] stderr: ""
  I0705 13:03:34.220628 21 builder.go:147] stdout: "update-demo-nautilus-s6zvz "
  I0705 13:03:34.220680 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-5400 get pods update-demo-nautilus-s6zvz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0705 13:03:34.267812 21 builder.go:146] stderr: ""
  I0705 13:03:34.267867 21 builder.go:147] stdout: "true"
  I0705 13:03:34.267913 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-5400 get pods update-demo-nautilus-s6zvz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0705 13:03:34.313462 21 builder.go:146] stderr: ""
  I0705 13:03:34.313506 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0705 13:03:34.313519 21 kubectl.go:2396] validating pod update-demo-nautilus-s6zvz
  I0705 13:03:34.320897 21 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0705 13:03:34.320940 21 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0705 13:03:34.320950 21 kubectl.go:2523] update-demo-nautilus-s6zvz is verified up and running
  STEP: scaling up the replication controller @ 07/05/25 13:03:34.32
  I0705 13:03:34.321743 21 kubectl.go:320] scanned /root for discovery docs: <nil>
  I0705 13:03:34.321772 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-5400 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I0705 13:03:35.379772 21 builder.go:146] stderr: ""
  I0705 13:03:35.379825 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/05/25 13:03:35.379
  I0705 13:03:35.379910 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-5400 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0705 13:03:35.431835 21 builder.go:146] stderr: ""
  I0705 13:03:35.431878 21 builder.go:147] stdout: "update-demo-nautilus-hk6mn update-demo-nautilus-s6zvz "
  I0705 13:03:35.431926 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-5400 get pods update-demo-nautilus-hk6mn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0705 13:03:35.479937 21 builder.go:146] stderr: ""
  I0705 13:03:35.479980 21 builder.go:147] stdout: ""
  I0705 13:03:35.479988 21 kubectl.go:2505] update-demo-nautilus-hk6mn is created but not running
  I0705 13:03:40.481000 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-5400 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0705 13:03:40.536264 21 builder.go:146] stderr: ""
  I0705 13:03:40.536313 21 builder.go:147] stdout: "update-demo-nautilus-hk6mn update-demo-nautilus-s6zvz "
  I0705 13:03:40.536363 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-5400 get pods update-demo-nautilus-hk6mn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0705 13:03:40.583962 21 builder.go:146] stderr: ""
  I0705 13:03:40.584006 21 builder.go:147] stdout: "true"
  I0705 13:03:40.584056 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-5400 get pods update-demo-nautilus-hk6mn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0705 13:03:40.630142 21 builder.go:146] stderr: ""
  I0705 13:03:40.630191 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0705 13:03:40.630202 21 kubectl.go:2396] validating pod update-demo-nautilus-hk6mn
  I0705 13:03:40.637958 21 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0705 13:03:40.638007 21 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0705 13:03:40.638017 21 kubectl.go:2523] update-demo-nautilus-hk6mn is verified up and running
  I0705 13:03:40.638055 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-5400 get pods update-demo-nautilus-s6zvz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0705 13:03:40.683957 21 builder.go:146] stderr: ""
  I0705 13:03:40.683998 21 builder.go:147] stdout: "true"
  I0705 13:03:40.684044 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-5400 get pods update-demo-nautilus-s6zvz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0705 13:03:40.730668 21 builder.go:146] stderr: ""
  I0705 13:03:40.730708 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0705 13:03:40.730720 21 kubectl.go:2396] validating pod update-demo-nautilus-s6zvz
  I0705 13:03:40.738256 21 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0705 13:03:40.738307 21 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0705 13:03:40.738318 21 kubectl.go:2523] update-demo-nautilus-s6zvz is verified up and running
  STEP: using delete to clean up resources @ 07/05/25 13:03:40.738
  I0705 13:03:40.738414 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-5400 delete --grace-period=0 --force -f -'
  I0705 13:03:40.793548 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0705 13:03:40.793599 21 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0705 13:03:40.793665 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-5400 get rc,svc -l name=update-demo --no-headers'
  I0705 13:03:40.883366 21 builder.go:146] stderr: "No resources found in kubectl-5400 namespace.\n"
  I0705 13:03:40.883418 21 builder.go:147] stdout: ""
  I0705 13:03:40.883464 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-5400 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0705 13:03:40.995911 21 builder.go:146] stderr: ""
  I0705 13:03:40.996121 21 builder.go:147] stdout: ""
  I0705 13:03:40.997193 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5400" for this suite. @ 07/05/25 13:03:41.005
• [13.382 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:87
  STEP: Creating a kubernetes client @ 07/05/25 13:03:41.015
  I0705 13:03:41.015180 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename replication-controller @ 07/05/25 13:03:41.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:03:41.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:03:41.032
  I0705 13:03:41.035646 21 rc.go:546] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 07/05/25 13:03:42.055
  STEP: Checking rc "condition-test" has the desired failure condition set @ 07/05/25 13:03:42.063
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 07/05/25 13:03:43.075
  I0705 13:03:43.088233 21 rc.go:733] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 07/05/25 13:03:43.088
  I0705 13:03:43.095690 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8665" for this suite. @ 07/05/25 13:03:43.105
• [2.101 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:194
  STEP: Creating a kubernetes client @ 07/05/25 13:03:43.116
  I0705 13:03:43.116687 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename runtimeclass @ 07/05/25 13:03:43.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:03:43.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:03:43.132
  STEP: getting /apis @ 07/05/25 13:03:43.135
  STEP: getting /apis/node.k8s.io @ 07/05/25 13:03:43.139
  STEP: getting /apis/node.k8s.io/v1 @ 07/05/25 13:03:43.141
  STEP: creating @ 07/05/25 13:03:43.142
  STEP: watching @ 07/05/25 13:03:43.164
  I0705 13:03:43.164297 21 runtimeclass.go:278] starting watch
  STEP: getting @ 07/05/25 13:03:43.173
  STEP: listing @ 07/05/25 13:03:43.177
  STEP: patching @ 07/05/25 13:03:43.182
  STEP: updating @ 07/05/25 13:03:43.188
  I0705 13:03:43.193949 21 runtimeclass.go:308] waiting for watch events with expected annotations
  STEP: deleting @ 07/05/25 13:03:43.194
  STEP: deleting a collection @ 07/05/25 13:03:43.213
  I0705 13:03:43.242545 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6343" for this suite. @ 07/05/25 13:03:43.249
• [0.144 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:980
  STEP: Creating a kubernetes client @ 07/05/25 13:03:43.261
  I0705 13:03:43.261267 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename statefulset @ 07/05/25 13:03:43.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:03:43.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:03:43.275
  STEP: Creating service test in namespace statefulset-7823 @ 07/05/25 13:03:43.279
  I0705 13:03:43.297624 21 wait.go:44] Found 0 stateful pods, waiting for 1
  I0705 13:03:53.303723 21 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 07/05/25 13:03:53.315
  I0705 13:03:53.338282 21 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0705 13:03:53.338332 21 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  I0705 13:04:03.339737 21 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0705 13:04:03.339805 21 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 07/05/25 13:04:03.35
  STEP: Delete all of the StatefulSets @ 07/05/25 13:04:03.357
  STEP: Verify that StatefulSets have been deleted @ 07/05/25 13:04:03.372
  I0705 13:04:03.377977 21 statefulset.go:138] Deleting all statefulset in ns statefulset-7823
  I0705 13:04:03.407059 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7823" for this suite. @ 07/05/25 13:04:03.415
• [20.164 seconds]
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 07/05/25 13:04:03.425
  I0705 13:04:03.425739 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename subpath @ 07/05/25 13:04:03.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:04:03.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:04:03.443
  STEP: Setting up data @ 07/05/25 13:04:03.447
  STEP: Creating pod pod-subpath-test-secret-b6gv @ 07/05/25 13:04:03.462
  STEP: Creating a pod to test atomic-volume-subpath @ 07/05/25 13:04:03.462
  STEP: Saw pod success @ 07/05/25 13:04:25.554
  I0705 13:04:25.560010 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-subpath-test-secret-b6gv container test-container-subpath-secret-b6gv: <nil>
  STEP: delete the pod @ 07/05/25 13:04:25.57
  STEP: Deleting pod pod-subpath-test-secret-b6gv @ 07/05/25 13:04:25.591
  I0705 13:04:25.591403 21 delete.go:62] Deleting pod "pod-subpath-test-secret-b6gv" in namespace "subpath-918"
  I0705 13:04:25.597650 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-918" for this suite. @ 07/05/25 13:04:25.605
• [22.188 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 07/05/25 13:04:25.613
  I0705 13:04:25.613943 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename webhook @ 07/05/25 13:04:25.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:04:25.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:04:25.632
  STEP: Setting up server cert @ 07/05/25 13:04:25.656
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/05/25 13:04:25.857
  STEP: Deploying the webhook pod @ 07/05/25 13:04:25.863
  STEP: Wait for the deployment to be ready @ 07/05/25 13:04:25.88
  I0705 13:04:25.898031 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/05/25 13:04:27.916
  STEP: Verifying the service has paired with the endpoint @ 07/05/25 13:04:27.937
  I0705 13:04:28.937355 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 07/05/25 13:04:28.946
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 07/05/25 13:04:28.947
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 07/05/25 13:04:28.947
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 07/05/25 13:04:28.947
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 07/05/25 13:04:28.949
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 07/05/25 13:04:28.949
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 07/05/25 13:04:28.95
  I0705 13:04:29.011938 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6645" for this suite. @ 07/05/25 13:04:29.017
  STEP: Destroying namespace "webhook-markers-3647" for this suite. @ 07/05/25 13:04:29.027
• [3.422 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 07/05/25 13:04:29.035
  I0705 13:04:29.035897 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename containers @ 07/05/25 13:04:29.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:04:29.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:04:29.05
  STEP: Creating a pod to test override all @ 07/05/25 13:04:29.053
  STEP: Saw pod success @ 07/05/25 13:04:33.082
  I0705 13:04:33.088158 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod client-containers-334f822f-73f4-43f8-8b8e-79856dda06d3 container agnhost-container: <nil>
  STEP: delete the pod @ 07/05/25 13:04:33.099
  I0705 13:04:33.125053 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8250" for this suite. @ 07/05/25 13:04:33.132
• [4.107 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 07/05/25 13:04:33.143
  I0705 13:04:33.143419 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename container-runtime @ 07/05/25 13:04:33.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:04:33.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:04:33.158
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 07/05/25 13:04:33.176
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 07/05/25 13:04:49.283
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 07/05/25 13:04:49.287
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 07/05/25 13:04:49.299
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 07/05/25 13:04:49.299
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 07/05/25 13:04:49.333
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 07/05/25 13:04:51.347
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 07/05/25 13:04:53.365
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 07/05/25 13:04:53.374
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 07/05/25 13:04:53.375
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 07/05/25 13:04:53.407
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 07/05/25 13:04:54.421
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 07/05/25 13:04:55.431
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 07/05/25 13:04:55.443
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 07/05/25 13:04:55.443
  I0705 13:04:55.483487 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6763" for this suite. @ 07/05/25 13:04:55.49
• [22.359 seconds]
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 07/05/25 13:04:55.502
  I0705 13:04:55.502197 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename disruption @ 07/05/25 13:04:55.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:04:55.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:04:55.517
  STEP: creating the pdb @ 07/05/25 13:04:55.52
  STEP: Waiting for the pdb to be processed @ 07/05/25 13:04:55.528
  STEP: updating the pdb @ 07/05/25 13:04:55.533
  STEP: Waiting for the pdb to be processed @ 07/05/25 13:04:55.545
  STEP: patching the pdb @ 07/05/25 13:04:55.549
  STEP: Waiting for the pdb to be processed @ 07/05/25 13:04:55.56
  STEP: Waiting for the pdb to be deleted @ 07/05/25 13:04:55.579
  I0705 13:04:55.582833 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2077" for this suite. @ 07/05/25 13:04:55.591
• [0.101 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:335
  STEP: Creating a kubernetes client @ 07/05/25 13:04:55.603
  I0705 13:04:55.603395 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename resourcequota @ 07/05/25 13:04:55.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:04:55.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:04:55.617
  STEP: Counting existing ResourceQuota @ 07/05/25 13:05:12.626
  STEP: Creating a ResourceQuota @ 07/05/25 13:05:17.632
  STEP: Ensuring resource quota status is calculated @ 07/05/25 13:05:17.639
  STEP: Creating a ConfigMap @ 07/05/25 13:05:19.647
  STEP: Ensuring resource quota status captures configMap creation @ 07/05/25 13:05:19.66
  STEP: Deleting a ConfigMap @ 07/05/25 13:05:21.666
  STEP: Ensuring resource quota status released usage @ 07/05/25 13:05:21.674
  I0705 13:05:23.682197 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2061" for this suite. @ 07/05/25 13:05:23.689
• [28.095 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 07/05/25 13:05:23.699
  I0705 13:05:23.699147 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename projected @ 07/05/25 13:05:23.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:05:23.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:05:23.716
  STEP: Creating projection with secret that has name projected-secret-test-fbc0d4bf-483f-414f-b35b-45b03c0abbf8 @ 07/05/25 13:05:23.719
  STEP: Creating a pod to test consume secrets @ 07/05/25 13:05:23.725
  STEP: Saw pod success @ 07/05/25 13:05:27.761
  I0705 13:05:27.766767 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-projected-secrets-76049d7e-d24a-4a07-89f4-b69f47f28717 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/05/25 13:05:27.777
  I0705 13:05:27.802296 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9898" for this suite. @ 07/05/25 13:05:27.81
• [4.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 07/05/25 13:05:27.819
  I0705 13:05:27.819488 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename container-runtime @ 07/05/25 13:05:27.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:05:27.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:05:27.836
  STEP: create the container @ 07/05/25 13:05:27.839
  I0705 13:05:27.850671      21 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Failed @ 07/05/25 13:05:27.85
  STEP: get the container status @ 07/05/25 13:05:30.876
  STEP: the container should be terminated @ 07/05/25 13:05:30.883
  STEP: the termination message should be set @ 07/05/25 13:05:30.883
  I0705 13:05:30.883212 21 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 07/05/25 13:05:30.883
  I0705 13:05:30.907914 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4835" for this suite. @ 07/05/25 13:05:30.913
• [3.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 07/05/25 13:05:30.923
  I0705 13:05:30.923565 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename var-expansion @ 07/05/25 13:05:30.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:05:30.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:05:30.938
  I0705 13:05:32.965125 21 delete.go:62] Deleting pod "var-expansion-598c3a1d-fd77-4745-8045-c906a0baeabc" in namespace "var-expansion-5989"
  I0705 13:05:32.977527 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-598c3a1d-fd77-4745-8045-c906a0baeabc" to be fully deleted
  I0705 13:05:34.988694 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5989" for this suite. @ 07/05/25 13:05:34.995
• [4.083 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 07/05/25 13:05:35.006
  I0705 13:05:35.006470 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename pod-network-test @ 07/05/25 13:05:35.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:05:35.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:05:35.024
  STEP: Performing setup for networking test in namespace pod-network-test-6483 @ 07/05/25 13:05:35.027
  STEP: creating a selector @ 07/05/25 13:05:35.027
  STEP: Creating the service pods in kubernetes @ 07/05/25 13:05:35.027
  I0705 13:05:35.027302 21 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 07/05/25 13:05:49.2
  I0705 13:05:51.242648 21 utils.go:802] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0705 13:05:51.242685 21 utils.go:495] Going to poll 192.168.54.219 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0705 13:05:51.248996 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.54.219 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6483 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0705 13:05:51.249022 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0705 13:05:51.249083 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6483/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.54.219+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0705 13:05:52.294095 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0705 13:05:52.294144 21 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I0705 13:05:52.294156 21 utils.go:495] Going to poll 192.168.146.36 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0705 13:05:52.299610 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.146.36 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6483 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0705 13:05:52.299636 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0705 13:05:52.299679 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6483/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.146.36+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0705 13:05:53.348030 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0705 13:05:53.348126 21 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I0705 13:05:53.348147 21 utils.go:495] Going to poll 192.168.8.255 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0705 13:05:53.352693 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.8.255 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6483 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0705 13:05:53.352735 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0705 13:05:53.352785 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6483/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.8.255+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0705 13:05:54.399457 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0705 13:05:54.399512 21 utils.go:512] Found all 1 expected endpoints: [netserver-2]
  I0705 13:05:54.399616 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6483" for this suite. @ 07/05/25 13:05:54.405
• [19.411 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:900
  STEP: Creating a kubernetes client @ 07/05/25 13:05:54.417
  I0705 13:05:54.417526 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename pods @ 07/05/25 13:05:54.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:05:54.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:05:54.435
  STEP: creating a Pod with a static label @ 07/05/25 13:05:54.444
  STEP: watching for Pod to be ready @ 07/05/25 13:05:54.458
  I0705 13:05:54.460082 21 pods.go:947] observed Pod pod-test in namespace pods-6861 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0705 13:05:54.463179 21 pods.go:947] observed Pod pod-test in namespace pods-6861 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:05:54 +0000 UTC  }]
  I0705 13:05:54.483662 21 pods.go:947] observed Pod pod-test in namespace pods-6861 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:05:54 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:05:54 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:05:54 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:05:54 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:05:54 +0000 UTC  }]
  I0705 13:05:55.909566 21 pods.go:950] Found Pod pod-test in namespace pods-6861 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:05:55 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:05:54 +0000 UTC  } {Ready 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:05:55 +0000 UTC  } {ContainersReady 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:05:55 +0000 UTC  } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:05:54 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 07/05/25 13:05:55.913
  STEP: getting the Pod and ensuring that it's patched @ 07/05/25 13:05:55.925
  STEP: replacing the Pod's status Ready condition to False @ 07/05/25 13:05:55.934
  STEP: check the Pod again to ensure its Ready conditions are False @ 07/05/25 13:05:55.948
  STEP: deleting the Pod via a Collection with a LabelSelector @ 07/05/25 13:05:55.948
  STEP: watching for the Pod to be deleted @ 07/05/25 13:05:55.968
  I0705 13:05:55.969809 21 pods.go:1060] observed event type MODIFIED
  I0705 13:05:57.915850 21 pods.go:1060] observed event type MODIFIED
  I0705 13:05:58.079121 21 pods.go:1060] observed event type MODIFIED
  I0705 13:05:58.928921 21 pods.go:1060] observed event type MODIFIED
  I0705 13:05:58.942179 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6861" for this suite. @ 07/05/25 13:05:58.949
• [4.544 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 07/05/25 13:05:58.961
  I0705 13:05:58.961450 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename security-context @ 07/05/25 13:05:58.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:05:58.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:05:58.977
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 07/05/25 13:05:58.981
  STEP: Saw pod success @ 07/05/25 13:06:03.025
  I0705 13:06:03.029192 21 output.go:207] Trying to get logs from node ip-172-31-5-45 pod security-context-17a4d5db-91e2-4981-a105-ec99b0bc63cf container test-container: <nil>
  STEP: delete the pod @ 07/05/25 13:06:03.051
  I0705 13:06:03.077230 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-1177" for this suite. @ 07/05/25 13:06:03.082
• [4.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 07/05/25 13:06:03.091
  I0705 13:06:03.091567 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename configmap @ 07/05/25 13:06:03.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:06:03.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:06:03.106
  STEP: Creating configMap with name configmap-test-volume-4295c827-1884-4f38-92ec-bf7b0023b05d @ 07/05/25 13:06:03.109
  STEP: Creating a pod to test consume configMaps @ 07/05/25 13:06:03.116
  STEP: Saw pod success @ 07/05/25 13:06:07.147
  I0705 13:06:07.152517 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-configmaps-741c2803-13fc-46ef-b414-f009c75c4d5f container agnhost-container: <nil>
  STEP: delete the pod @ 07/05/25 13:06:07.164
  I0705 13:06:07.189637 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8199" for this suite. @ 07/05/25 13:06:07.197
• [4.114 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 07/05/25 13:06:07.205
  I0705 13:06:07.205928 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename downward-api @ 07/05/25 13:06:07.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:06:07.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:06:07.223
  STEP: Creating a pod to test downward API volume plugin @ 07/05/25 13:06:07.228
  STEP: Saw pod success @ 07/05/25 13:06:11.262
  I0705 13:06:11.268605 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod downwardapi-volume-efb5f3e8-8789-40f8-8412-ed8275d9bab8 container client-container: <nil>
  STEP: delete the pod @ 07/05/25 13:06:11.278
  I0705 13:06:11.298907 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8054" for this suite. @ 07/05/25 13:06:11.307
• [4.110 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3195
  STEP: Creating a kubernetes client @ 07/05/25 13:06:11.315
  I0705 13:06:11.315498 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename services @ 07/05/25 13:06:11.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:06:11.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:06:11.333
  STEP: fetching services @ 07/05/25 13:06:11.336
  I0705 13:06:11.343670 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7961" for this suite. @ 07/05/25 13:06:11.407
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 07/05/25 13:06:11.416
  I0705 13:06:11.416728 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename webhook @ 07/05/25 13:06:11.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:06:11.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:06:11.431
  STEP: Setting up server cert @ 07/05/25 13:06:11.454
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/05/25 13:06:11.717
  STEP: Deploying the webhook pod @ 07/05/25 13:06:11.725
  STEP: Wait for the deployment to be ready @ 07/05/25 13:06:11.739
  I0705 13:06:11.753188 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/05/25 13:06:13.772
  STEP: Verifying the service has paired with the endpoint @ 07/05/25 13:06:13.791
  I0705 13:06:14.792184 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 07/05/25 13:06:14.798
  STEP: create a pod @ 07/05/25 13:06:14.815
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 07/05/25 13:06:16.842
  I0705 13:06:16.843000 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=webhook-1318 attach --namespace=webhook-1318 to-be-attached-pod -i -c=container1'
  I0705 13:06:16.907423 21 builder.go:135] rc: 1
  I0705 13:06:16.976905 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1318" for this suite. @ 07/05/25 13:06:16.983
  STEP: Destroying namespace "webhook-markers-9491" for this suite. @ 07/05/25 13:06:16.992
• [5.586 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 07/05/25 13:06:17.003
  I0705 13:06:17.003221 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename secrets @ 07/05/25 13:06:17.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:06:17.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:06:17.016
  STEP: Creating secret with name secret-test-map-72e50e7f-b4db-41f4-8c07-77620478a9e3 @ 07/05/25 13:06:17.019
  STEP: Creating a pod to test consume secrets @ 07/05/25 13:06:17.024
  STEP: Saw pod success @ 07/05/25 13:06:21.056
  I0705 13:06:21.061962 21 output.go:207] Trying to get logs from node ip-172-31-5-45 pod pod-secrets-88e7e9d4-4010-49f9-9652-26cfea75297d container secret-volume-test: <nil>
  STEP: delete the pod @ 07/05/25 13:06:21.074
  I0705 13:06:21.097665 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5686" for this suite. @ 07/05/25 13:06:21.103
• [4.110 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 07/05/25 13:06:21.112
  I0705 13:06:21.112949 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename downward-api @ 07/05/25 13:06:21.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:06:21.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:06:21.128
  STEP: Creating a pod to test downward api env vars @ 07/05/25 13:06:21.131
  STEP: Saw pod success @ 07/05/25 13:06:23.154
  I0705 13:06:23.159087 21 output.go:207] Trying to get logs from node ip-172-31-5-45 pod downward-api-af4a6f7a-70a5-4502-9660-2ff4a94578d0 container dapi-container: <nil>
  STEP: delete the pod @ 07/05/25 13:06:23.17
  I0705 13:06:23.194803 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1200" for this suite. @ 07/05/25 13:06:23.202
• [2.098 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:693
  STEP: Creating a kubernetes client @ 07/05/25 13:06:23.211
  I0705 13:06:23.211241 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename security-context-test @ 07/05/25 13:06:23.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:06:23.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:06:23.229
  I0705 13:06:27.277367 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1315" for this suite. @ 07/05/25 13:06:27.282
• [4.081 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 07/05/25 13:06:27.292
  I0705 13:06:27.292436 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/05/25 13:06:27.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:06:27.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:06:27.308
  STEP: create the container to handle the HTTPGet hook request. @ 07/05/25 13:06:27.383
  STEP: create the pod with lifecycle hook @ 07/05/25 13:06:29.416
  STEP: delete the pod with lifecycle hook @ 07/05/25 13:06:31.444
  STEP: check prestop hook @ 07/05/25 13:06:33.466
  I0705 13:06:33.489446 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9040" for this suite. @ 07/05/25 13:06:33.495
• [6.213 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:393
  STEP: Creating a kubernetes client @ 07/05/25 13:06:33.505
  I0705 13:06:33.505323 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/05/25 13:06:33.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:06:33.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:06:33.52
  STEP: set up a multi version CRD @ 07/05/25 13:06:33.524
  I0705 13:06:33.524514 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: rename a version @ 07/05/25 13:06:36.707
  STEP: check the new version name is served @ 07/05/25 13:06:36.721
  STEP: check the old version name is removed @ 07/05/25 13:06:37.516
  STEP: check the other version is not changed @ 07/05/25 13:06:38.146
  I0705 13:06:40.589950 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2793" for this suite. @ 07/05/25 13:06:40.598
• [7.103 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 07/05/25 13:06:40.608
  I0705 13:06:40.608289 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename projected @ 07/05/25 13:06:40.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:06:40.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:06:40.625
  STEP: Creating a pod to test downward API volume plugin @ 07/05/25 13:06:40.628
  STEP: Saw pod success @ 07/05/25 13:06:42.65
  I0705 13:06:42.654618 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod downwardapi-volume-ca01fb8f-d408-474f-a441-80296e996f28 container client-container: <nil>
  STEP: delete the pod @ 07/05/25 13:06:42.668
  I0705 13:06:42.688028 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5064" for this suite. @ 07/05/25 13:06:42.694
• [2.094 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 07/05/25 13:06:42.701
  I0705 13:06:42.701880 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename downward-api @ 07/05/25 13:06:42.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:06:42.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:06:42.719
  STEP: Creating a pod to test downward API volume plugin @ 07/05/25 13:06:42.722
  STEP: Saw pod success @ 07/05/25 13:06:44.745
  I0705 13:06:44.750125 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod downwardapi-volume-c1a2b24b-c56a-4d88-b948-c22d50076515 container client-container: <nil>
  STEP: delete the pod @ 07/05/25 13:06:44.757
  I0705 13:06:44.780892 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7448" for this suite. @ 07/05/25 13:06:44.787
• [2.094 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 07/05/25 13:06:44.795
  I0705 13:06:44.795925 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename var-expansion @ 07/05/25 13:06:44.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:06:44.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:06:44.816
  STEP: Creating a pod to test substitution in container's command @ 07/05/25 13:06:44.819
  STEP: Saw pod success @ 07/05/25 13:06:46.841
  I0705 13:06:46.845745 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod var-expansion-82db141c-a189-42e4-896a-4930a175f9ef container dapi-container: <nil>
  STEP: delete the pod @ 07/05/25 13:06:46.855
  I0705 13:06:46.876635 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4398" for this suite. @ 07/05/25 13:06:46.881
• [2.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:921
  STEP: Creating a kubernetes client @ 07/05/25 13:06:46.889
  I0705 13:06:46.890001 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename job @ 07/05/25 13:06:46.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:06:46.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:06:46.906
  STEP: Creating a job @ 07/05/25 13:06:46.909
  STEP: Ensuring active pods == parallelism @ 07/05/25 13:06:46.915
  STEP: Orphaning one of the Job's Pods @ 07/05/25 13:06:48.926
  I0705 13:06:49.446613 21 pod_client.go:173] Successfully updated pod "adopt-release-nwfmn"
  STEP: Checking that the Job readopts the Pod @ 07/05/25 13:06:49.446
  STEP: Removing the labels from the Job's Pod @ 07/05/25 13:06:51.456
  I0705 13:06:51.971518 21 pod_client.go:173] Successfully updated pod "adopt-release-nwfmn"
  STEP: Checking that the Job releases the Pod @ 07/05/25 13:06:51.971
  I0705 13:06:53.983599 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6157" for this suite. @ 07/05/25 13:06:53.989
• [7.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:159
  STEP: Creating a kubernetes client @ 07/05/25 13:06:53.998
  I0705 13:06:53.998958 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename emptydir @ 07/05/25 13:06:54
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:06:54.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:06:54.016
  STEP: Creating a pod to test emptydir volume type on node default medium @ 07/05/25 13:06:54.02
  STEP: Saw pod success @ 07/05/25 13:06:58.049
  I0705 13:06:58.054521 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-6723e9b3-2d96-433a-be74-0df130d25311 container test-container: <nil>
  STEP: delete the pod @ 07/05/25 13:06:58.063
  I0705 13:06:58.086494 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3400" for this suite. @ 07/05/25 13:06:58.093
• [4.102 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 07/05/25 13:06:58.101
  I0705 13:06:58.101520 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename apf @ 07/05/25 13:06:58.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:06:58.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:06:58.117
  STEP: getting /apis @ 07/05/25 13:06:58.12
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 07/05/25 13:06:58.123
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 07/05/25 13:06:58.124
  STEP: creating @ 07/05/25 13:06:58.125
  STEP: getting @ 07/05/25 13:06:58.143
  STEP: listing @ 07/05/25 13:06:58.147
  STEP: watching @ 07/05/25 13:06:58.152
  I0705 13:06:58.152052 21 flowcontrol.go:620] starting watch
  STEP: patching @ 07/05/25 13:06:58.153
  STEP: updating @ 07/05/25 13:06:58.16
  I0705 13:06:58.169246 21 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 07/05/25 13:06:58.169
  STEP: patching /status @ 07/05/25 13:06:58.173
  STEP: updating /status @ 07/05/25 13:06:58.18
  STEP: deleting @ 07/05/25 13:06:58.191
  STEP: deleting a collection @ 07/05/25 13:06:58.208
  I0705 13:06:58.239006 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-7578" for this suite. @ 07/05/25 13:06:58.244
• [0.152 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 07/05/25 13:06:58.253
  I0705 13:06:58.253582 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename csistoragecapacity @ 07/05/25 13:06:58.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:06:58.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:06:58.272
  STEP: getting /apis @ 07/05/25 13:06:58.276
  STEP: getting /apis/storage.k8s.io @ 07/05/25 13:06:58.28
  STEP: getting /apis/storage.k8s.io/v1 @ 07/05/25 13:06:58.281
  STEP: creating @ 07/05/25 13:06:58.283
  STEP: watching @ 07/05/25 13:06:58.305
  I0705 13:06:58.305955 21 csistoragecapacity.go:143] starting watch
  STEP: getting @ 07/05/25 13:06:58.314
  STEP: listing in namespace @ 07/05/25 13:06:58.319
  STEP: listing across namespaces @ 07/05/25 13:06:58.323
  STEP: patching @ 07/05/25 13:06:58.327
  STEP: updating @ 07/05/25 13:06:58.335
  I0705 13:06:58.340335 21 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0705 13:06:58.340483 21 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 07/05/25 13:06:58.34
  STEP: deleting a collection @ 07/05/25 13:06:58.357
  I0705 13:06:58.385197 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-1289" for this suite. @ 07/05/25 13:06:58.391
• [0.146 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:246
  STEP: Creating a kubernetes client @ 07/05/25 13:06:58.399
  I0705 13:06:58.399127 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename namespaces @ 07/05/25 13:06:58.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:06:58.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:06:58.415
  STEP: Creating a test namespace @ 07/05/25 13:06:58.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:06:58.43
  STEP: Creating a pod in the namespace @ 07/05/25 13:06:58.433
  STEP: Waiting for the pod to have running status @ 07/05/25 13:06:58.444
  STEP: Deleting the namespace @ 07/05/25 13:07:00.457
  STEP: Waiting for the namespace to be removed. @ 07/05/25 13:07:00.466
  STEP: Recreating the namespace @ 07/05/25 13:07:11.473
  STEP: Verifying there are no pods in the namespace @ 07/05/25 13:07:11.486
  I0705 13:07:11.490839 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3188" for this suite. @ 07/05/25 13:07:11.496
  STEP: Destroying namespace "nsdeletetest-8719" for this suite. @ 07/05/25 13:07:11.504
  I0705 13:07:11.508646 21 framework.go:370] Namespace nsdeletetest-8719 was already deleted
  STEP: Destroying namespace "nsdeletetest-1562" for this suite. @ 07/05/25 13:07:11.508
• [13.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:133
  STEP: Creating a kubernetes client @ 07/05/25 13:07:11.516
  I0705 13:07:11.516836 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename runtimeclass @ 07/05/25 13:07:11.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:07:11.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:07:11.532
  I0705 13:07:11.570742 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4678" for this suite. @ 07/05/25 13:07:11.617
• [0.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:169
  STEP: Creating a kubernetes client @ 07/05/25 13:07:11.631
  I0705 13:07:11.631199 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename emptydir @ 07/05/25 13:07:11.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:07:11.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:07:11.654
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 07/05/25 13:07:11.657
  STEP: Saw pod success @ 07/05/25 13:07:15.683
  I0705 13:07:15.688175 21 output.go:207] Trying to get logs from node ip-172-31-5-45 pod pod-8279f0a5-cdd2-44e9-a239-5e8eb5a686e4 container test-container: <nil>
  STEP: delete the pod @ 07/05/25 13:07:15.702
  I0705 13:07:15.725909 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2684" for this suite. @ 07/05/25 13:07:15.731
• [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 07/05/25 13:07:15.74
  I0705 13:07:15.740697 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename webhook @ 07/05/25 13:07:15.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:07:15.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:07:15.758
  STEP: Setting up server cert @ 07/05/25 13:07:15.78
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/05/25 13:07:15.937
  STEP: Deploying the webhook pod @ 07/05/25 13:07:15.943
  STEP: Wait for the deployment to be ready @ 07/05/25 13:07:15.96
  I0705 13:07:15.972526 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0705 13:07:17.989232 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 5, 13, 7, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 13, 7, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 5, 13, 7, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 13, 7, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 07/05/25 13:07:19.995
  STEP: Verifying the service has paired with the endpoint @ 07/05/25 13:07:20.011
  I0705 13:07:21.012268 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 07/05/25 13:07:21.017
  STEP: verifying the mutating webhook match conditions @ 07/05/25 13:07:21.026
  STEP: updating the mutating webhook match conditions @ 07/05/25 13:07:21.032
  STEP: verifying the mutating webhook match conditions @ 07/05/25 13:07:21.044
  I0705 13:07:21.111484 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3193" for this suite. @ 07/05/25 13:07:21.116
  STEP: Destroying namespace "webhook-markers-6419" for this suite. @ 07/05/25 13:07:21.127
• [5.395 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 07/05/25 13:07:21.135
  I0705 13:07:21.135456 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename job @ 07/05/25 13:07:21.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:07:21.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:07:21.151
  STEP: Looking for a node to schedule job pod @ 07/05/25 13:07:21.153
  STEP: Creating a job @ 07/05/25 13:07:21.218
  STEP: Ensuring job fails @ 07/05/25 13:07:21.224
  I0705 13:07:25.240221 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5874" for this suite. @ 07/05/25 13:07:25.245
• [4.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:722
  STEP: Creating a kubernetes client @ 07/05/25 13:07:25.254
  I0705 13:07:25.254762 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename gc @ 07/05/25 13:07:25.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:07:25.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:07:25.271
  STEP: create the rc1 @ 07/05/25 13:07:25.347
  STEP: create the rc2 @ 07/05/25 13:07:25.353
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 07/05/25 13:07:31.363
  STEP: delete the rc simpletest-rc-to-be-deleted @ 07/05/25 13:07:32.09
  STEP: wait for the rc to be deleted @ 07/05/25 13:07:32.103
  I0705 13:07:37.122667 21 garbage_collector.go:770] 64 pods remaining
  I0705 13:07:37.122708 21 garbage_collector.go:777] 64 pods has nil DeletionTimestamp
  I0705 13:07:37.122715 21 garbage_collector.go:778] 
  STEP: Gathering metrics @ 07/05/25 13:07:42.118
  W0705 13:07:42.124378      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0705 13:07:42.124409 21 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0705 13:07:42.124460 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-22ml2" in namespace "gc-9032"
  I0705 13:07:42.145505 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2xbcm" in namespace "gc-9032"
  I0705 13:07:42.164415 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-46lnx" in namespace "gc-9032"
  I0705 13:07:42.180707 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-47wpr" in namespace "gc-9032"
  I0705 13:07:42.198512 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4jlxf" in namespace "gc-9032"
  I0705 13:07:42.213838 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4w65v" in namespace "gc-9032"
  I0705 13:07:42.228271 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5d8w7" in namespace "gc-9032"
  I0705 13:07:42.244701 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5fdmb" in namespace "gc-9032"
  I0705 13:07:42.258764 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5kpkl" in namespace "gc-9032"
  I0705 13:07:42.275396 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5mfhc" in namespace "gc-9032"
  I0705 13:07:42.290763 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5vz6g" in namespace "gc-9032"
  I0705 13:07:42.307649 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5wrk5" in namespace "gc-9032"
  I0705 13:07:42.324154 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5zmm5" in namespace "gc-9032"
  I0705 13:07:42.342406 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6zp25" in namespace "gc-9032"
  I0705 13:07:42.362411 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-78vbr" in namespace "gc-9032"
  I0705 13:07:42.381018 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-79znx" in namespace "gc-9032"
  I0705 13:07:42.399535 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7jc5t" in namespace "gc-9032"
  I0705 13:07:42.415504 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7nctk" in namespace "gc-9032"
  I0705 13:07:42.435211 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-845n7" in namespace "gc-9032"
  I0705 13:07:42.460178 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-89sd7" in namespace "gc-9032"
  I0705 13:07:42.489798 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-92wdq" in namespace "gc-9032"
  I0705 13:07:42.506501 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-92zbb" in namespace "gc-9032"
  I0705 13:07:42.531011 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-97q6b" in namespace "gc-9032"
  I0705 13:07:42.555436 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-99d2z" in namespace "gc-9032"
  I0705 13:07:42.574208 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9dfp6" in namespace "gc-9032"
  I0705 13:07:42.594732 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9nrc6" in namespace "gc-9032"
  I0705 13:07:42.616488 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9ql6n" in namespace "gc-9032"
  I0705 13:07:42.631577 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bfks9" in namespace "gc-9032"
  I0705 13:07:42.647548 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bhdh6" in namespace "gc-9032"
  I0705 13:07:42.662678 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bhgjc" in namespace "gc-9032"
  I0705 13:07:42.682949 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bhvn8" in namespace "gc-9032"
  I0705 13:07:42.697876 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bmgn8" in namespace "gc-9032"
  I0705 13:07:42.712150 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-br4nh" in namespace "gc-9032"
  I0705 13:07:42.728042 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-brbkl" in namespace "gc-9032"
  I0705 13:07:42.749623 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c8m9c" in namespace "gc-9032"
  I0705 13:07:42.763497 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cfkql" in namespace "gc-9032"
  I0705 13:07:42.777893 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-crq22" in namespace "gc-9032"
  I0705 13:07:42.798419 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-csrwl" in namespace "gc-9032"
  I0705 13:07:42.822163 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dbzvj" in namespace "gc-9032"
  I0705 13:07:42.841623 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dcj4m" in namespace "gc-9032"
  I0705 13:07:42.859785 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dttrs" in namespace "gc-9032"
  I0705 13:07:42.875370 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f45pl" in namespace "gc-9032"
  I0705 13:07:42.894936 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f625g" in namespace "gc-9032"
  I0705 13:07:42.912760 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f7626" in namespace "gc-9032"
  I0705 13:07:42.927768 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fcqtm" in namespace "gc-9032"
  I0705 13:07:42.942237 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ffgzf" in namespace "gc-9032"
  I0705 13:07:42.955033 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fp9st" in namespace "gc-9032"
  I0705 13:07:42.972146 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gqlk7" in namespace "gc-9032"
  I0705 13:07:42.985581 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gxdpc" in namespace "gc-9032"
  I0705 13:07:43.007150 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hj6x6" in namespace "gc-9032"
  I0705 13:07:43.027425 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9032" for this suite. @ 07/05/25 13:07:43.033
• [17.789 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 07/05/25 13:07:43.044
  I0705 13:07:43.044131 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename deployment @ 07/05/25 13:07:43.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:07:43.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:07:43.103
  I0705 13:07:43.114571 21 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0705 13:07:43.125011 21 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  I0705 13:07:48.155484 21 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/05/25 13:07:48.155
  I0705 13:07:48.155558 21 deployment.go:769] Creating deployment "test-rolling-update-deployment"
  I0705 13:07:48.161104 21 deployment.go:775] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0705 13:07:48.173888 21 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I0705 13:07:50.186914 21 deployment.go:779] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0705 13:07:50.191147 21 deployment.go:784] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0705 13:07:50.293035 21 deployment.go:632] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3526",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b3fb2ba3-21e5-49ac-8575-e2240933d03f",
      ResourceVersion: (string) (len=5) "30366",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887317668,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887317668,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887317669,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887317668,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887317668,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887317669,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887317668,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0705 13:07:50.388312 21 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3526",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "06e7bf2f-2be6-4677-89ad-49f7537dcac0",
      ResourceVersion: (string) (len=5) "30352",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887317668,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "b3fb2ba3-21e5-49ac-8575-e2240933d03f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887317668,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 33 66 62 32 62  61 33 2d 32 31 65 35 2d  |\"b3fb2ba3-21e5-|
              00000120  34 39 61 63 2d 38 35 37  35 2d 65 32 32 34 30 39  |49ac-8575-e22409|
              00000130  33 33 64 30 33 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |33d03f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887317669,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0705 13:07:50.389277 21 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0705 13:07:50.389558 21 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3526",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4bab292c-6e69-4d6b-82cf-520f89e71515",
      ResourceVersion: (string) (len=5) "30365",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887317663,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "b3fb2ba3-21e5-49ac-8575-e2240933d03f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887317663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887317669,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 62 33 66 62 32 62 61  |"uid\":\"b3fb2ba|
              000000b0  33 2d 32 31 65 35 2d 34  39 61 63 2d 38 35 37 35  |3-21e5-49ac-8575|
              000000c0  2d 65 32 32 34 30 39 33  33 64 30 33 66 5c 22 7d  |-e2240933d03f\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887317669,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0705 13:07:50.396209 21 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-r49t4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-r49t4",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=15) "deployment-3526",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4658627f-c52c-4b9c-9c8a-889d0e22d757",
      ResourceVersion: (string) (len=5) "30351",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887317668,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "06e7bf2f-2be6-4677-89ad-49f7537dcac0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887317668,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  65 37 62 66 32 66 2d 32  |d\":\"06e7bf2f-2|
              00000090  62 65 36 2d 34 36 37 37  2d 38 39 61 64 2d 34 39  |be6-4677-89ad-49|
              000000a0  66 37 35 33 37 64 63 61  63 30 5c 22 7d 22 3a 7b  |f7537dcac0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887317669,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 35 34  2e 32 30 34 5c 22 7d 22  |2.168.54.204\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2msdj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2msdj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-171",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887317669,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887317668,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887317669,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887317669,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887317668,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.171",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.171"
        }
      },
      PodIP: (string) (len=14) "192.168.54.204",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.54.204"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887317668,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63887317668,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://2e0e84671ef551c9f4da51761eff1279507940e4d469326fedb75316e0b098e6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2msdj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 13:07:50.398664 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3526" for this suite. @ 07/05/25 13:07:50.406
• [7.371 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 07/05/25 13:07:50.414
  I0705 13:07:50.414953 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename webhook @ 07/05/25 13:07:50.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:07:50.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:07:50.431
  STEP: Setting up server cert @ 07/05/25 13:07:50.453
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/05/25 13:07:50.725
  STEP: Deploying the webhook pod @ 07/05/25 13:07:50.732
  STEP: Wait for the deployment to be ready @ 07/05/25 13:07:50.746
  I0705 13:07:50.759688 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/05/25 13:07:52.773
  STEP: Verifying the service has paired with the endpoint @ 07/05/25 13:07:52.79
  I0705 13:07:53.790498 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0705 13:07:53.796243 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6588-crds.webhook.example.com via the AdmissionRegistration API @ 07/05/25 13:07:54.306
  STEP: Creating a custom resource that should be mutated by the webhook @ 07/05/25 13:07:54.321
  I0705 13:07:56.921087 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1741" for this suite. @ 07/05/25 13:07:56.927
  STEP: Destroying namespace "webhook-markers-2012" for this suite. @ 07/05/25 13:07:56.936
• [6.531 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:229
  STEP: Creating a kubernetes client @ 07/05/25 13:07:56.945
  I0705 13:07:56.945983 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename emptydir @ 07/05/25 13:07:56.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:07:56.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:07:56.961
  STEP: Creating Pod @ 07/05/25 13:07:56.963
  STEP: Reading file content from the nginx-container @ 07/05/25 13:07:58.987
  I0705 13:07:58.987644 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-3322 PodName:pod-sharedvolume-7ce8f2a8-b7e5-4e9d-a330-5f834afc0abe ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0705 13:07:58.987661 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0705 13:07:58.987708 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/emptydir-3322/pods/pod-sharedvolume-7ce8f2a8-b7e5-4e9d-a330-5f834afc0abe/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0705 13:07:59.033821 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0705 13:07:59.034083 21 exec_util.go:112] Exec stderr: ""
  I0705 13:07:59.034446 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3322" for this suite. @ 07/05/25 13:07:59.041
• [2.105 seconds]
------------------------------
S
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 07/05/25 13:07:59.051
  I0705 13:07:59.051112 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename volumeattachment @ 07/05/25 13:07:59.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:07:59.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:07:59.067
  STEP: Create VolumeAttachment "va-e2e-cfg2b" on node "ip-172-31-43-213" @ 07/05/25 13:07:59.141
  STEP: Get VolumeAttachment "va-e2e-cfg2b" on node "ip-172-31-43-213" @ 07/05/25 13:07:59.149
  STEP: Patch VolumeAttachment "va-e2e-cfg2b" on node "ip-172-31-43-213" @ 07/05/25 13:07:59.155
  STEP: List VolumeAttachments with "va-e2e-cfg2b=patched" label @ 07/05/25 13:07:59.162
  STEP: Delete VolumeAttachment "va-e2e-cfg2b" on node "ip-172-31-43-213" @ 07/05/25 13:07:59.165
  STEP: Confirm deletion of VolumeAttachment "va-e2e-cfg2b" on node "ip-172-31-43-213" @ 07/05/25 13:07:59.174
  STEP: Create VolumeAttachment "va-e2e-vb28s" on node "ip-172-31-43-213" @ 07/05/25 13:07:59.242
  STEP: Update the VolumeAttachment "va-e2e-vb28s" on node "ip-172-31-43-213" with label "va-e2e=updated" @ 07/05/25 13:07:59.252
  STEP: Create VolumeAttachment "va-e2e-lbf47" on node "ip-172-31-5-45" @ 07/05/25 13:07:59.342
  STEP: Update the VolumeAttachment "va-e2e-lbf47" on node "ip-172-31-5-45" with label "va-e2e=updated" @ 07/05/25 13:07:59.35
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 07/05/25 13:07:59.362
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 07/05/25 13:07:59.382
  I0705 13:07:59.389455 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-7947" for this suite. @ 07/05/25 13:07:59.445
• [0.402 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 07/05/25 13:07:59.453
  I0705 13:07:59.453670 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename downward-api @ 07/05/25 13:07:59.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:07:59.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:07:59.472
  STEP: Creating a pod to test downward API volume plugin @ 07/05/25 13:07:59.476
  STEP: Saw pod success @ 07/05/25 13:08:03.509
  I0705 13:08:03.514178 21 output.go:207] Trying to get logs from node ip-172-31-5-45 pod downwardapi-volume-0a959f25-9362-4b42-a825-168b7e7de151 container client-container: <nil>
  STEP: delete the pod @ 07/05/25 13:08:03.523
  I0705 13:08:03.544271 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4002" for this suite. @ 07/05/25 13:08:03.55
• [4.107 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 07/05/25 13:08:03.56
  I0705 13:08:03.560721 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename projected @ 07/05/25 13:08:03.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:08:03.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:08:03.577
  STEP: Creating a pod to test downward API volume plugin @ 07/05/25 13:08:03.579
  STEP: Saw pod success @ 07/05/25 13:08:07.608
  I0705 13:08:07.614252 21 output.go:207] Trying to get logs from node ip-172-31-5-45 pod downwardapi-volume-62b1dcbc-126c-4d25-9c37-750483ced3c8 container client-container: <nil>
  STEP: delete the pod @ 07/05/25 13:08:07.622
  I0705 13:08:07.642239 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2595" for this suite. @ 07/05/25 13:08:07.648
• [4.098 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 07/05/25 13:08:07.658
  I0705 13:08:07.658368 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename projected @ 07/05/25 13:08:07.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:08:07.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:08:07.674
  STEP: Creating projection with secret that has name projected-secret-test-20d85316-4035-48a0-a976-393325742f94 @ 07/05/25 13:08:07.677
  STEP: Creating a pod to test consume secrets @ 07/05/25 13:08:07.685
  STEP: Saw pod success @ 07/05/25 13:08:11.714
  I0705 13:08:11.719032 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-projected-secrets-f00bfd4d-2e50-4277-81f7-f2f28f4f6d80 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/05/25 13:08:11.732
  I0705 13:08:11.752680 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2348" for this suite. @ 07/05/25 13:08:11.757
• [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 07/05/25 13:08:11.769
  I0705 13:08:11.769059 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename chunking @ 07/05/25 13:08:11.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:08:11.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:08:11.785
  STEP: creating a large number of resources @ 07/05/25 13:08:11.788
  STEP: retrieving those results in paged fashion several times @ 07/05/25 13:08:29.477
  I0705 13:08:29.529383 21 chunking.go:98] Retrieved 17/17 results with rv 31492 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTIsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0705 13:08:29.576458 21 chunking.go:98] Retrieved 17/17 results with rv 31492 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0705 13:08:29.625499 21 chunking.go:98] Retrieved 17/17 results with rv 31492 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTIsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0705 13:08:29.676274 21 chunking.go:98] Retrieved 17/17 results with rv 31492 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTIsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0705 13:08:29.726568 21 chunking.go:98] Retrieved 17/17 results with rv 31492 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTIsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0705 13:08:29.774760 21 chunking.go:98] Retrieved 17/17 results with rv 31492 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTIsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0705 13:08:29.825527 21 chunking.go:98] Retrieved 17/17 results with rv 31492 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTIsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0705 13:08:29.876002 21 chunking.go:98] Retrieved 17/17 results with rv 31492 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTIsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0705 13:08:29.924884 21 chunking.go:98] Retrieved 17/17 results with rv 31492 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTIsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0705 13:08:29.975537 21 chunking.go:98] Retrieved 17/17 results with rv 31492 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTIsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0705 13:08:30.025414 21 chunking.go:98] Retrieved 17/17 results with rv 31492 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTIsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0705 13:08:30.075538 21 chunking.go:98] Retrieved 17/17 results with rv 31492 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTIsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0705 13:08:30.124953 21 chunking.go:98] Retrieved 17/17 results with rv 31492 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTIsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0705 13:08:30.176017 21 chunking.go:98] Retrieved 17/17 results with rv 31492 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTIsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0705 13:08:30.225167 21 chunking.go:98] Retrieved 17/17 results with rv 31492 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTIsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0705 13:08:30.275379 21 chunking.go:98] Retrieved 17/17 results with rv 31492 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTIsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0705 13:08:30.325825 21 chunking.go:98] Retrieved 17/17 results with rv 31492 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTIsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0705 13:08:30.374661 21 chunking.go:98] Retrieved 17/17 results with rv 31492 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTIsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0705 13:08:30.425337 21 chunking.go:98] Retrieved 17/17 results with rv 31492 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTIsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0705 13:08:30.475637 21 chunking.go:98] Retrieved 17/17 results with rv 31492 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTIsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0705 13:08:30.524605 21 chunking.go:98] Retrieved 17/17 results with rv 31492 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTIsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0705 13:08:30.575202 21 chunking.go:98] Retrieved 17/17 results with rv 31492 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTIsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0705 13:08:30.625560 21 chunking.go:98] Retrieved 17/17 results with rv 31492 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTIsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0705 13:08:30.674243 21 chunking.go:98] Retrieved 9/17 results with rv 31492 and continue 
  I0705 13:08:30.729458 21 chunking.go:98] Retrieved 17/17 results with rv 31493 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTMsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0705 13:08:30.775524 21 chunking.go:98] Retrieved 17/17 results with rv 31493 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTMsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0705 13:08:30.826028 21 chunking.go:98] Retrieved 17/17 results with rv 31493 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTMsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0705 13:08:30.875985 21 chunking.go:98] Retrieved 17/17 results with rv 31493 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTMsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0705 13:08:30.925134 21 chunking.go:98] Retrieved 17/17 results with rv 31493 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTMsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0705 13:08:30.976211 21 chunking.go:98] Retrieved 17/17 results with rv 31493 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTMsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0705 13:08:31.025982 21 chunking.go:98] Retrieved 17/17 results with rv 31493 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTMsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0705 13:08:31.075404 21 chunking.go:98] Retrieved 17/17 results with rv 31493 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTMsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0705 13:08:31.126098 21 chunking.go:98] Retrieved 17/17 results with rv 31493 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTMsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0705 13:08:31.175886 21 chunking.go:98] Retrieved 17/17 results with rv 31493 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTMsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0705 13:08:31.225228 21 chunking.go:98] Retrieved 17/17 results with rv 31493 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTMsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0705 13:08:31.276198 21 chunking.go:98] Retrieved 17/17 results with rv 31493 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTMsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0705 13:08:31.326181 21 chunking.go:98] Retrieved 17/17 results with rv 31493 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTMsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0705 13:08:31.375254 21 chunking.go:98] Retrieved 17/17 results with rv 31493 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTMsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0705 13:08:31.426309 21 chunking.go:98] Retrieved 17/17 results with rv 31493 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTMsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0705 13:08:31.476151 21 chunking.go:98] Retrieved 17/17 results with rv 31493 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTMsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0705 13:08:31.525756 21 chunking.go:98] Retrieved 17/17 results with rv 31493 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTMsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0705 13:08:31.575370 21 chunking.go:98] Retrieved 17/17 results with rv 31493 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTMsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0705 13:08:31.626656 21 chunking.go:98] Retrieved 17/17 results with rv 31493 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTMsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0705 13:08:31.674581 21 chunking.go:98] Retrieved 17/17 results with rv 31493 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTMsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0705 13:08:31.725431 21 chunking.go:98] Retrieved 17/17 results with rv 31493 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTMsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0705 13:08:31.775853 21 chunking.go:98] Retrieved 17/17 results with rv 31493 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTMsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0705 13:08:31.825089 21 chunking.go:98] Retrieved 17/17 results with rv 31493 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTMsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0705 13:08:31.875222 21 chunking.go:98] Retrieved 9/17 results with rv 31493 and continue 
  I0705 13:08:31.929836 21 chunking.go:98] Retrieved 17/17 results with rv 31496 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTYsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0705 13:08:31.975693 21 chunking.go:98] Retrieved 17/17 results with rv 31496 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTYsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0705 13:08:32.025568 21 chunking.go:98] Retrieved 17/17 results with rv 31496 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTYsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0705 13:08:32.074343 21 chunking.go:98] Retrieved 17/17 results with rv 31496 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTYsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0705 13:08:32.126232 21 chunking.go:98] Retrieved 17/17 results with rv 31496 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTYsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0705 13:08:32.176025 21 chunking.go:98] Retrieved 17/17 results with rv 31496 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTYsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0705 13:08:32.225359 21 chunking.go:98] Retrieved 17/17 results with rv 31496 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTYsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0705 13:08:32.275986 21 chunking.go:98] Retrieved 17/17 results with rv 31496 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTYsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0705 13:08:32.325830 21 chunking.go:98] Retrieved 17/17 results with rv 31496 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTYsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0705 13:08:32.374551 21 chunking.go:98] Retrieved 17/17 results with rv 31496 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTYsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0705 13:08:32.426139 21 chunking.go:98] Retrieved 17/17 results with rv 31496 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTYsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0705 13:08:32.476307 21 chunking.go:98] Retrieved 17/17 results with rv 31496 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTYsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0705 13:08:32.525378 21 chunking.go:98] Retrieved 17/17 results with rv 31496 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTYsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0705 13:08:32.576240 21 chunking.go:98] Retrieved 17/17 results with rv 31496 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTYsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0705 13:08:32.626356 21 chunking.go:98] Retrieved 17/17 results with rv 31496 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTYsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0705 13:08:32.675339 21 chunking.go:98] Retrieved 17/17 results with rv 31496 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTYsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0705 13:08:32.726113 21 chunking.go:98] Retrieved 17/17 results with rv 31496 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTYsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0705 13:08:32.775663 21 chunking.go:98] Retrieved 17/17 results with rv 31496 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTYsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0705 13:08:32.824625 21 chunking.go:98] Retrieved 17/17 results with rv 31496 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTYsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0705 13:08:32.875240 21 chunking.go:98] Retrieved 17/17 results with rv 31496 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTYsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0705 13:08:32.926289 21 chunking.go:98] Retrieved 17/17 results with rv 31496 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTYsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0705 13:08:32.975652 21 chunking.go:98] Retrieved 17/17 results with rv 31496 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTYsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0705 13:08:33.025636 21 chunking.go:98] Retrieved 17/17 results with rv 31496 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0OTYsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0705 13:08:33.075447 21 chunking.go:98] Retrieved 9/17 results with rv 31496 and continue 
  STEP: retrieving those results all at once @ 07/05/25 13:08:33.075
  I0705 13:08:33.136535 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-3543" for this suite. @ 07/05/25 13:08:33.176
• [21.462 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:340
  STEP: Creating a kubernetes client @ 07/05/25 13:08:33.231
  I0705 13:08:33.231410 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename statefulset @ 07/05/25 13:08:33.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:08:33.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:08:33.245
  STEP: Creating service test in namespace statefulset-4996 @ 07/05/25 13:08:33.248
  STEP: Creating a new StatefulSet @ 07/05/25 13:08:33.255
  I0705 13:08:33.270394 21 wait.go:44] Found 0 stateful pods, waiting for 3
  I0705 13:08:43.269971 21 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0705 13:08:43.270188 21 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0705 13:08:43.270202 21 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 07/05/25 13:08:43.282
  I0705 13:08:43.297143 21 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 07/05/25 13:08:43.297
  STEP: Not applying an update when the partition is greater than the number of replicas @ 07/05/25 13:08:53.311
  STEP: Performing a canary update @ 07/05/25 13:08:53.311
  I0705 13:08:53.322338 21 statefulset.go:2542] Updating stateful set ss2
  I0705 13:08:53.332871 21 wait.go:74] Waiting for Pod statefulset-4996/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 07/05/25 13:09:03.337
  I0705 13:09:03.406047 21 wait.go:44] Found 2 stateful pods, waiting for 3
  I0705 13:09:13.386973 21 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0705 13:09:13.387016 21 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0705 13:09:13.387025 21 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 07/05/25 13:09:13.395
  I0705 13:09:13.408743 21 statefulset.go:2542] Updating stateful set ss2
  I0705 13:09:13.419769 21 wait.go:74] Waiting for Pod statefulset-4996/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0705 13:09:23.437366 21 statefulset.go:2542] Updating stateful set ss2
  I0705 13:09:23.449531 21 wait.go:56] Waiting for StatefulSet statefulset-4996/ss2 to complete update
  I0705 13:09:23.449575 21 wait.go:63] Waiting for Pod statefulset-4996/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0705 13:09:33.451332 21 statefulset.go:138] Deleting all statefulset in ns statefulset-4996
  I0705 13:09:33.456736 21 rest.go:153] Scaling statefulset ss2 to 0
  I0705 13:09:43.479591 21 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0705 13:09:43.484174 21 rest.go:91] Deleting statefulset ss2
  I0705 13:09:43.504702 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4996" for this suite. @ 07/05/25 13:09:43.511
• [70.288 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:119
  STEP: Creating a kubernetes client @ 07/05/25 13:09:43.519
  I0705 13:09:43.520043 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename emptydir @ 07/05/25 13:09:43.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:09:43.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:09:43.537
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 07/05/25 13:09:43.54
  STEP: Saw pod success @ 07/05/25 13:09:47.57
  I0705 13:09:47.575052 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-67a08a1d-469e-4612-9544-7eeabe7507dc container test-container: <nil>
  STEP: delete the pod @ 07/05/25 13:09:47.587
  I0705 13:09:47.610104 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1085" for this suite. @ 07/05/25 13:09:47.615
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 07/05/25 13:09:47.625
  I0705 13:09:47.625196 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename container-runtime @ 07/05/25 13:09:47.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:09:47.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:09:47.641
  STEP: create the container @ 07/05/25 13:09:47.644
  I0705 13:09:47.656205      21 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 07/05/25 13:09:47.656
  STEP: get the container status @ 07/05/25 13:09:50.677
  STEP: the container should be terminated @ 07/05/25 13:09:50.682
  STEP: the termination message should be set @ 07/05/25 13:09:50.682
  I0705 13:09:50.682372 21 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 07/05/25 13:09:50.682
  I0705 13:09:50.702149 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4518" for this suite. @ 07/05/25 13:09:50.708
• [3.094 seconds]
------------------------------
SSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 07/05/25 13:09:50.719
  I0705 13:09:50.719611 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename prestop @ 07/05/25 13:09:50.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:09:50.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:09:50.733
  STEP: Creating server pod server in namespace prestop-1579 @ 07/05/25 13:09:50.736
  STEP: Waiting for pods to come up. @ 07/05/25 13:09:50.745
  STEP: Creating tester pod tester in namespace prestop-1579 @ 07/05/25 13:09:52.763
  STEP: Deleting pre-stop pod @ 07/05/25 13:09:54.779
  I0705 13:09:59.797763 21 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 07/05/25 13:09:59.798
  I0705 13:09:59.813331 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-1579" for this suite. @ 07/05/25 13:09:59.819
• [9.109 seconds]
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 07/05/25 13:09:59.828
  I0705 13:09:59.828293 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename init-container @ 07/05/25 13:09:59.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:09:59.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:09:59.844
  STEP: creating the pod @ 07/05/25 13:09:59.847
  I0705 13:09:59.847493 21 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I0705 13:10:43.036594 21 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-ae1fcc79-b982-41b4-8f98-c977627f6bc7", GenerateName:"", Namespace:"init-container-85", SelfLink:"", UID:"2002670f-8f99-4c14-9c48-ec0b30c87c29", ResourceVersion:"32671", Generation:1, CreationTimestamp:time.Date(2025, time.July, 5, 13, 9, 59, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"847482882"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 9, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c0f1e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 10, 43, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c0f218), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-r8bmb", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc00537c500), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-r8bmb", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-r8bmb", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-r8bmb", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc006e84338), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-22-171", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc005afafc0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc006e843c0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc006e843e0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc006e843e8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc006e843ec), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc00105e3d0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{ObservedGeneration:0, Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 5, 13, 10, 0, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 5, 13, 9, 59, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 5, 13, 9, 59, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 5, 13, 9, 59, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 5, 13, 9, 59, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.22.171", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.22.171"}}, PodIP:"192.168.54.220", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.54.220"}}, StartTime:time.Date(2025, time.July, 5, 13, 9, 59, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0025619d0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc002561b90)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://53b71f38a9c5d306431ddd25be6a39e62a37d0f76a95e998e0fb3d236db0fcea", Started:(*bool)(0xc006e8449a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(0xc002d19c20), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-r8bmb", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc00105e3f0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00537c560), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc006e844ad), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-r8bmb", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc00105e420)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00537c540), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc006e84464), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-r8bmb", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc00105e3e0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0705 13:10:43.036867 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-85" for this suite. @ 07/05/25 13:10:43.042
• [43.223 seconds]
------------------------------
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 07/05/25 13:10:43.051
  I0705 13:10:43.051584 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/05/25 13:10:43.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:10:43.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:10:43.07
  STEP: create the container to handle the HTTPGet hook request. @ 07/05/25 13:10:43.143
  STEP: create the pod with lifecycle hook @ 07/05/25 13:10:45.173
  STEP: delete the pod with lifecycle hook @ 07/05/25 13:10:47.198
  STEP: check prestop hook @ 07/05/25 13:10:49.22
  I0705 13:10:49.233364 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1376" for this suite. @ 07/05/25 13:10:49.239
• [6.199 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:647
  STEP: Creating a kubernetes client @ 07/05/25 13:10:49.251
  I0705 13:10:49.251138 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename gc @ 07/05/25 13:10:49.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:10:49.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:10:49.271
  STEP: create the rc @ 07/05/25 13:10:49.341
  I0705 13:10:49.350274      21 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: delete the rc @ 07/05/25 13:10:55.356
  STEP: wait for the rc to be deleted @ 07/05/25 13:10:55.364
  I0705 13:10:56.427736 21 garbage_collector.go:678] 80 pods remaining
  I0705 13:10:56.427781 21 garbage_collector.go:685] 80 pods has nil DeletionTimestamp
  I0705 13:10:56.427788 21 garbage_collector.go:686] 
  I0705 13:10:57.388240 21 garbage_collector.go:678] 71 pods remaining
  I0705 13:10:57.388304 21 garbage_collector.go:685] 70 pods has nil DeletionTimestamp
  I0705 13:10:57.388312 21 garbage_collector.go:686] 
  I0705 13:10:58.381643 21 garbage_collector.go:678] 60 pods remaining
  I0705 13:10:58.381717 21 garbage_collector.go:685] 60 pods has nil DeletionTimestamp
  I0705 13:10:58.381771 21 garbage_collector.go:686] 
  I0705 13:10:59.395353 21 garbage_collector.go:678] 40 pods remaining
  I0705 13:10:59.396322 21 garbage_collector.go:685] 40 pods has nil DeletionTimestamp
  I0705 13:10:59.396340 21 garbage_collector.go:686] 
  I0705 13:11:00.381231 21 garbage_collector.go:678] 31 pods remaining
  I0705 13:11:00.381271 21 garbage_collector.go:685] 30 pods has nil DeletionTimestamp
  I0705 13:11:00.381277 21 garbage_collector.go:686] 
  I0705 13:11:01.376856 21 garbage_collector.go:678] 20 pods remaining
  I0705 13:11:01.376893 21 garbage_collector.go:685] 20 pods has nil DeletionTimestamp
  I0705 13:11:01.376900 21 garbage_collector.go:686] 
  STEP: Gathering metrics @ 07/05/25 13:11:02.376
  W0705 13:11:02.494849      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0705 13:11:02.498142 21 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0705 13:11:02.504307 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4288" for this suite. @ 07/05/25 13:11:02.51
• [13.269 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:709
  STEP: Creating a kubernetes client @ 07/05/25 13:11:02.522
  I0705 13:11:02.522813 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename webhook @ 07/05/25 13:11:02.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:11:02.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:11:02.538
  STEP: Setting up server cert @ 07/05/25 13:11:02.56
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/05/25 13:11:03.166
  STEP: Deploying the webhook pod @ 07/05/25 13:11:03.175
  STEP: Wait for the deployment to be ready @ 07/05/25 13:11:03.196
  I0705 13:11:03.215006 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/05/25 13:11:05.231
  STEP: Verifying the service has paired with the endpoint @ 07/05/25 13:11:05.249
  I0705 13:11:06.250306 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 07/05/25 13:11:06.258
  STEP: verifying the validating webhook match conditions @ 07/05/25 13:11:06.267
  STEP: updating the validating webhook match conditions @ 07/05/25 13:11:06.271
  STEP: verifying the validating webhook match conditions @ 07/05/25 13:11:06.284
  I0705 13:11:06.354684 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7463" for this suite. @ 07/05/25 13:11:06.361
  STEP: Destroying namespace "webhook-markers-5695" for this suite. @ 07/05/25 13:11:06.37
• [3.856 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 07/05/25 13:11:06.378
  I0705 13:11:06.378642 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/05/25 13:11:06.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:11:06.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:11:06.395
  STEP: create the container to handle the HTTPGet hook request. @ 07/05/25 13:11:06.462
  STEP: create the pod with lifecycle hook @ 07/05/25 13:11:08.491
  STEP: check poststart hook @ 07/05/25 13:11:10.514
  STEP: delete the pod with lifecycle hook @ 07/05/25 13:11:10.525
  I0705 13:11:14.550858 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2723" for this suite. @ 07/05/25 13:11:14.557
• [8.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 07/05/25 13:11:14.566
  I0705 13:11:14.566902 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename subpath @ 07/05/25 13:11:14.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:11:14.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:11:14.585
  STEP: Setting up data @ 07/05/25 13:11:14.587
  STEP: Creating pod pod-subpath-test-projected-jk4s @ 07/05/25 13:11:14.599
  STEP: Creating a pod to test atomic-volume-subpath @ 07/05/25 13:11:14.599
  STEP: Saw pod success @ 07/05/25 13:11:38.687
  I0705 13:11:38.691729 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-subpath-test-projected-jk4s container test-container-subpath-projected-jk4s: <nil>
  STEP: delete the pod @ 07/05/25 13:11:38.705
  STEP: Deleting pod pod-subpath-test-projected-jk4s @ 07/05/25 13:11:38.723
  I0705 13:11:38.723249 21 delete.go:62] Deleting pod "pod-subpath-test-projected-jk4s" in namespace "subpath-5351"
  I0705 13:11:38.727217 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5351" for this suite. @ 07/05/25 13:11:38.733
• [24.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:423
  STEP: Creating a kubernetes client @ 07/05/25 13:11:38.742
  I0705 13:11:38.742754 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename proxy @ 07/05/25 13:11:38.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:11:38.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:11:38.758
  I0705 13:11:38.761639 21 proxy.go:430] Creating pod...
  I0705 13:11:40.784863 21 proxy.go:454] Creating service...
  I0705 13:11:40.802959 21 proxy.go:491] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4686/pods/agnhost/proxy?method=DELETE
  I0705 13:11:40.811640 21 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0705 13:11:40.811682 21 proxy.go:491] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4686/pods/agnhost/proxy?method=OPTIONS
  I0705 13:11:40.816129 21 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0705 13:11:40.816164 21 proxy.go:491] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4686/pods/agnhost/proxy?method=PATCH
  I0705 13:11:40.821180 21 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0705 13:11:40.821330 21 proxy.go:491] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4686/pods/agnhost/proxy?method=POST
  I0705 13:11:40.826705 21 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0705 13:11:40.826739 21 proxy.go:491] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4686/pods/agnhost/proxy?method=PUT
  I0705 13:11:40.831274 21 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0705 13:11:40.831304 21 proxy.go:502] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4686/services/e2e-proxy-test-service/proxy?method=DELETE
  I0705 13:11:40.838727 21 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0705 13:11:40.838755 21 proxy.go:502] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4686/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0705 13:11:40.846789 21 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0705 13:11:40.846843 21 proxy.go:502] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4686/services/e2e-proxy-test-service/proxy?method=PATCH
  I0705 13:11:40.853591 21 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0705 13:11:40.853621 21 proxy.go:502] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4686/services/e2e-proxy-test-service/proxy?method=POST
  I0705 13:11:40.861506 21 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0705 13:11:40.861543 21 proxy.go:502] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4686/services/e2e-proxy-test-service/proxy?method=PUT
  I0705 13:11:40.869595 21 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0705 13:11:40.869626 21 proxy.go:522] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4686/pods/agnhost/proxy?method=GET
  I0705 13:11:40.873657 21 proxy.go:530] http.Client request:GET StatusCode:301
  I0705 13:11:40.873704 21 proxy.go:522] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4686/services/e2e-proxy-test-service/proxy?method=GET
  I0705 13:11:40.880477 21 proxy.go:530] http.Client request:GET StatusCode:301
  I0705 13:11:40.880515 21 proxy.go:522] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4686/pods/agnhost/proxy?method=HEAD
  I0705 13:11:40.885454 21 proxy.go:530] http.Client request:HEAD StatusCode:301
  I0705 13:11:40.885491 21 proxy.go:522] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4686/services/e2e-proxy-test-service/proxy?method=HEAD
  I0705 13:11:40.892022 21 proxy.go:530] http.Client request:HEAD StatusCode:301
  I0705 13:11:40.892189 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4686" for this suite. @ 07/05/25 13:11:40.897
• [2.164 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 07/05/25 13:11:40.906
  I0705 13:11:40.906613 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename projected @ 07/05/25 13:11:40.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:11:40.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:11:40.923
  STEP: Creating configMap with name projected-configmap-test-volume-04040741-1a81-482f-94ec-bc1d1676a65e @ 07/05/25 13:11:40.926
  STEP: Creating a pod to test consume configMaps @ 07/05/25 13:11:40.932
  STEP: Saw pod success @ 07/05/25 13:11:44.961
  I0705 13:11:44.966888 21 output.go:207] Trying to get logs from node ip-172-31-5-45 pod pod-projected-configmaps-813abc4f-68ac-4e73-9ead-ece3ff547ad7 container agnhost-container: <nil>
  STEP: delete the pod @ 07/05/25 13:11:44.98
  I0705 13:11:45.003342 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1563" for this suite. @ 07/05/25 13:11:45.008
• [4.110 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 07/05/25 13:11:45.017
  I0705 13:11:45.017224 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename projected @ 07/05/25 13:11:45.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:11:45.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:11:45.033
  STEP: Creating the pod @ 07/05/25 13:11:45.036
  I0705 13:11:47.585955 21 pod_client.go:173] Successfully updated pod "labelsupdate26668f3a-5703-48a9-bc97-d36dfbc0404d"
  I0705 13:11:51.618183 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1111" for this suite. @ 07/05/25 13:11:51.625
• [6.617 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 07/05/25 13:11:51.634
  I0705 13:11:51.634878 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename job @ 07/05/25 13:11:51.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:11:51.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:11:51.648
  STEP: Creating Indexed job @ 07/05/25 13:11:51.651
  STEP: Ensuring job reaches completions @ 07/05/25 13:11:51.657
  STEP: Ensuring pods with index for job exist @ 07/05/25 13:11:59.691
  I0705 13:11:59.697831 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7250" for this suite. @ 07/05/25 13:11:59.704
• [8.079 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 07/05/25 13:11:59.713
  I0705 13:11:59.713949 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename downward-api @ 07/05/25 13:11:59.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:11:59.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:11:59.732
  STEP: Creating a pod to test downward API volume plugin @ 07/05/25 13:11:59.735
  STEP: Saw pod success @ 07/05/25 13:12:03.764
  I0705 13:12:03.769198 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod downwardapi-volume-0136c021-a8eb-4abb-adc1-9b0d0e4c7da7 container client-container: <nil>
  STEP: delete the pod @ 07/05/25 13:12:03.778
  I0705 13:12:03.800321 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7973" for this suite. @ 07/05/25 13:12:03.806
• [4.101 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:754
  STEP: Creating a kubernetes client @ 07/05/25 13:12:03.815
  I0705 13:12:03.815281 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename sched-preemption @ 07/05/25 13:12:03.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:12:03.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:12:03.831
  I0705 13:12:03.850053 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0705 13:13:03.857503 21 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 07/05/25 13:13:03.862
  I0705 13:13:03.862755 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename sched-preemption-path @ 07/05/25 13:13:03.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:13:03.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:13:03.88
  STEP: Finding an available node @ 07/05/25 13:13:03.882
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/05/25 13:13:03.882
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/05/25 13:13:05.908
  I0705 13:13:05.923484 21 preemption.go:717] found a healthy node: ip-172-31-22-171
  STEP: Adding a custom resource @ 07/05/25 13:13:05.928
  I0705 13:13:11.999684 21 preemption.go:836] pods created so far: [1 1 1]
  I0705 13:13:11.999715 21 preemption.go:837] length of pods created so far: 3
  I0705 13:13:14.013546 21 preemption.go:854] pods created so far: [2 2 1]
  STEP: Removing a custom resource @ 07/05/25 13:13:21.014
  STEP: Removing a custom resource @ 07/05/25 13:13:21.087
  STEP: Removing a custom resource @ 07/05/25 13:13:21.097
  STEP: Removing a custom resource @ 07/05/25 13:13:21.107
  I0705 13:13:21.118022 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-9139" for this suite. @ 07/05/25 13:13:21.123
  I0705 13:13:21.132201 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8793" for this suite. @ 07/05/25 13:13:21.224
• [77.417 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:402
  STEP: Creating a kubernetes client @ 07/05/25 13:13:21.232
  I0705 13:13:21.232419 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename resourcequota @ 07/05/25 13:13:21.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:13:21.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:13:21.248
  STEP: Counting existing ResourceQuota @ 07/05/25 13:13:21.251
  STEP: Creating a ResourceQuota @ 07/05/25 13:13:26.256
  STEP: Ensuring resource quota status is calculated @ 07/05/25 13:13:26.263
  STEP: Creating a ReplicationController @ 07/05/25 13:13:28.269
  STEP: Ensuring resource quota status captures replication controller creation @ 07/05/25 13:13:28.287
  STEP: Deleting a ReplicationController @ 07/05/25 13:13:30.293
  STEP: Ensuring resource quota status released usage @ 07/05/25 13:13:30.302
  I0705 13:13:32.308146 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1332" for this suite. @ 07/05/25 13:13:32.314
• [11.091 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy succeededCount rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:567
  STEP: Creating a kubernetes client @ 07/05/25 13:13:32.323
  I0705 13:13:32.323651 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename job @ 07/05/25 13:13:32.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:13:32.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:13:32.34
  STEP: Creating an indexed job with successPolicy succeededCount rule @ 07/05/25 13:13:32.345
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet condition with SuccessPolicy reason @ 07/05/25 13:13:32.353
  STEP: Ensure that the job reaches completions @ 07/05/25 13:13:36.37
  STEP: Verifying that the job status to ensure correct final state @ 07/05/25 13:13:36.379
  I0705 13:13:36.384233 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7008" for this suite. @ 07/05/25 13:13:36.39
• [4.075 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:769
  STEP: Creating a kubernetes client @ 07/05/25 13:13:36.399
  I0705 13:13:36.399231 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename statefulset @ 07/05/25 13:13:36.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:13:36.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:13:36.416
  STEP: Creating service test in namespace statefulset-1866 @ 07/05/25 13:13:36.419
  STEP: Creating stateful set ss in namespace statefulset-1866 @ 07/05/25 13:13:36.425
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-1866 @ 07/05/25 13:13:36.434
  I0705 13:13:36.443230 21 wait.go:44] Found 0 stateful pods, waiting for 1
  I0705 13:13:46.441596 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 07/05/25 13:13:46.441
  I0705 13:13:46.446191 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=statefulset-1866 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0705 13:13:46.559095 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0705 13:13:46.559135 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0705 13:13:46.559146 21 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0705 13:13:46.564388 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0705 13:13:56.567891 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0705 13:13:56.567936 21 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0705 13:13:56.600470 21 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I0705 13:13:56.600533 21 resource.go:175] ss-0  ip-172-31-22-171  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:13:37 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:13:36 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:13:47 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:13:47 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:13:36 +0000 UTC  }]
  I0705 13:13:56.600541 21 resource.go:175] ss-2                    Pending         []
  I0705 13:13:56.600547 21 resource.go:178] 
  I0705 13:13:56.600553 21 statefulset.go:2448] StatefulSet ss has not reached scale 3, at 2
  I0705 13:13:57.607567 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.984737245s
  I0705 13:13:58.614018 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.978212975s
  I0705 13:13:59.621235 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.971650473s
  I0705 13:14:00.628834 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.963737006s
  I0705 13:14:01.635894 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.956975901s
  I0705 13:14:02.642555 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.949805063s
  I0705 13:14:03.649097 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.943244654s
  I0705 13:14:04.656105 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.936713621s
  I0705 13:14:05.664292 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 928.725934ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-1866 @ 07/05/25 13:14:06.664
  I0705 13:14:06.671445 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=statefulset-1866 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0705 13:14:06.755413 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0705 13:14:06.755453 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0705 13:14:06.755463 21 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0705 13:14:06.755520 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=statefulset-1866 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0705 13:14:06.840696 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0705 13:14:06.840744 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0705 13:14:06.840754 21 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0705 13:14:06.840806 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=statefulset-1866 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0705 13:14:06.933947 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0705 13:14:06.933988 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0705 13:14:06.933999 21 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0705 13:14:06.939368 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  I0705 13:14:16.941495 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0705 13:14:16.941533 21 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0705 13:14:16.941540 21 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 07/05/25 13:14:16.941
  I0705 13:14:16.945625 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=statefulset-1866 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0705 13:14:17.041024 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0705 13:14:17.041077 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0705 13:14:17.041088 21 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0705 13:14:17.041145 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=statefulset-1866 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0705 13:14:17.159611 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0705 13:14:17.159648 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0705 13:14:17.159659 21 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0705 13:14:17.159708 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=statefulset-1866 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0705 13:14:17.254829 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0705 13:14:17.254877 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0705 13:14:17.254891 21 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0705 13:14:17.254899 21 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0705 13:14:17.259780 21 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I0705 13:14:27.266652 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0705 13:14:27.266687 21 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0705 13:14:27.266695 21 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0705 13:14:27.288381 21 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I0705 13:14:27.288449 21 resource.go:175] ss-0  ip-172-31-22-171  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:13:37 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:13:36 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:14:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:14:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:13:36 +0000 UTC  }]
  I0705 13:14:27.288468 21 resource.go:175] ss-1  ip-172-31-90-231  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:13:57 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:13:56 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:14:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:14:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:13:56 +0000 UTC  }]
  I0705 13:14:27.288485 21 resource.go:175] ss-2  ip-172-31-5-45    Running  30s    [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:13:57 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:13:56 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:14:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:14:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:13:56 +0000 UTC  }]
  I0705 13:14:27.288491 21 resource.go:178] 
  I0705 13:14:27.288498 21 statefulset.go:2448] StatefulSet ss has not reached scale 0, at 3
  I0705 13:14:28.295226 21 resource.go:168] POD   NODE              PHASE      GRACE  CONDITIONS
  I0705 13:14:28.295282 21 resource.go:175] ss-0  ip-172-31-22-171  Succeeded  30s    [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:14:27 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:13:36 +0000 UTC PodCompleted } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:14:17 +0000 UTC PodCompleted } {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:14:17 +0000 UTC PodCompleted } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:13:36 +0000 UTC  }]
  I0705 13:14:28.295296 21 resource.go:175] ss-2  ip-172-31-5-45    Succeeded  30s    [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:14:27 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:13:56 +0000 UTC PodCompleted } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:14:17 +0000 UTC PodCompleted } {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:14:17 +0000 UTC PodCompleted } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-05 13:13:56 +0000 UTC  }]
  I0705 13:14:28.295300 21 resource.go:178] 
  I0705 13:14:28.295305 21 statefulset.go:2448] StatefulSet ss has not reached scale 0, at 2
  I0705 13:14:29.301893 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 7.982155132s
  I0705 13:14:30.307123 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 6.975505292s
  I0705 13:14:31.314332 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 5.969383376s
  I0705 13:14:32.319673 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 4.963108034s
  I0705 13:14:33.327565 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 3.9570229s
  I0705 13:14:34.334034 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 2.949865712s
  I0705 13:14:35.340918 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 1.942578285s
  I0705 13:14:36.350934 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 936.453823ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-1866 @ 07/05/25 13:14:37.351
  I0705 13:14:37.358057 21 rest.go:153] Scaling statefulset ss to 0
  I0705 13:14:37.366906 21 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0705 13:14:37.370969 21 statefulset.go:138] Deleting all statefulset in ns statefulset-1866
  I0705 13:14:37.375693 21 rest.go:153] Scaling statefulset ss to 0
  I0705 13:14:37.384812 21 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0705 13:14:37.389499 21 rest.go:91] Deleting statefulset ss
  I0705 13:14:37.408135 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1866" for this suite. @ 07/05/25 13:14:37.413
• [61.025 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 07/05/25 13:14:37.424
  I0705 13:14:37.424439 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename projected @ 07/05/25 13:14:37.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:14:37.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:14:37.442
  STEP: Creating configMap with name cm-test-opt-del-c559fbed-3e28-4567-a7ee-c5be8b25cc1a @ 07/05/25 13:14:37.514
  STEP: Creating configMap with name cm-test-opt-upd-4c0a7889-d3fc-45c6-b605-460860648875 @ 07/05/25 13:14:37.52
  STEP: Creating the pod @ 07/05/25 13:14:37.526
  STEP: Deleting configmap cm-test-opt-del-c559fbed-3e28-4567-a7ee-c5be8b25cc1a @ 07/05/25 13:14:39.593
  STEP: Updating configmap cm-test-opt-upd-4c0a7889-d3fc-45c6-b605-460860648875 @ 07/05/25 13:14:39.601
  STEP: Creating configMap with name cm-test-opt-create-b581e6b9-12f9-437f-a609-49091fb8c78c @ 07/05/25 13:14:39.608
  STEP: waiting to observe update in volume @ 07/05/25 13:14:39.614
  I0705 13:16:06.097150 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1436" for this suite. @ 07/05/25 13:16:06.103
• [88.688 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:179
  STEP: Creating a kubernetes client @ 07/05/25 13:16:06.112
  I0705 13:16:06.112550 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename emptydir @ 07/05/25 13:16:06.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:16:06.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:16:06.127
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 07/05/25 13:16:06.13
  STEP: Saw pod success @ 07/05/25 13:16:10.16
  I0705 13:16:10.165721 21 output.go:207] Trying to get logs from node ip-172-31-5-45 pod pod-2e678652-de2b-414c-8cf5-fb0e09d313f4 container test-container: <nil>
  STEP: delete the pod @ 07/05/25 13:16:10.179
  I0705 13:16:10.197507 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5773" for this suite. @ 07/05/25 13:16:10.203
• [4.102 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1759
  STEP: Creating a kubernetes client @ 07/05/25 13:16:10.214
  I0705 13:16:10.214689 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename kubectl @ 07/05/25 13:16:10.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:16:10.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:16:10.23
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/05/25 13:16:10.233
  I0705 13:16:10.233359 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-8601 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0705 13:16:10.290296 21 builder.go:146] stderr: ""
  I0705 13:16:10.290340 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 07/05/25 13:16:10.29
  I0705 13:16:10.295331 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-8601 delete pods e2e-test-httpd-pod'
  I0705 13:16:11.707894 21 builder.go:146] stderr: ""
  I0705 13:16:11.707938 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0705 13:16:11.708083 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8601" for this suite. @ 07/05/25 13:16:11.714
• [1.509 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 07/05/25 13:16:11.723
  I0705 13:16:11.723882 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename subjectreview @ 07/05/25 13:16:11.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:16:11.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:16:11.74
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-3366" @ 07/05/25 13:16:11.742
  I0705 13:16:11.747827 21 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-3366:e2e"
  I0705 13:16:11.747857 21 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-3366"}
  I0705 13:16:11.747864 21 subjectreviews.go:71] saUID: "bef45612-fac8-4dd0-9661-7e62e90ebe7d"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-3366:e2e" @ 07/05/25 13:16:11.747
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-3366:e2e" @ 07/05/25 13:16:11.748
  I0705 13:16:11.749884 21 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-3366:e2e" api 'list' configmaps in "subjectreview-3366" namespace @ 07/05/25 13:16:11.749
  I0705 13:16:11.751718 21 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-3366:e2e" @ 07/05/25 13:16:11.751
  I0705 13:16:11.753509 21 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0705 13:16:11.753525 21 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0705 13:16:11.753670 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-3366" for this suite. @ 07/05/25 13:16:11.814
• [0.101 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1050
  STEP: Creating a kubernetes client @ 07/05/25 13:16:11.824
  I0705 13:16:11.824612 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename kubectl @ 07/05/25 13:16:11.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:16:11.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:16:11.841
  STEP: create deployment with httpd image @ 07/05/25 13:16:11.843
  I0705 13:16:11.844182 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-9443 create -f -'
  I0705 13:16:11.921185 21 builder.go:146] stderr: ""
  I0705 13:16:11.921238 21 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 07/05/25 13:16:11.921
  I0705 13:16:11.921325 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-9443 diff -f -'
  I0705 13:16:12.007804 21 builder.go:135] rc: 1
  I0705 13:16:12.007890 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-9443 delete -f -'
  I0705 13:16:12.059558 21 builder.go:146] stderr: ""
  I0705 13:16:12.059602 21 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0705 13:16:12.059719 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9443" for this suite. @ 07/05/25 13:16:12.065
• [0.249 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:196
  STEP: Creating a kubernetes client @ 07/05/25 13:16:12.073
  I0705 13:16:12.073600 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/05/25 13:16:12.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:16:12.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:16:12.092
  I0705 13:16:12.094928 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/05/25 13:16:13.396
  I0705 13:16:13.396756 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=crd-publish-openapi-9591 --namespace=crd-publish-openapi-9591 create -f -'
  I0705 13:16:15.469957 21 builder.go:146] stderr: ""
  I0705 13:16:15.470000 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6313-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0705 13:16:15.470061 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=crd-publish-openapi-9591 --namespace=crd-publish-openapi-9591 delete e2e-test-crd-publish-openapi-6313-crds test-cr'
  I0705 13:16:15.525120 21 builder.go:146] stderr: ""
  I0705 13:16:15.525162 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6313-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0705 13:16:15.525204 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=crd-publish-openapi-9591 --namespace=crd-publish-openapi-9591 apply -f -'
  I0705 13:16:15.583219 21 builder.go:146] stderr: ""
  I0705 13:16:15.583263 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6313-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0705 13:16:15.583310 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=crd-publish-openapi-9591 --namespace=crd-publish-openapi-9591 delete e2e-test-crd-publish-openapi-6313-crds test-cr'
  I0705 13:16:15.638222 21 builder.go:146] stderr: ""
  I0705 13:16:15.638261 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6313-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 07/05/25 13:16:15.638
  I0705 13:16:15.638338 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=crd-publish-openapi-9591 explain e2e-test-crd-publish-openapi-6313-crds'
  I0705 13:16:15.684214 21 builder.go:146] stderr: ""
  I0705 13:16:15.684263 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-6313-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0705 13:16:16.934085 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9591" for this suite. @ 07/05/25 13:16:16.944
• [4.879 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 07/05/25 13:16:16.956
  I0705 13:16:16.956501 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename disruption @ 07/05/25 13:16:16.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:16:16.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:16:16.975
  STEP: Waiting for the pdb to be processed @ 07/05/25 13:16:16.986
  STEP: Updating PodDisruptionBudget status @ 07/05/25 13:16:16.994
  STEP: Waiting for all pods to be running @ 07/05/25 13:16:17.006
  I0705 13:16:17.011047 21 disruption.go:691] running pods: 0 < 1
  STEP: locating a running pod @ 07/05/25 13:16:19.015
  STEP: Waiting for the pdb to be processed @ 07/05/25 13:16:19.031
  STEP: Patching PodDisruptionBudget status @ 07/05/25 13:16:19.04
  STEP: Waiting for the pdb to be processed @ 07/05/25 13:16:19.051
  I0705 13:16:19.057664 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2215" for this suite. @ 07/05/25 13:16:19.063
• [2.117 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:817
  STEP: Creating a kubernetes client @ 07/05/25 13:16:19.073
  I0705 13:16:19.073360 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename webhook @ 07/05/25 13:16:19.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:16:19.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:16:19.088
  STEP: Setting up server cert @ 07/05/25 13:16:19.11
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/05/25 13:16:19.294
  STEP: Deploying the webhook pod @ 07/05/25 13:16:19.3
  STEP: Wait for the deployment to be ready @ 07/05/25 13:16:19.314
  I0705 13:16:19.333526 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/05/25 13:16:21.349
  STEP: Verifying the service has paired with the endpoint @ 07/05/25 13:16:21.368
  I0705 13:16:22.370190 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 07/05/25 13:16:22.375
  I0705 13:16:22.433237 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5929" for this suite. @ 07/05/25 13:16:22.438
  STEP: Destroying namespace "webhook-markers-5514" for this suite. @ 07/05/25 13:16:22.451
• [3.386 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1533
  STEP: Creating a kubernetes client @ 07/05/25 13:16:22.459
  I0705 13:16:22.459564 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename kubectl @ 07/05/25 13:16:22.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:16:22.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:16:22.482
  STEP: creating Agnhost RC @ 07/05/25 13:16:22.486
  I0705 13:16:22.487005 21 kubectl.go:1540] namespace kubectl-1592
  I0705 13:16:22.487089 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-1592 create -f -'
  I0705 13:16:22.591409 21 builder.go:146] stderr: ""
  I0705 13:16:22.591453 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/05/25 13:16:22.591
  I0705 13:16:23.598973 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0705 13:16:23.599008 21 framework.go:733] Found 0 / 1
  I0705 13:16:24.599182 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0705 13:16:24.599231 21 framework.go:733] Found 1 / 1
  I0705 13:16:24.599246 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0705 13:16:24.603851 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0705 13:16:24.603874 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0705 13:16:24.603881 21 kubectl.go:1547] wait on agnhost-primary startup in kubectl-1592 
  I0705 13:16:24.603933 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-1592 logs agnhost-primary-g4wwl agnhost-primary'
  I0705 13:16:24.667326 21 builder.go:146] stderr: ""
  I0705 13:16:24.667371 21 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 07/05/25 13:16:24.667
  I0705 13:16:24.667452 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-1592 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0705 13:16:24.742636 21 builder.go:146] stderr: ""
  I0705 13:16:24.742707 21 builder.go:147] stdout: "service/rm2 exposed\n"
  I0705 13:16:24.752505 21 utils.go:1115] Service rm2 in namespace kubectl-1592 found.
  STEP: exposing service @ 07/05/25 13:16:26.763
  I0705 13:16:26.763453 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-1592 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0705 13:16:26.828878 21 builder.go:146] stderr: ""
  I0705 13:16:26.828937 21 builder.go:147] stdout: "service/rm3 exposed\n"
  I0705 13:16:26.838645 21 utils.go:1115] Service rm3 in namespace kubectl-1592 found.
  I0705 13:16:28.851647 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1592" for this suite. @ 07/05/25 13:16:28.858
• [6.408 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 07/05/25 13:16:28.867
  I0705 13:16:28.868014 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename replicaset @ 07/05/25 13:16:28.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:16:28.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:16:28.882
  I0705 13:16:28.902179 21 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  I0705 13:16:33.981142 21 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/05/25 13:16:33.981
  STEP: Scaling up "test-rs" replicaset @ 07/05/25 13:16:33.981
  I0705 13:16:33.993189 21 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 07/05/25 13:16:33.993
  I0705 13:16:34.004657 21 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-4951 with ReadyReplicas 1, AvailableReplicas 1
  I0705 13:16:34.017625 21 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-4951 with ReadyReplicas 1, AvailableReplicas 1
  I0705 13:16:34.031322 21 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-4951 with ReadyReplicas 1, AvailableReplicas 1
  I0705 13:16:34.039084 21 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-4951 with ReadyReplicas 1, AvailableReplicas 1
  I0705 13:16:34.757894 21 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-4951 with ReadyReplicas 2, AvailableReplicas 2
  I0705 13:16:35.083974 21 replica_set.go:547] observed Replicaset test-rs in namespace replicaset-4951 with ReadyReplicas 3 found true
  I0705 13:16:35.084181 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4951" for this suite. @ 07/05/25 13:16:35.09
• [6.232 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 07/05/25 13:16:35.099
  I0705 13:16:35.099881 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename container-probe @ 07/05/25 13:16:35.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:16:35.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:16:35.114
  STEP: Creating pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731 @ 07/05/25 13:16:35.117
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/05/25 13:16:37.14
  I0705 13:16:37.145478 21 container_probe.go:1748] Initial restart count of pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 is 0
  I0705 13:16:37.149667 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:16:39.154735 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:16:41.160012 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:16:43.166971 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:16:45.172882 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:16:47.178982 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:16:49.185397 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:16:51.191368 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:16:53.198020 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:16:55.203888 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:16:57.210813 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:16:59.217030 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:17:01.222979 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:17:03.230163 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:17:05.235392 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:17:07.241236 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:17:09.246726 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:17:11.253209 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:17:13.259887 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:17:15.265479 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:17:17.271485 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:17:19.277530 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:17:21.284125 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:17:23.289453 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:17:25.294890 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:17:27.300137 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:17:29.306324 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:17:31.312964 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:17:33.318857 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:17:35.324702 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:17:37.330625 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:17:39.336870 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:17:41.344184 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:17:43.350908 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:17:45.357134 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:17:47.364028 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:17:49.373265 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:17:51.379950 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:17:53.385817 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:17:55.391865 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:17:57.397512 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:17:59.403714 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:18:01.409615 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:18:03.415924 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:18:05.421275 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:18:07.427903 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:18:09.434149 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:18:11.441028 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:18:13.448213 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:18:15.453948 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:18:17.461090 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:18:19.468467 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:18:21.475948 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:18:23.481197 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:18:25.486377 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:18:27.492610 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:18:29.499332 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:18:31.506607 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:18:33.513570 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:18:35.519382 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:18:37.525789 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:18:39.531973 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:18:41.538165 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:18:43.544797 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:18:45.551356 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:18:47.557470 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:18:49.564178 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:18:51.570315 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:18:53.575813 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:18:55.581031 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:18:57.587641 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:18:59.594469 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:19:01.599608 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:19:03.605419 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:19:05.611893 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:19:07.618220 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:19:09.624652 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:19:11.631585 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:19:13.637360 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:19:15.643344 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:19:17.648704 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:19:19.655962 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:19:21.662633 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:19:23.669142 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:19:25.675304 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:19:27.681235 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:19:29.687626 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:19:31.694876 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:19:33.700098 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:19:35.705325 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:19:37.712393 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:19:39.719106 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:19:41.724383 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:19:43.731431 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:19:45.737409 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:19:47.744483 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:19:49.750113 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:19:51.757185 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:19:53.761672 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:19:55.768855 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:19:57.774009 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:19:59.779413 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:20:01.785360 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:20:03.790770 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:20:05.796206 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:20:07.801851 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:20:09.808818 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:20:11.815407 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:20:13.821754 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:20:15.828188 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:20:17.834378 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:20:19.843573 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:20:21.849711 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:20:23.856175 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:20:25.862412 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:20:27.868424 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:20:29.875246 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:20:31.881431 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:20:33.887856 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  I0705 13:20:35.893832 21 container_probe.go:1758] Get pod busybox-310517e8-76c4-474e-8c79-4c572b321b90 in namespace container-probe-9731
  STEP: deleting the pod @ 07/05/25 13:20:37.895
  I0705 13:20:37.916232 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9731" for this suite. @ 07/05/25 13:20:37.923
• [242.832 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:330
  STEP: Creating a kubernetes client @ 07/05/25 13:20:37.931
  I0705 13:20:37.931558 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename gc @ 07/05/25 13:20:37.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:20:37.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:20:37.947
  STEP: create the rc @ 07/05/25 13:20:37.95
  I0705 13:20:37.956835      21 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: delete the rc @ 07/05/25 13:20:42.962
  STEP: wait for all pods to be garbage collected @ 07/05/25 13:20:42.97
  STEP: Gathering metrics @ 07/05/25 13:20:47.985
  W0705 13:20:47.991222      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0705 13:20:47.991257 21 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0705 13:20:47.991401 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4089" for this suite. @ 07/05/25 13:20:47.997
• [10.077 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 07/05/25 13:20:48.008
  I0705 13:20:48.008388 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename configmap @ 07/05/25 13:20:48.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:20:48.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:20:48.025
  STEP: Creating configMap with name configmap-test-volume-map-d999e0cd-7bad-43b7-86d1-2e89f1e8eaf9 @ 07/05/25 13:20:48.028
  STEP: Creating a pod to test consume configMaps @ 07/05/25 13:20:48.033
  STEP: Saw pod success @ 07/05/25 13:20:52.06
  I0705 13:20:52.065360 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-configmaps-d81f2492-fbd7-44c2-a13f-5e6a8dd5346d container agnhost-container: <nil>
  STEP: delete the pod @ 07/05/25 13:20:52.083
  I0705 13:20:52.103180 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8424" for this suite. @ 07/05/25 13:20:52.11
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 07/05/25 13:20:52.119
  I0705 13:20:52.119963 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename pods @ 07/05/25 13:20:52.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:20:52.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:20:52.136
  I0705 13:20:52.139034 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: creating the pod @ 07/05/25 13:20:52.139
  STEP: submitting the pod to kubernetes @ 07/05/25 13:20:52.139
  STEP: waiting for the container to be running @ 07/05/25 13:20:54.167
  I0705 13:20:54.191865 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1080" for this suite. @ 07/05/25 13:20:54.197
• [2.087 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 07/05/25 13:20:54.207
  I0705 13:20:54.207303 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename webhook @ 07/05/25 13:20:54.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:20:54.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:20:54.222
  STEP: Setting up server cert @ 07/05/25 13:20:54.242
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/05/25 13:20:54.403
  STEP: Deploying the webhook pod @ 07/05/25 13:20:54.409
  STEP: Wait for the deployment to be ready @ 07/05/25 13:20:54.426
  I0705 13:20:54.440447 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/05/25 13:20:56.458
  STEP: Verifying the service has paired with the endpoint @ 07/05/25 13:20:56.477
  I0705 13:20:57.477570 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 07/05/25 13:20:57.482
  STEP: create a pod that should be updated by the webhook @ 07/05/25 13:20:57.496
  I0705 13:20:57.583536 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7011" for this suite. @ 07/05/25 13:20:57.589
  STEP: Destroying namespace "webhook-markers-5712" for this suite. @ 07/05/25 13:20:57.597
• [3.399 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 07/05/25 13:20:57.606
  I0705 13:20:57.606342 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename csinodes @ 07/05/25 13:20:57.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:20:57.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:20:57.622
  STEP: Creating initial csiNode "e2e-csinode-4mmkd" @ 07/05/25 13:20:57.624
  STEP: Getting initial csiNode "e2e-csinode-4mmkd" @ 07/05/25 13:20:57.63
  STEP: Patching initial csiNode: "e2e-csinode-4mmkd" @ 07/05/25 13:20:57.633
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-4mmkd=patched" @ 07/05/25 13:20:57.64
  STEP: Delete initial csiNode: "e2e-csinode-4mmkd" @ 07/05/25 13:20:57.644
  STEP: Confirm deletion of csiNode "e2e-csinode-4mmkd" @ 07/05/25 13:20:57.652
  STEP: Creating replacement csiNode "e2e-csinode-5d2ld" @ 07/05/25 13:20:57.657
  STEP: Getting replacement csiNode "e2e-csinode-5d2ld" @ 07/05/25 13:20:57.662
  STEP: Updating replacement csiNode "e2e-csinode-5d2ld" @ 07/05/25 13:20:57.667
  STEP: DeleteCollection of CSINodes with "e2e-csinode-5d2ld=updated" label @ 07/05/25 13:20:57.676
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-5d2ld=updated" @ 07/05/25 13:20:57.691
  I0705 13:20:57.695625 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-9406" for this suite. @ 07/05/25 13:20:57.702
• [0.105 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 07/05/25 13:20:57.711
  I0705 13:20:57.711849 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/05/25 13:20:57.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:20:57.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:20:57.727
  I0705 13:20:57.733963 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7471" for this suite. @ 07/05/25 13:20:57.803
• [0.100 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 07/05/25 13:20:57.812
  I0705 13:20:57.812032 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename projected @ 07/05/25 13:20:57.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:20:57.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:20:57.827
  STEP: Creating configMap with name projected-configmap-test-volume-0c63d155-5727-443e-bae1-d3e2a05d9247 @ 07/05/25 13:20:57.83
  STEP: Creating a pod to test consume configMaps @ 07/05/25 13:20:57.835
  STEP: Saw pod success @ 07/05/25 13:21:01.863
  I0705 13:21:01.868248 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-projected-configmaps-6681c891-eedb-4dfd-808b-06ec2bd3cd4e container agnhost-container: <nil>
  STEP: delete the pod @ 07/05/25 13:21:01.877
  I0705 13:21:01.896331 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-541" for this suite. @ 07/05/25 13:21:01.902
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1836
  STEP: Creating a kubernetes client @ 07/05/25 13:21:01.911
  I0705 13:21:01.911875 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename kubectl @ 07/05/25 13:21:01.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:21:01.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:21:01.928
  STEP: starting the proxy server @ 07/05/25 13:21:01.931
  I0705 13:21:01.931747 21 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-6977 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 07/05/25 13:21:01.964
  I0705 13:21:01.970866 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0705 13:21:01.972427 21 kubectl.go:2232] kubectl proxy stderr: W0705 13:21:01.964531     687 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  I0705 13:21:01.972418 21 kubectl.go:2227] kubectl proxy stdout: Starting to serve on 127.0.0.1:40629

  STEP: Destroying namespace "kubectl-6977" for this suite. @ 07/05/25 13:21:02.003
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:104
  STEP: Creating a kubernetes client @ 07/05/25 13:21:02.013
  I0705 13:21:02.013602 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 07/05/25 13:21:02.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:21:02.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:21:02.028
  STEP: creating a target pod @ 07/05/25 13:21:02.03
  STEP: adding an ephemeral container @ 07/05/25 13:21:04.058
  STEP: verifying the pod's generation is 2 @ 07/05/25 13:21:06.08
  STEP: checking pod container endpoints @ 07/05/25 13:21:06.085
  I0705 13:21:06.085825 21 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-8371 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0705 13:21:06.085843 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0705 13:21:06.085901 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-8371/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0705 13:21:06.133153 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0705 13:21:06.133200 21 exec_util.go:112] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 07/05/25 13:21:06.142
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 07/05/25 13:21:06.147
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 07/05/25 13:21:06.16
  I0705 13:21:06.165516 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-8371" for this suite. @ 07/05/25 13:21:06.171
• [4.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:114
  STEP: Creating a kubernetes client @ 07/05/25 13:21:06.18
  I0705 13:21:06.180447 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename replication-controller @ 07/05/25 13:21:06.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:21:06.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:21:06.195
  STEP: creating a ReplicationController @ 07/05/25 13:21:06.203
  STEP: waiting for RC to be added @ 07/05/25 13:21:06.209
  STEP: waiting for available Replicas @ 07/05/25 13:21:06.21
  STEP: patching ReplicationController @ 07/05/25 13:21:07.154
  STEP: waiting for RC to be modified @ 07/05/25 13:21:07.163
  STEP: patching ReplicationController status @ 07/05/25 13:21:07.164
  STEP: waiting for RC to be modified @ 07/05/25 13:21:07.17
  STEP: waiting for available Replicas @ 07/05/25 13:21:07.17
  STEP: fetching ReplicationController status @ 07/05/25 13:21:07.176
  STEP: patching ReplicationController scale @ 07/05/25 13:21:07.185
  STEP: waiting for RC to be modified @ 07/05/25 13:21:07.192
  STEP: waiting for ReplicationController's scale to be the max amount @ 07/05/25 13:21:07.192
  STEP: fetching ReplicationController; ensuring that it's patched @ 07/05/25 13:21:08.195
  STEP: updating ReplicationController status @ 07/05/25 13:21:08.2
  STEP: waiting for RC to be modified @ 07/05/25 13:21:08.207
  STEP: listing all ReplicationControllers @ 07/05/25 13:21:08.207
  STEP: checking that ReplicationController has expected values @ 07/05/25 13:21:08.213
  STEP: deleting ReplicationControllers by collection @ 07/05/25 13:21:08.213
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 07/05/25 13:21:08.225
  I0705 13:21:08.263620 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0705 13:21:08.263730      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-8309" for this suite. @ 07/05/25 13:21:08.269
• [2.098 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 07/05/25 13:21:08.278
  I0705 13:21:08.278318 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename chunking @ 07/05/25 13:21:08.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:21:08.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:21:08.298
  STEP: creating a large number of resources @ 07/05/25 13:21:08.301
  E0705 13:21:09.264522      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:10.264977      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:11.265681      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:12.266183      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:13.266600      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:14.266847      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:15.267717      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:16.268448      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:17.269325      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:18.270019      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:19.270314      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:20.270711      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:21.271788      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:22.271955      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:23.272757      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:24.273658      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:25.273991      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 07/05/25 13:21:25.986
  I0705 13:21:26.039576 21 chunking.go:163] Retrieved 40/40 results with rv 38714 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 07/05/25 13:21:26.039
  E0705 13:21:26.274738      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:27.274788      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:28.274926      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:29.275034      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:30.275211      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:31.275236      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:32.275470      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:33.275541      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:34.275742      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:35.276013      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:36.276222      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:37.276343      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:38.276564      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:39.276757      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:40.276921      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:41.277180      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:42.277403      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:43.278295      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:44.278390      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:45.279286      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:21:46.045458 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0705 13:21:46.280411      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:47.280465      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:48.281268      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:49.282283      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:50.283286      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:51.283487      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:52.284281      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:53.284480      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:54.284648      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:55.284926      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:56.284961      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:57.285182      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:58.285403      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:21:59.285642      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:00.285773      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:01.286037      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:02.286279      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:03.286541      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:04.286794      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:05.287018      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:22:06.046640 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0705 13:22:06.287710      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:07.288305      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:08.288531      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:09.288636      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:10.288734      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:11.289111      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:12.289212      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:13.289303      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:14.289768      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:15.289778      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:16.290312      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:17.290404      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:18.291273      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:19.292288      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:20.292597      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:21.292516      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:22.292715      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:23.292992      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:24.293304      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:25.294297      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:22:26.046529 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0705 13:22:26.294737      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:27.294944      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:28.295175      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:29.295392      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:30.296315      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:31.296505      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:32.296719      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:33.297431      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:34.297586      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:35.297714      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:36.297913      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:37.298161      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:38.298298      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:39.298504      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:40.299324      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:41.299409      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:42.300187      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:43.301266      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:44.302273      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:45.303308      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:22:46.045607 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0705 13:22:46.303799      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:47.304260      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:48.304478      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:49.304748      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:50.304836      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:51.305753      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:52.306492      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:53.306589      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:54.307271      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:55.308269      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:56.309284      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:57.310159      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:58.310204      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:22:59.311274      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:00.312280      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:01.312409      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:02.312602      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:03.312794      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:04.312986      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:05.313979      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:23:06.046818 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0705 13:23:06.314114      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:07.314305      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:08.315271      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:09.315354      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:10.316274      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:11.317363      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:12.317496      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:13.317706      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:14.318273      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:15.319345      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:16.319455      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:17.319551      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:18.319754      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:19.319852      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:20.320013      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:21.320199      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:22.321271      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:23.322289      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:24.323285      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:25.324350      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:23:26.045897 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0705 13:23:26.325304      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:27.325502      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:28.325722      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:29.326303      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:30.327359      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:31.327557      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:32.328376      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:33.329266      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:34.330277      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:35.331291      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:36.331376      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:37.332283      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:38.332457      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:39.333286      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:40.333351      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:41.334313      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:42.334409      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:43.334638      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:44.334837      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:45.335013      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:23:46.046687 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0705 13:23:46.336022      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:47.336241      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:48.337278      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:49.338384      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:50.338386      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:51.338559      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:52.338660      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:53.339496      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:54.339576      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:55.339699      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:56.339799      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:57.340726      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:58.340826      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:23:59.341272      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:00.342275      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:01.342414      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:02.342611      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:03.344229      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:04.344417      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:05.345422      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:24:06.046199 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0705 13:24:06.346431      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:07.346564      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:08.346849      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:09.346997      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:10.347038      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:11.347267      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:12.347470      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:13.347518      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:14.347708      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:15.347896      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:16.347994      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:17.348186      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:18.348433      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:19.348665      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:20.348801      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:21.348988      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:22.348971      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:23.349666      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:24.349765      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:25.349899      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:24:26.046396 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0705 13:24:26.350615      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:27.350713      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:28.351291      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:29.352300      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:30.352548      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:31.352737      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:32.352949      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:33.353303      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:34.354282      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:35.354353      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:36.354563      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:37.354798      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:38.355010      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:39.355390      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:40.355495      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:41.355705      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:42.355903      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:43.356308      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:44.356478      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:45.357443      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:24:46.046330 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0705 13:24:46.357506      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:47.357714      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:48.357942      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:49.358310      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:50.359272      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:51.359355      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:52.359459      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:53.360334      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:54.361271      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:55.362281      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:56.363308      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:57.363509      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:58.363721      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:24:59.364269      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:00.364408      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:01.364608      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:02.364813      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:03.365301      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:04.365493      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:05.366443      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:25:06.045203 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0705 13:25:06.367470      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:07.367623      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:08.367840      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:09.368313      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:10.368397      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:11.368593      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:12.368754      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:13.370231      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:14.371276      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:15.371391      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:16.372279      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:17.372483      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:18.373276      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:19.374319      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:20.374579      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:21.374783      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:22.375463      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:23.375593      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:24.375674      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:25.375764      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:25:26.045706 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0705 13:25:26.375909      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:27.376155      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:28.376352      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:29.377313      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:30.378160      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:31.378257      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:32.378454      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:33.379701      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:34.379945      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:35.380903      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:36.381110      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:37.381301      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:38.382271      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:39.383243      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:40.383502      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:41.383701      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:42.384409      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:43.385419      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:44.386262      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:45.387265      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:25:46.046245 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0705 13:25:46.388302      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:47.388520      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:48.389515      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:49.389822      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:50.390867      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:51.391305      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:52.392277      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:53.393271      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:54.393459      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:55.394400      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:56.394741      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:57.394973      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:58.395214      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:25:59.395271      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:00.395505      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:01.395599      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:02.395817      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:03.396287      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:04.397276      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:05.397351      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:26:06.045532 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0705 13:26:06.397759      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:07.397968      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:08.398319      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:09.399429      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:10.399904      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:11.400344      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:12.400441      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:13.401273      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:14.402290      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:15.403290      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:16.403332      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:17.403526      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:18.403713      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:19.404263      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:20.404783      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:21.404606      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:22.404712      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:23.404936      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:24.405168      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:25.405249      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:26:26.046027 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0705 13:26:26.406285      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:27.406636      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:28.406871      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:29.407306      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:30.407524      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:31.407781      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:32.408039      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:33.408257      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:34.408355      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:35.409286      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:36.409388      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:37.410310      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:38.411287      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:39.412265      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:40.413278      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:41.413476      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:42.413772      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:43.413903      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:44.414141      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:45.414253      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:26:46.044735 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0705 13:26:46.415199      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:47.415422      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:48.416269      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:49.416469      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:50.417415      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:51.417613      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:52.417763      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:53.418041      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:54.418331      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:55.418421      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:56.419371      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:57.419427      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:58.420278      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:26:59.421264      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:00.422281      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:01.422386      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:02.422590      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:03.423315      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:04.423515      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:05.424438      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:27:06.046329 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0705 13:27:06.424622      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:07.424912      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:08.425286      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:09.425488      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:10.426484      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:11.426590      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:12.426790      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:13.426992      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:14.427234      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:15.428272      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:16.428486      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:17.428598      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:18.428710      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:19.429273      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:20.430277      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:21.430369      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:22.431275      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:23.432288      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:24.432476      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:25.433417      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:27:26.045512 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0705 13:27:26.433519      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:27.433747      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:28.433943      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:29.434168      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:30.434409      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:31.434531      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:32.434666      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:33.435368      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:34.436314      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:35.437267      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:36.437398      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:37.437616      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:38.437849      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:39.438061      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:40.438189      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:41.438390      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:42.439276      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:43.439463      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:44.439659      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:45.439764      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:27:46.045689 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0705 13:27:46.439860      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:47.440543      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:48.440641      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:49.441271      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:50.442313      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:51.443271      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:52.443471      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:53.444288      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:54.444499      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:55.445275      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:56.445414      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:57.445615      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:58.445816      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:27:59.446048      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:00.446222      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:01.446420      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:02.447290      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:03.447479      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:04.447695      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:05.447829      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:28:06.046817 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0705 13:28:06.447968      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:07.448137      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:08.448345      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:09.448569      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:10.449437      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:11.449575      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:12.450528      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:13.450632      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:14.451307      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:15.452269      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:16.453041      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:17.453253      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:18.453453      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:19.453668      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:20.453975      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:21.453944      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:22.454176      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:23.454381      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:24.454607      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:25.454762      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:28:26.045543 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0705 13:28:26.454889      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:27.455133      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:28.455335      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:29.455563      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:30.456286      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:31.456428      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:32.457455      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:33.457586      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:34.457801      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:35.457935      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:36.458153      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:37.458313      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:38.458593      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:39.459297      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:40.459367      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:41.460282      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:42.460384      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:43.461271      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:44.462358      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:45.462451      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:28:46.045627 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0705 13:28:46.463041      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:47.463295      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:48.463504      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:49.463730      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:50.463856      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:51.464572      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:52.465269      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:53.465466      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:54.466284      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:55.466415      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:56.466559      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:57.466775      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:58.467358      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:28:59.468298      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:00.468382      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:01.468649      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:02.469430      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:03.469530      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:04.470274      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:05.470365      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:29:06.046173 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0705 13:29:06.470464      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:07.471301      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:08.472269      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:09.473280      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:10.473457      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:11.473677      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:12.473933      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:13.474152      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:14.474389      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:15.474475      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:16.474676      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:17.474782      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:18.474992      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:19.475157      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:20.475224      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:21.475414      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:22.475617      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:23.476274      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:24.476462      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:25.477463      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:29:26.044941 21 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0705 13:29:26.044978 21 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 07/05/25 13:29:26.045
  STEP: retrieving all remaining pages @ 07/05/25 13:29:26.05
  I0705 13:29:26.055685 21 chunking.go:221] Retrieved 40/40 results with rv 39731 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk3MzEsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0705 13:29:26.060163 21 chunking.go:221] Retrieved 40/40 results with rv 39731 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk3MzEsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0705 13:29:26.065814 21 chunking.go:221] Retrieved 40/40 results with rv 39731 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk3MzEsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0705 13:29:26.071217 21 chunking.go:221] Retrieved 40/40 results with rv 39731 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk3MzEsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0705 13:29:26.076040 21 chunking.go:221] Retrieved 40/40 results with rv 39731 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk3MzEsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0705 13:29:26.081352 21 chunking.go:221] Retrieved 40/40 results with rv 39731 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk3MzEsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0705 13:29:26.086455 21 chunking.go:221] Retrieved 40/40 results with rv 39731 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk3MzEsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0705 13:29:26.090666 21 chunking.go:221] Retrieved 40/40 results with rv 39731 and continue 
  I0705 13:29:26.090798 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-8218" for this suite. @ 07/05/25 13:29:26.096
• [497.829 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 07/05/25 13:29:26.107
  I0705 13:29:26.107086 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename watch @ 07/05/25 13:29:26.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:29:26.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:29:26.122
  STEP: creating a new configmap @ 07/05/25 13:29:26.124
  STEP: modifying the configmap once @ 07/05/25 13:29:26.13
  STEP: modifying the configmap a second time @ 07/05/25 13:29:26.139
  STEP: deleting the configmap @ 07/05/25 13:29:26.149
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 07/05/25 13:29:26.158
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 07/05/25 13:29:26.159
  I0705 13:29:26.159570 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1192  39dbced1-e5b4-439a-b361-4518dd06b98c 39742 0 2025-07-05 13:29:26 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-07-05 13:29:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0705 13:29:26.159682 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1192  39dbced1-e5b4-439a-b361-4518dd06b98c 39743 0 2025-07-05 13:29:26 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-07-05 13:29:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0705 13:29:26.159772 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1192" for this suite. @ 07/05/25 13:29:26.197
• [0.100 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 07/05/25 13:29:26.206
  I0705 13:29:26.206748 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename projected @ 07/05/25 13:29:26.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:29:26.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:29:26.223
  STEP: Creating projection with secret that has name projected-secret-test-map-8af787ac-5346-4c4a-a954-2bb613cb0f99 @ 07/05/25 13:29:26.226
  STEP: Creating a pod to test consume secrets @ 07/05/25 13:29:26.233
  E0705 13:29:26.478239      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:27.478463      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/05/25 13:29:28.253
  I0705 13:29:28.258689 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-projected-secrets-b3ef2f4e-66af-4d48-816f-1afac8081141 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/05/25 13:29:28.278
  I0705 13:29:28.299984 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4556" for this suite. @ 07/05/25 13:29:28.306
• [2.109 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2222
  STEP: Creating a kubernetes client @ 07/05/25 13:29:28.315
  I0705 13:29:28.315393 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename services @ 07/05/25 13:29:28.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:29:28.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:29:28.332
  STEP: creating service in namespace services-9039 @ 07/05/25 13:29:28.335
  STEP: creating service affinity-nodeport in namespace services-9039 @ 07/05/25 13:29:28.335
  I0705 13:29:28.373848 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0705 13:29:28.479179      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:29.479278      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:29:30.405259 21 resource.go:361] Creating new exec pod
  E0705 13:29:30.479362      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:31.479484      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:29:32.435102 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-9039 exec execpod-affinityvntd5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  E0705 13:29:32.479718      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:29:32.536811 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.152.183.186) 80 port [tcp/http] succeeded!\n"
  I0705 13:29:32.536854 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0705 13:29:32.536936 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-9039 exec execpod-affinityvntd5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.186 80'
  I0705 13:29:32.628717 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.186 80\nConnection to 10.152.183.186 80 port [tcp/http] succeeded!\n"
  I0705 13:29:32.628762 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0705 13:29:32.628845 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-9039 exec execpod-affinityvntd5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.90.231 31614'
  I0705 13:29:32.720795 21 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.90.231 31614\n+ echo hostName\nConnection to 172.31.90.231 31614 port [tcp/*] succeeded!\n"
  I0705 13:29:32.720837 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0705 13:29:32.720934 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-9039 exec execpod-affinityvntd5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.22.171 31614'
  I0705 13:29:32.815097 21 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.22.171 31614\n+ echo hostName\nConnection to 172.31.22.171 31614 port [tcp/*] succeeded!\n"
  I0705 13:29:32.815141 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0705 13:29:32.815263 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-9039 exec execpod-affinityvntd5 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31614/ ; done'
  I0705 13:29:32.979960 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31614/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31614/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31614/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31614/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31614/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31614/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31614/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31614/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31614/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31614/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31614/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31614/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31614/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31614/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31614/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.22.171:31614/\n"
  I0705 13:29:32.980019 21 builder.go:147] stdout: "\naffinity-nodeport-85dffb5fc7-vrsvz\naffinity-nodeport-85dffb5fc7-vrsvz\naffinity-nodeport-85dffb5fc7-vrsvz\naffinity-nodeport-85dffb5fc7-vrsvz\naffinity-nodeport-85dffb5fc7-vrsvz\naffinity-nodeport-85dffb5fc7-vrsvz\naffinity-nodeport-85dffb5fc7-vrsvz\naffinity-nodeport-85dffb5fc7-vrsvz\naffinity-nodeport-85dffb5fc7-vrsvz\naffinity-nodeport-85dffb5fc7-vrsvz\naffinity-nodeport-85dffb5fc7-vrsvz\naffinity-nodeport-85dffb5fc7-vrsvz\naffinity-nodeport-85dffb5fc7-vrsvz\naffinity-nodeport-85dffb5fc7-vrsvz\naffinity-nodeport-85dffb5fc7-vrsvz\naffinity-nodeport-85dffb5fc7-vrsvz"
  I0705 13:29:32.980033 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-vrsvz
  I0705 13:29:32.980045 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-vrsvz
  I0705 13:29:32.980052 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-vrsvz
  I0705 13:29:32.980134 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-vrsvz
  I0705 13:29:32.980142 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-vrsvz
  I0705 13:29:32.980147 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-vrsvz
  I0705 13:29:32.980153 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-vrsvz
  I0705 13:29:32.980160 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-vrsvz
  I0705 13:29:32.980173 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-vrsvz
  I0705 13:29:32.980183 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-vrsvz
  I0705 13:29:32.980189 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-vrsvz
  I0705 13:29:32.980194 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-vrsvz
  I0705 13:29:32.980199 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-vrsvz
  I0705 13:29:32.980205 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-vrsvz
  I0705 13:29:32.980215 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-vrsvz
  I0705 13:29:32.980221 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-vrsvz
  I0705 13:29:32.980294 21 service.go:4352] Cleaning up the exec pod
  I0705 13:29:33.056253 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9039" for this suite. @ 07/05/25 13:29:33.061
• [4.755 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 07/05/25 13:29:33.07
  I0705 13:29:33.070077 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename kubelet-test @ 07/05/25 13:29:33.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:29:33.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:29:33.085
  E0705 13:29:33.480303      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:34.481279      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:29:35.124319 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3124" for this suite. @ 07/05/25 13:29:35.131
• [2.071 seconds]
------------------------------
[sig-apps] Job should execute all indexes despite some failing when using backoffLimitPerIndex [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:609
  STEP: Creating a kubernetes client @ 07/05/25 13:29:35.141
  I0705 13:29:35.141014 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename job @ 07/05/25 13:29:35.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:29:35.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:29:35.16
  STEP: Creating an indexed job with backoffLimit per index and failing pods @ 07/05/25 13:29:35.163
  STEP: Awaiting for the job to fail as there are failed indexes @ 07/05/25 13:29:35.17
  E0705 13:29:35.481817      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:36.482318      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:37.483225      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:38.483387      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:39.483465      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:40.483591      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:41.483846      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:42.484102      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:43.484197      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:44.484435      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:45.485057      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:46.485326      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:47.486360      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:48.486464      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:49.487176      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:50.487265      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:51.488238      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:52.488310      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:53.488812      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:54.489156      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure all indexes were executed @ 07/05/25 13:29:55.232
  I0705 13:29:55.237358 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1064" for this suite. @ 07/05/25 13:29:55.243
• [20.112 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:547
  STEP: Creating a kubernetes client @ 07/05/25 13:29:55.253
  I0705 13:29:55.253449 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename gc @ 07/05/25 13:29:55.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:29:55.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:29:55.268
  STEP: create the deployment @ 07/05/25 13:29:55.272
  I0705 13:29:55.278046      21 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 07/05/25 13:29:55.278
  E0705 13:29:55.489820      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 07/05/25 13:29:55.794
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 07/05/25 13:29:55.804
  STEP: Gathering metrics @ 07/05/25 13:29:56.329
  W0705 13:29:56.335367      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0705 13:29:56.335397 21 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0705 13:29:56.335603 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4491" for this suite. @ 07/05/25 13:29:56.34
• [1.097 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 07/05/25 13:29:56.35
  I0705 13:29:56.350449 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename deployment @ 07/05/25 13:29:56.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:29:56.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:29:56.373
  I0705 13:29:56.379113 21 deployment.go:1664] Creating simple deployment test-new-deployment
  I0705 13:29:56.400633 21 deployment.go:223] deployment "test-new-deployment" doesn't have the required revision set
  E0705 13:29:56.490786      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:29:57.491536      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 07/05/25 13:29:58.421
  STEP: updating a scale subresource @ 07/05/25 13:29:58.425
  STEP: verifying the deployment Spec.Replicas was modified @ 07/05/25 13:29:58.433
  STEP: Patch a scale subresource @ 07/05/25 13:29:58.437
  I0705 13:29:58.462544 21 deployment.go:632] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7991",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4489e858-a557-4060-8e2f-ac525f1b679c",
      ResourceVersion: (string) (len=5) "40617",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887318996,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887318996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887318997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887318997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887318997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887318997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887318996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0705 13:29:58.471277 21 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7991",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4d770f77-41e0-409b-9619-627292cdc3be",
      ResourceVersion: (string) (len=5) "40623",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887318996,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "4489e858-a557-4060-8e2f-ac525f1b679c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887318998,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 34 38 39 65 38  35 38 2d 61 35 35 37 2d  |\"4489e858-a557-|
              00000120  34 30 36 30 2d 38 65 32  66 2d 61 63 35 32 35 66  |4060-8e2f-ac525f|
              00000130  31 62 36 37 39 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1b679c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887318998,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0705 13:29:58.478427 21 deployment.go:68] Pod "test-new-deployment-685b768f58-4ltdm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-4ltdm",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7991",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "641c1209-ee0f-4c5a-97a9-c5a15ae69e4d",
      ResourceVersion: (string) (len=5) "40610",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887318996,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "4d770f77-41e0-409b-9619-627292cdc3be",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887318996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 64  37 37 30 66 37 37 2d 34  |d\":\"4d770f77-4|
              00000090  31 65 30 2d 34 30 39 62  2d 39 36 31 39 2d 36 32  |1e0-409b-9619-62|
              000000a0  37 32 39 32 63 64 63 33  62 65 5c 22 7d 22 3a 7b  |7292cdc3be\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887318997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 35 34  2e 32 35 32 5c 22 7d 22  |2.168.54.252\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8gq66",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8gq66",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-171",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887318997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887318996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887318997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887318997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887318996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.171",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.171"
        }
      },
      PodIP: (string) (len=14) "192.168.54.252",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.54.252"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887318996,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63887318996,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9d85fdf458c218ea9074139ef40cd399492746b88311892a7e4077eb459fc244",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8gq66",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 13:29:58.480535 21 deployment.go:68] Pod "test-new-deployment-685b768f58-x27lh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-x27lh",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7991",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6cbe9c92-e5ee-4688-b27a-663b00bb5792",
      ResourceVersion: (string) (len=5) "40622",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887318998,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "4d770f77-41e0-409b-9619-627292cdc3be",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887318998,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 64  37 37 30 66 37 37 2d 34  |d\":\"4d770f77-4|
              00000090  31 65 30 2d 34 30 39 62  2d 39 36 31 39 2d 36 32  |1e0-409b-9619-62|
              000000a0  37 32 39 32 63 64 63 33  62 65 5c 22 7d 22 3a 7b  |7292cdc3be\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x9zs2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x9zs2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-5-45",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887318998,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 13:29:58.481747 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0705 13:29:58.492271      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "deployment-7991" for this suite. @ 07/05/25 13:29:58.494
• [2.158 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 07/05/25 13:29:58.508
  I0705 13:29:58.508746 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename watch @ 07/05/25 13:29:58.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:29:58.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:29:58.526
  STEP: creating a watch on configmaps with label A @ 07/05/25 13:29:58.529
  STEP: creating a watch on configmaps with label B @ 07/05/25 13:29:58.531
  STEP: creating a watch on configmaps with label A or B @ 07/05/25 13:29:58.532
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 07/05/25 13:29:58.534
  I0705 13:29:58.540976 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9200  dfaab3c9-6493-4b76-acd6-a61decf3375e 40648 0 2025-07-05 13:29:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-05 13:29:58 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0705 13:29:58.541100 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9200  dfaab3c9-6493-4b76-acd6-a61decf3375e 40648 0 2025-07-05 13:29:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-05 13:29:58 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 07/05/25 13:29:58.541
  I0705 13:29:58.551820 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9200  dfaab3c9-6493-4b76-acd6-a61decf3375e 40649 0 2025-07-05 13:29:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-05 13:29:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0705 13:29:58.551907 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9200  dfaab3c9-6493-4b76-acd6-a61decf3375e 40649 0 2025-07-05 13:29:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-05 13:29:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 07/05/25 13:29:58.551
  I0705 13:29:58.561318 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9200  dfaab3c9-6493-4b76-acd6-a61decf3375e 40650 0 2025-07-05 13:29:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-05 13:29:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0705 13:29:58.561401 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9200  dfaab3c9-6493-4b76-acd6-a61decf3375e 40650 0 2025-07-05 13:29:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-05 13:29:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 07/05/25 13:29:58.561
  I0705 13:29:58.569267 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9200  dfaab3c9-6493-4b76-acd6-a61decf3375e 40651 0 2025-07-05 13:29:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-05 13:29:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0705 13:29:58.569314 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9200  dfaab3c9-6493-4b76-acd6-a61decf3375e 40651 0 2025-07-05 13:29:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-05 13:29:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 07/05/25 13:29:58.569
  I0705 13:29:58.574830 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9200  1407cee1-4d76-4f97-a2b3-d6462c145152 40652 0 2025-07-05 13:29:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-07-05 13:29:58 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0705 13:29:58.574906 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9200  1407cee1-4d76-4f97-a2b3-d6462c145152 40652 0 2025-07-05 13:29:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-07-05 13:29:58 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0705 13:29:59.492817      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:30:00.492942      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:30:01.493011      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:30:02.493216      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:30:03.493439      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:30:04.493659      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:30:05.493793      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:30:06.494025      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:30:07.494157      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:30:08.494281      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 07/05/25 13:30:08.575
  I0705 13:30:08.584921 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9200  1407cee1-4d76-4f97-a2b3-d6462c145152 40793 0 2025-07-05 13:29:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-07-05 13:29:58 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0705 13:30:08.584970 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9200  1407cee1-4d76-4f97-a2b3-d6462c145152 40793 0 2025-07-05 13:29:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-07-05 13:29:58 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0705 13:30:09.494528      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:30:10.495313      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:30:11.495428      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:30:12.495521      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:30:13.495776      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:30:14.495852      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:30:15.496023      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:30:16.496214      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:30:17.496376      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:30:18.496606      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:30:18.585878 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9200" for this suite. @ 07/05/25 13:30:18.593
• [20.094 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 07/05/25 13:30:18.602
  I0705 13:30:18.602515 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename daemonsets @ 07/05/25 13:30:18.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:30:18.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:30:18.62
  STEP: Creating a simple DaemonSet "daemon-set" @ 07/05/25 13:30:18.707
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/05/25 13:30:18.714
  I0705 13:30:18.794757 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:30:18.794796 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:30:18.799126 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0705 13:30:18.799154 21 fixtures.go:131] Node ip-172-31-22-171 is running 0 daemon pod, expected 1
  E0705 13:30:19.496714      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:30:19.721707 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:30:19.721742 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:30:19.727700 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0705 13:30:19.727726 21 fixtures.go:131] Node ip-172-31-22-171 is running 0 daemon pod, expected 1
  E0705 13:30:20.496966      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:30:20.720842 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:30:20.720883 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:30:20.727339 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0705 13:30:20.727364 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 07/05/25 13:30:20.732
  I0705 13:30:20.822207 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:30:20.822302 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:30:20.827054 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0705 13:30:20.827104 21 fixtures.go:131] Node ip-172-31-5-45 is running 0 daemon pod, expected 1
  E0705 13:30:21.496823      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:30:21.754338 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:30:21.754381 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:30:21.759907 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0705 13:30:21.759936 21 fixtures.go:131] Node ip-172-31-5-45 is running 0 daemon pod, expected 1
  E0705 13:30:22.497724      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:30:22.752882 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:30:22.752928 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:30:22.757787 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0705 13:30:22.757814 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 07/05/25 13:30:22.757
  STEP: Deleting DaemonSet "daemon-set" @ 07/05/25 13:30:22.766
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5204, will wait for the garbage collector to delete the pods @ 07/05/25 13:30:22.766
  I0705 13:30:22.831822 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 10.907156ms
  I0705 13:30:22.932634 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.805309ms
  E0705 13:30:23.497834      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:30:24.137751 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0705 13:30:24.137786 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0705 13:30:24.142526 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"40947"},"items":null}

  I0705 13:30:24.147286 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"40947"},"items":null}

  I0705 13:30:24.164009 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5204" for this suite. @ 07/05/25 13:30:24.168
• [5.575 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:437
  STEP: Creating a kubernetes client @ 07/05/25 13:30:24.178
  I0705 13:30:24.178135 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename dns @ 07/05/25 13:30:24.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:30:24.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:30:24.193
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 07/05/25 13:30:24.196
  I0705 13:30:24.206158 21 dns.go:449] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-3654  0cd0d999-f85b-404d-bdba-54d15b1ad345 40954 1 2025-07-05 13:30:24 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-07-05 13:30:24 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-8dvxm,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-8dvxm,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},ObservedGeneration:0,},}
  E0705 13:30:24.497968      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:30:25.498113      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 07/05/25 13:30:26.218
  I0705 13:30:26.218349 21 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-3654 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0705 13:30:26.218368 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0705 13:30:26.218414 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/dns-3654/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  I0705 13:30:26.271545 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: Verifying customized DNS server is configured on pod... @ 07/05/25 13:30:26.271
  I0705 13:30:26.271651 21 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-3654 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0705 13:30:26.271659 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0705 13:30:26.271731 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/dns-3654/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0705 13:30:26.321948 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0705 13:30:26.322039 21 dns.go:451] Deleting pod test-dns-nameservers...
  I0705 13:30:26.336538 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3654" for this suite. @ 07/05/25 13:30:26.344
• [2.176 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 07/05/25 13:30:26.353
  I0705 13:30:26.353947 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename webhook @ 07/05/25 13:30:26.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:30:26.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:30:26.369
  STEP: Setting up server cert @ 07/05/25 13:30:26.392
  E0705 13:30:26.498533      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/05/25 13:30:26.837
  STEP: Deploying the webhook pod @ 07/05/25 13:30:26.843
  STEP: Wait for the deployment to be ready @ 07/05/25 13:30:26.859
  I0705 13:30:26.875724 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0705 13:30:27.499490      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:30:28.500454      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/05/25 13:30:28.893
  STEP: Verifying the service has paired with the endpoint @ 07/05/25 13:30:28.911
  E0705 13:30:29.501294      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:30:29.912844 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0705 13:30:29.923233 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 07/05/25 13:30:30.434
  STEP: Creating a custom resource that should be denied by the webhook @ 07/05/25 13:30:30.448
  E0705 13:30:30.501992      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:30:31.502112      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 07/05/25 13:30:32.462
  STEP: Updating the custom resource with disallowed data should be denied @ 07/05/25 13:30:32.47
  STEP: Deleting the custom resource should be denied @ 07/05/25 13:30:32.484
  STEP: Remove the offending key and value from the custom resource data @ 07/05/25 13:30:32.493
  E0705 13:30:32.503005      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the updated custom resource should be successful @ 07/05/25 13:30:32.506
  I0705 13:30:33.096242 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7887" for this suite. @ 07/05/25 13:30:33.102
  STEP: Destroying namespace "webhook-markers-1727" for this suite. @ 07/05/25 13:30:33.111
• [6.767 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 07/05/25 13:30:33.121
  I0705 13:30:33.121144 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename kubelet-test @ 07/05/25 13:30:33.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:30:33.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:30:33.138
  I0705 13:30:33.164104 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9231" for this suite. @ 07/05/25 13:30:33.203
• [0.091 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 07/05/25 13:30:33.212
  I0705 13:30:33.212631 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename configmap @ 07/05/25 13:30:33.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:30:33.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:30:33.227
  STEP: Creating configMap with name configmap-test-volume-b71697fd-212d-47ab-870b-c1860ac6ecac @ 07/05/25 13:30:33.229
  STEP: Creating a pod to test consume configMaps @ 07/05/25 13:30:33.234
  E0705 13:30:33.503196      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:30:34.503787      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/05/25 13:30:35.266
  I0705 13:30:35.269996 21 output.go:207] Trying to get logs from node ip-172-31-5-45 pod pod-configmaps-de630538-eb29-483d-bcbb-33cb7bb49e1e container agnhost-container: <nil>
  STEP: delete the pod @ 07/05/25 13:30:35.289
  I0705 13:30:35.307941 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5800" for this suite. @ 07/05/25 13:30:35.313
• [2.109 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3714
  STEP: Creating a kubernetes client @ 07/05/25 13:30:35.322
  I0705 13:30:35.322103 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename services @ 07/05/25 13:30:35.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:30:35.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:30:35.338
  STEP: creating service multiprotocol-test in namespace services-5132 @ 07/05/25 13:30:35.341
  STEP: creating pod pod1 in namespace services-5132 @ 07/05/25 13:30:35.358
  STEP: Creating pod pod1 in namespace services-5132 @ 07/05/25 13:30:35.358
  E0705 13:30:35.504542      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:30:36.504651      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-5132 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 07/05/25 13:30:37.397
  I0705 13:30:37.406051      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0705 13:30:37.413205 21 service.go:4729] successfully validated that service multiprotocol-test in namespace services-5132 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 07/05/25 13:30:37.413
  I0705 13:30:37.413263 21 resource.go:361] Creating new exec pod
  E0705 13:30:37.505736      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:30:38.505803      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:30:39.431988 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-5132 exec execpod45hp8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.156 80'
  E0705 13:30:39.506622      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:30:39.525015 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.156 80\nConnection to 10.152.183.156 80 port [tcp/http] succeeded!\n"
  I0705 13:30:39.525055 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0705 13:30:39.525153 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-5132 exec execpod45hp8 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.156 80'
  E0705 13:30:40.507554      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:30:41.507842      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:30:41.621303 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.156 80\n"
  I0705 13:30:41.621350 21 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 07/05/25 13:30:41.621
  I0705 13:30:41.634517 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-5132 exec execpod45hp8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.156 80'
  I0705 13:30:41.728877 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.156 80\nConnection to 10.152.183.156 80 port [tcp/http] succeeded!\n"
  I0705 13:30:41.728924 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0705 13:30:41.729091 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-5132 exec execpod45hp8 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.156 80'
  E0705 13:30:42.507877      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:30:43.508142      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:30:43.825913 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.156 80\n"
  I0705 13:30:43.825959 21 builder.go:147] stdout: ""
  I0705 13:30:43.826022 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-5132 exec execpod45hp8 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.156 80'
  E0705 13:30:44.508339      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:30:45.508472      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:30:45.915234 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.156 80\n"
  I0705 13:30:45.915287 21 builder.go:147] stdout: ""
  I0705 13:30:45.915406 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-5132 exec execpod45hp8 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.156 80'
  E0705 13:30:46.509293      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:30:47.509487      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:30:48.006900 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.156 80\n"
  I0705 13:30:48.006960 21 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 07/05/25 13:30:48.007
  I0705 13:30:48.019642 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-5132 exec execpod45hp8 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.156 80'
  E0705 13:30:48.509675      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:30:49.510704      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:30:50.126043 21 builder.go:146] stderr: "+ + nc -v -u -w 2 10.152.183.156 80\necho hostName\n"
  I0705 13:30:50.126111 21 builder.go:147] stdout: "pod1"
  I0705 13:30:50.126235 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-5132 exec execpod45hp8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.156 80'
  E0705 13:30:50.510933      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:30:51.511307      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:30:52.223805 21 builder.go:135] rc: 1
  I0705 13:30:52.223903 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-5132 exec execpod45hp8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.156 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.156 80
  nc: connect to 10.152.183.156 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0705 13:30:52.224326 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-5132 exec execpod45hp8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.156 80'
  E0705 13:30:52.512335      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:30:53.512493      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:30:54.346044 21 builder.go:135] rc: 1
  I0705 13:30:54.346121 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-5132 exec execpod45hp8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.156 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.156 80
  nc: connect to 10.152.183.156 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0705 13:30:54.346195 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-5132 exec execpod45hp8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.156 80'
  E0705 13:30:54.512523      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:30:55.513329      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:30:56.434217 21 builder.go:135] rc: 1
  I0705 13:30:56.434281 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-5132 exec execpod45hp8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.156 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.156 80
  nc: connect to 10.152.183.156 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0705 13:30:56.434517 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5132" for this suite. @ 07/05/25 13:30:56.441
• [21.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 07/05/25 13:30:56.452
  I0705 13:30:56.452499 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename container-runtime @ 07/05/25 13:30:56.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:30:56.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:30:56.468
  STEP: create the container @ 07/05/25 13:30:56.471
  I0705 13:30:56.483051      21 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 07/05/25 13:30:56.483
  E0705 13:30:56.514105      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:30:57.514832      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:30:58.515385      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 07/05/25 13:30:59.505
  STEP: the container should be terminated @ 07/05/25 13:30:59.509
  STEP: the termination message should be set @ 07/05/25 13:30:59.509
  I0705 13:30:59.509779 21 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 07/05/25 13:30:59.509
  E0705 13:30:59.515912      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:30:59.532616 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2778" for this suite. @ 07/05/25 13:30:59.538
• [3.095 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:199
  STEP: Creating a kubernetes client @ 07/05/25 13:30:59.547
  I0705 13:30:59.547508 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename emptydir @ 07/05/25 13:30:59.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:30:59.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:30:59.565
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 07/05/25 13:30:59.568
  E0705 13:31:00.516090      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:01.516231      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:02.516379      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:03.516643      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/05/25 13:31:03.594
  I0705 13:31:03.599875 21 output.go:207] Trying to get logs from node ip-172-31-5-45 pod pod-3a96e2bd-2ab0-4a86-8f89-0970eadcc7fe container test-container: <nil>
  STEP: delete the pod @ 07/05/25 13:31:03.609
  I0705 13:31:03.628002 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3230" for this suite. @ 07/05/25 13:31:03.634
• [4.095 seconds]
------------------------------
SSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 07/05/25 13:31:03.642
  I0705 13:31:03.642746 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename conformance-tests @ 07/05/25 13:31:03.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:31:03.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:31:03.658
  STEP: Getting node addresses @ 07/05/25 13:31:03.661
  I0705 13:31:03.661750 21 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0705 13:31:03.734807 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-8985" for this suite. @ 07/05/25 13:31:03.739
• [0.106 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 07/05/25 13:31:03.749
  I0705 13:31:03.749216 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename var-expansion @ 07/05/25 13:31:03.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:31:03.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:31:03.762
  STEP: Creating a pod to test env composition @ 07/05/25 13:31:03.765
  E0705 13:31:04.516913      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:05.517014      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:06.517196      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:07.517427      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/05/25 13:31:07.793
  I0705 13:31:07.799108 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod var-expansion-9b926c02-1381-4810-95c6-b3e3fc7842f3 container dapi-container: <nil>
  STEP: delete the pod @ 07/05/25 13:31:07.812
  I0705 13:31:07.832304 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-574" for this suite. @ 07/05/25 13:31:07.837
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 07/05/25 13:31:07.847
  I0705 13:31:07.847249 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename podtemplate @ 07/05/25 13:31:07.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:31:07.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:31:07.864
  I0705 13:31:07.905262 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5784" for this suite. @ 07/05/25 13:31:07.938
• [0.100 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:570
  STEP: Creating a kubernetes client @ 07/05/25 13:31:07.947
  I0705 13:31:07.947861 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename security-context-test @ 07/05/25 13:31:07.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:31:07.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:31:07.963
  E0705 13:31:08.517607      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:09.517714      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:10.517858      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:11.518100      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:31:11.996550 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5383" for this suite. @ 07/05/25 13:31:12.002
• [4.064 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:353
  STEP: Creating a kubernetes client @ 07/05/25 13:31:12.011
  I0705 13:31:12.011663 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename dns @ 07/05/25 13:31:12.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:31:12.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:31:12.028
  STEP: Creating a test externalName service @ 07/05/25 13:31:12.03
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3433.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-3433.svc.cluster.local; sleep 1; done
   @ 07/05/25 13:31:12.037
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3433.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3433.svc.cluster.local; sleep 1; done
   @ 07/05/25 13:31:12.037
  STEP: creating a pod to probe DNS @ 07/05/25 13:31:12.037
  STEP: submitting the pod to kubernetes @ 07/05/25 13:31:12.037
  E0705 13:31:12.518278      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:13.518531      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/05/25 13:31:14.061
  STEP: looking for the results for each expected name from probers @ 07/05/25 13:31:14.065
  I0705 13:31:14.078339 21 dns_common.go:571] DNS probes using dns-test-0688e2e1-bf6a-4484-b5e8-8b11b0e71663 succeeded

  STEP: changing the externalName to bar.example.com @ 07/05/25 13:31:14.078
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3433.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-3433.svc.cluster.local; sleep 1; done
   @ 07/05/25 13:31:14.088
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3433.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3433.svc.cluster.local; sleep 1; done
   @ 07/05/25 13:31:14.089
  STEP: creating a second pod to probe DNS @ 07/05/25 13:31:14.089
  STEP: submitting the pod to kubernetes @ 07/05/25 13:31:14.089
  E0705 13:31:14.518638      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:15.518743      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:16.518783      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:17.521263      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:18.519759      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:19.520304      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/05/25 13:31:20.122
  STEP: looking for the results for each expected name from probers @ 07/05/25 13:31:20.126
  I0705 13:31:20.139314 21 dns_common.go:571] DNS probes using dns-test-3f333892-4bbe-4bb7-8bf8-6b97dc4f440b succeeded

  STEP: changing the service to type=ClusterIP @ 07/05/25 13:31:20.139
  I0705 13:31:20.161897      21 warnings.go:110] "Warning: spec.externalName is ignored when spec.type is not \"ExternalName\""
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3433.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-3433.svc.cluster.local; sleep 1; done
   @ 07/05/25 13:31:20.161
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3433.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-3433.svc.cluster.local; sleep 1; done
   @ 07/05/25 13:31:20.162
  STEP: creating a third pod to probe DNS @ 07/05/25 13:31:20.162
  STEP: submitting the pod to kubernetes @ 07/05/25 13:31:20.169
  E0705 13:31:20.520723      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:21.521304      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/05/25 13:31:22.189
  STEP: looking for the results for each expected name from probers @ 07/05/25 13:31:22.194
  I0705 13:31:22.207412 21 dns_common.go:571] DNS probes using dns-test-525d9399-0d1c-4569-a2a8-b94fc120550b succeeded

  STEP: deleting the pod @ 07/05/25 13:31:22.207
  STEP: deleting the pod @ 07/05/25 13:31:22.228
  STEP: deleting the pod @ 07/05/25 13:31:22.25
  STEP: deleting the test externalName service @ 07/05/25 13:31:22.268
  I0705 13:31:22.290110 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3433" for this suite. @ 07/05/25 13:31:22.295
• [10.293 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job with successPolicy should succeeded when all indexes succeeded [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 07/05/25 13:31:22.304
  I0705 13:31:22.304401 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename job @ 07/05/25 13:31:22.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:31:22.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:31:22.317
  STEP: Creating an indexed job with successPolicy @ 07/05/25 13:31:22.32
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 07/05/25 13:31:22.326
  E0705 13:31:22.521959      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:23.522016      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:24.522941      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:25.523124      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensure that the job reaches completions @ 07/05/25 13:31:26.341
  STEP: Verifying that the job status to ensure correct final state @ 07/05/25 13:31:26.349
  I0705 13:31:26.353842 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7892" for this suite. @ 07/05/25 13:31:26.359
• [4.066 seconds]
------------------------------
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 07/05/25 13:31:26.37
  I0705 13:31:26.370052 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename subpath @ 07/05/25 13:31:26.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:31:26.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:31:26.386
  STEP: Setting up data @ 07/05/25 13:31:26.388
  STEP: Creating pod pod-subpath-test-configmap-khq9 @ 07/05/25 13:31:26.4
  STEP: Creating a pod to test atomic-volume-subpath @ 07/05/25 13:31:26.4
  E0705 13:31:26.523674      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:27.523926      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:28.524999      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:29.525329      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:30.525664      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:31.525914      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:32.526474      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:33.526576      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:34.527191      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:35.527317      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:36.527863      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:37.528116      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:38.528215      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:39.528482      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:40.529522      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:41.529592      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:42.530381      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:43.531304      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:44.531802      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:45.531906      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:46.532796      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:47.532916      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/05/25 13:31:48.481
  I0705 13:31:48.486998 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-subpath-test-configmap-khq9 container test-container-subpath-configmap-khq9: <nil>
  STEP: delete the pod @ 07/05/25 13:31:48.496
  STEP: Deleting pod pod-subpath-test-configmap-khq9 @ 07/05/25 13:31:48.52
  I0705 13:31:48.520951 21 delete.go:62] Deleting pod "pod-subpath-test-configmap-khq9" in namespace "subpath-8611"
  I0705 13:31:48.525873 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8611" for this suite. @ 07/05/25 13:31:48.531
  E0705 13:31:48.533721      21 retrywatcher.go:169] "Watch failed" err="context canceled"
• [22.171 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3404
  STEP: Creating a kubernetes client @ 07/05/25 13:31:48.541
  I0705 13:31:48.541228 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename services @ 07/05/25 13:31:48.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:31:48.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:31:48.557
  STEP: creating a Service @ 07/05/25 13:31:48.566
  STEP: watching for the Service to be added @ 07/05/25 13:31:48.591
  I0705 13:31:48.593730 21 service.go:3456] Found Service test-service-hv9kk in namespace services-8687 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32376}]
  I0705 13:31:48.593767 21 service.go:3463] Service test-service-hv9kk created
  STEP: Getting /status @ 07/05/25 13:31:48.593
  I0705 13:31:48.598386 21 service.go:3474] Service test-service-hv9kk has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 07/05/25 13:31:48.598
  STEP: watching for the Service to be patched @ 07/05/25 13:31:48.605
  I0705 13:31:48.607087 21 service.go:3497] observed Service test-service-hv9kk in namespace services-8687 with annotations: map[] & LoadBalancer: {[]}
  I0705 13:31:48.607123 21 service.go:3500] Found Service test-service-hv9kk in namespace services-8687 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc0053f27c0 []}]}
  I0705 13:31:48.607133 21 service.go:3507] Service test-service-hv9kk has service status patched
  STEP: updating the ServiceStatus @ 07/05/25 13:31:48.607
  I0705 13:31:48.617955 21 service.go:3527] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 07/05/25 13:31:48.617
  I0705 13:31:48.619400 21 service.go:3538] Observed Service test-service-hv9kk in namespace services-8687 with annotations: map[] & Conditions: []
  I0705 13:31:48.619481 21 service.go:3549] Observed Service test-service-hv9kk in namespace services-8687 with annotations: map[patchedstatus:true] & Conditions: []
  I0705 13:31:48.619503 21 service.go:3545] Found Service test-service-hv9kk in namespace services-8687 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0705 13:31:48.619514 21 service.go:3556] Service test-service-hv9kk has service status updated
  STEP: patching the service @ 07/05/25 13:31:48.619
  STEP: watching for the Service to be patched @ 07/05/25 13:31:48.628
  I0705 13:31:48.630295 21 service.go:3579] observed Service test-service-hv9kk in namespace services-8687 with labels: map[test-service-static:true]
  I0705 13:31:48.630399 21 service.go:3579] observed Service test-service-hv9kk in namespace services-8687 with labels: map[test-service-static:true]
  I0705 13:31:48.630410 21 service.go:3579] observed Service test-service-hv9kk in namespace services-8687 with labels: map[test-service-static:true]
  I0705 13:31:48.630419 21 service.go:3582] Found Service test-service-hv9kk in namespace services-8687 with labels: map[test-service:patched test-service-static:true]
  I0705 13:31:48.630428 21 service.go:3589] Service test-service-hv9kk patched
  STEP: deleting the service @ 07/05/25 13:31:48.63
  STEP: watching for the Service to be deleted @ 07/05/25 13:31:48.661
  I0705 13:31:48.662883 21 service.go:3613] Observed event: ADDED
  I0705 13:31:48.662917 21 service.go:3613] Observed event: MODIFIED
  I0705 13:31:48.663019 21 service.go:3613] Observed event: MODIFIED
  I0705 13:31:48.663171 21 service.go:3613] Observed event: MODIFIED
  I0705 13:31:48.663196 21 service.go:3609] Found Service test-service-hv9kk in namespace services-8687 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0705 13:31:48.663214 21 service.go:3618] Service test-service-hv9kk deleted
  I0705 13:31:48.663313 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8687" for this suite. @ 07/05/25 13:31:48.668
• [0.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 07/05/25 13:31:48.677
  I0705 13:31:48.677329 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename watch @ 07/05/25 13:31:48.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:31:48.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:31:48.693
  STEP: creating a watch on configmaps @ 07/05/25 13:31:48.695
  STEP: creating a new configmap @ 07/05/25 13:31:48.696
  STEP: modifying the configmap once @ 07/05/25 13:31:48.702
  STEP: closing the watch once it receives two notifications @ 07/05/25 13:31:48.712
  I0705 13:31:48.712753 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-580  be62b775-3b81-4ccf-90c2-b21a3e6d928c 41823 0 2025-07-05 13:31:48 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-07-05 13:31:48 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0705 13:31:48.712885 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-580  be62b775-3b81-4ccf-90c2-b21a3e6d928c 41824 0 2025-07-05 13:31:48 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-07-05 13:31:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 07/05/25 13:31:48.712
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 07/05/25 13:31:48.721
  STEP: deleting the configmap @ 07/05/25 13:31:48.722
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 07/05/25 13:31:48.73
  I0705 13:31:48.730939 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-580  be62b775-3b81-4ccf-90c2-b21a3e6d928c 41826 0 2025-07-05 13:31:48 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-07-05 13:31:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0705 13:31:48.731024 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-580  be62b775-3b81-4ccf-90c2-b21a3e6d928c 41827 0 2025-07-05 13:31:48 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-07-05 13:31:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0705 13:31:48.731243 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-580" for this suite. @ 07/05/25 13:31:48.769
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 07/05/25 13:31:48.778
  I0705 13:31:48.778028 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename webhook @ 07/05/25 13:31:48.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:31:48.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:31:48.796
  STEP: Setting up server cert @ 07/05/25 13:31:48.818
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/05/25 13:31:49.107
  STEP: Deploying the webhook pod @ 07/05/25 13:31:49.113
  STEP: Wait for the deployment to be ready @ 07/05/25 13:31:49.128
  I0705 13:31:49.146507 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0705 13:31:49.533929      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:50.533951      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/05/25 13:31:51.162
  STEP: Verifying the service has paired with the endpoint @ 07/05/25 13:31:51.181
  E0705 13:31:51.534089      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:31:52.181585 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 07/05/25 13:31:52.186
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/05/25 13:31:52.186
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 07/05/25 13:31:52.202
  E0705 13:31:52.535095      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 07/05/25 13:31:53.216
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/05/25 13:31:53.216
  E0705 13:31:53.535643      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 07/05/25 13:31:54.252
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/05/25 13:31:54.252
  E0705 13:31:54.536393      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:55.536510      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:56.536642      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:57.537305      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:31:58.537411      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 07/05/25 13:31:59.295
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/05/25 13:31:59.295
  E0705 13:31:59.537531      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:00.538296      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:01.538467      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:02.538592      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:03.538674      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:32:04.413864 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-37" for this suite. @ 07/05/25 13:32:04.42
  STEP: Destroying namespace "webhook-markers-4112" for this suite. @ 07/05/25 13:32:04.428
• [15.658 seconds]
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 07/05/25 13:32:04.436
  I0705 13:32:04.436359 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename pods @ 07/05/25 13:32:04.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:32:04.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:32:04.454
  I0705 13:32:04.457079 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: creating the pod @ 07/05/25 13:32:04.457
  STEP: submitting the pod to kubernetes @ 07/05/25 13:32:04.457
  E0705 13:32:04.539649      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:05.539926      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:32:06.535381 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0705 13:32:06.540274      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "pods-2783" for this suite. @ 07/05/25 13:32:06.54
• [2.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 07/05/25 13:32:06.55
  I0705 13:32:06.550915 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename replicaset @ 07/05/25 13:32:06.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:32:06.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:32:06.567
  STEP: Create a ReplicaSet @ 07/05/25 13:32:06.57
  STEP: Verify that the required pods have come up @ 07/05/25 13:32:06.578
  I0705 13:32:06.583885 21 resource.go:81] Pod name sample-pod: Found 0 pods out of 3
  E0705 13:32:07.540453      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:08.541325      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:09.541386      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:10.541511      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:11.541728      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:32:11.664344 21 resource.go:81] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 07/05/25 13:32:11.664
  I0705 13:32:11.669363 21 replica_set.go:588] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 TerminatingReplicas:<nil> ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 07/05/25 13:32:11.669
  STEP: DeleteCollection of the ReplicaSets @ 07/05/25 13:32:11.675
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 07/05/25 13:32:11.689
  I0705 13:32:11.694814 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6918" for this suite. @ 07/05/25 13:32:11.707
• [5.166 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1162
  STEP: Creating a kubernetes client @ 07/05/25 13:32:11.717
  I0705 13:32:11.717223 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename job @ 07/05/25 13:32:11.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:32:11.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:32:11.731
  STEP: Creating a suspended job @ 07/05/25 13:32:11.738
  STEP: Patching the Job @ 07/05/25 13:32:11.744
  STEP: Watching for Job to be patched @ 07/05/25 13:32:11.759
  I0705 13:32:11.761522 21 job.go:1369] Event ADDED observed for Job e2e-5lhrh in namespace job-6425 with labels: map[e2e-job-label:e2e-5lhrh] and annotations: map[]
  I0705 13:32:11.761578 21 job.go:1369] Event MODIFIED observed for Job e2e-5lhrh in namespace job-6425 with labels: map[e2e-job-label:e2e-5lhrh] and annotations: map[]
  I0705 13:32:11.761593 21 job.go:1372] Event MODIFIED found for Job e2e-5lhrh in namespace job-6425 with labels: map[e2e-5lhrh:patched e2e-job-label:e2e-5lhrh] and annotations: map[]
  STEP: Updating the job @ 07/05/25 13:32:11.761
  STEP: Watching for Job to be updated @ 07/05/25 13:32:11.771
  I0705 13:32:11.772668 21 job.go:1372] Event MODIFIED found for Job e2e-5lhrh in namespace job-6425 with labels: map[e2e-5lhrh:patched e2e-job-label:e2e-5lhrh] and annotations: map[updated:true]
  I0705 13:32:11.772736 21 job.go:1240] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 07/05/25 13:32:11.772
  I0705 13:32:11.776942 21 job.go:1247] Job: e2e-5lhrh as labels: map[e2e-5lhrh:patched e2e-job-label:e2e-5lhrh]
  STEP: Waiting for job to complete @ 07/05/25 13:32:11.776
  E0705 13:32:12.541787      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:13.541908      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:14.542032      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:15.542164      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:16.542237      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:17.543299      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:18.544163      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:19.544404      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 07/05/25 13:32:19.808
  STEP: Watching for Job to be deleted @ 07/05/25 13:32:19.824
  I0705 13:32:19.826125 21 job.go:1369] Event MODIFIED observed for Job e2e-5lhrh in namespace job-6425 with labels: map[e2e-5lhrh:patched e2e-job-label:e2e-5lhrh] and annotations: map[updated:true]
  I0705 13:32:19.826199 21 job.go:1369] Event MODIFIED observed for Job e2e-5lhrh in namespace job-6425 with labels: map[e2e-5lhrh:patched e2e-job-label:e2e-5lhrh] and annotations: map[updated:true]
  I0705 13:32:19.826211 21 job.go:1369] Event MODIFIED observed for Job e2e-5lhrh in namespace job-6425 with labels: map[e2e-5lhrh:patched e2e-job-label:e2e-5lhrh] and annotations: map[updated:true]
  I0705 13:32:19.826379 21 job.go:1369] Event MODIFIED observed for Job e2e-5lhrh in namespace job-6425 with labels: map[e2e-5lhrh:patched e2e-job-label:e2e-5lhrh] and annotations: map[updated:true]
  I0705 13:32:19.826394 21 job.go:1369] Event MODIFIED observed for Job e2e-5lhrh in namespace job-6425 with labels: map[e2e-5lhrh:patched e2e-job-label:e2e-5lhrh] and annotations: map[updated:true]
  I0705 13:32:19.826414 21 job.go:1372] Event DELETED found for Job e2e-5lhrh in namespace job-6425 with labels: map[e2e-5lhrh:patched e2e-job-label:e2e-5lhrh] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 07/05/25 13:32:19.826
  I0705 13:32:19.830622 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6425" for this suite. @ 07/05/25 13:32:19.838
• [8.141 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1368
  STEP: Creating a kubernetes client @ 07/05/25 13:32:19.858
  I0705 13:32:19.858912 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename kubectl @ 07/05/25 13:32:19.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:32:19.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:32:19.875
  STEP: validating cluster-info @ 07/05/25 13:32:19.877
  I0705 13:32:19.877977 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-6404 cluster-info'
  I0705 13:32:19.927634 21 builder.go:146] stderr: ""
  I0705 13:32:19.927676 21 builder.go:147] stdout: "Kubernetes control plane is running at https://10.152.183.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0705 13:32:19.927882 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6404" for this suite. @ 07/05/25 13:32:19.938
• [0.089 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 07/05/25 13:32:19.948
  I0705 13:32:19.948385 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename daemonsets @ 07/05/25 13:32:19.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:32:19.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:32:19.965
  STEP: Creating simple DaemonSet "daemon-set" @ 07/05/25 13:32:20.057
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/05/25 13:32:20.063
  I0705 13:32:20.140389 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:32:20.140437 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:32:20.147419 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0705 13:32:20.147444 21 fixtures.go:131] Node ip-172-31-22-171 is running 0 daemon pod, expected 1
  E0705 13:32:20.544850      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:32:21.071154 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:32:21.071221 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:32:21.077520 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0705 13:32:21.077547 21 fixtures.go:131] Node ip-172-31-22-171 is running 0 daemon pod, expected 1
  E0705 13:32:21.544975      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:32:22.071450 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:32:22.071489 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:32:22.077873 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0705 13:32:22.077908 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 07/05/25 13:32:22.082
  I0705 13:32:22.087030 21 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 07/05/25 13:32:22.087
  I0705 13:32:22.098283 21 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 07/05/25 13:32:22.098
  I0705 13:32:22.100024 21 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0705 13:32:22.100105 21 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0705 13:32:22.100176 21 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0705 13:32:22.100377 21 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0705 13:32:22.100503 21 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0705 13:32:22.100528 21 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-8191 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0705 13:32:22.100542 21 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 07/05/25 13:32:22.1
  STEP: watching for the daemon set status to be patched @ 07/05/25 13:32:22.108
  I0705 13:32:22.110456 21 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0705 13:32:22.110526 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0705 13:32:22.110595 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0705 13:32:22.110653 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0705 13:32:22.110792 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0705 13:32:22.110817 21 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-8191 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0705 13:32:22.110898 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0705 13:32:22.110939 21 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-8191 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0705 13:32:22.110951 21 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 07/05/25 13:32:22.117
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8191, will wait for the garbage collector to delete the pods @ 07/05/25 13:32:22.117
  I0705 13:32:22.181285 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.336711ms
  I0705 13:32:22.281762 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.474619ms
  E0705 13:32:22.545356      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:23.545584      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:32:23.688276 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0705 13:32:23.688313 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0705 13:32:23.693644 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"42308"},"items":null}

  I0705 13:32:23.697425 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"42308"},"items":null}

  I0705 13:32:23.716497 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8191" for this suite. @ 07/05/25 13:32:23.721
• [3.782 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 07/05/25 13:32:23.73
  I0705 13:32:23.730612 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename sysctl @ 07/05/25 13:32:23.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:32:23.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:32:23.747
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 07/05/25 13:32:23.75
  STEP: Watching for error events or started pod @ 07/05/25 13:32:23.762
  E0705 13:32:24.545687      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:25.546315      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 07/05/25 13:32:25.769
  E0705 13:32:26.546388      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:27.546602      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 07/05/25 13:32:27.784
  STEP: Getting logs from the pod @ 07/05/25 13:32:27.784
  STEP: Checking that the sysctl is actually updated @ 07/05/25 13:32:27.792
  I0705 13:32:27.792308 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-7015" for this suite. @ 07/05/25 13:32:27.798
• [4.077 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 07/05/25 13:32:27.807
  I0705 13:32:27.807779 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename kubelet-test @ 07/05/25 13:32:27.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:32:27.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:32:27.824
  STEP: Waiting for pod completion @ 07/05/25 13:32:27.838
  E0705 13:32:28.547558      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:29.547707      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:30.548531      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:31.548605      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:32:31.867010 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-154" for this suite. @ 07/05/25 13:32:31.872
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:96
  STEP: Creating a kubernetes client @ 07/05/25 13:32:31.882
  I0705 13:32:31.882672 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename replication-controller @ 07/05/25 13:32:31.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:32:31.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:32:31.899
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 07/05/25 13:32:31.902
  E0705 13:32:32.548698      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:33.548773      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 07/05/25 13:32:33.929
  STEP: Then the orphan pod is adopted @ 07/05/25 13:32:33.935
  E0705 13:32:34.549823      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:32:34.946321 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7737" for this suite. @ 07/05/25 13:32:34.952
• [3.082 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:308
  STEP: Creating a kubernetes client @ 07/05/25 13:32:34.964
  I0705 13:32:34.964386 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename dns @ 07/05/25 13:32:34.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:32:34.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:32:34.98
  STEP: Creating a test headless service @ 07/05/25 13:32:34.982
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4949.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-4949.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4949.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-4949.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-4949.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-4949.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-4949.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-4949.svc.cluster.local;sleep 1; done
   @ 07/05/25 13:32:34.993
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4949.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-4949.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4949.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-4949.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-4949.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-4949.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-4949.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-4949.svc.cluster.local;sleep 1; done
   @ 07/05/25 13:32:34.993
  STEP: creating a pod to probe DNS @ 07/05/25 13:32:34.993
  STEP: submitting the pod to kubernetes @ 07/05/25 13:32:34.993
  E0705 13:32:35.550301      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:36.551344      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/05/25 13:32:37.021
  STEP: looking for the results for each expected name from probers @ 07/05/25 13:32:37.026
  I0705 13:32:37.031851 21 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-4949.svc.cluster.local from pod dns-4949/dns-test-65839946-6a0f-4672-8c4f-7979c69240b4: the server could not find the requested resource (get pods dns-test-65839946-6a0f-4672-8c4f-7979c69240b4)
  I0705 13:32:37.036500 21 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-4949.svc.cluster.local from pod dns-4949/dns-test-65839946-6a0f-4672-8c4f-7979c69240b4: the server could not find the requested resource (get pods dns-test-65839946-6a0f-4672-8c4f-7979c69240b4)
  I0705 13:32:37.041795 21 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-4949.svc.cluster.local from pod dns-4949/dns-test-65839946-6a0f-4672-8c4f-7979c69240b4: the server could not find the requested resource (get pods dns-test-65839946-6a0f-4672-8c4f-7979c69240b4)
  I0705 13:32:37.046478 21 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-4949.svc.cluster.local from pod dns-4949/dns-test-65839946-6a0f-4672-8c4f-7979c69240b4: the server could not find the requested resource (get pods dns-test-65839946-6a0f-4672-8c4f-7979c69240b4)
  I0705 13:32:37.051905 21 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4949.svc.cluster.local from pod dns-4949/dns-test-65839946-6a0f-4672-8c4f-7979c69240b4: the server could not find the requested resource (get pods dns-test-65839946-6a0f-4672-8c4f-7979c69240b4)
  I0705 13:32:37.057404 21 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4949.svc.cluster.local from pod dns-4949/dns-test-65839946-6a0f-4672-8c4f-7979c69240b4: the server could not find the requested resource (get pods dns-test-65839946-6a0f-4672-8c4f-7979c69240b4)
  I0705 13:32:37.062350 21 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-4949.svc.cluster.local from pod dns-4949/dns-test-65839946-6a0f-4672-8c4f-7979c69240b4: the server could not find the requested resource (get pods dns-test-65839946-6a0f-4672-8c4f-7979c69240b4)
  I0705 13:32:37.068170 21 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-4949.svc.cluster.local from pod dns-4949/dns-test-65839946-6a0f-4672-8c4f-7979c69240b4: the server could not find the requested resource (get pods dns-test-65839946-6a0f-4672-8c4f-7979c69240b4)
  I0705 13:32:37.068196 21 dns_common.go:506] Lookups using dns-4949/dns-test-65839946-6a0f-4672-8c4f-7979c69240b4 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-4949.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-4949.svc.cluster.local agnhost_udp@dns-test-service-2.dns-4949.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-4949.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4949.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4949.svc.cluster.local jessie_udp@dns-test-service-2.dns-4949.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4949.svc.cluster.local]

  I0705 13:32:37.078687 21 dns_common.go:514] Pod client logs for webserver: 
  I0705 13:32:37.086347 21 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0705 13:32:37.095099 21 dns_common.go:514] Pod client logs for jessie-querier: 
  E0705 13:32:37.551431      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:38.551601      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:39.552380      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:40.552508      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:41.552727      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:32:42.070117 21 dns_common.go:546] DNS probes using dns-4949/dns-test-65839946-6a0f-4672-8c4f-7979c69240b4 succeeded

  STEP: deleting the pod @ 07/05/25 13:32:42.07
  STEP: deleting the test headless service @ 07/05/25 13:32:42.09
  I0705 13:32:42.106926 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4949" for this suite. @ 07/05/25 13:32:42.116
• [7.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 07/05/25 13:32:42.126
  I0705 13:32:42.126280 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename secrets @ 07/05/25 13:32:42.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:32:42.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:32:42.142
  STEP: Creating secret with name secret-test-51a77ae2-bb94-4e2a-a58f-3170860cec4c @ 07/05/25 13:32:42.145
  STEP: Creating a pod to test consume secrets @ 07/05/25 13:32:42.15
  E0705 13:32:42.553554      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:43.554310      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:44.554739      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:45.554839      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/05/25 13:32:46.18
  I0705 13:32:46.184962 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-secrets-f2ce6bbb-5b00-4d21-9c22-2f847dabf1b5 container secret-env-test: <nil>
  STEP: delete the pod @ 07/05/25 13:32:46.193
  I0705 13:32:46.217455 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1628" for this suite. @ 07/05/25 13:32:46.223
• [4.106 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 07/05/25 13:32:46.232
  I0705 13:32:46.232292 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename endpointslice @ 07/05/25 13:32:46.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:32:46.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:32:46.247
  STEP: getting /apis @ 07/05/25 13:32:46.25
  STEP: getting /apis/discovery.k8s.io @ 07/05/25 13:32:46.253
  STEP: getting /apis/discovery.k8s.iov1 @ 07/05/25 13:32:46.254
  STEP: creating @ 07/05/25 13:32:46.255
  STEP: getting @ 07/05/25 13:32:46.273
  STEP: listing @ 07/05/25 13:32:46.278
  STEP: watching @ 07/05/25 13:32:46.282
  I0705 13:32:46.282235 21 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 07/05/25 13:32:46.283
  STEP: cluster-wide watching @ 07/05/25 13:32:46.288
  I0705 13:32:46.288330 21 endpointslice.go:459] starting watch
  STEP: patching @ 07/05/25 13:32:46.289
  STEP: updating @ 07/05/25 13:32:46.295
  I0705 13:32:46.306097 21 endpointslice.go:482] waiting for watch events with expected annotations
  I0705 13:32:46.306135 21 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 07/05/25 13:32:46.306
  STEP: deleting a collection @ 07/05/25 13:32:46.323
  I0705 13:32:46.352147 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8437" for this suite. @ 07/05/25 13:32:46.358
• [0.135 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:814
  STEP: Creating a kubernetes client @ 07/05/25 13:32:46.367
  I0705 13:32:46.367325 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename services @ 07/05/25 13:32:46.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:32:46.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:32:46.382
  STEP: creating service multi-endpoint-test in namespace services-6034 @ 07/05/25 13:32:46.385
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6034 to expose endpoints map[] @ 07/05/25 13:32:46.401
  I0705 13:32:46.406915      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0705 13:32:46.406954 21 service.go:4613] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0705 13:32:46.555406      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:32:47.411856      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0705 13:32:47.417762 21 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-6034 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-6034 @ 07/05/25 13:32:47.417
  E0705 13:32:47.555441      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:48.555632      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6034 to expose endpoints map[pod1:[100]] @ 07/05/25 13:32:49.525
  I0705 13:32:49.535463      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0705 13:32:49.543017 21 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-6034 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-6034 @ 07/05/25 13:32:49.543
  E0705 13:32:49.556430      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:50.556618      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:51.556850      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6034 to expose endpoints map[pod1:[100] pod2:[101]] @ 07/05/25 13:32:51.565
  I0705 13:32:51.577376      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0705 13:32:51.584321 21 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-6034 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 07/05/25 13:32:51.584
  I0705 13:32:51.584376 21 resource.go:361] Creating new exec pod
  E0705 13:32:52.557240      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:53.557479      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:32:53.607712 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-6034 exec execpodzzb9w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0705 13:32:53.697019 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.152.183.160) 80 port [tcp/http] succeeded!\n"
  I0705 13:32:53.697080 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0705 13:32:53.697160 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-6034 exec execpodzzb9w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.160 80'
  I0705 13:32:53.792686 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.160 80\nConnection to 10.152.183.160 80 port [tcp/http] succeeded!\n"
  I0705 13:32:53.792725 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0705 13:32:53.792805 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-6034 exec execpodzzb9w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0705 13:32:53.882255 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.152.183.160) 81 port [tcp/*] succeeded!\n"
  I0705 13:32:53.882298 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0705 13:32:53.882381 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=services-6034 exec execpodzzb9w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.160 81'
  I0705 13:32:53.970307 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.160 81\nConnection to 10.152.183.160 81 port [tcp/*] succeeded!\n"
  I0705 13:32:53.970349 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-6034 @ 07/05/25 13:32:53.97
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6034 to expose endpoints map[pod2:[101]] @ 07/05/25 13:32:53.993
  I0705 13:32:54.002962      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0705 13:32:54.008460 21 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-6034 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-6034 @ 07/05/25 13:32:54.008
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6034 to expose endpoints map[] @ 07/05/25 13:32:54.029
  I0705 13:32:54.035232      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0705 13:32:54.041277 21 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-6034 exposes endpoints map[]
  I0705 13:32:54.069105 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6034" for this suite. @ 07/05/25 13:32:54.078
• [7.719 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 07/05/25 13:32:54.086
  I0705 13:32:54.086507 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename lease-test @ 07/05/25 13:32:54.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:32:54.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:32:54.104
  I0705 13:32:54.199593 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-2752" for this suite. @ 07/05/25 13:32:54.205
• [0.127 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 07/05/25 13:32:54.213
  I0705 13:32:54.213997 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename subpath @ 07/05/25 13:32:54.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:32:54.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:32:54.23
  STEP: Setting up data @ 07/05/25 13:32:54.233
  STEP: Creating pod pod-subpath-test-downwardapi-8fnz @ 07/05/25 13:32:54.245
  STEP: Creating a pod to test atomic-volume-subpath @ 07/05/25 13:32:54.245
  E0705 13:32:54.558454      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:55.559531      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:56.559650      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:57.559726      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:58.560307      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:32:59.560368      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:00.560500      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:01.560563      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:02.560690      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:03.560772      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:04.561300      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:05.562295      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:06.563309      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:07.563373      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:08.564034      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:09.564054      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:10.564606      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:11.565255      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:12.566053      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:13.566225      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:14.567103      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:15.567263      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:16.568311      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:17.568532      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/05/25 13:33:18.335
  I0705 13:33:18.339842 21 output.go:207] Trying to get logs from node ip-172-31-5-45 pod pod-subpath-test-downwardapi-8fnz container test-container-subpath-downwardapi-8fnz: <nil>
  STEP: delete the pod @ 07/05/25 13:33:18.349
  STEP: Deleting pod pod-subpath-test-downwardapi-8fnz @ 07/05/25 13:33:18.368
  I0705 13:33:18.368843 21 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-8fnz" in namespace "subpath-5587"
  I0705 13:33:18.373579 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5587" for this suite. @ 07/05/25 13:33:18.38
• [24.174 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:492
  STEP: Creating a kubernetes client @ 07/05/25 13:33:18.388
  I0705 13:33:18.388480 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename webhook @ 07/05/25 13:33:18.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:33:18.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:33:18.404
  STEP: Setting up server cert @ 07/05/25 13:33:18.427
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/05/25 13:33:18.551
  STEP: Deploying the webhook pod @ 07/05/25 13:33:18.558
  E0705 13:33:18.568983      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 07/05/25 13:33:18.572
  I0705 13:33:18.587687 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0705 13:33:19.569256      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:20.569367      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/05/25 13:33:20.604
  STEP: Verifying the service has paired with the endpoint @ 07/05/25 13:33:20.624
  E0705 13:33:21.570279      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:33:21.625398 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 07/05/25 13:33:21.631
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 07/05/25 13:33:21.65
  STEP: Creating a configMap that should not be mutated @ 07/05/25 13:33:21.659
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 07/05/25 13:33:21.675
  STEP: Creating a configMap that should be mutated @ 07/05/25 13:33:21.683
  I0705 13:33:21.769737 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5262" for this suite. @ 07/05/25 13:33:21.775
  STEP: Destroying namespace "webhook-markers-188" for this suite. @ 07/05/25 13:33:21.782
• [3.403 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 07/05/25 13:33:21.791
  I0705 13:33:21.791652 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename configmap @ 07/05/25 13:33:21.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:33:21.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:33:21.806
  STEP: Creating configMap with name configmap-test-volume-8e7a5c3a-a2f2-442a-bf5b-d2352343a9c7 @ 07/05/25 13:33:21.809
  STEP: Creating a pod to test consume configMaps @ 07/05/25 13:33:21.814
  E0705 13:33:22.570385      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:23.571318      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:24.571406      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:25.572278      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/05/25 13:33:25.843
  I0705 13:33:25.848263 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-configmaps-5e85d70c-e4bb-490a-ab48-5810111fc6c5 container agnhost-container: <nil>
  STEP: delete the pod @ 07/05/25 13:33:25.858
  I0705 13:33:25.877416 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6826" for this suite. @ 07/05/25 13:33:25.882
• [4.099 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1794
  STEP: Creating a kubernetes client @ 07/05/25 13:33:25.89
  I0705 13:33:25.890888 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename kubectl @ 07/05/25 13:33:25.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:33:25.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:33:25.908
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/05/25 13:33:25.911
  I0705 13:33:25.911900 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-6617 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0705 13:33:25.967669 21 builder.go:146] stderr: ""
  I0705 13:33:25.967707 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 07/05/25 13:33:25.967
  E0705 13:33:26.573311      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:27.574035      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:28.574150      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:29.574401      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:30.574615      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 07/05/25 13:33:31.018
  I0705 13:33:31.019091 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-6617 get pod e2e-test-httpd-pod -o json'
  I0705 13:33:31.064499 21 builder.go:146] stderr: ""
  I0705 13:33:31.064664 21 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2025-07-05T13:33:25Z\",\n        \"generation\": 1,\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-6617\",\n        \"resourceVersion\": \"43011\",\n        \"uid\": \"e5e26eca-a4e3-4690-846d-2cc01c9331ae\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-6fzv4\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-22-171\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-6fzv4\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-05T13:33:27Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-05T13:33:25Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-05T13:33:27Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-05T13:33:27Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-05T13:33:25Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://712d79c90be4b460440d9abdfa9bf855d2875c96971f4330b2bc820e7ad30a3d\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"resources\": {},\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-07-05T13:33:26Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-6fzv4\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"172.31.22.171\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.22.171\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.54.236\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.54.236\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-07-05T13:33:25Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 07/05/25 13:33:31.064
  I0705 13:33:31.064759 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-6617 replace -f -'
  I0705 13:33:31.158623 21 builder.go:146] stderr: ""
  I0705 13:33:31.158663 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 07/05/25 13:33:31.158
  I0705 13:33:31.162966 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-6617 delete pods e2e-test-httpd-pod'
  E0705 13:33:31.574643      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:33:32.513738 21 builder.go:146] stderr: ""
  I0705 13:33:32.513783 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0705 13:33:32.513897 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6617" for this suite. @ 07/05/25 13:33:32.521
• [6.639 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:811
  STEP: Creating a kubernetes client @ 07/05/25 13:33:32.53
  I0705 13:33:32.530821 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename statefulset @ 07/05/25 13:33:32.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:33:32.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:33:32.548
  STEP: Creating service test in namespace statefulset-7715 @ 07/05/25 13:33:32.551
  STEP: Looking for a node to schedule stateful set and pod @ 07/05/25 13:33:32.557
  E0705 13:33:32.574955      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating pod with conflicting port in namespace statefulset-7715 @ 07/05/25 13:33:32.621
  STEP: Waiting until pod test-pod will start running in namespace statefulset-7715 @ 07/05/25 13:33:32.632
  E0705 13:33:33.575269      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:34.575288      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-7715 @ 07/05/25 13:33:34.643
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-7715 @ 07/05/25 13:33:34.65
  I0705 13:33:34.670529 21 statefulset.go:884] Observed stateful pod in namespace: statefulset-7715, name: ss-0, uid: 4d05ef41-b048-4ccc-a012-92e3f533bfdb, status phase: Pending. Waiting for statefulset controller to delete.
  I0705 13:33:34.690415 21 statefulset.go:884] Observed stateful pod in namespace: statefulset-7715, name: ss-0, uid: 4d05ef41-b048-4ccc-a012-92e3f533bfdb, status phase: Failed. Waiting for statefulset controller to delete.
  I0705 13:33:34.698420 21 statefulset.go:884] Observed stateful pod in namespace: statefulset-7715, name: ss-0, uid: 4d05ef41-b048-4ccc-a012-92e3f533bfdb, status phase: Failed. Waiting for statefulset controller to delete.
  I0705 13:33:34.706500 21 statefulset.go:878] Observed delete event for stateful pod ss-0 in namespace statefulset-7715
  STEP: Removing pod with conflicting port in namespace statefulset-7715 @ 07/05/25 13:33:34.706
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-7715 and will be in running state @ 07/05/25 13:33:34.727
  E0705 13:33:35.576247      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:36.576471      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:33:36.743040 21 statefulset.go:138] Deleting all statefulset in ns statefulset-7715
  I0705 13:33:36.749903 21 rest.go:153] Scaling statefulset ss to 0
  E0705 13:33:37.576607      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:38.576840      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:39.577820      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:40.577932      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:41.578037      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:42.578239      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:43.578454      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:44.578680      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:45.578768      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:46.578889      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:33:46.771258 21 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0705 13:33:46.778051 21 rest.go:91] Deleting statefulset ss
  I0705 13:33:46.797867 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7715" for this suite. @ 07/05/25 13:33:46.803
• [14.281 seconds]
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:394
  STEP: Creating a kubernetes client @ 07/05/25 13:33:46.812
  I0705 13:33:46.812084 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename kubectl @ 07/05/25 13:33:46.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:33:46.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:33:46.828
  STEP: creating all guestbook components @ 07/05/25 13:33:46.831
  I0705 13:33:46.831382 21 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0705 13:33:46.831576 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-940 create -f -'
  I0705 13:33:46.935005 21 builder.go:146] stderr: ""
  I0705 13:33:46.935052 21 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0705 13:33:46.935117 21 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0705 13:33:46.935182 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-940 create -f -'
  I0705 13:33:47.043992 21 builder.go:146] stderr: ""
  I0705 13:33:47.044036 21 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0705 13:33:47.044098 21 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0705 13:33:47.044181 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-940 create -f -'
  I0705 13:33:47.149506 21 builder.go:146] stderr: ""
  I0705 13:33:47.149548 21 builder.go:147] stdout: "service/frontend created\n"
  I0705 13:33:47.149630 21 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0705 13:33:47.149712 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-940 create -f -'
  I0705 13:33:47.216524 21 builder.go:146] stderr: ""
  I0705 13:33:47.216569 21 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0705 13:33:47.216633 21 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0705 13:33:47.216710 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-940 create -f -'
  I0705 13:33:47.294460 21 builder.go:146] stderr: ""
  I0705 13:33:47.294498 21 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0705 13:33:47.294575 21 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0705 13:33:47.294657 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-940 create -f -'
  I0705 13:33:47.362976 21 builder.go:146] stderr: ""
  I0705 13:33:47.363013 21 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 07/05/25 13:33:47.363
  I0705 13:33:47.363057 21 kubectl.go:2275] Waiting for all frontend pods to be Running.
  E0705 13:33:47.579321      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:48.579531      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:49.579645      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:50.579703      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:51.579844      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:33:52.414613 21 kubectl.go:2279] Waiting for frontend to serve content.
  I0705 13:33:52.426562 21 kubectl.go:2284] Trying to add a new entry to the guestbook.
  I0705 13:33:52.440759 21 kubectl.go:2289] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 07/05/25 13:33:52.453
  I0705 13:33:52.453630 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-940 delete --grace-period=0 --force -f -'
  I0705 13:33:52.531401 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0705 13:33:52.531584 21 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 07/05/25 13:33:52.531
  I0705 13:33:52.532169 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-940 delete --grace-period=0 --force -f -'
  E0705 13:33:52.580279      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:33:52.610982 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0705 13:33:52.611021 21 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 07/05/25 13:33:52.611
  I0705 13:33:52.611276 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-940 delete --grace-period=0 --force -f -'
  I0705 13:33:52.684640 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0705 13:33:52.684683 21 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 07/05/25 13:33:52.684
  I0705 13:33:52.684959 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-940 delete --grace-period=0 --force -f -'
  I0705 13:33:52.736695 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0705 13:33:52.736733 21 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 07/05/25 13:33:52.736
  I0705 13:33:52.736864 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-940 delete --grace-period=0 --force -f -'
  I0705 13:33:52.801591 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0705 13:33:52.801641 21 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 07/05/25 13:33:52.801
  I0705 13:33:52.801879 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-940 delete --grace-period=0 --force -f -'
  I0705 13:33:52.881443 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0705 13:33:52.881515 21 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0705 13:33:52.881678 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-940" for this suite. @ 07/05/25 13:33:52.887
• [6.087 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:659
  STEP: Creating a kubernetes client @ 07/05/25 13:33:52.899
  I0705 13:33:52.899117 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename statefulset @ 07/05/25 13:33:52.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:33:52.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:33:52.936
  STEP: Creating service test in namespace statefulset-3482 @ 07/05/25 13:33:52.939
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 07/05/25 13:33:52.948
  STEP: Creating stateful set ss in namespace statefulset-3482 @ 07/05/25 13:33:52.955
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-3482 @ 07/05/25 13:33:52.969
  I0705 13:33:52.981454 21 wait.go:44] Found 0 stateful pods, waiting for 1
  E0705 13:33:53.580381      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:54.581290      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:55.582287      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:56.582416      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:57.583305      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:58.583507      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:33:59.583701      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:00.584130      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:01.584214      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:02.584403      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:34:02.977564 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 07/05/25 13:34:02.977
  I0705 13:34:02.982001 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=statefulset-3482 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0705 13:34:03.083967 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0705 13:34:03.084015 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0705 13:34:03.084025 21 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0705 13:34:03.090469 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0705 13:34:03.585089      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:04.585317      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:05.585557      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:06.585704      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:07.585943      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:08.586059      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:09.586308      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:10.586522      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:11.586650      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:12.586917      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:34:13.089334 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0705 13:34:13.089378 21 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0705 13:34:13.113448 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 9.999999465s
  E0705 13:34:13.587018      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:34:14.121418 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 8.992166543s
  E0705 13:34:14.588015      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:34:15.128169 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 7.984786235s
  E0705 13:34:15.588788      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:34:16.134328 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 6.978106266s
  E0705 13:34:16.588845      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:34:17.141023 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 5.971289422s
  E0705 13:34:17.589308      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:34:18.148917 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 4.964512932s
  E0705 13:34:18.590317      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:34:19.156874 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 3.95648415s
  E0705 13:34:19.591313      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:34:20.163645 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 2.949347954s
  E0705 13:34:20.592220      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:34:21.174206 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 1.942552318s
  E0705 13:34:21.592381      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:34:22.182118 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 931.16623ms
  E0705 13:34:22.592475      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-3482 @ 07/05/25 13:34:23.183
  I0705 13:34:23.189785 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=statefulset-3482 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0705 13:34:23.279346 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0705 13:34:23.279401 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0705 13:34:23.279414 21 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0705 13:34:23.284356 21 wait.go:44] Found 1 stateful pods, waiting for 3
  E0705 13:34:23.593292      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:24.593520      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:25.593681      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:26.593845      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:27.593998      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:28.594129      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:29.594260      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:30.594386      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:31.594484      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:32.594655      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:34:33.287723 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0705 13:34:33.287759 21 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0705 13:34:33.287766 21 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 07/05/25 13:34:33.287
  STEP: Scale down will halt with unhealthy stateful pod @ 07/05/25 13:34:33.287
  I0705 13:34:33.296825 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=statefulset-3482 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0705 13:34:33.398607 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0705 13:34:33.398655 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0705 13:34:33.398667 21 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0705 13:34:33.398711 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=statefulset-3482 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0705 13:34:33.513982 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0705 13:34:33.514022 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0705 13:34:33.514033 21 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0705 13:34:33.514112 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=statefulset-3482 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0705 13:34:33.595622      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:34:33.617087 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0705 13:34:33.617127 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0705 13:34:33.617137 21 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0705 13:34:33.617148 21 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0705 13:34:33.624188 21 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 1
  E0705 13:34:34.596305      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:35.596412      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:36.596583      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:37.596681      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:38.596919      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:39.596992      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:40.597374      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:41.597613      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:42.597835      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:43.598115      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:34:43.628762 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0705 13:34:43.628797 21 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0705 13:34:43.628805 21 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0705 13:34:43.729878 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 9.999999475s
  E0705 13:34:44.598248      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:34:44.738117 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.911589234s
  E0705 13:34:45.599347      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:34:45.745879 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.903465187s
  E0705 13:34:46.599464      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:34:46.753042 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.895329829s
  E0705 13:34:47.599642      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:34:47.761434 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.888130982s
  E0705 13:34:48.599974      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:34:48.768854 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.87979984s
  E0705 13:34:49.600227      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:34:49.776381 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.872532269s
  E0705 13:34:50.601301      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:34:50.784415 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.864463721s
  E0705 13:34:51.602308      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:34:51.792530 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.856455002s
  E0705 13:34:52.603317      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:34:52.799583 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 848.468749ms
  E0705 13:34:53.604311      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-3482 @ 07/05/25 13:34:53.8
  I0705 13:34:53.807708 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=statefulset-3482 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0705 13:34:53.894793 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0705 13:34:53.894833 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0705 13:34:53.894847 21 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0705 13:34:53.894891 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=statefulset-3482 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0705 13:34:53.981954 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0705 13:34:53.981996 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0705 13:34:53.982009 21 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0705 13:34:53.982079 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=statefulset-3482 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0705 13:34:54.067045 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0705 13:34:54.067102 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0705 13:34:54.067113 21 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0705 13:34:54.067124 21 rest.go:153] Scaling statefulset ss to 0
  E0705 13:34:54.604698      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:55.605673      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:56.606021      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:57.606241      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:58.606357      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:34:59.606498      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:00.606663      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:01.606774      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:02.606840      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:03.607028      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 07/05/25 13:35:04.078
  I0705 13:35:04.079091 21 statefulset.go:138] Deleting all statefulset in ns statefulset-3482
  I0705 13:35:04.084993 21 rest.go:153] Scaling statefulset ss to 0
  I0705 13:35:04.094935 21 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0705 13:35:04.098731 21 rest.go:91] Deleting statefulset ss
  I0705 13:35:04.118190 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3482" for this suite. @ 07/05/25 13:35:04.123
• [71.233 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 07/05/25 13:35:04.132
  I0705 13:35:04.132780 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename var-expansion @ 07/05/25 13:35:04.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:35:04.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:35:04.149
  STEP: creating the pod with failed condition @ 07/05/25 13:35:04.152
  E0705 13:35:04.607095      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:05.607223      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:06.607440      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:07.608313      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:08.608947      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:09.609111      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:10.609261      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:11.609341      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:12.610194      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:13.610238      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:14.611108      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:15.611153      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:16.611768      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:17.612299      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:18.613311      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:19.613405      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:20.613795      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:21.613902      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:22.614638      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:23.614945      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:24.615197      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:25.615298      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:26.615455      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:27.615687      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:28.615736      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:29.615969      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:30.616134      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:31.616250      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:32.617201      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:33.617304      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:34.617448      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:35.617669      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:36.618574      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:37.618658      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:38.618779      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:39.618884      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:40.618993      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:41.619117      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:42.619228      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:43.619321      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:44.620188      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:45.621214      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:46.621316      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:47.621395      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:48.621736      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:49.621817      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:50.622292      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:51.622388      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:52.622564      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:53.622792      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:54.623373      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:55.624304      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:56.624870      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:57.625290      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:58.625930      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:35:59.626319      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:00.626339      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:01.626481      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:02.626620      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:03.626844      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:04.627770      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:05.628006      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:06.628143      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:07.628273      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:08.629038      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:09.629163      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:10.629830      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:11.629911      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:12.630764      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:13.631307      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:14.632233      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:15.632382      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:16.633312      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:17.633422      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:18.633446      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:19.633669      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:20.634281      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:21.634617      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:22.635193      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:23.635314      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:24.635973      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:25.636178      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:26.636625      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:27.637275      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:28.637849      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:29.637953      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:30.638658      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:31.639193      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:32.639732      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:33.639916      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:34.640946      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:35.641036      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:36.641681      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:37.641875      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:38.642776      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:39.642973      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:40.643291      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:41.643502      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:42.644079      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:43.644349      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:44.644456      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:45.644741      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:46.645789      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:47.646000      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:48.646884      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:49.647120      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:50.647616      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:51.647816      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:52.648517      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:53.648738      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:54.649577      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:55.649696      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:56.650276      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:57.651277      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:58.651566      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:36:59.651779      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:00.652597      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:01.653269      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:02.653570      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:03.654280      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: updating the pod @ 07/05/25 13:37:04.163
  E0705 13:37:04.655194      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:37:04.679566 21 pod_client.go:173] Successfully updated pod "var-expansion-5877338c-943b-4752-9aec-1eb8257dd4fd"
  STEP: waiting for pod running @ 07/05/25 13:37:04.679
  E0705 13:37:05.655388      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:06.655621      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 07/05/25 13:37:06.689
  I0705 13:37:06.689494 21 delete.go:62] Deleting pod "var-expansion-5877338c-943b-4752-9aec-1eb8257dd4fd" in namespace "var-expansion-2236"
  I0705 13:37:06.700870 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-5877338c-943b-4752-9aec-1eb8257dd4fd" to be fully deleted
  E0705 13:37:07.655910      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:08.656164      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:09.656283      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:10.656481      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:11.657397      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:12.657632      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:13.657768      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:14.657845      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:15.657973      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:16.658131      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:17.658287      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:18.658572      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:19.658662      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:20.658811      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:21.659409      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:22.660305      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:23.660415      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:24.660527      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:25.660592      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:26.660690      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:27.660919      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:28.660977      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:29.661238      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:30.662293      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:31.662404      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:32.662635      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:33.663244      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:34.663473      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:35.663621      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:36.663875      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:37.663982      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:38.664055      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:37:38.810046 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2236" for this suite. @ 07/05/25 13:37:38.816
• [154.695 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:426
  STEP: Creating a kubernetes client @ 07/05/25 13:37:38.828
  I0705 13:37:38.828714 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename replication-controller @ 07/05/25 13:37:38.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:37:38.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:37:38.846
  STEP: Creating ReplicationController "e2e-rc-kdw9q" @ 07/05/25 13:37:38.85
  I0705 13:37:38.856669 21 rc.go:795] Get Replication Controller "e2e-rc-kdw9q" to confirm replicas
  E0705 13:37:39.664289      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:37:39.857646 21 rc.go:795] Get Replication Controller "e2e-rc-kdw9q" to confirm replicas
  I0705 13:37:39.863009 21 rc.go:804] Found 1 replicas for "e2e-rc-kdw9q" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-kdw9q" @ 07/05/25 13:37:39.863
  STEP: Updating a scale subresource @ 07/05/25 13:37:39.867
  STEP: Verifying replicas where modified for replication controller "e2e-rc-kdw9q" @ 07/05/25 13:37:39.874
  I0705 13:37:39.874366 21 rc.go:795] Get Replication Controller "e2e-rc-kdw9q" to confirm replicas
  E0705 13:37:40.664317      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:37:40.874465 21 rc.go:795] Get Replication Controller "e2e-rc-kdw9q" to confirm replicas
  I0705 13:37:40.879979 21 rc.go:804] Found 2 replicas for "e2e-rc-kdw9q" replication controller
  I0705 13:37:40.880128 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2024" for this suite. @ 07/05/25 13:37:40.885
• [2.066 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 07/05/25 13:37:40.894
  I0705 13:37:40.894220 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/05/25 13:37:40.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:37:40.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:37:40.911
  I0705 13:37:40.914061 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  E0705 13:37:41.664482      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:42.664606      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:43.664829      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:44.664973      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:45.665899      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:46.666611      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:37:47.238007 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5888" for this suite. @ 07/05/25 13:37:47.244
• [6.361 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 07/05/25 13:37:47.255
  I0705 13:37:47.255551 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename cronjob @ 07/05/25 13:37:47.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:37:47.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:37:47.271
  STEP: Creating a cronjob @ 07/05/25 13:37:47.274
  STEP: creating @ 07/05/25 13:37:47.274
  STEP: getting @ 07/05/25 13:37:47.279
  STEP: listing @ 07/05/25 13:37:47.286
  STEP: watching @ 07/05/25 13:37:47.29
  I0705 13:37:47.290772 21 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 07/05/25 13:37:47.292
  STEP: cluster-wide watching @ 07/05/25 13:37:47.296
  I0705 13:37:47.296174 21 cronjob.go:407] starting watch
  STEP: patching @ 07/05/25 13:37:47.297
  STEP: updating @ 07/05/25 13:37:47.305
  I0705 13:37:47.315844 21 cronjob.go:431] waiting for watch events with expected annotations
  I0705 13:37:47.315886 21 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 07/05/25 13:37:47.315
  STEP: updating /status @ 07/05/25 13:37:47.323
  STEP: get /status @ 07/05/25 13:37:47.332
  STEP: deleting @ 07/05/25 13:37:47.337
  STEP: deleting a collection @ 07/05/25 13:37:47.355
  I0705 13:37:47.373539 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2737" for this suite. @ 07/05/25 13:37:47.379
• [0.134 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:99
  STEP: Creating a kubernetes client @ 07/05/25 13:37:47.389
  I0705 13:37:47.389279 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename aggregator @ 07/05/25 13:37:47.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:37:47.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:37:47.405
  I0705 13:37:47.408014 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Registering the sample API server. @ 07/05/25 13:37:47.408
  E0705 13:37:47.667142      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:37:47.942427 21 helpers.go:184] Found ClusterRoles; assuming RBAC is enabled.
  I0705 13:37:47.984618 21 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0705 13:37:48.667301      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:49.667542      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:37:50.135086 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 5, 13, 37, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 13, 37, 47, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 5, 13, 37, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 13, 37, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0705 13:37:50.667687      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:51.667916      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:37:52.139763 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 5, 13, 37, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 13, 37, 47, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 5, 13, 37, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 13, 37, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0705 13:37:52.668356      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:53.668449      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:37:54.141408 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 5, 13, 37, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 13, 37, 47, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 5, 13, 37, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 13, 37, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0705 13:37:54.668742      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:55.668861      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:37:56.141207 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 5, 13, 37, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 13, 37, 47, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 5, 13, 37, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 13, 37, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0705 13:37:56.669799      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:57.669873      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:37:58.139674 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 5, 13, 37, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 13, 37, 47, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 5, 13, 37, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 13, 37, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0705 13:37:58.670014      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:37:59.670231      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:38:00.141414 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 5, 13, 37, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 13, 37, 47, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 5, 13, 37, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 13, 37, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0705 13:38:00.671097      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:01.671249      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:38:02.141635 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 5, 13, 37, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 13, 37, 47, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 5, 13, 37, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 13, 37, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0705 13:38:02.672302      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:03.672374      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:38:04.140763 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 5, 13, 37, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 13, 37, 47, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 5, 13, 37, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 13, 37, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0705 13:38:04.673384      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:05.673602      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:38:06.141814 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 5, 13, 37, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 13, 37, 47, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 5, 13, 37, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 13, 37, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0705 13:38:06.674472      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:07.674705      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:38:08.141370 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 5, 13, 37, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 13, 37, 47, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 5, 13, 37, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 5, 13, 37, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0705 13:38:08.674952      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:09.675225      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:38:10.265233 21 aggregator.go:756] Waited 117.115063ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 07/05/25 13:38:10.306
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 07/05/25 13:38:10.311
  STEP: List APIServices @ 07/05/25 13:38:10.318
  I0705 13:38:10.323989 21 aggregator.go:557] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 07/05/25 13:38:10.324
  I0705 13:38:10.336244 21 aggregator.go:582] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 07/05/25 13:38:10.336
  I0705 13:38:10.348731 21 aggregator.go:608] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.July, 5, 13, 38, 10, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 07/05/25 13:38:10.348
  I0705 13:38:10.353566 21 aggregator.go:626] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-07-05 13:38:10 +0000 UTC Passed all checks passed}
  I0705 13:38:10.353602 21 aggregator.go:622] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0705 13:38:10.353612 21 aggregator.go:632] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 07/05/25 13:38:10.353
  I0705 13:38:10.366221 21 aggregator.go:648] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-137463484" @ 07/05/25 13:38:10.366
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 07/05/25 13:38:10.377
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 07/05/25 13:38:10.384
  STEP: Patch APIService Status @ 07/05/25 13:38:10.388
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 07/05/25 13:38:10.397
  I0705 13:38:10.401343 21 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-07-05 13:38:10 +0000 UTC Passed all checks passed}
  I0705 13:38:10.401371 21 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0705 13:38:10.401384 21 aggregator.go:722] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0705 13:38:10.401395 21 aggregator.go:732] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 07/05/25 13:38:10.401
  STEP: Confirm that the generated APIService has been deleted @ 07/05/25 13:38:10.416
  I0705 13:38:10.416917 21 aggregator.go:793] Requesting list of APIServices to confirm quantity
  I0705 13:38:10.421483 21 aggregator.go:803] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0705 13:38:10.421515 21 aggregator.go:745] APIService v1alpha1.wardle.example.com has been deleted.
  I0705 13:38:10.562086 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-6842" for this suite. @ 07/05/25 13:38:10.568
• [23.190 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 07/05/25 13:38:10.579
  I0705 13:38:10.579869 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename projected @ 07/05/25 13:38:10.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:38:10.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:38:10.595
  STEP: Creating a pod to test downward API volume plugin @ 07/05/25 13:38:10.597
  E0705 13:38:10.675776      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:11.675930      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:12.676733      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:13.676905      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/05/25 13:38:14.627
  I0705 13:38:14.632130 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod downwardapi-volume-120ef312-2891-4655-b255-afaee60ef009 container client-container: <nil>
  STEP: delete the pod @ 07/05/25 13:38:14.652
  I0705 13:38:14.676914 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0705 13:38:14.676929      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "projected-5956" for this suite. @ 07/05/25 13:38:14.683
• [4.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:566
  STEP: Creating a kubernetes client @ 07/05/25 13:38:14.693
  I0705 13:38:14.693685 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename webhook @ 07/05/25 13:38:14.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:38:14.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:38:14.713
  STEP: Setting up server cert @ 07/05/25 13:38:14.74
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/05/25 13:38:15.073
  STEP: Deploying the webhook pod @ 07/05/25 13:38:15.08
  STEP: Wait for the deployment to be ready @ 07/05/25 13:38:15.096
  I0705 13:38:15.112388 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0705 13:38:15.678009      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:16.678175      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/05/25 13:38:17.128
  STEP: Verifying the service has paired with the endpoint @ 07/05/25 13:38:17.145
  E0705 13:38:17.678290      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:38:18.145676 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 07/05/25 13:38:18.231
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/05/25 13:38:18.34
  STEP: Deleting the collection of validation webhooks @ 07/05/25 13:38:18.369
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/05/25 13:38:18.446
  I0705 13:38:18.519489 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1329" for this suite. @ 07/05/25 13:38:18.524
  STEP: Destroying namespace "webhook-markers-1143" for this suite. @ 07/05/25 13:38:18.534
• [3.849 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 07/05/25 13:38:18.542
  I0705 13:38:18.542934 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename field-validation @ 07/05/25 13:38:18.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:38:18.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:38:18.558
  STEP: apply creating a deployment @ 07/05/25 13:38:18.56
  I0705 13:38:18.580131 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-227" for this suite. @ 07/05/25 13:38:18.625
• [0.093 seconds]
------------------------------
SS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 07/05/25 13:38:18.635
  I0705 13:38:18.635538 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename init-container @ 07/05/25 13:38:18.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:38:18.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:38:18.651
  STEP: creating the pod @ 07/05/25 13:38:18.654
  I0705 13:38:18.654443 21 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E0705 13:38:18.679164      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:19.679534      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:20.679628      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:21.679926      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:22.680760      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:38:23.141492 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1792" for this suite. @ 07/05/25 13:38:23.147
• [4.521 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 07/05/25 13:38:23.156
  I0705 13:38:23.156545 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename var-expansion @ 07/05/25 13:38:23.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:38:23.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:38:23.173
  E0705 13:38:23.680835      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:24.680904      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:38:25.198195 21 delete.go:62] Deleting pod "var-expansion-c6e97363-380f-4609-8c6a-77d70b5c1954" in namespace "var-expansion-2969"
  I0705 13:38:25.208182 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-c6e97363-380f-4609-8c6a-77d70b5c1954" to be fully deleted
  E0705 13:38:25.681879      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:26.681973      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:38:27.218636 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2969" for this suite. @ 07/05/25 13:38:27.225
• [4.077 seconds]
------------------------------
SSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 07/05/25 13:38:27.233
  I0705 13:38:27.233835 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename events @ 07/05/25 13:38:27.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:38:27.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:38:27.251
  STEP: Create set of events @ 07/05/25 13:38:27.254
  STEP: get a list of Events with a label in the current namespace @ 07/05/25 13:38:27.269
  STEP: delete a list of events @ 07/05/25 13:38:27.273
  I0705 13:38:27.273854 21 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 07/05/25 13:38:27.305
  I0705 13:38:27.310704 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8763" for this suite. @ 07/05/25 13:38:27.325
• [0.100 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 07/05/25 13:38:27.333
  I0705 13:38:27.333877 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename projected @ 07/05/25 13:38:27.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:38:27.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:38:27.348
  STEP: Creating configMap with name projected-configmap-test-volume-map-362021ee-31b4-4bac-9e1e-0dab3d8f1b0e @ 07/05/25 13:38:27.351
  STEP: Creating a pod to test consume configMaps @ 07/05/25 13:38:27.356
  E0705 13:38:27.682687      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:28.682922      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:29.683329      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:30.683429      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/05/25 13:38:31.386
  I0705 13:38:31.391706 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-projected-configmaps-abbdad38-2cd6-4814-8501-b23de0d1c170 container agnhost-container: <nil>
  STEP: delete the pod @ 07/05/25 13:38:31.4
  I0705 13:38:31.423411 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4771" for this suite. @ 07/05/25 13:38:31.429
• [4.105 seconds]
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 07/05/25 13:38:31.439
  I0705 13:38:31.439039 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename downward-api @ 07/05/25 13:38:31.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:38:31.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:38:31.454
  STEP: Creating a pod to test downward api env vars @ 07/05/25 13:38:31.457
  E0705 13:38:31.684470      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:32.685349      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:33.685466      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:34.685546      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/05/25 13:38:35.484
  I0705 13:38:35.489737 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod downward-api-2b807d41-de24-4484-bf62-7e29332b95f1 container dapi-container: <nil>
  STEP: delete the pod @ 07/05/25 13:38:35.498
  I0705 13:38:35.517132 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9404" for this suite. @ 07/05/25 13:38:35.523
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:338
  STEP: Creating a kubernetes client @ 07/05/25 13:38:35.533
  I0705 13:38:35.533979 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename kubectl @ 07/05/25 13:38:35.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:38:35.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:38:35.549
  STEP: creating a replication controller @ 07/05/25 13:38:35.552
  I0705 13:38:35.552802 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-9529 create -f -'
  I0705 13:38:35.647987 21 builder.go:146] stderr: ""
  I0705 13:38:35.648040 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/05/25 13:38:35.648
  I0705 13:38:35.648149 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-9529 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0705 13:38:35.686552      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:38:35.703495 21 builder.go:146] stderr: ""
  I0705 13:38:35.703536 21 builder.go:147] stdout: "update-demo-nautilus-cbnrs update-demo-nautilus-v25fb "
  I0705 13:38:35.703589 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-9529 get pods update-demo-nautilus-cbnrs -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0705 13:38:35.748847 21 builder.go:146] stderr: ""
  I0705 13:38:35.748889 21 builder.go:147] stdout: ""
  I0705 13:38:35.748897 21 kubectl.go:2505] update-demo-nautilus-cbnrs is created but not running
  E0705 13:38:36.686938      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:37.687121      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:38.687262      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:39.687405      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:40.687514      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:38:40.749612 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-9529 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0705 13:38:40.802577 21 builder.go:146] stderr: ""
  I0705 13:38:40.802614 21 builder.go:147] stdout: "update-demo-nautilus-cbnrs update-demo-nautilus-v25fb "
  I0705 13:38:40.802659 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-9529 get pods update-demo-nautilus-cbnrs -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0705 13:38:40.848529 21 builder.go:146] stderr: ""
  I0705 13:38:40.848571 21 builder.go:147] stdout: "true"
  I0705 13:38:40.848623 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-9529 get pods update-demo-nautilus-cbnrs -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0705 13:38:40.893544 21 builder.go:146] stderr: ""
  I0705 13:38:40.893584 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0705 13:38:40.893596 21 kubectl.go:2396] validating pod update-demo-nautilus-cbnrs
  I0705 13:38:40.899332 21 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0705 13:38:40.899392 21 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0705 13:38:40.899407 21 kubectl.go:2523] update-demo-nautilus-cbnrs is verified up and running
  I0705 13:38:40.899451 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-9529 get pods update-demo-nautilus-v25fb -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0705 13:38:40.946142 21 builder.go:146] stderr: ""
  I0705 13:38:40.946185 21 builder.go:147] stdout: "true"
  I0705 13:38:40.946232 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-9529 get pods update-demo-nautilus-v25fb -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0705 13:38:40.993725 21 builder.go:146] stderr: ""
  I0705 13:38:40.993764 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0705 13:38:40.993776 21 kubectl.go:2396] validating pod update-demo-nautilus-v25fb
  I0705 13:38:40.999697 21 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0705 13:38:40.999788 21 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0705 13:38:40.999801 21 kubectl.go:2523] update-demo-nautilus-v25fb is verified up and running
  STEP: using delete to clean up resources @ 07/05/25 13:38:40.999
  I0705 13:38:41.000001 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-9529 delete --grace-period=0 --force -f -'
  I0705 13:38:41.052260 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0705 13:38:41.052313 21 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0705 13:38:41.052363 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-9529 get rc,svc -l name=update-demo --no-headers'
  I0705 13:38:41.129956 21 builder.go:146] stderr: "No resources found in kubectl-9529 namespace.\n"
  I0705 13:38:41.130004 21 builder.go:147] stdout: ""
  I0705 13:38:41.130052 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-9529 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0705 13:38:41.215982 21 builder.go:146] stderr: ""
  I0705 13:38:41.216210 21 builder.go:147] stdout: ""
  I0705 13:38:41.216641 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9529" for this suite. @ 07/05/25 13:38:41.224
• [5.709 seconds]
------------------------------
SS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 07/05/25 13:38:41.244
  I0705 13:38:41.244200 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename containers @ 07/05/25 13:38:41.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:38:41.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:38:41.263
  STEP: Creating a pod to test override command @ 07/05/25 13:38:41.268
  E0705 13:38:41.688278      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:42.688457      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/05/25 13:38:43.293
  I0705 13:38:43.298057 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod client-containers-6d449458-4676-4269-8ad7-463dee8767ec container agnhost-container: <nil>
  STEP: delete the pod @ 07/05/25 13:38:43.306
  I0705 13:38:43.325539 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6666" for this suite. @ 07/05/25 13:38:43.331
• [2.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 07/05/25 13:38:43.34
  I0705 13:38:43.340612 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename csi-storageclass @ 07/05/25 13:38:43.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:38:43.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:38:43.357
  STEP: Creating a StorageClass @ 07/05/25 13:38:43.361
  STEP: Get StorageClass "e2e-p946w" @ 07/05/25 13:38:43.367
  STEP: Patching the StorageClass "e2e-p946w" @ 07/05/25 13:38:43.371
  STEP: Delete StorageClass "e2e-p946w" @ 07/05/25 13:38:43.378
  STEP: Confirm deletion of StorageClass "e2e-p946w" @ 07/05/25 13:38:43.387
  STEP: Create a replacement StorageClass @ 07/05/25 13:38:43.393
  STEP: Updating StorageClass "e2e-v2-48mgk" @ 07/05/25 13:38:43.397
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-48mgk=updated" @ 07/05/25 13:38:43.408
  STEP: Deleting StorageClass "e2e-v2-48mgk" via DeleteCollection @ 07/05/25 13:38:43.413
  STEP: Confirm deletion of StorageClass "e2e-v2-48mgk" @ 07/05/25 13:38:43.427
  I0705 13:38:43.432809 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-8292" for this suite. @ 07/05/25 13:38:43.438
• [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:488
  STEP: Creating a kubernetes client @ 07/05/25 13:38:43.447
  I0705 13:38:43.447640 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename gc @ 07/05/25 13:38:43.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:38:43.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:38:43.463
  STEP: create the deployment @ 07/05/25 13:38:43.466
  I0705 13:38:43.472947      21 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 07/05/25 13:38:43.473
  STEP: delete the deployment @ 07/05/25 13:38:43.483
  STEP: wait for all rs to be garbage collected @ 07/05/25 13:38:43.493
  STEP: expected 0 rs, got 1 rs @ 07/05/25 13:38:43.514
  STEP: expected 0 pods, got 2 pods @ 07/05/25 13:38:43.525
  E0705 13:38:43.689112      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/05/25 13:38:44.011
  W0705 13:38:44.017778      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0705 13:38:44.017810 21 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0705 13:38:44.017990 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3860" for this suite. @ 07/05/25 13:38:44.023
• [0.586 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:841
  STEP: Creating a kubernetes client @ 07/05/25 13:38:44.033
  I0705 13:38:44.033649 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename webhook @ 07/05/25 13:38:44.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:38:44.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:38:44.049
  STEP: Setting up server cert @ 07/05/25 13:38:44.072
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/05/25 13:38:44.356
  STEP: Deploying the webhook pod @ 07/05/25 13:38:44.362
  STEP: Wait for the deployment to be ready @ 07/05/25 13:38:44.378
  I0705 13:38:44.391961 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0705 13:38:44.689244      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:45.689347      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/05/25 13:38:46.409
  STEP: Verifying the service has paired with the endpoint @ 07/05/25 13:38:46.428
  E0705 13:38:46.690144      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:38:47.428925 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 07/05/25 13:38:47.436
  I0705 13:38:47.496952 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5561" for this suite. @ 07/05/25 13:38:47.502
  STEP: Destroying namespace "webhook-markers-7631" for this suite. @ 07/05/25 13:38:47.511
• [3.486 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:559
  STEP: Creating a kubernetes client @ 07/05/25 13:38:47.519
  I0705 13:38:47.519791 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename svcaccounts @ 07/05/25 13:38:47.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:38:47.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:38:47.535
  I0705 13:38:47.555609 21 service_accounts.go:646] created pod
  E0705 13:38:47.690908      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:48.691007      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:49.691848      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:50.692299      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/05/25 13:38:51.573
  E0705 13:38:51.692696      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:52.692941      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:53.693220      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:54.693237      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:55.693383      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:56.693541      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:57.693649      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:58.693798      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:38:59.693897      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:00.694154      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:01.695021      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:02.695153      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:03.695364      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:04.695561      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:05.695665      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:06.695797      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:07.696300      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:08.696501      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:09.696692      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:10.696789      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:11.696987      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:12.697238      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:13.697442      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:14.697640      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:15.697778      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:16.697980      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:17.698284      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:18.698477      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:19.698629      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:20.698739      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:39:21.574531 21 service_accounts.go:652] polling logs
  I0705 13:39:21.583192 21 service_accounts.go:662] Pod logs: 
  I0705 13:38:48.220207       1 log.go:245] OK: Got token
  I0705 13:38:48.220413       1 log.go:245] validating with in-cluster discovery
  I0705 13:38:48.220734       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0705 13:38:48.220757       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-7216:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0004938a0), NotBefore:(*jwt.NumericDate)(0xc000493990), IssuedAt:(*jwt.NumericDate)(0xc0004938b0), ID:"c6369e2b-f94b-4f55-a0da-39babcd2ee97"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7216", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"1c454ae8-0da5-44cf-8775-da64f9be7475"}}}
  I0705 13:38:48.229304       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0705 13:38:48.233400       1 log.go:245] OK: Validated signature on JWT
  I0705 13:38:48.233489       1 log.go:245] OK: Got valid claims from token!
  I0705 13:38:48.233507       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-7216:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000126cd0), NotBefore:(*jwt.NumericDate)(0xc000126cf8), IssuedAt:(*jwt.NumericDate)(0xc000126cd8), ID:"c6369e2b-f94b-4f55-a0da-39babcd2ee97"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7216", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"1c454ae8-0da5-44cf-8775-da64f9be7475"}}}

  I0705 13:39:21.583250 21 service_accounts.go:666] completed pod
  I0705 13:39:21.592969 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7216" for this suite. @ 07/05/25 13:39:21.599
• [34.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 07/05/25 13:39:21.608
  I0705 13:39:21.608373 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename var-expansion @ 07/05/25 13:39:21.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:39:21.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:39:21.627
  STEP: Creating a pod to test substitution in container's args @ 07/05/25 13:39:21.629
  E0705 13:39:21.698832      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:22.699057      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:23.699775      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:24.700114      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/05/25 13:39:25.656
  I0705 13:39:25.662008 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod var-expansion-01a8fd09-cb95-4bef-b796-c5a9b8648d68 container dapi-container: <nil>
  STEP: delete the pod @ 07/05/25 13:39:25.671
  I0705 13:39:25.690774 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5456" for this suite. @ 07/05/25 13:39:25.696
  E0705 13:39:25.700040      21 retrywatcher.go:169] "Watch failed" err="context canceled"
• [4.096 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:944
  STEP: Creating a kubernetes client @ 07/05/25 13:39:25.709
  I0705 13:39:25.709252 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename resourcequota @ 07/05/25 13:39:25.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:39:25.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:39:25.724
  STEP: Creating a ResourceQuota @ 07/05/25 13:39:25.727
  STEP: Getting a ResourceQuota @ 07/05/25 13:39:25.732
  STEP: Updating a ResourceQuota @ 07/05/25 13:39:25.737
  STEP: Verifying a ResourceQuota was modified @ 07/05/25 13:39:25.742
  STEP: Deleting a ResourceQuota @ 07/05/25 13:39:25.747
  STEP: Verifying the deleted ResourceQuota @ 07/05/25 13:39:25.756
  I0705 13:39:25.760455 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2728" for this suite. @ 07/05/25 13:39:25.796
• [0.097 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 07/05/25 13:39:25.806
  I0705 13:39:25.806239 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename field-validation @ 07/05/25 13:39:25.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:39:25.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:39:25.821
  I0705 13:39:25.824267 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  E0705 13:39:26.700639      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:27.701290      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:39:28.353586      21 warnings.go:110] "Warning: unknown field \"alpha\""
  I0705 13:39:28.353612      21 warnings.go:110] "Warning: unknown field \"beta\""
  I0705 13:39:28.353619      21 warnings.go:110] "Warning: unknown field \"delta\""
  I0705 13:39:28.353625      21 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0705 13:39:28.353630      21 warnings.go:110] "Warning: unknown field \"gamma\""
  E0705 13:39:28.701765      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:39:28.908466 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6276" for this suite. @ 07/05/25 13:39:28.914
• [3.116 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job with successPolicy succeededIndexes rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:526
  STEP: Creating a kubernetes client @ 07/05/25 13:39:28.922
  I0705 13:39:28.922622 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename job @ 07/05/25 13:39:28.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:39:28.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:39:28.937
  STEP: Creating an indexed job with successPolicy succeededIndexes rule @ 07/05/25 13:39:28.94
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 07/05/25 13:39:28.947
  E0705 13:39:29.702237      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:30.702320      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:31.702463      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:32.702566      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensure that the job reaches completions @ 07/05/25 13:39:32.965
  STEP: Verifying that the only appropriately index succeeded @ 07/05/25 13:39:32.975
  I0705 13:39:32.979028 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2849" for this suite. @ 07/05/25 13:39:32.985
• [4.072 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 07/05/25 13:39:32.994
  I0705 13:39:32.994843 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename pod-network-test @ 07/05/25 13:39:32.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:39:33.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:39:33.011
  STEP: Performing setup for networking test in namespace pod-network-test-8883 @ 07/05/25 13:39:33.014
  STEP: creating a selector @ 07/05/25 13:39:33.014
  STEP: Creating the service pods in kubernetes @ 07/05/25 13:39:33.014
  I0705 13:39:33.014276 21 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0705 13:39:33.703300      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:34.703523      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:35.703803      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:36.703938      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:37.704086      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:38.704312      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:39.704640      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:40.704842      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:41.704922      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:42.705105      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:43.705220      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:44.705410      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:45.705524      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:46.705648      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 07/05/25 13:39:47.188
  E0705 13:39:47.705779      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:48.706369      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:39:49.229967 21 utils.go:802] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0705 13:39:49.230007 21 utils.go:495] Going to poll 192.168.54.208 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0705 13:39:49.234537 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.54.208:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8883 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0705 13:39:49.234564 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0705 13:39:49.234644 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8883/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.54.208%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0705 13:39:49.292832 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0705 13:39:49.292886 21 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I0705 13:39:49.292901 21 utils.go:495] Going to poll 192.168.146.58 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0705 13:39:49.296929 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.146.58:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8883 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0705 13:39:49.296950 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0705 13:39:49.297001 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8883/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.146.58%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0705 13:39:49.337276 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0705 13:39:49.337327 21 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I0705 13:39:49.337341 21 utils.go:495] Going to poll 192.168.8.234 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0705 13:39:49.341990 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.8.234:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8883 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0705 13:39:49.342011 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0705 13:39:49.342054 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8883/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.8.234%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0705 13:39:49.407266 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0705 13:39:49.407316 21 utils.go:512] Found all 1 expected endpoints: [netserver-2]
  I0705 13:39:49.407487 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8883" for this suite. @ 07/05/25 13:39:49.414
• [16.430 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 07/05/25 13:39:49.425
  I0705 13:39:49.425148 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename apf @ 07/05/25 13:39:49.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:39:49.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:39:49.439
  STEP: getting /apis @ 07/05/25 13:39:49.442
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 07/05/25 13:39:49.446
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 07/05/25 13:39:49.447
  STEP: creating @ 07/05/25 13:39:49.448
  STEP: getting @ 07/05/25 13:39:49.469
  STEP: listing @ 07/05/25 13:39:49.48
  STEP: watching @ 07/05/25 13:39:49.485
  I0705 13:39:49.485583 21 flowcontrol.go:394] starting watch
  STEP: patching @ 07/05/25 13:39:49.487
  STEP: updating @ 07/05/25 13:39:49.498
  I0705 13:39:49.516106 21 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 07/05/25 13:39:49.516
  STEP: patching /status @ 07/05/25 13:39:49.521
  STEP: updating /status @ 07/05/25 13:39:49.528
  STEP: deleting @ 07/05/25 13:39:49.544
  STEP: deleting a collection @ 07/05/25 13:39:49.562
  I0705 13:39:49.594558 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-3393" for this suite. @ 07/05/25 13:39:49.6
• [0.185 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1627
  STEP: Creating a kubernetes client @ 07/05/25 13:39:49.609
  I0705 13:39:49.609945 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename kubectl @ 07/05/25 13:39:49.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:39:49.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:39:49.624
  STEP: creating the pod @ 07/05/25 13:39:49.627
  I0705 13:39:49.627241 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-7165 create -f -'
  E0705 13:39:49.706807      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:39:49.725052 21 builder.go:146] stderr: ""
  I0705 13:39:49.725116 21 builder.go:147] stdout: "pod/pause created\n"
  E0705 13:39:50.706924      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:51.707183      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 07/05/25 13:39:51.735
  I0705 13:39:51.735109 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-7165 label pods pause testing-label=testing-label-value'
  I0705 13:39:51.795933 21 builder.go:146] stderr: ""
  I0705 13:39:51.795980 21 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 07/05/25 13:39:51.795
  I0705 13:39:51.796095 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-7165 get pod pause -L testing-label'
  I0705 13:39:51.843457 21 builder.go:146] stderr: ""
  I0705 13:39:51.843499 21 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 07/05/25 13:39:51.843
  I0705 13:39:51.843597 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-7165 label pods pause testing-label-'
  I0705 13:39:51.896932 21 builder.go:146] stderr: ""
  I0705 13:39:51.896979 21 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 07/05/25 13:39:51.896
  I0705 13:39:51.897102 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-7165 get pod pause -L testing-label'
  I0705 13:39:51.945320 21 builder.go:146] stderr: ""
  I0705 13:39:51.945362 21 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 07/05/25 13:39:51.945
  I0705 13:39:51.945534 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-7165 delete --grace-period=0 --force -f -'
  I0705 13:39:52.011420 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0705 13:39:52.011460 21 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0705 13:39:52.011584 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-7165 get rc,svc -l name=pause --no-headers'
  I0705 13:39:52.071923 21 builder.go:146] stderr: "No resources found in kubectl-7165 namespace.\n"
  I0705 13:39:52.071969 21 builder.go:147] stdout: ""
  I0705 13:39:52.072021 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-7165 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0705 13:39:52.123644 21 builder.go:146] stderr: ""
  I0705 13:39:52.123689 21 builder.go:147] stdout: ""
  I0705 13:39:52.123810 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7165" for this suite. @ 07/05/25 13:39:52.129
• [2.528 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 07/05/25 13:39:52.138
  I0705 13:39:52.138112 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename daemonsets @ 07/05/25 13:39:52.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:39:52.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:39:52.156
  STEP: Creating simple DaemonSet "daemon-set" @ 07/05/25 13:39:52.244
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/05/25 13:39:52.253
  I0705 13:39:52.331414 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:39:52.331454 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:39:52.335665 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0705 13:39:52.335693 21 fixtures.go:131] Node ip-172-31-22-171 is running 0 daemon pod, expected 1
  E0705 13:39:52.708101      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:39:53.259162 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:39:53.259205 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:39:53.265218 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0705 13:39:53.265250 21 fixtures.go:131] Node ip-172-31-90-231 is running 0 daemon pod, expected 1
  E0705 13:39:53.708274      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:39:54.260902 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:39:54.260945 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:39:54.267044 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0705 13:39:54.267097 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 07/05/25 13:39:54.272
  I0705 13:39:54.361668 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:39:54.361714 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:39:54.367810 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0705 13:39:54.367851 21 fixtures.go:131] Node ip-172-31-5-45 is running 0 daemon pod, expected 1
  E0705 13:39:54.709145      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:39:55.293205 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:39:55.293261 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:39:55.298441 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0705 13:39:55.298478 21 fixtures.go:131] Node ip-172-31-5-45 is running 0 daemon pod, expected 1
  E0705 13:39:55.709889      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:39:56.295244 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:39:56.295290 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:39:56.301290 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0705 13:39:56.301312 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/05/25 13:39:56.305
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2691, will wait for the garbage collector to delete the pods @ 07/05/25 13:39:56.305
  I0705 13:39:56.369285 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.64453ms
  I0705 13:39:56.469532 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.241939ms
  E0705 13:39:56.710178      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:57.710431      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:39:58.075492 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0705 13:39:58.075531 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0705 13:39:58.080005 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"45747"},"items":null}

  I0705 13:39:58.085144 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"45747"},"items":null}

  I0705 13:39:58.103551 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2691" for this suite. @ 07/05/25 13:39:58.108
• [5.981 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:677
  STEP: Creating a kubernetes client @ 07/05/25 13:39:58.119
  I0705 13:39:58.119709 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename svcaccounts @ 07/05/25 13:39:58.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:39:58.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:39:58.138
  STEP: creating a ServiceAccount @ 07/05/25 13:39:58.141
  STEP: watching for the ServiceAccount to be added @ 07/05/25 13:39:58.15
  STEP: patching the ServiceAccount @ 07/05/25 13:39:58.152
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 07/05/25 13:39:58.157
  STEP: deleting the ServiceAccount @ 07/05/25 13:39:58.162
  I0705 13:39:58.183375 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4097" for this suite. @ 07/05/25 13:39:58.191
• [0.080 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 07/05/25 13:39:58.199
  I0705 13:39:58.199734 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/05/25 13:39:58.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:39:58.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:39:58.215
  STEP: create the container to handle the HTTPGet hook request. @ 07/05/25 13:39:58.292
  E0705 13:39:58.711301      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:39:59.711390      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/05/25 13:40:00.321
  E0705 13:40:00.711801      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:01.711900      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 07/05/25 13:40:02.345
  STEP: delete the pod with lifecycle hook @ 07/05/25 13:40:02.363
  E0705 13:40:02.712930      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:03.713298      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:40:04.384363 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7621" for this suite. @ 07/05/25 13:40:04.392
• [6.205 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 07/05/25 13:40:04.404
  I0705 13:40:04.404562 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename var-expansion @ 07/05/25 13:40:04.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:40:04.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:40:04.418
  STEP: creating the pod @ 07/05/25 13:40:04.421
  STEP: waiting for pod running @ 07/05/25 13:40:04.431
  E0705 13:40:04.714266      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:05.714459      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 07/05/25 13:40:06.444
  I0705 13:40:06.449266 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-5915 PodName:var-expansion-98dece38-f70f-4262-8c45-14c1a4c6cc28 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0705 13:40:06.449292 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0705 13:40:06.449338 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/var-expansion-5915/pods/var-expansion-98dece38-f70f-4262-8c45-14c1a4c6cc28/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I0705 13:40:06.493563 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: test for file in mounted path @ 07/05/25 13:40:06.493
  I0705 13:40:06.497705 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-5915 PodName:var-expansion-98dece38-f70f-4262-8c45-14c1a4c6cc28 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0705 13:40:06.497726 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0705 13:40:06.497773 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/var-expansion-5915/pods/var-expansion-98dece38-f70f-4262-8c45-14c1a4c6cc28/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I0705 13:40:06.540601 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: updating the annotation value @ 07/05/25 13:40:06.54
  E0705 13:40:06.714874      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:40:07.056358 21 pod_client.go:173] Successfully updated pod "var-expansion-98dece38-f70f-4262-8c45-14c1a4c6cc28"
  STEP: waiting for annotated pod running @ 07/05/25 13:40:07.056
  STEP: deleting the pod gracefully @ 07/05/25 13:40:07.061
  I0705 13:40:07.061493 21 delete.go:62] Deleting pod "var-expansion-98dece38-f70f-4262-8c45-14c1a4c6cc28" in namespace "var-expansion-5915"
  I0705 13:40:07.072109 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-98dece38-f70f-4262-8c45-14c1a4c6cc28" to be fully deleted
  E0705 13:40:07.714979      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:08.715058      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:09.715614      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:10.715858      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:11.716001      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:12.717730      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:13.718318      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:14.718431      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:15.718666      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:16.718733      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:17.718831      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:18.718888      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:19.719031      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:20.719148      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:21.719448      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:22.719354      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:23.720282      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:24.720439      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:25.720536      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:26.720615      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:27.721503      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:28.721600      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:29.722488      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:30.722606      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:31.722714      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:32.722811      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:33.723033      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:34.723268      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:35.724277      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:36.724399      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:37.725384      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:38.725514      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:40:39.174368 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5915" for this suite. @ 07/05/25 13:40:39.18
• [34.786 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:468
  STEP: Creating a kubernetes client @ 07/05/25 13:40:39.191
  I0705 13:40:39.191353 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename sched-pred @ 07/05/25 13:40:39.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:40:39.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:40:39.209
  I0705 13:40:39.212422 21 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0705 13:40:39.286578 21 util.go:390] Waiting for terminating namespaces to be deleted...
  I0705 13:40:39.290850 21 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-22-171 before test
  I0705 13:40:39.296746 21 predicates.go:958] nginx-ingress-controller-kubernetes-worker-4z9gz from ingress-nginx-kubernetes-worker started at 2025-07-05 12:29:50 +0000 UTC (1 container statuses recorded)
  I0705 13:40:39.296770 21 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0705 13:40:39.296777 21 predicates.go:958] calico-node-kbhbz from kube-system started at 2025-07-05 12:09:19 +0000 UTC (1 container statuses recorded)
  I0705 13:40:39.296782 21 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0705 13:40:39.296788 21 predicates.go:958] sonobuoy from sonobuoy started at 2025-07-05 12:10:10 +0000 UTC (1 container statuses recorded)
  I0705 13:40:39.296793 21 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0705 13:40:39.296798 21 predicates.go:958] sonobuoy-systemd-logs-daemon-set-1b02295658074d3d-zpsp4 from sonobuoy started at 2025-07-05 12:10:12 +0000 UTC (2 container statuses recorded)
  I0705 13:40:39.296803 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0705 13:40:39.296807 21 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0705 13:40:39.296813 21 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-5-45 before test
  I0705 13:40:39.301619 21 predicates.go:958] nginx-ingress-controller-kubernetes-worker-tjt2x from ingress-nginx-kubernetes-worker started at 2025-07-05 11:59:03 +0000 UTC (1 container statuses recorded)
  I0705 13:40:39.301641 21 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0705 13:40:39.301648 21 predicates.go:958] calico-node-zxgh6 from kube-system started at 2025-07-05 12:09:49 +0000 UTC (1 container statuses recorded)
  I0705 13:40:39.301652 21 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0705 13:40:39.301657 21 predicates.go:958] sonobuoy-e2e-job-c9143e3b27b14a19 from sonobuoy started at 2025-07-05 12:10:12 +0000 UTC (2 container statuses recorded)
  I0705 13:40:39.301660 21 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0705 13:40:39.301663 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0705 13:40:39.301667 21 predicates.go:958] sonobuoy-systemd-logs-daemon-set-1b02295658074d3d-466tt from sonobuoy started at 2025-07-05 12:10:12 +0000 UTC (2 container statuses recorded)
  I0705 13:40:39.301670 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0705 13:40:39.301673 21 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0705 13:40:39.301676 21 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-90-231 before test
  I0705 13:40:39.305960 21 predicates.go:958] nginx-ingress-controller-kubernetes-worker-lbgkc from ingress-nginx-kubernetes-worker started at 2025-07-05 11:59:03 +0000 UTC (1 container statuses recorded)
  I0705 13:40:39.305980 21 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0705 13:40:39.305987 21 predicates.go:958] calico-node-dlmq7 from kube-system started at 2025-07-05 12:10:03 +0000 UTC (1 container statuses recorded)
  I0705 13:40:39.305992 21 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0705 13:40:39.305998 21 predicates.go:958] coredns-5d946bb58-br4tm from kube-system started at 2025-07-05 11:59:03 +0000 UTC (1 container statuses recorded)
  I0705 13:40:39.306002 21 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0705 13:40:39.306008 21 predicates.go:958] kube-state-metrics-b84f44f45-lv24k from kube-system started at 2025-07-05 11:59:03 +0000 UTC (1 container statuses recorded)
  I0705 13:40:39.306014 21 predicates.go:960] 	Container kube-state-metrics ready: true, restart count 0
  I0705 13:40:39.306020 21 predicates.go:958] metrics-server-v0.7.2-7d878b47f8-gfn72 from kube-system started at 2025-07-05 11:59:03 +0000 UTC (2 container statuses recorded)
  I0705 13:40:39.306025 21 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0705 13:40:39.306029 21 predicates.go:960] 	Container metrics-server-nanny ready: true, restart count 0
  I0705 13:40:39.306034 21 predicates.go:958] dashboard-metrics-scraper-5cf87bc988-2nxl2 from kubernetes-dashboard started at 2025-07-05 11:59:03 +0000 UTC (1 container statuses recorded)
  I0705 13:40:39.306039 21 predicates.go:960] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0705 13:40:39.306046 21 predicates.go:958] kubernetes-dashboard-6858576c98-mrksb from kubernetes-dashboard started at 2025-07-05 11:59:03 +0000 UTC (1 container statuses recorded)
  I0705 13:40:39.306056 21 predicates.go:960] 	Container kubernetes-dashboard ready: true, restart count 0
  I0705 13:40:39.306060 21 predicates.go:958] sonobuoy-systemd-logs-daemon-set-1b02295658074d3d-kxgxg from sonobuoy started at 2025-07-05 12:10:12 +0000 UTC (2 container statuses recorded)
  I0705 13:40:39.306120 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0705 13:40:39.306155 21 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/05/25 13:40:39.306
  E0705 13:40:39.726407      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:40.726541      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/05/25 13:40:41.334
  STEP: Trying to apply a random label on the found node. @ 07/05/25 13:40:41.35
  STEP: verifying the node has the label kubernetes.io/e2e-90ec48d5-6fe2-4a95-9691-d79d0e750cc1 42 @ 07/05/25 13:40:41.358
  STEP: Trying to relaunch the pod, now with labels. @ 07/05/25 13:40:41.363
  E0705 13:40:41.726680      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:42.726884      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-90ec48d5-6fe2-4a95-9691-d79d0e750cc1 off the node ip-172-31-22-171 @ 07/05/25 13:40:43.386
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-90ec48d5-6fe2-4a95-9691-d79d0e750cc1 @ 07/05/25 13:40:43.399
  I0705 13:40:43.404384 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4882" for this suite. @ 07/05/25 13:40:43.412
• [4.230 seconds]
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 07/05/25 13:40:43.421
  I0705 13:40:43.421122 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename discovery @ 07/05/25 13:40:43.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:40:43.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:40:43.437
  STEP: Setting up server cert @ 07/05/25 13:40:43.441
  STEP: Requesting APIResourceList from "/api/v1" @ 07/05/25 13:40:43.506
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 07/05/25 13:40:43.508
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 07/05/25 13:40:43.509
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 07/05/25 13:40:43.511
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 07/05/25 13:40:43.512
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 07/05/25 13:40:43.513
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 07/05/25 13:40:43.514
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 07/05/25 13:40:43.515
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 07/05/25 13:40:43.516
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 07/05/25 13:40:43.518
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 07/05/25 13:40:43.519
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 07/05/25 13:40:43.52
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 07/05/25 13:40:43.522
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 07/05/25 13:40:43.523
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 07/05/25 13:40:43.524
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 07/05/25 13:40:43.525
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 07/05/25 13:40:43.526
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 07/05/25 13:40:43.528
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 07/05/25 13:40:43.529
  I0705 13:40:43.530585 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-1100" for this suite. @ 07/05/25 13:40:43.536
• [0.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:109
  STEP: Creating a kubernetes client @ 07/05/25 13:40:43.545
  I0705 13:40:43.545405 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename emptydir @ 07/05/25 13:40:43.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:40:43.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:40:43.561
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 07/05/25 13:40:43.564
  E0705 13:40:43.727593      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:44.727671      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/05/25 13:40:45.585
  I0705 13:40:45.589946 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-1ebb4b5e-92dc-406d-8a12-00fa25d1fb41 container test-container: <nil>
  STEP: delete the pod @ 07/05/25 13:40:45.599
  I0705 13:40:45.623268 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4277" for this suite. @ 07/05/25 13:40:45.629
• [2.092 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 07/05/25 13:40:45.638
  I0705 13:40:45.638171 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename secrets @ 07/05/25 13:40:45.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:40:45.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:40:45.654
  STEP: creating a secret @ 07/05/25 13:40:45.656
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 07/05/25 13:40:45.662
  STEP: patching the secret @ 07/05/25 13:40:45.666
  STEP: deleting the secret using a LabelSelector @ 07/05/25 13:40:45.677
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 07/05/25 13:40:45.69
  I0705 13:40:45.695211 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0705 13:40:45.728381      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "secrets-4642" for this suite. @ 07/05/25 13:40:45.73
• [0.102 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 07/05/25 13:40:45.74
  I0705 13:40:45.740225 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 07/05/25 13:40:45.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:40:45.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:40:45.754
  STEP: creating a target pod @ 07/05/25 13:40:45.757
  E0705 13:40:46.729242      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:47.730306      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 07/05/25 13:40:47.784
  E0705 13:40:48.730402      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:49.730487      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod's generation is 2 @ 07/05/25 13:40:49.805
  STEP: checking pod container endpoints @ 07/05/25 13:40:49.809
  I0705 13:40:49.809163 21 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-3206 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0705 13:40:49.809181 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0705 13:40:49.809235 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-3206/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0705 13:40:49.845442 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0705 13:40:49.845483 21 exec_util.go:112] Exec stderr: ""
  I0705 13:40:49.854208 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-3206" for this suite. @ 07/05/25 13:40:49.859
• [4.127 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 07/05/25 13:40:49.867
  I0705 13:40:49.867753 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename downward-api @ 07/05/25 13:40:49.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:40:49.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:40:49.881
  STEP: Creating a pod to test downward api env vars @ 07/05/25 13:40:49.884
  E0705 13:40:50.730605      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:51.730677      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:52.731246      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:53.731337      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/05/25 13:40:53.916
  I0705 13:40:53.920096 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod downward-api-708a4f57-473f-48db-bd99-499a209620ca container dapi-container: <nil>
  STEP: delete the pod @ 07/05/25 13:40:53.929
  I0705 13:40:53.952864 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1154" for this suite. @ 07/05/25 13:40:53.958
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:920
  STEP: Creating a kubernetes client @ 07/05/25 13:40:53.968
  I0705 13:40:53.968127 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename statefulset @ 07/05/25 13:40:53.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:40:53.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:40:53.984
  STEP: Creating service test in namespace statefulset-3206 @ 07/05/25 13:40:53.986
  STEP: Creating statefulset ss in namespace statefulset-3206 @ 07/05/25 13:40:53.993
  I0705 13:40:54.010743 21 wait.go:44] Found 0 stateful pods, waiting for 1
  E0705 13:40:54.732324      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:55.732421      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:56.732491      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:57.732612      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:58.732644      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:40:59.732888      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:00.732946      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:01.733015      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:02.733241      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:03.734269      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:41:04.011417 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 07/05/25 13:41:04.02
  STEP: updating a scale subresource @ 07/05/25 13:41:04.025
  STEP: verifying the statefulset Spec.Replicas was modified @ 07/05/25 13:41:04.034
  STEP: Patch a scale subresource @ 07/05/25 13:41:04.038
  STEP: verifying the statefulset Spec.Replicas was modified @ 07/05/25 13:41:04.046
  I0705 13:41:04.053979 21 statefulset.go:138] Deleting all statefulset in ns statefulset-3206
  I0705 13:41:04.058694 21 rest.go:153] Scaling statefulset ss to 0
  E0705 13:41:04.735293      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:05.735365      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:06.735447      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:07.735580      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:08.735641      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:09.735759      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:10.735831      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:11.735947      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:12.736017      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:13.736224      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:41:14.103153 21 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0705 13:41:14.108342 21 rest.go:91] Deleting statefulset ss
  I0705 13:41:14.128104 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3206" for this suite. @ 07/05/25 13:41:14.133
• [20.175 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 07/05/25 13:41:14.142
  I0705 13:41:14.142843 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename containers @ 07/05/25 13:41:14.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:41:14.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:41:14.16
  E0705 13:41:14.737011      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:15.737130      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:41:16.194282 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8120" for this suite. @ 07/05/25 13:41:16.2
• [2.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 07/05/25 13:41:16.209
  I0705 13:41:16.209479 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename replicaset @ 07/05/25 13:41:16.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:41:16.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:41:16.226
  STEP: Create a Replicaset @ 07/05/25 13:41:16.235
  STEP: Verify that the required pods have come up. @ 07/05/25 13:41:16.243
  I0705 13:41:16.248764 21 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0705 13:41:16.737240      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:17.737334      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:18.737456      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:19.737535      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:20.737663      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:41:21.323036 21 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/05/25 13:41:21.323
  STEP: Getting /status @ 07/05/25 13:41:21.323
  I0705 13:41:21.327979 21 replica_set.go:649] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 07/05/25 13:41:21.328
  I0705 13:41:21.340708 21 replica_set.go:669] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 07/05/25 13:41:21.34
  I0705 13:41:21.342511 21 replica_set.go:695] Observed &ReplicaSet event: ADDED
  I0705 13:41:21.342583 21 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0705 13:41:21.342633 21 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0705 13:41:21.342830 21 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0705 13:41:21.342858 21 replica_set.go:688] Found replicaset test-rs in namespace replicaset-3098 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0705 13:41:21.342872 21 replica_set.go:699] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 07/05/25 13:41:21.342
  I0705 13:41:21.342899 21 replica_set.go:703] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0705 13:41:21.350393 21 replica_set.go:707] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 07/05/25 13:41:21.35
  I0705 13:41:21.352141 21 replica_set.go:731] Observed &ReplicaSet event: ADDED
  I0705 13:41:21.352204 21 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0705 13:41:21.352253 21 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0705 13:41:21.352362 21 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0705 13:41:21.352375 21 replica_set.go:727] Observed replicaset test-rs in namespace replicaset-3098 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0705 13:41:21.352441 21 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0705 13:41:21.352454 21 replica_set.go:724] Found replicaset test-rs in namespace replicaset-3098 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0705 13:41:21.352464 21 replica_set.go:735] Replicaset test-rs has a patched status
  I0705 13:41:21.352554 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3098" for this suite. @ 07/05/25 13:41:21.358
• [5.160 seconds]
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 07/05/25 13:41:21.369
  I0705 13:41:21.369461 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename deployment @ 07/05/25 13:41:21.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:41:21.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:41:21.383
  STEP: creating a Deployment @ 07/05/25 13:41:21.39
  STEP: waiting for Deployment to be created @ 07/05/25 13:41:21.395
  STEP: waiting for all Replicas to be Ready @ 07/05/25 13:41:21.397
  I0705 13:41:21.398585 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0705 13:41:21.398606 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0705 13:41:21.408690 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0705 13:41:21.408730 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0705 13:41:21.430186 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0705 13:41:21.430228 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0705 13:41:21.455823 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0705 13:41:21.455861 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0705 13:41:21.738231      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:41:22.165241 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0705 13:41:22.165276 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0705 13:41:22.365564 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 07/05/25 13:41:22.365
  I0705 13:41:22.373994 21 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 07/05/25 13:41:22.374
  I0705 13:41:22.375855 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 0
  I0705 13:41:22.375881 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 0
  I0705 13:41:22.375893 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 0
  I0705 13:41:22.375901 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 0
  I0705 13:41:22.375922 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 0
  I0705 13:41:22.375928 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 0
  I0705 13:41:22.375971 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 0
  I0705 13:41:22.375980 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 0
  I0705 13:41:22.376042 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 1
  I0705 13:41:22.376049 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 1
  I0705 13:41:22.376055 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 2
  I0705 13:41:22.376060 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 2
  I0705 13:41:22.376090 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 2
  I0705 13:41:22.376095 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 2
  I0705 13:41:22.388738 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 2
  I0705 13:41:22.388775 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 2
  I0705 13:41:22.420783 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 2
  I0705 13:41:22.420827 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 2
  I0705 13:41:22.433654 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 1
  I0705 13:41:22.433692 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 1
  E0705 13:41:22.739153      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:41:23.351520 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 2
  I0705 13:41:23.351566 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 2
  I0705 13:41:23.377738 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 1
  STEP: listing Deployments @ 07/05/25 13:41:23.377
  I0705 13:41:23.382027 21 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 07/05/25 13:41:23.382
  I0705 13:41:23.397521 21 deployment.go:360] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 07/05/25 13:41:23.397
  I0705 13:41:23.404963 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0705 13:41:23.410591 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0705 13:41:23.431029 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0705 13:41:23.448963 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0705 13:41:23.461191 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0705 13:41:23.739990      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:41:24.183460 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0705 13:41:24.217504 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0705 13:41:24.229980 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0705 13:41:24.740239      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:41:25.362708 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 07/05/25 13:41:25.389
  STEP: fetching the DeploymentStatus @ 07/05/25 13:41:25.397
  I0705 13:41:25.405782 21 deployment.go:448] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 1
  I0705 13:41:25.405816 21 deployment.go:448] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 1
  I0705 13:41:25.405826 21 deployment.go:448] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 1
  I0705 13:41:25.405887 21 deployment.go:448] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 1
  I0705 13:41:25.405894 21 deployment.go:448] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 1
  I0705 13:41:25.405902 21 deployment.go:448] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 2
  I0705 13:41:25.405960 21 deployment.go:448] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 2
  I0705 13:41:25.405971 21 deployment.go:448] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 2
  I0705 13:41:25.405978 21 deployment.go:448] observed Deployment test-deployment in namespace deployment-2313 with ReadyReplicas 3
  STEP: deleting the Deployment @ 07/05/25 13:41:25.406
  I0705 13:41:25.421152 21 deployment.go:474] observed event type MODIFIED
  I0705 13:41:25.421193 21 deployment.go:474] observed event type MODIFIED
  I0705 13:41:25.421202 21 deployment.go:474] observed event type MODIFIED
  I0705 13:41:25.421285 21 deployment.go:474] observed event type MODIFIED
  I0705 13:41:25.421306 21 deployment.go:474] observed event type MODIFIED
  I0705 13:41:25.421314 21 deployment.go:474] observed event type MODIFIED
  I0705 13:41:25.421382 21 deployment.go:474] observed event type MODIFIED
  I0705 13:41:25.421477 21 deployment.go:474] observed event type MODIFIED
  I0705 13:41:25.421486 21 deployment.go:474] observed event type MODIFIED
  I0705 13:41:25.421613 21 deployment.go:474] observed event type MODIFIED
  I0705 13:41:25.421624 21 deployment.go:474] observed event type MODIFIED
  I0705 13:41:25.421636 21 deployment.go:474] observed event type MODIFIED
  I0705 13:41:25.425871 21 deployment.go:649] Log out all the ReplicaSets if there is no deployment created
  I0705 13:41:25.432160 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2313" for this suite. @ 07/05/25 13:41:25.437
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 07/05/25 13:41:25.451
  I0705 13:41:25.451379 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename downward-api @ 07/05/25 13:41:25.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:41:25.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:41:25.47
  STEP: Creating a pod to test downward API volume plugin @ 07/05/25 13:41:25.473
  E0705 13:41:25.741267      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:26.741383      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/05/25 13:41:27.497
  I0705 13:41:27.502137 21 output.go:207] Trying to get logs from node ip-172-31-5-45 pod downwardapi-volume-9935d604-5655-42fa-92c4-a5fe1eb34388 container client-container: <nil>
  STEP: delete the pod @ 07/05/25 13:41:27.512
  I0705 13:41:27.534903 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9492" for this suite. @ 07/05/25 13:41:27.541
• [2.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 07/05/25 13:41:27.549
  I0705 13:41:27.549787 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename watch @ 07/05/25 13:41:27.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:41:27.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:41:27.566
  STEP: creating a watch on configmaps with a certain label @ 07/05/25 13:41:27.569
  STEP: creating a new configmap @ 07/05/25 13:41:27.571
  STEP: modifying the configmap once @ 07/05/25 13:41:27.576
  STEP: changing the label value of the configmap @ 07/05/25 13:41:27.585
  STEP: Expecting to observe a delete notification for the watched object @ 07/05/25 13:41:27.595
  I0705 13:41:27.595554 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6512  3d30726f-4100-4fad-8500-553e89c91caf 46683 0 2025-07-05 13:41:27 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-05 13:41:27 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0705 13:41:27.595848 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6512  3d30726f-4100-4fad-8500-553e89c91caf 46684 0 2025-07-05 13:41:27 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-05 13:41:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0705 13:41:27.595947 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6512  3d30726f-4100-4fad-8500-553e89c91caf 46685 0 2025-07-05 13:41:27 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-05 13:41:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 07/05/25 13:41:27.595
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 07/05/25 13:41:27.607
  E0705 13:41:27.741636      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:28.741752      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:29.742391      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:30.743175      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:31.743405      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:32.744287      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:33.744427      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:34.744674      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:35.744883      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:36.745247      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 07/05/25 13:41:37.607
  STEP: modifying the configmap a third time @ 07/05/25 13:41:37.619
  STEP: deleting the configmap @ 07/05/25 13:41:37.629
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 07/05/25 13:41:37.638
  I0705 13:41:37.638305 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6512  3d30726f-4100-4fad-8500-553e89c91caf 46782 0 2025-07-05 13:41:27 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-05 13:41:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0705 13:41:37.638420 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6512  3d30726f-4100-4fad-8500-553e89c91caf 46783 0 2025-07-05 13:41:27 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-05 13:41:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0705 13:41:37.638465 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6512  3d30726f-4100-4fad-8500-553e89c91caf 46784 0 2025-07-05 13:41:27 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-05 13:41:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0705 13:41:37.638549 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6512" for this suite. @ 07/05/25 13:41:37.644
• [10.103 seconds]
------------------------------
SSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 07/05/25 13:41:37.652
  I0705 13:41:37.652673 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename secrets @ 07/05/25 13:41:37.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:41:37.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:41:37.67
  STEP: Creating projection with secret that has name secret-emptykey-test-baafae75-ebb4-4002-9daf-e06895152bb1 @ 07/05/25 13:41:37.673
  I0705 13:41:37.675383 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0705 13:41:37.745305      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "secrets-2255" for this suite. @ 07/05/25 13:41:37.745
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 07/05/25 13:41:37.754
  I0705 13:41:37.754942 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/05/25 13:41:37.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:41:37.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:41:37.77
  I0705 13:41:37.773951 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  E0705 13:41:38.745827      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:39.746030      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:40.746200      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:41:40.856084 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1325" for this suite. @ 07/05/25 13:41:40.862
• [3.118 seconds]
------------------------------
SSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 07/05/25 13:41:40.872
  I0705 13:41:40.872807 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename pod-network-test @ 07/05/25 13:41:40.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:41:40.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:41:40.887
  STEP: Performing setup for networking test in namespace pod-network-test-8946 @ 07/05/25 13:41:40.89
  STEP: creating a selector @ 07/05/25 13:41:40.89
  STEP: Creating the service pods in kubernetes @ 07/05/25 13:41:40.89
  I0705 13:41:40.890267 21 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0705 13:41:41.746341      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:42.746483      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:43.746600      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:44.746864      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:45.747051      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:46.747317      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:47.747491      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:48.747583      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:49.748566      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:50.748721      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:51.748928      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:52.749174      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:53.749297      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:54.750130      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 07/05/25 13:41:55.067
  E0705 13:41:55.750293      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:56.750390      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:41:57.090917 21 utils.go:802] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0705 13:41:57.090952 21 networking.go:42] Breadth first check of 192.168.54.252 on host 172.31.22.171...
  I0705 13:41:57.095517 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.54.242:9080/dial?request=hostname&protocol=http&host=192.168.54.252&port=8083&tries=1'] Namespace:pod-network-test-8946 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0705 13:41:57.095539 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0705 13:41:57.095585 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8946/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.54.242%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.54.252%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0705 13:41:57.140789 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0705 13:41:57.140849 21 utils.go:355] Waiting for responses: map[]
  I0705 13:41:57.140860 21 utils.go:359] reached 192.168.54.252 after 0/1 tries
  I0705 13:41:57.140868 21 networking.go:42] Breadth first check of 192.168.146.29 on host 172.31.5.45...
  I0705 13:41:57.145404 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.54.242:9080/dial?request=hostname&protocol=http&host=192.168.146.29&port=8083&tries=1'] Namespace:pod-network-test-8946 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0705 13:41:57.145429 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0705 13:41:57.145472 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8946/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.54.242%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.146.29%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0705 13:41:57.185806 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0705 13:41:57.185873 21 utils.go:355] Waiting for responses: map[]
  I0705 13:41:57.185882 21 utils.go:359] reached 192.168.146.29 after 0/1 tries
  I0705 13:41:57.185892 21 networking.go:42] Breadth first check of 192.168.8.232 on host 172.31.90.231...
  I0705 13:41:57.190436 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.54.242:9080/dial?request=hostname&protocol=http&host=192.168.8.232&port=8083&tries=1'] Namespace:pod-network-test-8946 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0705 13:41:57.190455 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0705 13:41:57.190499 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8946/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.54.242%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.8.232%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0705 13:41:57.243037 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0705 13:41:57.243118 21 utils.go:355] Waiting for responses: map[]
  I0705 13:41:57.243129 21 utils.go:359] reached 192.168.8.232 after 0/1 tries
  I0705 13:41:57.243143 21 networking.go:53] Going to retry 0 out of 3 pods....
  I0705 13:41:57.243249 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8946" for this suite. @ 07/05/25 13:41:57.249
• [16.386 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 07/05/25 13:41:57.258
  I0705 13:41:57.258765 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename endpointslice @ 07/05/25 13:41:57.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:41:57.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:41:57.275
  I0705 13:41:57.287135      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0705 13:41:57.292830 21 endpointslice.go:1045] Endpoints addresses: [172.31.43.213 172.31.87.237] , ports: [6443]
  I0705 13:41:57.292858 21 endpointslice.go:1075] EndpointSlices addresses: [172.31.43.213 172.31.87.237] , ports: [6443]
  I0705 13:41:57.293081 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6313" for this suite. @ 07/05/25 13:41:57.35
• [0.100 seconds]
------------------------------
SS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 07/05/25 13:41:57.358
  I0705 13:41:57.358680 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename endpointslice @ 07/05/25 13:41:57.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:41:57.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:41:57.374
  E0705 13:41:57.751321      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:41:58.751474      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 07/05/25 13:41:59.476
  I0705 13:41:59.485852      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: referencing matching pods with named port @ 07/05/25 13:41:59.485
  I0705 13:41:59.495721      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 07/05/25 13:41:59.495
  I0705 13:41:59.504780      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: recreating EndpointSlices after they've been deleted @ 07/05/25 13:41:59.504
  I0705 13:41:59.532150 21 endpointslice.go:938] EndpointSlice for Service endpointslice-7220/example-named-port not found
  E0705 13:41:59.751564      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:00.751827      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:42:01.537567      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0705 13:42:01.537747 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7220" for this suite. @ 07/05/25 13:42:01.543
• [4.193 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:219
  STEP: Creating a kubernetes client @ 07/05/25 13:42:01.552
  I0705 13:42:01.552047 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename emptydir @ 07/05/25 13:42:01.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:42:01.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:42:01.569
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 07/05/25 13:42:01.571
  E0705 13:42:01.752289      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:02.752420      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:03.753330      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:04.753554      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/05/25 13:42:05.6
  I0705 13:42:05.605188 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-0c1c9998-2e1a-47a0-bdef-3dc156aaeb44 container test-container: <nil>
  STEP: delete the pod @ 07/05/25 13:42:05.614
  I0705 13:42:05.637957 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3037" for this suite. @ 07/05/25 13:42:05.643
• [4.099 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 07/05/25 13:42:05.651
  I0705 13:42:05.651547 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename security-context @ 07/05/25 13:42:05.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:42:05.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:42:05.669
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 07/05/25 13:42:05.672
  E0705 13:42:05.754193      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:06.755259      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/05/25 13:42:07.692
  I0705 13:42:07.696605 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod security-context-824bfb8f-09cd-42a4-b06b-ad63e027f8f2 container test-container: <nil>
  STEP: delete the pod @ 07/05/25 13:42:07.705
  I0705 13:42:07.722930 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-9315" for this suite. @ 07/05/25 13:42:07.728
• [2.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 07/05/25 13:42:07.738
  I0705 13:42:07.738351 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename daemonsets @ 07/05/25 13:42:07.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:42:07.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:42:07.752
  E0705 13:42:07.755492      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating simple DaemonSet "daemon-set" @ 07/05/25 13:42:07.842
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/05/25 13:42:07.849
  I0705 13:42:07.929144 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:42:07.929196 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:42:07.933168 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0705 13:42:07.933190 21 fixtures.go:131] Node ip-172-31-22-171 is running 0 daemon pod, expected 1
  E0705 13:42:08.755789      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:42:08.856894 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:42:08.856941 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:42:08.862961 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0705 13:42:08.862990 21 fixtures.go:131] Node ip-172-31-22-171 is running 0 daemon pod, expected 1
  E0705 13:42:09.755854      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:42:09.856317 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-43-213 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:42:09.856362 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-87-237 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0705 13:42:09.862560 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0705 13:42:09.862583 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 07/05/25 13:42:09.866
  STEP: DeleteCollection of the DaemonSets @ 07/05/25 13:42:09.871
  STEP: Verify that ReplicaSets have been deleted @ 07/05/25 13:42:09.885
  I0705 13:42:09.899292 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"47182"},"items":null}

  I0705 13:42:09.908321 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"47186"},"items":[{"metadata":{"name":"daemon-set-5q95j","generateName":"daemon-set-","namespace":"daemonsets-9929","uid":"5cf77bf6-c952-4dbc-8c4d-c5519ec6c553","resourceVersion":"47186","generation":2,"creationTimestamp":"2025-07-05T13:42:07Z","deletionTimestamp":"2025-07-05T13:42:39Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"d7f6be54-f571-466d-90cf-84bc452c3783","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-07-05T13:42:07Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7f6be54-f571-466d-90cf-84bc452c3783\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-07-05T13:42:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.146.45\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-m9fd8","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-m9fd8","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-5-45","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-5-45"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-05T13:42:09Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-05T13:42:07Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-05T13:42:09Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-05T13:42:09Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-05T13:42:07Z"}],"hostIP":"172.31.5.45","hostIPs":[{"ip":"172.31.5.45"}],"podIP":"192.168.146.45","podIPs":[{"ip":"192.168.146.45"}],"startTime":"2025-07-05T13:42:07Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-07-05T13:42:08Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://3c6d79702c6fb841c8fed55cfb69b0d9a2e2a77f81089a582ca9bcbfbe3ee5bb","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-m9fd8","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-ghwnt","generateName":"daemon-set-","namespace":"daemonsets-9929","uid":"2112f996-95f0-4f76-9d94-8633f0fed1e3","resourceVersion":"47183","generation":2,"creationTimestamp":"2025-07-05T13:42:07Z","deletionTimestamp":"2025-07-05T13:42:39Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"d7f6be54-f571-466d-90cf-84bc452c3783","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-07-05T13:42:07Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7f6be54-f571-466d-90cf-84bc452c3783\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-07-05T13:42:08Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.8.208\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-hgpjs","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-hgpjs","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-90-231","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-90-231"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-05T13:42:08Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-05T13:42:07Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-05T13:42:08Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-05T13:42:08Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-05T13:42:07Z"}],"hostIP":"172.31.90.231","hostIPs":[{"ip":"172.31.90.231"}],"podIP":"192.168.8.208","podIPs":[{"ip":"192.168.8.208"}],"startTime":"2025-07-05T13:42:07Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-07-05T13:42:08Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://5580469e87bf95351b6617fda9b9b2f25dbc64fdffb9273e7c97304ac5715e4a","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-hgpjs","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-tv5sf","generateName":"daemon-set-","namespace":"daemonsets-9929","uid":"d4c0486b-b8cc-4652-8579-417b86ce535f","resourceVersion":"47184","generation":2,"creationTimestamp":"2025-07-05T13:42:07Z","deletionTimestamp":"2025-07-05T13:42:39Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"d7f6be54-f571-466d-90cf-84bc452c3783","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-07-05T13:42:07Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d7f6be54-f571-466d-90cf-84bc452c3783\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-07-05T13:42:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.54.194\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-2d876","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-2d876","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-22-171","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-22-171"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-05T13:42:09Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-05T13:42:07Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-05T13:42:09Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-05T13:42:09Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-05T13:42:07Z"}],"hostIP":"172.31.22.171","hostIPs":[{"ip":"172.31.22.171"}],"podIP":"192.168.54.194","podIPs":[{"ip":"192.168.54.194"}],"startTime":"2025-07-05T13:42:07Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-07-05T13:42:08Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://48a31ceab736c6c2ac32197947431f41c2703dedc12121d384ffd3f2211e0c3c","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-2d876","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0705 13:42:09.969056 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9929" for this suite. @ 07/05/25 13:42:09.974
• [2.246 seconds]
------------------------------
SSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 07/05/25 13:42:09.984
  I0705 13:42:09.984254 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename taint-single-pod @ 07/05/25 13:42:09.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:42:09.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:42:09.999
  I0705 13:42:10.003010 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0705 13:42:10.756028      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:11.756141      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:12.757057      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:13.757346      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:14.757377      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:15.757490      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:16.758235      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:17.758494      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:18.759481      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:19.759598      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:20.759769      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:21.760027      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:22.760208      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:23.760283      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:24.760378      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:25.760484      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:26.761268      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:27.762282      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:28.763321      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:29.763519      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:30.764464      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:31.764700      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:32.764982      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:33.765245      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:34.765733      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:35.765881      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:36.766006      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:37.766238      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:38.766292      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:39.766417      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:40.766513      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:41.766624      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:42.766754      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:43.766850      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:44.767699      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:45.767838      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:46.767959      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:47.768101      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:48.769176      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:49.770228      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:50.770325      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:51.770390      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:52.771316      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:53.772303      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:54.772410      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:55.772486      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:56.772616      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:57.772794      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:58.773048      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:42:59.773248      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:00.773372      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:01.773499      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:02.773772      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:03.774347      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:04.774493      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:05.774617      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:06.774734      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:07.774944      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:08.775187      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:09.775444      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:43:10.003917 21 util.go:390] Waiting for terminating namespaces to be deleted...
  I0705 13:43:10.009794 21 taints.go:144] Starting informer...
  STEP: Starting pod... @ 07/05/25 13:43:10.009
  I0705 13:43:10.226027 21 taints.go:294] Pod is running on ip-172-31-22-171. Tainting Node
  STEP: Trying to apply a taint on the Node @ 07/05/25 13:43:10.226
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/05/25 13:43:10.236
  STEP: Waiting short time to make sure Pod is queued for deletion @ 07/05/25 13:43:10.241
  I0705 13:43:10.241631 21 taints.go:313] Pod wasn't evicted. Proceeding
  I0705 13:43:10.241646 21 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/05/25 13:43:10.252
  STEP: Waiting some time to make sure that toleration time passed. @ 07/05/25 13:43:10.258
  E0705 13:43:10.775950      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:11.776117      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:12.776243      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:13.776312      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:14.776484      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:15.776550      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:16.776712      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:17.776836      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:18.776910      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:19.777190      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:20.777940      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:21.778012      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:22.778205      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:23.778456      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:24.778527      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:25.778656      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:26.778765      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:27.778992      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:28.779106      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:29.779320      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:30.779387      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:31.779853      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:32.779960      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:33.780024      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:34.780230      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:35.781267      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:36.782281      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:37.782480      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:38.782678      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:39.783305      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:40.783410      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:41.784458      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:42.784651      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:43.785270      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:44.785495      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:45.785633      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:46.785831      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:47.786025      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:48.786258      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:49.786458      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:50.786600      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:51.786804      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:52.787094      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:53.787293      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:54.787486      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:55.787590      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:56.787812      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:57.788015      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:58.788244      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:43:59.788370      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:00.789265      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:01.789365      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:02.789562      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:03.789746      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:04.790286      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:05.790377      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:06.791295      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:07.792268      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:08.793278      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:09.793478      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:10.793618      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:11.793686      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:12.793847      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:13.793933      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:14.794134      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:15.794256      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:16.794370      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:17.794527      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:18.794627      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:19.794786      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:20.794922      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:21.795334      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:22.795241      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:23.795324      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:24.795525      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:44:25.259103 21 taints.go:329] Pod wasn't evicted. Test successful
  I0705 13:44:25.259290 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-6187" for this suite. @ 07/05/25 13:44:25.265
• [135.292 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 07/05/25 13:44:25.276
  I0705 13:44:25.276226 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename hostport @ 07/05/25 13:44:25.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:44:25.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:44:25.293
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 07/05/25 13:44:25.368
  E0705 13:44:25.795828      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:26.795998      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.90.231 on the node which pod1 resides and expect scheduled @ 07/05/25 13:44:27.39
  E0705 13:44:27.797059      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:28.797306      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.90.231 but use UDP protocol on the node which pod2 resides @ 07/05/25 13:44:29.409
  E0705 13:44:29.798041      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:30.798212      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:31.798352      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:32.798430      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:33.798597      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:34.798693      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:35.798762      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:36.798907      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:37.799812      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:38.799895      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:39.800818      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:40.801839      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:41.802243      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:42.802383      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 07/05/25 13:44:43.48
  I0705 13:44:43.480356 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.90.231 http://127.0.0.1:54323/hostname] Namespace:hostport-8980 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0705 13:44:43.480371 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0705 13:44:43.480414 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/hostport-8980/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.90.231+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  I0705 13:44:43.537802 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.90.231, port: 54323 @ 07/05/25 13:44:43.537
  I0705 13:44:43.537888 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.90.231:54323/hostname] Namespace:hostport-8980 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0705 13:44:43.537896 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0705 13:44:43.537968 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/hostport-8980/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.90.231%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  I0705 13:44:43.591490 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.90.231, port: 54323 UDP @ 07/05/25 13:44:43.591
  I0705 13:44:43.591597 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.90.231 54323] Namespace:hostport-8980 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0705 13:44:43.591606 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0705 13:44:43.591677 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/hostport-8980/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.90.231+54323&container=e2e-host-exec&stderr=true&stdout=true)
  E0705 13:44:43.802521      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:44.802669      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:45.802990      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:46.803243      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:47.803489      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:44:48.633958 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0705 13:44:48.634125 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-8980" for this suite. @ 07/05/25 13:44:48.639
• [23.373 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3220
  STEP: Creating a kubernetes client @ 07/05/25 13:44:48.649
  I0705 13:44:48.649539 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename services @ 07/05/25 13:44:48.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:44:48.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:44:48.665
  I0705 13:44:48.672952      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating an Endpoint @ 07/05/25 13:44:48.672
  I0705 13:44:48.678812      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for available Endpoint @ 07/05/25 13:44:48.678
  I0705 13:44:48.680143      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: listing all Endpoints @ 07/05/25 13:44:48.68
  I0705 13:44:48.685218      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: updating the Endpoint @ 07/05/25 13:44:48.685
  I0705 13:44:48.691020      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0705 13:44:48.692576      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 07/05/25 13:44:48.692
  I0705 13:44:48.699620      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: patching the Endpoint @ 07/05/25 13:44:48.699
  I0705 13:44:48.706815      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0705 13:44:48.708157      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 07/05/25 13:44:48.708
  I0705 13:44:48.712211      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: deleting the Endpoint by Collection @ 07/05/25 13:44:48.712
  I0705 13:44:48.726133      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for Endpoint deletion @ 07/05/25 13:44:48.726
  I0705 13:44:48.727450      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 07/05/25 13:44:48.727
  I0705 13:44:48.731269      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0705 13:44:48.731388 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1998" for this suite. @ 07/05/25 13:44:48.741
• [0.100 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 07/05/25 13:44:48.749
  I0705 13:44:48.749721 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename downward-api @ 07/05/25 13:44:48.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:44:48.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:44:48.765
  STEP: Creating a pod to test downward api env vars @ 07/05/25 13:44:48.768
  E0705 13:44:48.804235      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:49.804466      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:50.804858      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:51.805123      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/05/25 13:44:52.797
  I0705 13:44:52.802526 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod downward-api-50abb822-a67a-49a6-8ff9-187c8c87bc3e container dapi-container: <nil>
  E0705 13:44:52.805633      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod @ 07/05/25 13:44:52.822
  I0705 13:44:52.841831 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3713" for this suite. @ 07/05/25 13:44:52.847
• [4.106 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 07/05/25 13:44:52.855
  I0705 13:44:52.855944 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename kubelet-test @ 07/05/25 13:44:52.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:44:52.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:44:52.871
  E0705 13:44:53.805840      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:54.806096      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:55.806240      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:56.806341      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:44:56.898870 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5051" for this suite. @ 07/05/25 13:44:56.906
• [4.063 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 07/05/25 13:44:56.919
  I0705 13:44:56.919145 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename crd-webhook @ 07/05/25 13:44:56.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:44:56.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:44:56.934
  STEP: Setting up server cert @ 07/05/25 13:44:56.937
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/05/25 13:44:57.652
  STEP: Deploying the custom resource conversion webhook pod @ 07/05/25 13:44:57.66
  STEP: Wait for the deployment to be ready @ 07/05/25 13:44:57.679
  I0705 13:44:57.695616 21 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0705 13:44:57.806823      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:44:58.807130      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/05/25 13:44:59.711
  STEP: Verifying the service has paired with the endpoint @ 07/05/25 13:44:59.73
  E0705 13:44:59.807353      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:45:00.731180 21 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0705 13:45:00.737726 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  E0705 13:45:00.808273      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:01.808685      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:02.809187      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 07/05/25 13:45:03.286
  STEP: Create a v2 custom resource @ 07/05/25 13:45:03.306
  STEP: List CRs in v1 @ 07/05/25 13:45:03.329
  STEP: List CRs in v2 @ 07/05/25 13:45:03.334
  E0705 13:45:03.810165      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:45:03.913235 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-2351" for this suite. @ 07/05/25 13:45:03.918
• [7.007 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 07/05/25 13:45:03.925
  I0705 13:45:03.925856 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename secrets @ 07/05/25 13:45:03.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:45:03.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:45:03.941
  STEP: creating secret secrets-2537/secret-test-a9354492-d89c-4835-8ce9-d3914ac28082 @ 07/05/25 13:45:03.944
  STEP: Creating a pod to test consume secrets @ 07/05/25 13:45:03.951
  E0705 13:45:04.810268      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:05.810331      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/05/25 13:45:05.974
  I0705 13:45:05.979525 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod pod-configmaps-d2f7ee9a-c04b-4dfa-bf54-2b9bd0e7b68c container env-test: <nil>
  STEP: delete the pod @ 07/05/25 13:45:05.989
  I0705 13:45:06.008979 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2537" for this suite. @ 07/05/25 13:45:06.015
• [2.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3630
  STEP: Creating a kubernetes client @ 07/05/25 13:45:06.024
  I0705 13:45:06.024882 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename services @ 07/05/25 13:45:06.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:45:06.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:45:06.041
  STEP: creating a collection of services @ 07/05/25 13:45:06.044
  I0705 13:45:06.044364 21 service.go:3666] Creating e2e-svc-a-7gwl5
  I0705 13:45:06.064554 21 service.go:3666] Creating e2e-svc-b-sd8bq
  I0705 13:45:06.081543 21 service.go:3666] Creating e2e-svc-c-nwnzb
  STEP: deleting service collection @ 07/05/25 13:45:06.106
  I0705 13:45:06.162196 21 service.go:3701] Collection of services has been deleted
  I0705 13:45:06.162325 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9742" for this suite. @ 07/05/25 13:45:06.167
• [0.152 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 07/05/25 13:45:06.177
  I0705 13:45:06.177123 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename projected @ 07/05/25 13:45:06.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:45:06.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:45:06.192
  STEP: Creating the pod @ 07/05/25 13:45:06.195
  E0705 13:45:06.810458      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:07.810521      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:45:08.753223 21 pod_client.go:173] Successfully updated pod "annotationupdatef925ce2d-d0d3-4002-983c-dc083a424619"
  E0705 13:45:08.811012      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:09.811253      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:45:10.772274 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9592" for this suite. @ 07/05/25 13:45:10.778
• [4.610 seconds]
------------------------------
S
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:160
  STEP: Creating a kubernetes client @ 07/05/25 13:45:10.786
  I0705 13:45:10.787003 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename runtimeclass @ 07/05/25 13:45:10.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:45:10.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:45:10.804
  E0705 13:45:10.811960      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting RuntimeClass runtimeclass-3672-delete-me @ 07/05/25 13:45:10.812
  STEP: Waiting for the RuntimeClass to disappear @ 07/05/25 13:45:10.82
  I0705 13:45:10.832843 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3672" for this suite. @ 07/05/25 13:45:10.879
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:79
  STEP: Creating a kubernetes client @ 07/05/25 13:45:10.89
  I0705 13:45:10.890503 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename svcaccounts @ 07/05/25 13:45:10.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:45:10.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:45:10.906
  E0705 13:45:11.812348      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:12.813307      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 07/05/25 13:45:12.957
  I0705 13:45:12.957104 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1659 pod-service-account-0f9e8059-62f4-47aa-8a68-23737789c368 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 07/05/25 13:45:13.052
  I0705 13:45:13.052614 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1659 pod-service-account-0f9e8059-62f4-47aa-8a68-23737789c368 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 07/05/25 13:45:13.142
  I0705 13:45:13.142540 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1659 pod-service-account-0f9e8059-62f4-47aa-8a68-23737789c368 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0705 13:45:13.240848 21 service_accounts.go:119] Got root ca configmap in namespace "svcaccounts-1659"
  I0705 13:45:13.242836 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1659" for this suite. @ 07/05/25 13:45:13.248
• [2.368 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:884
  STEP: Creating a kubernetes client @ 07/05/25 13:45:13.258
  I0705 13:45:13.258989 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename kubectl @ 07/05/25 13:45:13.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:45:13.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:45:13.273
  STEP: validating api versions @ 07/05/25 13:45:13.276
  I0705 13:45:13.276220 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-724498336 --namespace=kubectl-5312 api-versions'
  I0705 13:45:13.322482 21 builder.go:146] stderr: ""
  I0705 13:45:13.322540 21 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0705 13:45:13.322722 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5312" for this suite. @ 07/05/25 13:45:13.349
• [0.100 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:333
  STEP: Creating a kubernetes client @ 07/05/25 13:45:13.359
  I0705 13:45:13.359407 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename sched-pred @ 07/05/25 13:45:13.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:45:13.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:45:13.377
  I0705 13:45:13.380623 21 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0705 13:45:13.455029 21 util.go:390] Waiting for terminating namespaces to be deleted...
  I0705 13:45:13.460284 21 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-22-171 before test
  I0705 13:45:13.466215 21 predicates.go:958] nginx-ingress-controller-kubernetes-worker-gg6s4 from ingress-nginx-kubernetes-worker started at 2025-07-05 13:43:21 +0000 UTC (1 container statuses recorded)
  I0705 13:45:13.466239 21 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0705 13:45:13.466246 21 predicates.go:958] calico-node-kbhbz from kube-system started at 2025-07-05 12:09:19 +0000 UTC (1 container statuses recorded)
  I0705 13:45:13.466251 21 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0705 13:45:13.466256 21 predicates.go:958] annotationupdatef925ce2d-d0d3-4002-983c-dc083a424619 from projected-9592 started at 2025-07-05 13:45:06 +0000 UTC (1 container statuses recorded)
  I0705 13:45:13.466261 21 predicates.go:960] 	Container client-container ready: true, restart count 0
  I0705 13:45:13.466266 21 predicates.go:958] sonobuoy from sonobuoy started at 2025-07-05 12:10:10 +0000 UTC (1 container statuses recorded)
  I0705 13:45:13.466270 21 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0705 13:45:13.466276 21 predicates.go:958] sonobuoy-systemd-logs-daemon-set-1b02295658074d3d-zpsp4 from sonobuoy started at 2025-07-05 12:10:12 +0000 UTC (2 container statuses recorded)
  I0705 13:45:13.466280 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0705 13:45:13.466284 21 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0705 13:45:13.466289 21 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-5-45 before test
  I0705 13:45:13.471376 21 predicates.go:958] nginx-ingress-controller-kubernetes-worker-tjt2x from ingress-nginx-kubernetes-worker started at 2025-07-05 11:59:03 +0000 UTC (1 container statuses recorded)
  I0705 13:45:13.471394 21 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0705 13:45:13.471402 21 predicates.go:958] calico-node-zxgh6 from kube-system started at 2025-07-05 12:09:49 +0000 UTC (1 container statuses recorded)
  I0705 13:45:13.471407 21 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0705 13:45:13.471412 21 predicates.go:958] sonobuoy-e2e-job-c9143e3b27b14a19 from sonobuoy started at 2025-07-05 12:10:12 +0000 UTC (2 container statuses recorded)
  I0705 13:45:13.471417 21 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0705 13:45:13.471421 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0705 13:45:13.471426 21 predicates.go:958] sonobuoy-systemd-logs-daemon-set-1b02295658074d3d-466tt from sonobuoy started at 2025-07-05 12:10:12 +0000 UTC (2 container statuses recorded)
  I0705 13:45:13.471431 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0705 13:45:13.471436 21 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0705 13:45:13.471441 21 predicates.go:958] pod-service-account-0f9e8059-62f4-47aa-8a68-23737789c368 from svcaccounts-1659 started at 2025-07-05 13:45:10 +0000 UTC (1 container statuses recorded)
  I0705 13:45:13.471445 21 predicates.go:960] 	Container test ready: true, restart count 0
  I0705 13:45:13.471450 21 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-90-231 before test
  I0705 13:45:13.476679 21 predicates.go:958] nginx-ingress-controller-kubernetes-worker-lbgkc from ingress-nginx-kubernetes-worker started at 2025-07-05 11:59:03 +0000 UTC (1 container statuses recorded)
  I0705 13:45:13.476703 21 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0705 13:45:13.476709 21 predicates.go:958] calico-node-dlmq7 from kube-system started at 2025-07-05 12:10:03 +0000 UTC (1 container statuses recorded)
  I0705 13:45:13.476714 21 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0705 13:45:13.476718 21 predicates.go:958] coredns-5d946bb58-br4tm from kube-system started at 2025-07-05 11:59:03 +0000 UTC (1 container statuses recorded)
  I0705 13:45:13.476721 21 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0705 13:45:13.476725 21 predicates.go:958] kube-state-metrics-b84f44f45-lv24k from kube-system started at 2025-07-05 11:59:03 +0000 UTC (1 container statuses recorded)
  I0705 13:45:13.476728 21 predicates.go:960] 	Container kube-state-metrics ready: true, restart count 0
  I0705 13:45:13.476732 21 predicates.go:958] metrics-server-v0.7.2-7d878b47f8-gfn72 from kube-system started at 2025-07-05 11:59:03 +0000 UTC (2 container statuses recorded)
  I0705 13:45:13.476735 21 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0705 13:45:13.476739 21 predicates.go:960] 	Container metrics-server-nanny ready: true, restart count 0
  I0705 13:45:13.476742 21 predicates.go:958] dashboard-metrics-scraper-5cf87bc988-2nxl2 from kubernetes-dashboard started at 2025-07-05 11:59:03 +0000 UTC (1 container statuses recorded)
  I0705 13:45:13.476745 21 predicates.go:960] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0705 13:45:13.476749 21 predicates.go:958] kubernetes-dashboard-6858576c98-mrksb from kubernetes-dashboard started at 2025-07-05 11:59:03 +0000 UTC (1 container statuses recorded)
  I0705 13:45:13.476753 21 predicates.go:960] 	Container kubernetes-dashboard ready: true, restart count 0
  I0705 13:45:13.476757 21 predicates.go:958] sonobuoy-systemd-logs-daemon-set-1b02295658074d3d-kxgxg from sonobuoy started at 2025-07-05 12:10:12 +0000 UTC (2 container statuses recorded)
  I0705 13:45:13.476760 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0705 13:45:13.476765 21 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-22-171 @ 07/05/25 13:45:13.492
  STEP: verifying the node has the label node ip-172-31-5-45 @ 07/05/25 13:45:13.505
  STEP: verifying the node has the label node ip-172-31-90-231 @ 07/05/25 13:45:13.521
  I0705 13:45:13.569121 21 predicates.go:373] Pod nginx-ingress-controller-kubernetes-worker-gg6s4 requesting resource cpu=0m on Node ip-172-31-22-171
  I0705 13:45:13.569152 21 predicates.go:373] Pod nginx-ingress-controller-kubernetes-worker-lbgkc requesting resource cpu=0m on Node ip-172-31-90-231
  I0705 13:45:13.569157 21 predicates.go:373] Pod nginx-ingress-controller-kubernetes-worker-tjt2x requesting resource cpu=0m on Node ip-172-31-5-45
  I0705 13:45:13.569163 21 predicates.go:373] Pod calico-node-dlmq7 requesting resource cpu=250m on Node ip-172-31-90-231
  I0705 13:45:13.569170 21 predicates.go:373] Pod calico-node-kbhbz requesting resource cpu=250m on Node ip-172-31-22-171
  I0705 13:45:13.569174 21 predicates.go:373] Pod calico-node-zxgh6 requesting resource cpu=250m on Node ip-172-31-5-45
  I0705 13:45:13.569180 21 predicates.go:373] Pod coredns-5d946bb58-br4tm requesting resource cpu=100m on Node ip-172-31-90-231
  I0705 13:45:13.569185 21 predicates.go:373] Pod kube-state-metrics-b84f44f45-lv24k requesting resource cpu=0m on Node ip-172-31-90-231
  I0705 13:45:13.569189 21 predicates.go:373] Pod metrics-server-v0.7.2-7d878b47f8-gfn72 requesting resource cpu=5m on Node ip-172-31-90-231
  I0705 13:45:13.569195 21 predicates.go:373] Pod dashboard-metrics-scraper-5cf87bc988-2nxl2 requesting resource cpu=0m on Node ip-172-31-90-231
  I0705 13:45:13.569199 21 predicates.go:373] Pod kubernetes-dashboard-6858576c98-mrksb requesting resource cpu=0m on Node ip-172-31-90-231
  I0705 13:45:13.569204 21 predicates.go:373] Pod annotationupdatef925ce2d-d0d3-4002-983c-dc083a424619 requesting resource cpu=0m on Node ip-172-31-22-171
  I0705 13:45:13.569209 21 predicates.go:373] Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-22-171
  I0705 13:45:13.569214 21 predicates.go:373] Pod sonobuoy-e2e-job-c9143e3b27b14a19 requesting resource cpu=0m on Node ip-172-31-5-45
  I0705 13:45:13.569219 21 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-1b02295658074d3d-466tt requesting resource cpu=0m on Node ip-172-31-5-45
  I0705 13:45:13.569224 21 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-1b02295658074d3d-kxgxg requesting resource cpu=0m on Node ip-172-31-90-231
  I0705 13:45:13.569229 21 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-1b02295658074d3d-zpsp4 requesting resource cpu=0m on Node ip-172-31-22-171
  I0705 13:45:13.569235 21 predicates.go:373] Pod pod-service-account-0f9e8059-62f4-47aa-8a68-23737789c368 requesting resource cpu=0m on Node ip-172-31-5-45
  STEP: Starting Pods to consume most of the cluster CPU. @ 07/05/25 13:45:13.569
  I0705 13:45:13.569272 21 predicates.go:383] Creating a pod which consumes cpu=1225m on Node ip-172-31-22-171
  I0705 13:45:13.580558 21 predicates.go:383] Creating a pod which consumes cpu=1225m on Node ip-172-31-5-45
  I0705 13:45:13.589709 21 predicates.go:383] Creating a pod which consumes cpu=1151m on Node ip-172-31-90-231
  E0705 13:45:13.813382      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:14.813698      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 07/05/25 13:45:15.621
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-785cf00e-a10b-4a46-a084-afba395f2cd7.184f5ee40b4fce59], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8701/filler-pod-785cf00e-a10b-4a46-a084-afba395f2cd7 to ip-172-31-90-231] @ 07/05/25 13:45:15.626
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-785cf00e-a10b-4a46-a084-afba395f2cd7.184f5ee42b37ec4f], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 07/05/25 13:45:15.626
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-785cf00e-a10b-4a46-a084-afba395f2cd7.184f5ee42c95db6a], Reason = [Created], Message = [Created container: filler-pod-785cf00e-a10b-4a46-a084-afba395f2cd7] @ 07/05/25 13:45:15.626
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-785cf00e-a10b-4a46-a084-afba395f2cd7.184f5ee42fad4077], Reason = [Started], Message = [Started container filler-pod-785cf00e-a10b-4a46-a084-afba395f2cd7] @ 07/05/25 13:45:15.626
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b5f8e772-d2a8-4412-9dd7-d3723315f940.184f5ee40ad65e55], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8701/filler-pod-b5f8e772-d2a8-4412-9dd7-d3723315f940 to ip-172-31-5-45] @ 07/05/25 13:45:15.626
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b5f8e772-d2a8-4412-9dd7-d3723315f940.184f5ee42995cc8b], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 07/05/25 13:45:15.626
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b5f8e772-d2a8-4412-9dd7-d3723315f940.184f5ee42af83e38], Reason = [Created], Message = [Created container: filler-pod-b5f8e772-d2a8-4412-9dd7-d3723315f940] @ 07/05/25 13:45:15.626
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b5f8e772-d2a8-4412-9dd7-d3723315f940.184f5ee42e00493a], Reason = [Started], Message = [Started container filler-pod-b5f8e772-d2a8-4412-9dd7-d3723315f940] @ 07/05/25 13:45:15.626
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ea4345af-ff94-42c3-8c70-096dae00177a.184f5ee40a3b132d], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8701/filler-pod-ea4345af-ff94-42c3-8c70-096dae00177a to ip-172-31-22-171] @ 07/05/25 13:45:15.626
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ea4345af-ff94-42c3-8c70-096dae00177a.184f5ee42a316530], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 07/05/25 13:45:15.626
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ea4345af-ff94-42c3-8c70-096dae00177a.184f5ee42b9f4248], Reason = [Created], Message = [Created container: filler-pod-ea4345af-ff94-42c3-8c70-096dae00177a] @ 07/05/25 13:45:15.626
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ea4345af-ff94-42c3-8c70-096dae00177a.184f5ee42e572ed7], Reason = [Started], Message = [Started container filler-pod-ea4345af-ff94-42c3-8c70-096dae00177a] @ 07/05/25 13:45:15.626
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.184f5ee4843739a1], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 07/05/25 13:45:15.641
  E0705 13:45:15.814056      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.184f5ee49d302a2f], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 07/05/25 13:45:16.059
  STEP: removing the label node off the node ip-172-31-5-45 @ 07/05/25 13:45:16.64
  STEP: verifying the node doesn't have the label node @ 07/05/25 13:45:16.655
  STEP: removing the label node off the node ip-172-31-90-231 @ 07/05/25 13:45:16.66
  STEP: verifying the node doesn't have the label node @ 07/05/25 13:45:16.675
  STEP: removing the label node off the node ip-172-31-22-171 @ 07/05/25 13:45:16.68
  STEP: verifying the node doesn't have the label node @ 07/05/25 13:45:16.694
  I0705 13:45:16.699434 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8701" for this suite. @ 07/05/25 13:45:16.706
• [3.356 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 07/05/25 13:45:16.714
  I0705 13:45:16.714956 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename field-validation @ 07/05/25 13:45:16.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:45:16.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:45:16.732
  STEP: apply creating a deployment @ 07/05/25 13:45:16.735
  I0705 13:45:16.752325 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1849" for this suite. @ 07/05/25 13:45:16.757
• [0.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:166
  STEP: Creating a kubernetes client @ 07/05/25 13:45:16.768
  I0705 13:45:16.768159 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename pods @ 07/05/25 13:45:16.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:45:16.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:45:16.785
  STEP: creating the pod @ 07/05/25 13:45:16.788
  STEP: submitting the pod to kubernetes @ 07/05/25 13:45:16.788
  STEP: verifying QOS class is set on the pod @ 07/05/25 13:45:16.797
  I0705 13:45:16.804870 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0705 13:45:16.814901      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "pods-9582" for this suite. @ 07/05/25 13:45:16.858
• [0.099 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1070
  STEP: Creating a kubernetes client @ 07/05/25 13:45:16.867
  I0705 13:45:16.867091 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename resourcequota @ 07/05/25 13:45:16.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:45:16.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:45:16.883
  STEP: Creating resourceQuota "e2e-rq-status-f9587" @ 07/05/25 13:45:16.89
  I0705 13:45:16.902701 21 resource_quota.go:1106] Resource quota "e2e-rq-status-f9587" reports spec: hard cpu limit of 500m
  I0705 13:45:16.902738 21 resource_quota.go:1108] Resource quota "e2e-rq-status-f9587" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-f9587" /status @ 07/05/25 13:45:16.902
  STEP: Confirm /status for "e2e-rq-status-f9587" resourceQuota via watch @ 07/05/25 13:45:16.914
  I0705 13:45:16.916125 21 resource_quota.go:1135] observed resourceQuota "e2e-rq-status-f9587" in namespace "resourcequota-1691" with hard status: v1.ResourceList(nil)
  I0705 13:45:16.916174 21 resource_quota.go:1138] Found resourceQuota "e2e-rq-status-f9587" in namespace "resourcequota-1691" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0705 13:45:16.916186 21 resource_quota.go:1145] ResourceQuota "e2e-rq-status-f9587" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 07/05/25 13:45:16.92
  I0705 13:45:16.927330 21 resource_quota.go:1156] Resource quota "e2e-rq-status-f9587" reports spec: hard cpu limit of 1
  I0705 13:45:16.927361 21 resource_quota.go:1157] Resource quota "e2e-rq-status-f9587" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-f9587" /status @ 07/05/25 13:45:16.927
  STEP: Confirm /status for "e2e-rq-status-f9587" resourceQuota via watch @ 07/05/25 13:45:16.936
  I0705 13:45:16.937818 21 resource_quota.go:1179] observed resourceQuota "e2e-rq-status-f9587" in namespace "resourcequota-1691" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0705 13:45:16.937849 21 resource_quota.go:1182] Found resourceQuota "e2e-rq-status-f9587" in namespace "resourcequota-1691" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0705 13:45:16.937860 21 resource_quota.go:1189] ResourceQuota "e2e-rq-status-f9587" /status was patched
  STEP: Get "e2e-rq-status-f9587" /status @ 07/05/25 13:45:16.937
  I0705 13:45:16.942666 21 resource_quota.go:1200] Resourcequota "e2e-rq-status-f9587" reports status: hard cpu of 1
  I0705 13:45:16.942690 21 resource_quota.go:1202] Resourcequota "e2e-rq-status-f9587" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-f9587" /status before checking Spec is unchanged @ 07/05/25 13:45:16.946
  I0705 13:45:16.955324 21 resource_quota.go:1222] Resourcequota "e2e-rq-status-f9587" reports status: hard cpu of 2
  I0705 13:45:16.955359 21 resource_quota.go:1224] Resourcequota "e2e-rq-status-f9587" reports status: hard memory of 2Gi
  I0705 13:45:16.956777 21 resource_quota.go:1236] Found resourceQuota "e2e-rq-status-f9587" in namespace "resourcequota-1691" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0705 13:45:16.961335 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005833d58), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005833d88), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005833db8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:45:17.815279      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:18.815523      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:19.816316      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:20.816502      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:21.816590      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:45:21.962552 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005833f38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c000), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c030), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:45:22.816741      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:23.816880      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:24.817000      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:25.817131      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:26.817288      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:45:26.962301 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0055f56c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0055f56f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0055f5728), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:45:27.817428      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:28.817599      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:29.817766      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:30.817903      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:31.818157      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:45:31.962208 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c180), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c1b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c1e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:45:32.819166      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:33.819297      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:34.820291      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:35.821277      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:36.822294      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:45:36.963148 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0055f5908), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0055f5938), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0055f5968), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:45:37.822439      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:38.822590      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:39.822823      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:40.823023      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:41.823180      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:45:41.962597 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c4b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c4e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c510), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:45:42.823520      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:43.823733      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:44.823871      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:45.823982      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:46.824176      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:45:46.962406 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0055f5a70), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0055f5aa0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0055f5ad0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:45:47.824254      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:48.824489      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:49.825398      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:50.825536      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:51.825625      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:45:51.963411 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c708), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c768), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c798), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:45:52.826329      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:53.826496      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:54.827352      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:55.827494      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:56.827663      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:45:56.962402 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c9a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c9d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9ca38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:45:57.828175      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:58.828306      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:45:59.828345      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:00.828536      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:01.828708      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:46:01.962913 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0055f5d58), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0055f5d88), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0055f5db8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:46:02.828814      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:03.828899      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:04.828967      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:05.829140      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:06.829251      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:46:06.963316 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9cd80), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9cdb0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9cdf8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:46:07.830303      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:08.830367      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:09.831374      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:10.831454      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:11.832299      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:46:11.963291 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9d008), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9d038), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9d068), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:46:12.832433      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:13.832507      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:14.833414      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:15.834345      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:16.835296      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:46:16.962109 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0055f5f08), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0055f5f38), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0055f5f68), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:46:17.836306      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:18.836442      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:19.836746      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:20.837402      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:21.837695      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:46:21.962468 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c060), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c090), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c0c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:46:22.838498      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:23.838726      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:24.838822      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:25.839186      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:26.839291      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:46:26.962447 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530e150), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530e180), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530e1b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:46:27.840376      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:28.841288      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:29.841312      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:30.842272      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:31.843298      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:46:31.962655 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c2a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c2d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c300), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:46:32.843411      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:33.843606      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:34.843822      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:35.844016      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:36.844240      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:46:36.963318 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530e2e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530e318), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530e348), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:46:37.845311      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:38.845514      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:39.845877      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:40.846120      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:41.846204      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:46:41.962245 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c5a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c5d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c600), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:46:42.846352      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:43.846556      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:44.847446      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:45.847571      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:46.847811      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:46:46.962856 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c768), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c798), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c7c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:46:47.847959      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:48.848266      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:49.848393      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:50.848585      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:51.848706      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:46:51.963816 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530e618), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530e648), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530e678), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:46:52.848765      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:53.848976      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:54.849970      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:55.850206      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:56.851290      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:46:56.962273 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530e7b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530e7e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530e810), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:46:57.852209      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:58.852410      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:46:59.853438      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:00.853651      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:01.853858      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:47:01.963309 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9caf8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9cb28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9cb88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:47:02.854193      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:03.854402      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:04.854533      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:05.854773      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:06.854974      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:47:06.962912 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530e9f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530ea20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530ea50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:47:07.855135      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:08.855348      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:09.856011      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:10.856177      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:11.856392      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:47:11.962542 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530ec60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530ec90), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530ecc0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:47:12.856475      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:13.856707      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:14.856935      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:15.857100      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:16.857312      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:47:16.962521 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9cd20), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9cd50), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9cd80), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:47:17.857375      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:18.857622      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:19.857845      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:20.857971      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:21.858192      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:47:21.962480 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9cf18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9cf48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9cf78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:47:22.858316      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:23.858532      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:24.859415      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:25.859518      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:26.860278      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:47:26.962241 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9d0f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9d128), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9d158), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:47:27.860377      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:28.861270      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:29.861425      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:30.862268      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:31.863286      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:47:31.962459 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530efd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530f020), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530f050), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:47:32.864276      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:33.864475      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:34.864582      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:35.864784      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:36.864997      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:47:36.963128 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530f188), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530f1b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530f200), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:47:37.865047      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:38.865260      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:39.865959      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:40.866092      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:41.866136      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:47:41.962019 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9d5a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9d5d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9d608), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:47:42.866251      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:43.866477      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:44.866866      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:45.867099      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:46.867301      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:47:46.963438 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9d728), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9d758), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9d7a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:47:47.867461      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:48.867662      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:49.868034      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:50.868254      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:51.868471      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:47:51.962992 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9d8c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9d8f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9d938), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:47:52.868624      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:53.868866      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:54.869858      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:55.869966      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:56.870207      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:47:56.961891 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530f500), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530f530), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530f560), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:47:57.871276      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:58.871469      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:47:59.871546      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:00.872272      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:01.872466      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:48:01.962613 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9dc08), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9dc38), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9dc68), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:48:02.873287      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:03.873443      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:04.874415      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:05.874553      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:06.874768      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:48:06.962614 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9dd88), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9ddb8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9dde8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:48:07.874940      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:08.875159      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:09.875877      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:10.876345      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:11.876573      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:48:11.962576 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530f860), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530f890), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530f8d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:48:12.876723      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:13.876928      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:14.877924      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:15.878150      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:16.878350      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:48:16.963484 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530fae8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530fb18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530fb60), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:48:17.878572      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:18.878780      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:19.878860      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:20.879032      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:21.879382      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:48:21.962390 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c060), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c090), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c0c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:48:22.879338      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:23.879721      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:24.879985      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:25.880104      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:26.880205      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:48:26.962364 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530e180), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530e1b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530e1e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:48:27.880301      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:28.881271      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:29.881331      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:30.882282      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:31.882478      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:48:31.963221 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530e318), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530e348), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530e378), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:48:32.883148      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:33.883351      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:34.883966      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:35.884199      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:36.884404      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:48:36.962243 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c300), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c330), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c360), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:48:37.885271      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:38.885468      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:39.886026      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:40.886194      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:41.886410      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:48:41.963131 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530e570), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530e5b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530e5e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:48:42.886559      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:43.887282      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:44.887427      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:45.887632      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:46.887837      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:48:46.962819 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530e720), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530e750), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530e780), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:48:47.887984      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:48.888213      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:49.888868      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:50.889101      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:51.889473      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:48:51.962441 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530e960), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530e990), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530e9c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:48:52.890204      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:53.891289      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:54.891365      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:55.891552      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:56.892272      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:48:56.963421 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530eaf8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530eb28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530eb70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:48:57.892347      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:58.893288      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:48:59.893333      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:00.894269      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:01.895277      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:49:01.963212 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c6d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c708), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c768), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:49:02.895395      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:03.895491      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:04.896006      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:05.896215      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:06.896408      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:49:06.962556 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530ed50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530ed80), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530edc8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:49:07.896555      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:08.896801      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:09.896907      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:10.897175      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:11.897383      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:49:11.963237 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c8e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c918), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9c948), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:49:12.898123      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:13.898213      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:14.898919      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:15.898967      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:16.899174      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:49:16.962922 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530efd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530f020), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530f050), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:49:17.899471      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:18.899567      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:19.900529      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:20.900627      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:21.901285      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:49:21.962052 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530f188), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530f1b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530f200), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:49:22.902274      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:23.902928      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:24.903018      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:25.903262      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:26.903379      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:49:26.963187 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530f428), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530f458), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00530f488), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:49:27.904374      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:28.904621      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:29.904921      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:30.905153      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:31.905214      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:49:31.962914 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-f9587" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f9587", GenerateName:"", Namespace:"resourcequota-1691", SelfLink:"", UID:"d5c0a257-35a0-49c9-8b2e-9d719073bf4a", ResourceVersion:"48193", Generation:0, CreationTimestamp:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f9587"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9cd20), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9cd50), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 5, 13, 45, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e9cd80), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0705 13:49:32.905249      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:33.905462      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:34.906417      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:35.906523      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:36.906722      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:49:36.963410 21 resource_quota.go:1264] ResourceQuota "e2e-rq-status-f9587" Spec was unchanged and /status reset
  I0705 13:49:36.963551 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1691" for this suite. @ 07/05/25 13:49:36.969
• [260.112 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 07/05/25 13:49:36.979
  I0705 13:49:36.979828 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename projected @ 07/05/25 13:49:36.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:49:37.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:49:37.006
  STEP: Creating a pod to test downward API volume plugin @ 07/05/25 13:49:37.008
  E0705 13:49:37.906852      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:38.907087      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:39.907325      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:40.907475      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/05/25 13:49:41.038
  I0705 13:49:41.043170 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod downwardapi-volume-0798ea2d-6cca-41d5-869a-f056f9f2bcb7 container client-container: <nil>
  STEP: delete the pod @ 07/05/25 13:49:41.057
  I0705 13:49:41.080471 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8235" for this suite. @ 07/05/25 13:49:41.085
• [4.114 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 07/05/25 13:49:41.093
  I0705 13:49:41.093564 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename projected @ 07/05/25 13:49:41.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:49:41.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:49:41.111
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-44a69ebc-4484-421f-8bda-36f443db94fc @ 07/05/25 13:49:41.186
  STEP: Creating the pod @ 07/05/25 13:49:41.194
  E0705 13:49:41.907791      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:42.908040      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-44a69ebc-4484-421f-8bda-36f443db94fc @ 07/05/25 13:49:43.232
  STEP: waiting to observe update in volume @ 07/05/25 13:49:43.239
  E0705 13:49:43.908119      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:44.909193      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:45.909332      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:46.910395      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:47.910490      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:48.910598      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:49.910838      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:50.911056      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:51.911989      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:52.912252      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:53.912426      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:54.913432      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:55.914370      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:56.914483      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:57.914623      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:58.914729      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:49:59.915789      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:00.916027      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:01.916145      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:02.916273      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:03.917273      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:04.917527      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:05.917706      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:06.917871      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:07.918243      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:08.918474      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:09.918622      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:10.918754      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:11.919271      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:12.919345      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:13.919775      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:14.920657      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:15.921292      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:16.921375      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:17.922303      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:18.922439      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:19.922913      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:20.923343      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:21.923548      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:22.923672      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:23.923779      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:24.923859      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:25.924646      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:26.924879      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:27.925020      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:28.925280      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:29.926026      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:30.926339      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:31.926529      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:32.926633      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:33.926809      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:34.926937      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:35.927112      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:36.927278      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:37.927404      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:38.927536      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:39.927791      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:40.927986      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:41.928539      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:42.929608      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:43.930488      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:44.931465      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:45.932308      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:46.932419      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:47.933206      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:48.933367      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:49.933450      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:50.933526      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:51.934227      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:52.934296      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:53.934462      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:54.935394      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:55.935552      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:56.935779      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:57.935861      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:58.936122      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:50:59.936206      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:51:00.936316      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:51:01.936434      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:51:02.936597      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:51:03.680158 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5709" for this suite. @ 07/05/25 13:51:03.685
• [82.601 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support IPAddress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:223
  STEP: Creating a kubernetes client @ 07/05/25 13:51:03.694
  I0705 13:51:03.694807 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename servicecidr @ 07/05/25 13:51:03.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:51:03.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:51:03.711
  STEP: creating @ 07/05/25 13:51:03.714
  STEP: patching @ 07/05/25 13:51:03.727
  STEP: updating @ 07/05/25 13:51:03.733
  STEP: getting @ 07/05/25 13:51:03.743
  STEP: listing @ 07/05/25 13:51:03.747
  STEP: watching @ 07/05/25 13:51:03.75
  STEP: deleting @ 07/05/25 13:51:03.752
  STEP: deleting a collection @ 07/05/25 13:51:03.76
  I0705 13:51:03.778353 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-370" for this suite. @ 07/05/25 13:51:03.786
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:278
  STEP: Creating a kubernetes client @ 07/05/25 13:51:03.794
  I0705 13:51:03.794270 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/05/25 13:51:03.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:51:03.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:51:03.81
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 07/05/25 13:51:03.813
  I0705 13:51:03.813931 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  E0705 13:51:03.937453      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:51:04.938356      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:51:05.024691 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  E0705 13:51:05.938580      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:51:06.939043      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:51:07.939294      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:51:08.940245      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:51:09.941305      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:51:09.993267 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9233" for this suite. @ 07/05/25 13:51:10.004
• [6.226 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 07/05/25 13:51:10.02
  I0705 13:51:10.020930 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename replicaset @ 07/05/25 13:51:10.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:51:10.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:51:10.037
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 07/05/25 13:51:10.039
  E0705 13:51:10.941424      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:51:11.941467      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 07/05/25 13:51:12.068
  STEP: Then the orphan pod is adopted @ 07/05/25 13:51:12.077
  E0705 13:51:12.941551      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 07/05/25 13:51:13.093
  I0705 13:51:13.098951 21 resource.go:81] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 07/05/25 13:51:13.113
  E0705 13:51:13.942309      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:51:14.126284 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4427" for this suite. @ 07/05/25 13:51:14.132
• [4.120 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 07/05/25 13:51:14.141
  I0705 13:51:14.141546 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename svc-latency @ 07/05/25 13:51:14.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:51:14.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:51:14.158
  I0705 13:51:14.162344 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  I0705 13:51:14.179276 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0705 13:51:14.943050      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:51:15.943326      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:51:16.186562      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0705 13:51:16.188081      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0705 13:51:16.305506 21 service_latency.go:351] Created: latency-svc-qpc4f
  I0705 13:51:16.323742 21 service_latency.go:358] Got endpoints: latency-svc-qpc4f [38.546223ms]
  I0705 13:51:16.345435 21 service_latency.go:351] Created: latency-svc-zjvj8
  I0705 13:51:16.353633 21 service_latency.go:358] Got endpoints: latency-svc-zjvj8 [29.454302ms]
  I0705 13:51:16.355351 21 service_latency.go:351] Created: latency-svc-r2btp
  I0705 13:51:16.364372 21 service_latency.go:358] Got endpoints: latency-svc-r2btp [40.362471ms]
  I0705 13:51:16.368222 21 service_latency.go:351] Created: latency-svc-4ssq4
  I0705 13:51:16.375348 21 service_latency.go:358] Got endpoints: latency-svc-4ssq4 [51.193081ms]
  I0705 13:51:16.376832 21 service_latency.go:351] Created: latency-svc-ctwd8
  I0705 13:51:16.385402 21 service_latency.go:358] Got endpoints: latency-svc-ctwd8 [61.28168ms]
  I0705 13:51:16.388692 21 service_latency.go:351] Created: latency-svc-4sd4k
  I0705 13:51:16.395089 21 service_latency.go:351] Created: latency-svc-r6ctk
  I0705 13:51:16.395373 21 service_latency.go:358] Got endpoints: latency-svc-4sd4k [71.146738ms]
  I0705 13:51:16.405560 21 service_latency.go:358] Got endpoints: latency-svc-r6ctk [81.355769ms]
  I0705 13:51:16.407593 21 service_latency.go:351] Created: latency-svc-xplgg
  I0705 13:51:16.415891 21 service_latency.go:358] Got endpoints: latency-svc-xplgg [91.932983ms]
  I0705 13:51:16.418258 21 service_latency.go:351] Created: latency-svc-6jqfq
  I0705 13:51:16.426487 21 service_latency.go:358] Got endpoints: latency-svc-6jqfq [102.081805ms]
  I0705 13:51:16.430913 21 service_latency.go:351] Created: latency-svc-4trtr
  I0705 13:51:16.432711 21 service_latency.go:351] Created: latency-svc-vdlhr
  I0705 13:51:16.444108 21 service_latency.go:358] Got endpoints: latency-svc-vdlhr [119.828195ms]
  I0705 13:51:16.444687 21 service_latency.go:358] Got endpoints: latency-svc-4trtr [120.312646ms]
  I0705 13:51:16.450010 21 service_latency.go:351] Created: latency-svc-j8lkj
  I0705 13:51:16.457723 21 service_latency.go:358] Got endpoints: latency-svc-j8lkj [133.369362ms]
  I0705 13:51:16.458720 21 service_latency.go:351] Created: latency-svc-vz9m5
  I0705 13:51:16.465229 21 service_latency.go:351] Created: latency-svc-j84cn
  I0705 13:51:16.472024 21 service_latency.go:358] Got endpoints: latency-svc-vz9m5 [147.770665ms]
  I0705 13:51:16.478214 21 service_latency.go:358] Got endpoints: latency-svc-j84cn [153.909065ms]
  I0705 13:51:16.487703 21 service_latency.go:351] Created: latency-svc-gm94x
  I0705 13:51:16.495183 21 service_latency.go:358] Got endpoints: latency-svc-gm94x [170.752718ms]
  I0705 13:51:16.497446 21 service_latency.go:351] Created: latency-svc-tkth4
  I0705 13:51:16.506139 21 service_latency.go:351] Created: latency-svc-bwlnb
  I0705 13:51:16.507493 21 service_latency.go:358] Got endpoints: latency-svc-tkth4 [183.166673ms]
  I0705 13:51:16.517020 21 service_latency.go:358] Got endpoints: latency-svc-bwlnb [162.987977ms]
  I0705 13:51:16.519454 21 service_latency.go:351] Created: latency-svc-vxv4n
  I0705 13:51:16.527079 21 service_latency.go:358] Got endpoints: latency-svc-vxv4n [162.645707ms]
  I0705 13:51:16.528839 21 service_latency.go:351] Created: latency-svc-zpwbp
  I0705 13:51:16.539267 21 service_latency.go:358] Got endpoints: latency-svc-zpwbp [163.868864ms]
  I0705 13:51:16.542470 21 service_latency.go:351] Created: latency-svc-xxts6
  I0705 13:51:16.550200 21 service_latency.go:358] Got endpoints: latency-svc-xxts6 [164.75705ms]
  I0705 13:51:16.552615 21 service_latency.go:351] Created: latency-svc-5mzvs
  I0705 13:51:16.559497 21 service_latency.go:358] Got endpoints: latency-svc-5mzvs [164.099873ms]
  I0705 13:51:16.560277 21 service_latency.go:351] Created: latency-svc-kvglj
  I0705 13:51:16.570116 21 service_latency.go:358] Got endpoints: latency-svc-kvglj [164.509134ms]
  I0705 13:51:16.572857 21 service_latency.go:351] Created: latency-svc-v4lqc
  I0705 13:51:16.580340 21 service_latency.go:358] Got endpoints: latency-svc-v4lqc [164.399282ms]
  I0705 13:51:16.582033 21 service_latency.go:351] Created: latency-svc-7xsg9
  I0705 13:51:16.599175 21 service_latency.go:358] Got endpoints: latency-svc-7xsg9 [172.635465ms]
  I0705 13:51:16.602180 21 service_latency.go:351] Created: latency-svc-xpfgk
  I0705 13:51:16.617826 21 service_latency.go:351] Created: latency-svc-92x55
  I0705 13:51:16.618615 21 service_latency.go:358] Got endpoints: latency-svc-xpfgk [174.462919ms]
  I0705 13:51:16.625846 21 service_latency.go:358] Got endpoints: latency-svc-92x55 [181.132243ms]
  I0705 13:51:16.631887 21 service_latency.go:351] Created: latency-svc-f54bj
  I0705 13:51:16.637656 21 service_latency.go:351] Created: latency-svc-kcj7t
  I0705 13:51:16.642593 21 service_latency.go:358] Got endpoints: latency-svc-f54bj [184.825996ms]
  I0705 13:51:16.650012 21 service_latency.go:351] Created: latency-svc-c9lm6
  I0705 13:51:16.653562 21 service_latency.go:358] Got endpoints: latency-svc-kcj7t [181.461617ms]
  I0705 13:51:16.659132 21 service_latency.go:358] Got endpoints: latency-svc-c9lm6 [180.872801ms]
  I0705 13:51:16.667229 21 service_latency.go:351] Created: latency-svc-tb7pn
  I0705 13:51:16.681437 21 service_latency.go:358] Got endpoints: latency-svc-tb7pn [186.190367ms]
  I0705 13:51:16.681591 21 service_latency.go:351] Created: latency-svc-h5gfd
  I0705 13:51:16.693007 21 service_latency.go:358] Got endpoints: latency-svc-h5gfd [185.473394ms]
  I0705 13:51:16.706429 21 service_latency.go:351] Created: latency-svc-qxj5p
  I0705 13:51:16.708092 21 service_latency.go:351] Created: latency-svc-7zxkh
  I0705 13:51:16.709212 21 service_latency.go:358] Got endpoints: latency-svc-qxj5p [192.151017ms]
  I0705 13:51:16.719773 21 service_latency.go:358] Got endpoints: latency-svc-7zxkh [192.646804ms]
  I0705 13:51:16.721723 21 service_latency.go:351] Created: latency-svc-9vmlx
  I0705 13:51:16.733476 21 service_latency.go:358] Got endpoints: latency-svc-9vmlx [194.142706ms]
  I0705 13:51:16.735050 21 service_latency.go:351] Created: latency-svc-qsxls
  I0705 13:51:16.746153 21 service_latency.go:358] Got endpoints: latency-svc-qsxls [195.906029ms]
  I0705 13:51:16.746502 21 service_latency.go:351] Created: latency-svc-jpj56
  I0705 13:51:16.753458 21 service_latency.go:358] Got endpoints: latency-svc-jpj56 [193.908919ms]
  I0705 13:51:16.754930 21 service_latency.go:351] Created: latency-svc-cg9wt
  I0705 13:51:16.763310 21 service_latency.go:358] Got endpoints: latency-svc-cg9wt [193.155997ms]
  I0705 13:51:16.763883 21 service_latency.go:351] Created: latency-svc-vmwdf
  I0705 13:51:16.775496 21 service_latency.go:351] Created: latency-svc-4mjrv
  I0705 13:51:16.777617 21 service_latency.go:358] Got endpoints: latency-svc-vmwdf [197.245815ms]
  I0705 13:51:16.783871 21 service_latency.go:358] Got endpoints: latency-svc-4mjrv [184.628914ms]
  I0705 13:51:16.785250 21 service_latency.go:351] Created: latency-svc-ggw45
  I0705 13:51:16.791767 21 service_latency.go:351] Created: latency-svc-wt7qz
  I0705 13:51:16.801914 21 service_latency.go:351] Created: latency-svc-jb6dd
  I0705 13:51:16.807335 21 service_latency.go:351] Created: latency-svc-jl6xv
  I0705 13:51:16.814877 21 service_latency.go:358] Got endpoints: latency-svc-ggw45 [196.230424ms]
  I0705 13:51:16.817969 21 service_latency.go:351] Created: latency-svc-7dl84
  I0705 13:51:16.827328 21 service_latency.go:351] Created: latency-svc-g898d
  I0705 13:51:16.832232 21 service_latency.go:351] Created: latency-svc-w88k8
  I0705 13:51:16.842399 21 service_latency.go:351] Created: latency-svc-pmbdt
  I0705 13:51:16.851695 21 service_latency.go:351] Created: latency-svc-tl9rn
  I0705 13:51:16.858185 21 service_latency.go:351] Created: latency-svc-rml9b
  I0705 13:51:16.864873 21 service_latency.go:358] Got endpoints: latency-svc-wt7qz [238.986373ms]
  I0705 13:51:16.867771 21 service_latency.go:351] Created: latency-svc-7gr97
  I0705 13:51:16.878547 21 service_latency.go:351] Created: latency-svc-2gr6k
  I0705 13:51:16.883704 21 service_latency.go:351] Created: latency-svc-wxpk8
  I0705 13:51:16.894319 21 service_latency.go:351] Created: latency-svc-87gcd
  I0705 13:51:16.899217 21 service_latency.go:351] Created: latency-svc-pnh9t
  I0705 13:51:16.908426 21 service_latency.go:351] Created: latency-svc-zgdsl
  I0705 13:51:16.915723 21 service_latency.go:358] Got endpoints: latency-svc-jb6dd [273.095207ms]
  I0705 13:51:16.916751 21 service_latency.go:351] Created: latency-svc-cbhnj
  I0705 13:51:16.933692 21 service_latency.go:351] Created: latency-svc-hw8dm
  E0705 13:51:16.944019      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:51:16.966141 21 service_latency.go:358] Got endpoints: latency-svc-jl6xv [312.545981ms]
  I0705 13:51:16.983938 21 service_latency.go:351] Created: latency-svc-vsnwz
  I0705 13:51:17.015373 21 service_latency.go:358] Got endpoints: latency-svc-7dl84 [356.159783ms]
  I0705 13:51:17.031509 21 service_latency.go:351] Created: latency-svc-bfx8n
  I0705 13:51:17.076052 21 service_latency.go:358] Got endpoints: latency-svc-g898d [394.473983ms]
  I0705 13:51:17.094491 21 service_latency.go:351] Created: latency-svc-8tj98
  I0705 13:51:17.115913 21 service_latency.go:358] Got endpoints: latency-svc-w88k8 [422.84426ms]
  I0705 13:51:17.133693 21 service_latency.go:351] Created: latency-svc-mgllp
  I0705 13:51:17.162283 21 service_latency.go:358] Got endpoints: latency-svc-pmbdt [453.036737ms]
  I0705 13:51:17.181615 21 service_latency.go:351] Created: latency-svc-t9m7d
  I0705 13:51:17.212926 21 service_latency.go:358] Got endpoints: latency-svc-tl9rn [493.097031ms]
  I0705 13:51:17.234093 21 service_latency.go:351] Created: latency-svc-qff7x
  I0705 13:51:17.262966 21 service_latency.go:358] Got endpoints: latency-svc-rml9b [529.44286ms]
  I0705 13:51:17.281552 21 service_latency.go:351] Created: latency-svc-vdb2b
  I0705 13:51:17.313387 21 service_latency.go:358] Got endpoints: latency-svc-7gr97 [567.187846ms]
  I0705 13:51:17.332733 21 service_latency.go:351] Created: latency-svc-zwdvz
  I0705 13:51:17.363204 21 service_latency.go:358] Got endpoints: latency-svc-2gr6k [609.696619ms]
  I0705 13:51:17.383638 21 service_latency.go:351] Created: latency-svc-r8xxz
  I0705 13:51:17.413563 21 service_latency.go:358] Got endpoints: latency-svc-wxpk8 [650.189772ms]
  I0705 13:51:17.433348 21 service_latency.go:351] Created: latency-svc-wgkgr
  I0705 13:51:17.462798 21 service_latency.go:358] Got endpoints: latency-svc-87gcd [685.127816ms]
  I0705 13:51:17.482225 21 service_latency.go:351] Created: latency-svc-s7dk6
  I0705 13:51:17.512326 21 service_latency.go:358] Got endpoints: latency-svc-pnh9t [728.411933ms]
  I0705 13:51:17.532937 21 service_latency.go:351] Created: latency-svc-sm6mk
  I0705 13:51:17.564501 21 service_latency.go:358] Got endpoints: latency-svc-zgdsl [749.586982ms]
  I0705 13:51:17.583902 21 service_latency.go:351] Created: latency-svc-wvl68
  I0705 13:51:17.613184 21 service_latency.go:358] Got endpoints: latency-svc-cbhnj [748.257519ms]
  I0705 13:51:17.630790 21 service_latency.go:351] Created: latency-svc-st7zf
  I0705 13:51:17.662772 21 service_latency.go:358] Got endpoints: latency-svc-hw8dm [747.003487ms]
  I0705 13:51:17.681921 21 service_latency.go:351] Created: latency-svc-m9fgk
  I0705 13:51:17.713823 21 service_latency.go:358] Got endpoints: latency-svc-vsnwz [747.63258ms]
  I0705 13:51:17.732329 21 service_latency.go:351] Created: latency-svc-4zml9
  I0705 13:51:17.762919 21 service_latency.go:358] Got endpoints: latency-svc-bfx8n [747.490413ms]
  I0705 13:51:17.782818 21 service_latency.go:351] Created: latency-svc-xk58n
  I0705 13:51:17.813297 21 service_latency.go:358] Got endpoints: latency-svc-8tj98 [737.164018ms]
  I0705 13:51:17.834956 21 service_latency.go:351] Created: latency-svc-r46sn
  I0705 13:51:17.863584 21 service_latency.go:358] Got endpoints: latency-svc-mgllp [747.614834ms]
  I0705 13:51:17.883421 21 service_latency.go:351] Created: latency-svc-9lvdf
  I0705 13:51:17.913099 21 service_latency.go:358] Got endpoints: latency-svc-t9m7d [750.758297ms]
  I0705 13:51:17.930991 21 service_latency.go:351] Created: latency-svc-g7m85
  E0705 13:51:17.944383      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:51:17.963404 21 service_latency.go:358] Got endpoints: latency-svc-qff7x [750.415661ms]
  I0705 13:51:17.982222 21 service_latency.go:351] Created: latency-svc-qc4hf
  I0705 13:51:18.013318 21 service_latency.go:358] Got endpoints: latency-svc-vdb2b [750.294799ms]
  I0705 13:51:18.031996 21 service_latency.go:351] Created: latency-svc-q6nzr
  I0705 13:51:18.064616 21 service_latency.go:358] Got endpoints: latency-svc-zwdvz [751.147673ms]
  I0705 13:51:18.080764 21 service_latency.go:351] Created: latency-svc-6jk57
  I0705 13:51:18.114577 21 service_latency.go:358] Got endpoints: latency-svc-r8xxz [751.314286ms]
  I0705 13:51:18.133374 21 service_latency.go:351] Created: latency-svc-fkzv4
  I0705 13:51:18.164385 21 service_latency.go:358] Got endpoints: latency-svc-wgkgr [750.765008ms]
  I0705 13:51:18.182357 21 service_latency.go:351] Created: latency-svc-hlsfn
  I0705 13:51:18.219930 21 service_latency.go:358] Got endpoints: latency-svc-s7dk6 [757.065051ms]
  I0705 13:51:18.236700 21 service_latency.go:351] Created: latency-svc-8j2mq
  I0705 13:51:18.265627 21 service_latency.go:358] Got endpoints: latency-svc-sm6mk [753.125468ms]
  I0705 13:51:18.285309 21 service_latency.go:351] Created: latency-svc-hhgtx
  I0705 13:51:18.316475 21 service_latency.go:358] Got endpoints: latency-svc-wvl68 [751.788584ms]
  I0705 13:51:18.334824 21 service_latency.go:351] Created: latency-svc-fdxd9
  I0705 13:51:18.366262 21 service_latency.go:358] Got endpoints: latency-svc-st7zf [753.022404ms]
  I0705 13:51:18.382843 21 service_latency.go:351] Created: latency-svc-42bxj
  I0705 13:51:18.415173 21 service_latency.go:358] Got endpoints: latency-svc-m9fgk [752.342514ms]
  I0705 13:51:18.433477 21 service_latency.go:351] Created: latency-svc-p94rq
  I0705 13:51:18.465398 21 service_latency.go:358] Got endpoints: latency-svc-4zml9 [751.509868ms]
  I0705 13:51:18.484433 21 service_latency.go:351] Created: latency-svc-sggs8
  I0705 13:51:18.515514 21 service_latency.go:358] Got endpoints: latency-svc-xk58n [752.539041ms]
  I0705 13:51:18.532048 21 service_latency.go:351] Created: latency-svc-8vghh
  I0705 13:51:18.565180 21 service_latency.go:358] Got endpoints: latency-svc-r46sn [751.726178ms]
  I0705 13:51:18.581864 21 service_latency.go:351] Created: latency-svc-fsfwz
  I0705 13:51:18.615457 21 service_latency.go:358] Got endpoints: latency-svc-9lvdf [751.818062ms]
  I0705 13:51:18.631508 21 service_latency.go:351] Created: latency-svc-8gj2k
  I0705 13:51:18.665747 21 service_latency.go:358] Got endpoints: latency-svc-g7m85 [752.595907ms]
  I0705 13:51:18.683489 21 service_latency.go:351] Created: latency-svc-5d7b6
  I0705 13:51:18.714667 21 service_latency.go:358] Got endpoints: latency-svc-qc4hf [751.212256ms]
  I0705 13:51:18.732377 21 service_latency.go:351] Created: latency-svc-j7zj5
  I0705 13:51:18.765289 21 service_latency.go:358] Got endpoints: latency-svc-q6nzr [751.899679ms]
  I0705 13:51:18.781371 21 service_latency.go:351] Created: latency-svc-s46nz
  I0705 13:51:18.814747 21 service_latency.go:358] Got endpoints: latency-svc-6jk57 [750.074811ms]
  I0705 13:51:18.832537 21 service_latency.go:351] Created: latency-svc-r9vr7
  I0705 13:51:18.865539 21 service_latency.go:358] Got endpoints: latency-svc-fkzv4 [750.880697ms]
  I0705 13:51:18.882763 21 service_latency.go:351] Created: latency-svc-hzl4b
  I0705 13:51:18.914978 21 service_latency.go:358] Got endpoints: latency-svc-hlsfn [750.536966ms]
  I0705 13:51:18.931185 21 service_latency.go:351] Created: latency-svc-pv8bj
  E0705 13:51:18.944867      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:51:18.964705 21 service_latency.go:358] Got endpoints: latency-svc-8j2mq [744.721952ms]
  I0705 13:51:18.980893 21 service_latency.go:351] Created: latency-svc-p8rtv
  I0705 13:51:19.014995 21 service_latency.go:358] Got endpoints: latency-svc-hhgtx [749.307646ms]
  I0705 13:51:19.031252 21 service_latency.go:351] Created: latency-svc-shc2g
  I0705 13:51:19.063500 21 service_latency.go:358] Got endpoints: latency-svc-fdxd9 [746.788065ms]
  I0705 13:51:19.081852 21 service_latency.go:351] Created: latency-svc-mg6cb
  I0705 13:51:19.113101 21 service_latency.go:358] Got endpoints: latency-svc-42bxj [746.781509ms]
  I0705 13:51:19.130972 21 service_latency.go:351] Created: latency-svc-8g48d
  I0705 13:51:19.162807 21 service_latency.go:358] Got endpoints: latency-svc-p94rq [747.569974ms]
  I0705 13:51:19.188836 21 service_latency.go:351] Created: latency-svc-2nw7f
  I0705 13:51:19.214446 21 service_latency.go:358] Got endpoints: latency-svc-sggs8 [748.955868ms]
  I0705 13:51:19.233114 21 service_latency.go:351] Created: latency-svc-c9w2x
  I0705 13:51:19.264692 21 service_latency.go:358] Got endpoints: latency-svc-8vghh [749.123672ms]
  I0705 13:51:19.280973 21 service_latency.go:351] Created: latency-svc-js5jn
  I0705 13:51:19.314211 21 service_latency.go:358] Got endpoints: latency-svc-fsfwz [748.96753ms]
  I0705 13:51:19.334990 21 service_latency.go:351] Created: latency-svc-2vfbg
  I0705 13:51:19.366816 21 service_latency.go:358] Got endpoints: latency-svc-8gj2k [751.292995ms]
  I0705 13:51:19.386584 21 service_latency.go:351] Created: latency-svc-xvtkd
  I0705 13:51:19.413451 21 service_latency.go:358] Got endpoints: latency-svc-5d7b6 [747.511775ms]
  I0705 13:51:19.434570 21 service_latency.go:351] Created: latency-svc-pkq7v
  I0705 13:51:19.466668 21 service_latency.go:358] Got endpoints: latency-svc-j7zj5 [751.659203ms]
  I0705 13:51:19.483042 21 service_latency.go:351] Created: latency-svc-gmtlz
  I0705 13:51:19.515034 21 service_latency.go:358] Got endpoints: latency-svc-s46nz [749.686803ms]
  I0705 13:51:19.532578 21 service_latency.go:351] Created: latency-svc-8bfkn
  I0705 13:51:19.564846 21 service_latency.go:358] Got endpoints: latency-svc-r9vr7 [749.928687ms]
  I0705 13:51:19.581698 21 service_latency.go:351] Created: latency-svc-h6znt
  I0705 13:51:19.614842 21 service_latency.go:358] Got endpoints: latency-svc-hzl4b [749.245974ms]
  I0705 13:51:19.632520 21 service_latency.go:351] Created: latency-svc-2g4kz
  I0705 13:51:19.665646 21 service_latency.go:358] Got endpoints: latency-svc-pv8bj [750.613454ms]
  I0705 13:51:19.682698 21 service_latency.go:351] Created: latency-svc-2lqwb
  I0705 13:51:19.715131 21 service_latency.go:358] Got endpoints: latency-svc-p8rtv [750.364189ms]
  I0705 13:51:19.732005 21 service_latency.go:351] Created: latency-svc-s2wc2
  I0705 13:51:19.764672 21 service_latency.go:358] Got endpoints: latency-svc-shc2g [749.441553ms]
  I0705 13:51:19.783933 21 service_latency.go:351] Created: latency-svc-wk89m
  I0705 13:51:19.816078 21 service_latency.go:358] Got endpoints: latency-svc-mg6cb [752.503069ms]
  I0705 13:51:19.832420 21 service_latency.go:351] Created: latency-svc-4rqr5
  I0705 13:51:19.865341 21 service_latency.go:358] Got endpoints: latency-svc-8g48d [752.17971ms]
  I0705 13:51:19.882161 21 service_latency.go:351] Created: latency-svc-4p4l2
  I0705 13:51:19.914709 21 service_latency.go:358] Got endpoints: latency-svc-2nw7f [751.599739ms]
  I0705 13:51:19.933044 21 service_latency.go:351] Created: latency-svc-cx8b2
  E0705 13:51:19.945667      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:51:19.967117 21 service_latency.go:358] Got endpoints: latency-svc-c9w2x [752.587672ms]
  I0705 13:51:19.983347 21 service_latency.go:351] Created: latency-svc-r2kkr
  I0705 13:51:20.016479 21 service_latency.go:358] Got endpoints: latency-svc-js5jn [751.736954ms]
  I0705 13:51:20.032889 21 service_latency.go:351] Created: latency-svc-bt6dm
  I0705 13:51:20.065087 21 service_latency.go:358] Got endpoints: latency-svc-2vfbg [750.024416ms]
  I0705 13:51:20.083719 21 service_latency.go:351] Created: latency-svc-gk8g4
  I0705 13:51:20.115114 21 service_latency.go:358] Got endpoints: latency-svc-xvtkd [748.244638ms]
  I0705 13:51:20.131158 21 service_latency.go:351] Created: latency-svc-pghzh
  I0705 13:51:20.165307 21 service_latency.go:358] Got endpoints: latency-svc-pkq7v [750.95907ms]
  I0705 13:51:20.182051 21 service_latency.go:351] Created: latency-svc-5mlqq
  I0705 13:51:20.214995 21 service_latency.go:358] Got endpoints: latency-svc-gmtlz [748.152834ms]
  I0705 13:51:20.232721 21 service_latency.go:351] Created: latency-svc-qkpfh
  I0705 13:51:20.265140 21 service_latency.go:358] Got endpoints: latency-svc-8bfkn [749.95315ms]
  I0705 13:51:20.282437 21 service_latency.go:351] Created: latency-svc-b4td4
  I0705 13:51:20.316041 21 service_latency.go:358] Got endpoints: latency-svc-h6znt [751.140284ms]
  I0705 13:51:20.334825 21 service_latency.go:351] Created: latency-svc-b8sbt
  I0705 13:51:20.364361 21 service_latency.go:358] Got endpoints: latency-svc-2g4kz [749.299697ms]
  I0705 13:51:20.382193 21 service_latency.go:351] Created: latency-svc-9z2jh
  I0705 13:51:20.416513 21 service_latency.go:358] Got endpoints: latency-svc-2lqwb [750.812157ms]
  I0705 13:51:20.435968 21 service_latency.go:351] Created: latency-svc-qtctg
  I0705 13:51:20.465612 21 service_latency.go:358] Got endpoints: latency-svc-s2wc2 [750.372426ms]
  I0705 13:51:20.482245 21 service_latency.go:351] Created: latency-svc-6787z
  I0705 13:51:20.514146 21 service_latency.go:358] Got endpoints: latency-svc-wk89m [749.225063ms]
  I0705 13:51:20.531674 21 service_latency.go:351] Created: latency-svc-kftwk
  I0705 13:51:20.565462 21 service_latency.go:358] Got endpoints: latency-svc-4rqr5 [749.322914ms]
  I0705 13:51:20.582859 21 service_latency.go:351] Created: latency-svc-mmztl
  I0705 13:51:20.615180 21 service_latency.go:358] Got endpoints: latency-svc-4p4l2 [749.780807ms]
  I0705 13:51:20.631818 21 service_latency.go:351] Created: latency-svc-d82bn
  I0705 13:51:20.664840 21 service_latency.go:358] Got endpoints: latency-svc-cx8b2 [750.06238ms]
  I0705 13:51:20.682483 21 service_latency.go:351] Created: latency-svc-rfhq5
  I0705 13:51:20.713392 21 service_latency.go:358] Got endpoints: latency-svc-r2kkr [746.211843ms]
  I0705 13:51:20.731982 21 service_latency.go:351] Created: latency-svc-4n8x8
  I0705 13:51:20.762709 21 service_latency.go:358] Got endpoints: latency-svc-bt6dm [746.169341ms]
  I0705 13:51:20.781871 21 service_latency.go:351] Created: latency-svc-rc7wh
  I0705 13:51:20.812834 21 service_latency.go:358] Got endpoints: latency-svc-gk8g4 [747.686283ms]
  I0705 13:51:20.832289 21 service_latency.go:351] Created: latency-svc-k87tt
  I0705 13:51:20.863048 21 service_latency.go:358] Got endpoints: latency-svc-pghzh [747.881606ms]
  I0705 13:51:20.881666 21 service_latency.go:351] Created: latency-svc-chpx7
  I0705 13:51:20.913791 21 service_latency.go:358] Got endpoints: latency-svc-5mlqq [748.428056ms]
  I0705 13:51:20.932494 21 service_latency.go:351] Created: latency-svc-zmkmc
  E0705 13:51:20.946186      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:51:20.962333 21 service_latency.go:358] Got endpoints: latency-svc-qkpfh [747.286774ms]
  I0705 13:51:20.981401 21 service_latency.go:351] Created: latency-svc-2576x
  I0705 13:51:21.013866 21 service_latency.go:358] Got endpoints: latency-svc-b4td4 [748.642993ms]
  I0705 13:51:21.032661 21 service_latency.go:351] Created: latency-svc-qxksq
  I0705 13:51:21.063413 21 service_latency.go:358] Got endpoints: latency-svc-b8sbt [747.299346ms]
  I0705 13:51:21.082829 21 service_latency.go:351] Created: latency-svc-rs4bh
  I0705 13:51:21.112391 21 service_latency.go:358] Got endpoints: latency-svc-9z2jh [747.965858ms]
  I0705 13:51:21.133307 21 service_latency.go:351] Created: latency-svc-bc8jj
  I0705 13:51:21.163669 21 service_latency.go:358] Got endpoints: latency-svc-qtctg [747.099368ms]
  I0705 13:51:21.183817 21 service_latency.go:351] Created: latency-svc-57kc2
  I0705 13:51:21.212722 21 service_latency.go:358] Got endpoints: latency-svc-6787z [747.057588ms]
  I0705 13:51:21.231526 21 service_latency.go:351] Created: latency-svc-jtzz9
  I0705 13:51:21.264261 21 service_latency.go:358] Got endpoints: latency-svc-kftwk [750.011326ms]
  I0705 13:51:21.284278 21 service_latency.go:351] Created: latency-svc-c6zxk
  I0705 13:51:21.315922 21 service_latency.go:358] Got endpoints: latency-svc-mmztl [750.120241ms]
  I0705 13:51:21.334741 21 service_latency.go:351] Created: latency-svc-w72d5
  I0705 13:51:21.365983 21 service_latency.go:358] Got endpoints: latency-svc-d82bn [750.67539ms]
  I0705 13:51:21.383213 21 service_latency.go:351] Created: latency-svc-qsvdm
  I0705 13:51:21.414815 21 service_latency.go:358] Got endpoints: latency-svc-rfhq5 [749.910923ms]
  I0705 13:51:21.432984 21 service_latency.go:351] Created: latency-svc-kkckm
  I0705 13:51:21.465443 21 service_latency.go:358] Got endpoints: latency-svc-4n8x8 [751.962059ms]
  I0705 13:51:21.483211 21 service_latency.go:351] Created: latency-svc-nqtbq
  I0705 13:51:21.514711 21 service_latency.go:358] Got endpoints: latency-svc-rc7wh [751.916809ms]
  I0705 13:51:21.531550 21 service_latency.go:351] Created: latency-svc-zdxnq
  I0705 13:51:21.564188 21 service_latency.go:358] Got endpoints: latency-svc-k87tt [751.037132ms]
  I0705 13:51:21.582551 21 service_latency.go:351] Created: latency-svc-qsg9z
  I0705 13:51:21.614686 21 service_latency.go:358] Got endpoints: latency-svc-chpx7 [751.554565ms]
  I0705 13:51:21.632251 21 service_latency.go:351] Created: latency-svc-5jlxr
  I0705 13:51:21.665671 21 service_latency.go:358] Got endpoints: latency-svc-zmkmc [751.744399ms]
  I0705 13:51:21.682124 21 service_latency.go:351] Created: latency-svc-k9pd6
  I0705 13:51:21.715259 21 service_latency.go:358] Got endpoints: latency-svc-2576x [752.658815ms]
  I0705 13:51:21.733101 21 service_latency.go:351] Created: latency-svc-hrfwn
  I0705 13:51:21.766139 21 service_latency.go:358] Got endpoints: latency-svc-qxksq [752.217609ms]
  I0705 13:51:21.782602 21 service_latency.go:351] Created: latency-svc-dhvh6
  I0705 13:51:21.815367 21 service_latency.go:358] Got endpoints: latency-svc-rs4bh [751.889266ms]
  I0705 13:51:21.831828 21 service_latency.go:351] Created: latency-svc-jlw4g
  I0705 13:51:21.865858 21 service_latency.go:358] Got endpoints: latency-svc-bc8jj [753.373468ms]
  I0705 13:51:21.883781 21 service_latency.go:351] Created: latency-svc-blzm5
  I0705 13:51:21.916906 21 service_latency.go:358] Got endpoints: latency-svc-57kc2 [753.185984ms]
  I0705 13:51:21.934414 21 service_latency.go:351] Created: latency-svc-pdpb5
  E0705 13:51:21.946682      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:51:21.966492 21 service_latency.go:358] Got endpoints: latency-svc-jtzz9 [753.703169ms]
  I0705 13:51:21.982535 21 service_latency.go:351] Created: latency-svc-5jmkj
  I0705 13:51:22.016425 21 service_latency.go:358] Got endpoints: latency-svc-c6zxk [752.026747ms]
  I0705 13:51:22.033990 21 service_latency.go:351] Created: latency-svc-hsklg
  I0705 13:51:22.064505 21 service_latency.go:358] Got endpoints: latency-svc-w72d5 [748.247129ms]
  I0705 13:51:22.083263 21 service_latency.go:351] Created: latency-svc-mrbzc
  I0705 13:51:22.113772 21 service_latency.go:358] Got endpoints: latency-svc-qsvdm [747.717186ms]
  I0705 13:51:22.132271 21 service_latency.go:351] Created: latency-svc-27957
  I0705 13:51:22.164872 21 service_latency.go:358] Got endpoints: latency-svc-kkckm [749.904393ms]
  I0705 13:51:22.183410 21 service_latency.go:351] Created: latency-svc-nbx22
  I0705 13:51:22.214034 21 service_latency.go:358] Got endpoints: latency-svc-nqtbq [748.540783ms]
  I0705 13:51:22.231833 21 service_latency.go:351] Created: latency-svc-sjvng
  I0705 13:51:22.264644 21 service_latency.go:358] Got endpoints: latency-svc-zdxnq [749.874209ms]
  I0705 13:51:22.282044 21 service_latency.go:351] Created: latency-svc-xfzvh
  I0705 13:51:22.315531 21 service_latency.go:358] Got endpoints: latency-svc-qsg9z [751.289177ms]
  I0705 13:51:22.335310 21 service_latency.go:351] Created: latency-svc-zz8r8
  I0705 13:51:22.364751 21 service_latency.go:358] Got endpoints: latency-svc-5jlxr [749.965955ms]
  I0705 13:51:22.382290 21 service_latency.go:351] Created: latency-svc-fscnp
  I0705 13:51:22.414264 21 service_latency.go:358] Got endpoints: latency-svc-k9pd6 [748.511006ms]
  I0705 13:51:22.431109 21 service_latency.go:351] Created: latency-svc-ntrgb
  I0705 13:51:22.470278 21 service_latency.go:358] Got endpoints: latency-svc-hrfwn [754.882662ms]
  I0705 13:51:22.493653 21 service_latency.go:351] Created: latency-svc-ds8sx
  I0705 13:51:22.513952 21 service_latency.go:358] Got endpoints: latency-svc-dhvh6 [747.732048ms]
  I0705 13:51:22.536773 21 service_latency.go:351] Created: latency-svc-t5ndj
  I0705 13:51:22.562271 21 service_latency.go:358] Got endpoints: latency-svc-jlw4g [746.78718ms]
  I0705 13:51:22.580844 21 service_latency.go:351] Created: latency-svc-p6sxj
  I0705 13:51:22.613939 21 service_latency.go:358] Got endpoints: latency-svc-blzm5 [747.983205ms]
  I0705 13:51:22.634667 21 service_latency.go:351] Created: latency-svc-2gp7x
  I0705 13:51:22.663594 21 service_latency.go:358] Got endpoints: latency-svc-pdpb5 [746.625633ms]
  I0705 13:51:22.682386 21 service_latency.go:351] Created: latency-svc-vvxnl
  I0705 13:51:22.712533 21 service_latency.go:358] Got endpoints: latency-svc-5jmkj [745.991736ms]
  I0705 13:51:22.732503 21 service_latency.go:351] Created: latency-svc-99l2f
  I0705 13:51:22.763444 21 service_latency.go:358] Got endpoints: latency-svc-hsklg [746.962558ms]
  I0705 13:51:22.783538 21 service_latency.go:351] Created: latency-svc-tf5np
  I0705 13:51:22.813013 21 service_latency.go:358] Got endpoints: latency-svc-mrbzc [748.456319ms]
  I0705 13:51:22.831489 21 service_latency.go:351] Created: latency-svc-xtwwx
  I0705 13:51:22.862794 21 service_latency.go:358] Got endpoints: latency-svc-27957 [748.963449ms]
  I0705 13:51:22.882367 21 service_latency.go:351] Created: latency-svc-rl5zm
  I0705 13:51:22.914135 21 service_latency.go:358] Got endpoints: latency-svc-nbx22 [749.207356ms]
  I0705 13:51:22.934768 21 service_latency.go:351] Created: latency-svc-6b9st
  E0705 13:51:22.947026      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:51:22.963627 21 service_latency.go:358] Got endpoints: latency-svc-sjvng [749.490138ms]
  I0705 13:51:22.983954 21 service_latency.go:351] Created: latency-svc-7gkqn
  I0705 13:51:23.013340 21 service_latency.go:358] Got endpoints: latency-svc-xfzvh [748.64071ms]
  I0705 13:51:23.035115 21 service_latency.go:351] Created: latency-svc-t4gzt
  I0705 13:51:23.063510 21 service_latency.go:358] Got endpoints: latency-svc-zz8r8 [747.894999ms]
  I0705 13:51:23.081833 21 service_latency.go:351] Created: latency-svc-x4q4d
  I0705 13:51:23.114363 21 service_latency.go:358] Got endpoints: latency-svc-fscnp [749.513377ms]
  I0705 13:51:23.132683 21 service_latency.go:351] Created: latency-svc-w6gzz
  I0705 13:51:23.164336 21 service_latency.go:358] Got endpoints: latency-svc-ntrgb [749.906169ms]
  I0705 13:51:23.179790 21 service_latency.go:351] Created: latency-svc-4xwm9
  I0705 13:51:23.214352 21 service_latency.go:358] Got endpoints: latency-svc-ds8sx [743.990787ms]
  I0705 13:51:23.233706 21 service_latency.go:351] Created: latency-svc-8wbt5
  I0705 13:51:23.264492 21 service_latency.go:358] Got endpoints: latency-svc-t5ndj [750.448696ms]
  I0705 13:51:23.282252 21 service_latency.go:351] Created: latency-svc-bl45w
  I0705 13:51:23.316087 21 service_latency.go:358] Got endpoints: latency-svc-p6sxj [753.468919ms]
  I0705 13:51:23.334698 21 service_latency.go:351] Created: latency-svc-4llmj
  I0705 13:51:23.366707 21 service_latency.go:358] Got endpoints: latency-svc-2gp7x [752.711763ms]
  I0705 13:51:23.385193 21 service_latency.go:351] Created: latency-svc-nt6c7
  I0705 13:51:23.416181 21 service_latency.go:358] Got endpoints: latency-svc-vvxnl [752.531507ms]
  I0705 13:51:23.433527 21 service_latency.go:351] Created: latency-svc-5dn69
  I0705 13:51:23.464319 21 service_latency.go:358] Got endpoints: latency-svc-99l2f [751.731336ms]
  I0705 13:51:23.480022 21 service_latency.go:351] Created: latency-svc-xln8t
  I0705 13:51:23.515446 21 service_latency.go:358] Got endpoints: latency-svc-tf5np [751.942613ms]
  I0705 13:51:23.533496 21 service_latency.go:351] Created: latency-svc-j27gn
  I0705 13:51:23.564634 21 service_latency.go:358] Got endpoints: latency-svc-xtwwx [751.511634ms]
  I0705 13:51:23.581114 21 service_latency.go:351] Created: latency-svc-d9n6p
  I0705 13:51:23.614394 21 service_latency.go:358] Got endpoints: latency-svc-rl5zm [751.527193ms]
  I0705 13:51:23.631838 21 service_latency.go:351] Created: latency-svc-l9bjx
  I0705 13:51:23.666306 21 service_latency.go:358] Got endpoints: latency-svc-6b9st [752.118799ms]
  I0705 13:51:23.683588 21 service_latency.go:351] Created: latency-svc-nxdds
  I0705 13:51:23.714842 21 service_latency.go:358] Got endpoints: latency-svc-7gkqn [751.162754ms]
  I0705 13:51:23.731514 21 service_latency.go:351] Created: latency-svc-z6dbr
  I0705 13:51:23.765315 21 service_latency.go:358] Got endpoints: latency-svc-t4gzt [751.919637ms]
  I0705 13:51:23.783050 21 service_latency.go:351] Created: latency-svc-9xmkh
  I0705 13:51:23.816235 21 service_latency.go:358] Got endpoints: latency-svc-x4q4d [752.666875ms]
  I0705 13:51:23.835090 21 service_latency.go:351] Created: latency-svc-jlldk
  I0705 13:51:23.866155 21 service_latency.go:358] Got endpoints: latency-svc-w6gzz [751.714083ms]
  I0705 13:51:23.882616 21 service_latency.go:351] Created: latency-svc-xwwtq
  I0705 13:51:23.915135 21 service_latency.go:358] Got endpoints: latency-svc-4xwm9 [750.740513ms]
  I0705 13:51:23.932422 21 service_latency.go:351] Created: latency-svc-gb4xq
  E0705 13:51:23.947638      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:51:23.967239 21 service_latency.go:358] Got endpoints: latency-svc-8wbt5 [752.829624ms]
  I0705 13:51:23.985284 21 service_latency.go:351] Created: latency-svc-x6892
  I0705 13:51:24.017113 21 service_latency.go:358] Got endpoints: latency-svc-bl45w [752.561065ms]
  I0705 13:51:24.034128 21 service_latency.go:351] Created: latency-svc-484kz
  I0705 13:51:24.064231 21 service_latency.go:358] Got endpoints: latency-svc-4llmj [747.347296ms]
  I0705 13:51:24.082117 21 service_latency.go:351] Created: latency-svc-qzf6k
  I0705 13:51:24.115235 21 service_latency.go:358] Got endpoints: latency-svc-nt6c7 [748.380811ms]
  I0705 13:51:24.135170 21 service_latency.go:351] Created: latency-svc-mnj7j
  I0705 13:51:24.165559 21 service_latency.go:358] Got endpoints: latency-svc-5dn69 [749.230965ms]
  I0705 13:51:24.214191 21 service_latency.go:358] Got endpoints: latency-svc-xln8t [749.804604ms]
  I0705 13:51:24.264320 21 service_latency.go:358] Got endpoints: latency-svc-j27gn [748.826004ms]
  I0705 13:51:24.314844 21 service_latency.go:358] Got endpoints: latency-svc-d9n6p [750.134728ms]
  I0705 13:51:24.363101 21 service_latency.go:358] Got endpoints: latency-svc-l9bjx [748.520867ms]
  I0705 13:51:24.415302 21 service_latency.go:358] Got endpoints: latency-svc-nxdds [748.949766ms]
  I0705 13:51:24.463001 21 service_latency.go:358] Got endpoints: latency-svc-z6dbr [748.083775ms]
  I0705 13:51:24.515418 21 service_latency.go:358] Got endpoints: latency-svc-9xmkh [750.017288ms]
  I0705 13:51:24.565793 21 service_latency.go:358] Got endpoints: latency-svc-jlldk [749.493177ms]
  I0705 13:51:24.612931 21 service_latency.go:358] Got endpoints: latency-svc-xwwtq [746.716851ms]
  I0705 13:51:24.664589 21 service_latency.go:358] Got endpoints: latency-svc-gb4xq [749.40117ms]
  I0705 13:51:24.716497 21 service_latency.go:358] Got endpoints: latency-svc-x6892 [749.200613ms]
  I0705 13:51:24.764424 21 service_latency.go:358] Got endpoints: latency-svc-484kz [747.232735ms]
  I0705 13:51:24.812413 21 service_latency.go:358] Got endpoints: latency-svc-qzf6k [748.07671ms]
  I0705 13:51:24.866626 21 service_latency.go:358] Got endpoints: latency-svc-mnj7j [751.335378ms]
  I0705 13:51:24.866821 21 service_latency.go:114] Latencies: [29.454302ms 40.362471ms 51.193081ms 61.28168ms 71.146738ms 81.355769ms 91.932983ms 102.081805ms 119.828195ms 120.312646ms 133.369362ms 147.770665ms 153.909065ms 162.645707ms 162.987977ms 163.868864ms 164.099873ms 164.399282ms 164.509134ms 164.75705ms 170.752718ms 172.635465ms 174.462919ms 180.872801ms 181.132243ms 181.461617ms 183.166673ms 184.628914ms 184.825996ms 185.473394ms 186.190367ms 192.151017ms 192.646804ms 193.155997ms 193.908919ms 194.142706ms 195.906029ms 196.230424ms 197.245815ms 238.986373ms 273.095207ms 312.545981ms 356.159783ms 394.473983ms 422.84426ms 453.036737ms 493.097031ms 529.44286ms 567.187846ms 609.696619ms 650.189772ms 685.127816ms 728.411933ms 737.164018ms 743.990787ms 744.721952ms 745.991736ms 746.169341ms 746.211843ms 746.625633ms 746.716851ms 746.781509ms 746.78718ms 746.788065ms 746.962558ms 747.003487ms 747.057588ms 747.099368ms 747.232735ms 747.286774ms 747.299346ms 747.347296ms 747.490413ms 747.511775ms 747.569974ms 747.614834ms 747.63258ms 747.686283ms 747.717186ms 747.732048ms 747.881606ms 747.894999ms 747.965858ms 747.983205ms 748.07671ms 748.083775ms 748.152834ms 748.244638ms 748.247129ms 748.257519ms 748.380811ms 748.428056ms 748.456319ms 748.511006ms 748.520867ms 748.540783ms 748.64071ms 748.642993ms 748.826004ms 748.949766ms 748.955868ms 748.963449ms 748.96753ms 749.123672ms 749.200613ms 749.207356ms 749.225063ms 749.230965ms 749.245974ms 749.299697ms 749.307646ms 749.322914ms 749.40117ms 749.441553ms 749.490138ms 749.493177ms 749.513377ms 749.586982ms 749.686803ms 749.780807ms 749.804604ms 749.874209ms 749.904393ms 749.906169ms 749.910923ms 749.928687ms 749.95315ms 749.965955ms 750.011326ms 750.017288ms 750.024416ms 750.06238ms 750.074811ms 750.120241ms 750.134728ms 750.294799ms 750.364189ms 750.372426ms 750.415661ms 750.448696ms 750.536966ms 750.613454ms 750.67539ms 750.740513ms 750.758297ms 750.765008ms 750.812157ms 750.880697ms 750.95907ms 751.037132ms 751.140284ms 751.147673ms 751.162754ms 751.212256ms 751.289177ms 751.292995ms 751.314286ms 751.335378ms 751.509868ms 751.511634ms 751.527193ms 751.554565ms 751.599739ms 751.659203ms 751.714083ms 751.726178ms 751.731336ms 751.736954ms 751.744399ms 751.788584ms 751.818062ms 751.889266ms 751.899679ms 751.916809ms 751.919637ms 751.942613ms 751.962059ms 752.026747ms 752.118799ms 752.17971ms 752.217609ms 752.342514ms 752.503069ms 752.531507ms 752.539041ms 752.561065ms 752.587672ms 752.595907ms 752.658815ms 752.666875ms 752.711763ms 752.829624ms 753.022404ms 753.125468ms 753.185984ms 753.373468ms 753.468919ms 753.703169ms 754.882662ms 757.065051ms]
  I0705 13:51:24.866908 21 service_latency.go:118] 50 %ile: 748.955868ms
  I0705 13:51:24.866928 21 service_latency.go:119] 90 %ile: 752.217609ms
  I0705 13:51:24.866935 21 service_latency.go:120] 99 %ile: 754.882662ms
  I0705 13:51:24.866942 21 service_latency.go:121] Total sample count: 200
  I0705 13:51:24.867098 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-971" for this suite. @ 07/05/25 13:51:24.874
• [10.742 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 07/05/25 13:51:24.883
  I0705 13:51:24.883384 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename field-validation @ 07/05/25 13:51:24.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:51:24.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:51:24.9
  I0705 13:51:24.903734 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  E0705 13:51:24.947950      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:51:25.948650      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:51:26.948886      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:51:27.435903      21 warnings.go:110] "Warning: unknown field \"alpha\""
  I0705 13:51:27.435924      21 warnings.go:110] "Warning: unknown field \"beta\""
  I0705 13:51:27.435934      21 warnings.go:110] "Warning: unknown field \"delta\""
  I0705 13:51:27.435941      21 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0705 13:51:27.435947      21 warnings.go:110] "Warning: unknown field \"gamma\""
  E0705 13:51:27.949250      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:51:27.988535 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6239" for this suite. @ 07/05/25 13:51:27.994
• [3.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 07/05/25 13:51:28.004
  I0705 13:51:28.004956 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename webhook @ 07/05/25 13:51:28.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:51:28.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:51:28.021
  STEP: Setting up server cert @ 07/05/25 13:51:28.041
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/05/25 13:51:28.298
  STEP: Deploying the webhook pod @ 07/05/25 13:51:28.306
  STEP: Wait for the deployment to be ready @ 07/05/25 13:51:28.321
  I0705 13:51:28.338923 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0705 13:51:28.949449      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:51:29.950472      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/05/25 13:51:30.356
  STEP: Verifying the service has paired with the endpoint @ 07/05/25 13:51:30.38
  E0705 13:51:30.950588      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:51:31.380611 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0705 13:51:31.387305 21 util.go:426] Waiting for at least 1 EndpointSlice to exist
  E0705 13:51:31.951001      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:51:32.381258 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0705 13:51:32.386878 21 util.go:426] Waiting for at least 1 EndpointSlice to exist
  E0705 13:51:32.951356      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:51:33.380654 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0705 13:51:33.385853 21 util.go:426] Waiting for at least 1 EndpointSlice to exist
  E0705 13:51:33.952296      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:51:34.381466 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0705 13:51:34.388400 21 util.go:426] Waiting for at least 1 EndpointSlice to exist
  E0705 13:51:34.952560      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:51:35.381442 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0705 13:51:35.386350 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-966-crds.webhook.example.com via the AdmissionRegistration API @ 07/05/25 13:51:35.897
  I0705 13:51:35.921574 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  E0705 13:51:35.952858      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:51:36.040153 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0705 13:51:36.141547 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0705 13:51:36.237559 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0705 13:51:36.338513 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0705 13:51:36.441236 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0705 13:51:36.538551 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0705 13:51:36.637311 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0705 13:51:36.739730 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0705 13:51:36.837537 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0705 13:51:36.938171 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  E0705 13:51:36.953448      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:51:37.039125 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0705 13:51:37.137622 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0705 13:51:37.237844 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0705 13:51:37.339873 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0705 13:51:37.437635 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0705 13:51:37.537803 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0705 13:51:37.638380 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0705 13:51:37.739445 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0705 13:51:37.839875 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0705 13:51:37.938318 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  E0705 13:51:37.953528      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:51:38.038790 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0705 13:51:38.139922 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0705 13:51:38.238118 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0705 13:51:38.337673 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0705 13:51:38.437712 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0705 13:51:38.537341 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0705 13:51:38.638451 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0705 13:51:38.737313 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0705 13:51:38.837859 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0705 13:51:38.940382 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  E0705 13:51:38.953693      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:51:39.037621 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0705 13:51:39.137323 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0705 13:51:39.240286 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  STEP: Creating a custom resource that should be mutated by the webhook @ 07/05/25 13:51:39.329
  I0705 13:51:39.921114 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2673" for this suite. @ 07/05/25 13:51:39.927
  STEP: Destroying namespace "webhook-markers-6694" for this suite. @ 07/05/25 13:51:39.937
• [11.944 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:264
  STEP: Creating a kubernetes client @ 07/05/25 13:51:39.949
  I0705 13:51:39.949124 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename dns @ 07/05/25 13:51:39.949
  E0705 13:51:39.953848      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:51:39.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:51:39.966
  STEP: Creating a test headless service @ 07/05/25 13:51:39.969
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-9589.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-9589.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 07/05/25 13:51:39.975
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-9589.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-9589.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 07/05/25 13:51:39.975
  STEP: creating a pod to probe DNS @ 07/05/25 13:51:39.975
  STEP: submitting the pod to kubernetes @ 07/05/25 13:51:39.975
  E0705 13:51:40.954043      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:51:41.954172      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/05/25 13:51:42
  STEP: looking for the results for each expected name from probers @ 07/05/25 13:51:42.005
  I0705 13:51:42.029299 21 dns_common.go:546] DNS probes using dns-9589/dns-test-f2c8b708-1da4-40a8-b06a-dac9f4da1d59 succeeded

  STEP: deleting the pod @ 07/05/25 13:51:42.029
  STEP: deleting the test headless service @ 07/05/25 13:51:42.047
  I0705 13:51:42.060379 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9589" for this suite. @ 07/05/25 13:51:42.066
• [2.126 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:71
  STEP: Creating a kubernetes client @ 07/05/25 13:51:42.074
  I0705 13:51:42.074678 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename replication-controller @ 07/05/25 13:51:42.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:51:42.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:51:42.092
  STEP: Creating replication controller my-hostname-basic-e5c73d66-92ea-4526-9e67-0688fad854b2 @ 07/05/25 13:51:42.095
  I0705 13:51:42.109131 21 resource.go:81] Pod name my-hostname-basic-e5c73d66-92ea-4526-9e67-0688fad854b2: Found 0 pods out of 1
  E0705 13:51:42.955236      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:51:43.955398      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:51:44.956502      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:51:45.956578      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:51:46.956783      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:51:47.115656 21 resource.go:81] Pod name my-hostname-basic-e5c73d66-92ea-4526-9e67-0688fad854b2: Found 1 pods out of 1
  I0705 13:51:47.115694 21 rc.go:509] Ensuring all pods for ReplicationController "my-hostname-basic-e5c73d66-92ea-4526-9e67-0688fad854b2" are running
  I0705 13:51:47.120223 21 rc.go:525] Pod "my-hostname-basic-e5c73d66-92ea-4526-9e67-0688fad854b2-pkgk7" is running and ready(conditions: [{Type:PodReadyToStartContainers ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-05 13:51:43 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-05 13:51:42 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-05 13:51:43 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-05 13:51:43 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-05 13:51:42 +0000 UTC Reason: Message:}])
  I0705 13:51:47.120249 21 rc.go:533] Trying to dial the pod
  STEP: trying to dial each unique pod @ 07/05/25 13:51:47.12
  I0705 13:51:47.226399 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6000" for this suite. @ 07/05/25 13:51:47.231
• [5.166 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:477
  STEP: Creating a kubernetes client @ 07/05/25 13:51:47.24
  I0705 13:51:47.240547 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename sched-preemption @ 07/05/25 13:51:47.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:51:47.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:51:47.255
  I0705 13:51:47.274862 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0705 13:51:47.957707      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:51:48.957784      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:51:49.957947      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:51:50.958208      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:51:51.959249      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:51:52.959354      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:51:53.959489      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:51:54.960454      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:51:55.960567      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:51:56.960642      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:51:57.960761      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:51:58.961302      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:51:59.961422      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:00.962306      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:01.962801      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:02.963330      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:03.964398      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:04.964511      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:05.964611      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:06.964834      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:07.964941      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:08.965177      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:09.965783      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:10.966027      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:11.966227      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:12.966271      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:13.966401      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:14.966464      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:15.966814      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:16.967029      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:17.967221      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:18.967497      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:19.967627      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:20.967834      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:21.967975      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:22.968196      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:23.968274      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:24.968935      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:25.969043      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:26.969307      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:27.969383      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:28.969565      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:29.969630      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:30.969707      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:31.969834      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:32.969905      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:33.970242      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:34.970934      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:35.971077      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:36.971311      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:37.971414      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:38.971613      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:39.971958      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:40.972375      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:41.972513      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:42.973313      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:43.973994      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:44.974988      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:45.975937      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:46.976096      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:52:47.281578 21 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 07/05/25 13:52:47.286
  STEP: Adding a custom resource @ 07/05/25 13:52:47.286
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 07/05/25 13:52:47.296
  I0705 13:52:47.307284 21 preemption.go:511] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 07/05/25 13:52:47.307
  E0705 13:52:47.976244      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:48.976311      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 07/05/25 13:52:49.32
  I0705 13:52:49.328771 21 preemption.go:529] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 07/05/25 13:52:49.328
  E0705 13:52:49.976895      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:50.977144      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 07/05/25 13:52:51.342
  I0705 13:52:51.348050 21 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I0705 13:52:51.866324 21 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 07/05/25 13:52:51.896
  STEP: Removing a custom resource @ 07/05/25 13:52:51.909
  STEP: Removing a custom resource @ 07/05/25 13:52:51.919
  I0705 13:52:51.929802 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-206" for this suite. @ 07/05/25 13:52:51.934
• [64.702 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 07/05/25 13:52:51.943
  I0705 13:52:51.943221 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename pods @ 07/05/25 13:52:51.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:52:51.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:52:51.96
  STEP: creating the pod @ 07/05/25 13:52:51.963
  STEP: submitting the pod to kubernetes @ 07/05/25 13:52:51.963
  I0705 13:52:51.973658      21 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  E0705 13:52:51.977904      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:52.978163      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:53.978384      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 07/05/25 13:52:53.989
  STEP: updating the pod @ 07/05/25 13:52:53.997
  I0705 13:52:54.512334 21 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-1f990e43-c933-40a9-8810-90fbefb42b69"
  E0705 13:52:54.978536      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:55.979493      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:56.979596      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:57.980309      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:52:58.532425 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5716" for this suite. @ 07/05/25 13:52:58.538
• [6.605 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 07/05/25 13:52:58.548
  I0705 13:52:58.548655 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename secrets @ 07/05/25 13:52:58.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:52:58.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:52:58.565
  I0705 13:52:58.616841 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7663" for this suite. @ 07/05/25 13:52:58.639
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 07/05/25 13:52:58.649
  I0705 13:52:58.649553 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename fake-node @ 07/05/25 13:52:58.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:52:58.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:52:58.672
  STEP: Create "e2e-fake-node-6jn5l" @ 07/05/25 13:52:58.677
  STEP: Getting "e2e-fake-node-6jn5l" @ 07/05/25 13:52:58.683
  STEP: Patching "e2e-fake-node-6jn5l" @ 07/05/25 13:52:58.69
  STEP: Listing nodes with LabelSelector "e2e-fake-node-6jn5l=patched" @ 07/05/25 13:52:58.711
  STEP: Updating "e2e-fake-node-6jn5l" @ 07/05/25 13:52:58.715
  STEP: Delete "e2e-fake-node-6jn5l" @ 07/05/25 13:52:58.726
  STEP: Confirm deletion of "e2e-fake-node-6jn5l" @ 07/05/25 13:52:58.736
  I0705 13:52:58.741046 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-4604" for this suite. @ 07/05/25 13:52:58.745
• [0.104 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 07/05/25 13:52:58.753
  I0705 13:52:58.753974 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename cronjob @ 07/05/25 13:52:58.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:52:58.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:52:58.769
  STEP: Creating a suspended cronjob @ 07/05/25 13:52:58.772
  STEP: Ensuring no jobs are scheduled @ 07/05/25 13:52:58.777
  E0705 13:52:58.980425      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:52:59.980777      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:00.981301      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:01.982313      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:02.982499      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:03.983416      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:04.984117      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:05.984225      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:06.984582      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:07.984816      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:08.984913      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:09.985192      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:10.985766      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:11.985881      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:12.986842      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:13.986999      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:14.987233      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:15.987384      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:16.987807      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:17.988038      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:18.988191      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:19.988319      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:20.989164      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:21.989279      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:22.989580      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:23.989688      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:24.990218      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:25.990287      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:26.991295      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:27.991409      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:28.992207      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:29.993212      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:30.993536      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:31.993626      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:32.994595      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:33.994710      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:34.995533      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:35.995773      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:36.996206      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:37.996321      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:38.996922      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:39.997098      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:40.997718      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:41.997844      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:42.998453      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:43.998586      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:44.998717      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:45.998867      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:46.998920      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:47.999088      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:48.999599      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:49.999718      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:50.999748      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:52.000698      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:53.001634      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:54.002293      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:55.003298      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:56.003395      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:57.004135      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:58.004370      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:53:59.004763      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:00.004925      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:01.005049      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:02.005312      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:03.006236      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:04.006462      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:05.007022      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:06.007205      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:07.007528      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:08.007705      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:09.008596      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:10.009587      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:11.010228      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:12.010315      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:13.010767      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:14.010985      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:15.011142      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:16.011261      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:17.011861      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:18.012322      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:19.013302      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:20.014091      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:21.014245      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:22.014377      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:23.014462      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:24.014616      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:25.014730      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:26.014887      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:27.014991      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:28.015183      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:29.015418      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:30.016059      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:31.016307      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:32.016669      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:33.016815      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:34.017101      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:35.017235      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:36.017319      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:37.017526      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:38.017737      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:39.017986      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:40.018539      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:41.018603      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:42.018714      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:43.018827      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:44.019482      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:45.019521      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:46.019616      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:47.019683      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:48.019814      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:49.019911      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:50.020915      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:51.020992      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:52.021239      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:53.022302      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:54.022417      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:55.023039      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:56.023222      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:57.023329      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:58.024235      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:54:59.024581      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:00.025051      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:01.025258      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:02.025373      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:03.025640      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:04.025775      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:05.025908      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:06.026005      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:07.026284      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:08.026433      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:09.027038      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:10.027220      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:11.027418      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:12.027525      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:13.027729      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:14.027869      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:15.027944      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:16.028120      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:17.028335      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:18.029222      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:19.029382      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:20.030016      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:21.030232      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:22.030312      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:23.031281      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:24.032271      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:25.033047      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:26.033882      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:27.034316      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:28.034425      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:29.034632      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:30.035023      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:31.035177      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:32.035291      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:33.035485      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:34.035695      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:35.035945      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:36.036703      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:37.036906      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:38.037041      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:39.037275      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:40.038287      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:41.038480      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:42.038623      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:43.038736      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:44.038794      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:45.038918      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:46.039032      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:47.039166      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:48.039434      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:49.040279      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:50.041019      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:51.041198      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:52.042287      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:53.043273      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:54.044317      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:55.044879      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:56.045901      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:57.046124      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:58.046693      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:55:59.046892      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:00.047808      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:01.048005      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:02.048207      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:03.049164      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:04.050143      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:05.050215      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:06.050319      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:07.051273      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:08.051382      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:09.052273      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:10.053042      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:11.053185      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:12.054296      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:13.054509      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:14.055350      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:15.055537      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:16.055743      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:17.055876      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:18.056226      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:19.056341      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:20.056832      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:21.056971      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:22.057049      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:23.057276      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:24.057406      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:25.057524      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:26.057674      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:27.057873      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:28.058211      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:29.058418      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:30.059108      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:31.059231      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:32.059302      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:33.060288      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:34.061138      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:35.061204      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:36.061528      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:37.062267      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:38.063281      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:39.063375      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:40.064041      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:41.064263      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:42.064373      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:43.064607      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:44.064832      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:45.064983      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:46.065131      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:47.065212      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:48.065356      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:49.065575      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:50.066382      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:51.066461      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:52.067467      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:53.067672      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:54.067738      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:55.068674      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:56.068873      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:57.068980      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:58.069050      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:56:59.069386      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:00.070105      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:01.070205      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:02.071023      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:03.071248      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:04.071974      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:05.072104      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:06.072686      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:07.072876      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:08.073108      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:09.073295      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:10.073382      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:11.073593      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:12.074411      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:13.074612      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:14.075635      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:15.076681      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:16.076814      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:17.077029      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:18.077794      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:19.077892      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:20.078038      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:21.078212      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:22.079044      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:23.079244      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:24.079942      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:25.079992      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:26.080116      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:27.080201      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:28.080857      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:29.081272      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:30.081818      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:31.081936      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:32.082153      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:33.082212      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:34.083265      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:35.083409      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:36.083851      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:37.084058      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:38.085100      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:39.085219      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:40.086084      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:41.086300      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:42.086432      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:43.086672      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:44.086981      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:45.087094      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:46.088026      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:47.088223      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:48.088355      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:49.088586      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:50.089161      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:51.089279      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:52.090148      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:53.090234      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:54.091060      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:55.091579      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:56.091727      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:57.092303      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:57:58.093027      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 07/05/25 13:57:58.777
  STEP: Removing cronjob @ 07/05/25 13:57:58.783
  I0705 13:57:58.793240 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5309" for this suite. @ 07/05/25 13:57:58.798
• [300.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 07/05/25 13:57:58.808
  I0705 13:57:58.808537 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename events @ 07/05/25 13:57:58.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:57:58.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:57:58.823
  STEP: Create set of events @ 07/05/25 13:57:58.826
  I0705 13:57:58.836378 21 core_events.go:198] created test-event-1
  I0705 13:57:58.841753 21 core_events.go:198] created test-event-2
  I0705 13:57:58.847689 21 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 07/05/25 13:57:58.847
  STEP: delete collection of events @ 07/05/25 13:57:58.852
  I0705 13:57:58.852412 21 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 07/05/25 13:57:58.884
  I0705 13:57:58.884751 21 core_events.go:230] requesting list of events to confirm quantity
  I0705 13:57:58.889602 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5209" for this suite. @ 07/05/25 13:57:58.899
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:640
  STEP: Creating a kubernetes client @ 07/05/25 13:57:58.909
  I0705 13:57:58.909126 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename webhook @ 07/05/25 13:57:58.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:57:58.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:57:58.924
  STEP: Setting up server cert @ 07/05/25 13:57:58.944
  E0705 13:57:59.093466      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/05/25 13:57:59.184
  STEP: Deploying the webhook pod @ 07/05/25 13:57:59.192
  STEP: Wait for the deployment to be ready @ 07/05/25 13:57:59.208
  I0705 13:57:59.223367 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0705 13:58:00.094424      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:58:01.094534      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/05/25 13:58:01.239
  STEP: Verifying the service has paired with the endpoint @ 07/05/25 13:58:01.262
  E0705 13:58:02.095319      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:58:02.263523 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 07/05/25 13:58:02.347
  STEP: Creating a configMap that should be mutated @ 07/05/25 13:58:02.359
  STEP: Deleting the collection of validation webhooks @ 07/05/25 13:58:02.387
  STEP: Creating a configMap that should not be mutated @ 07/05/25 13:58:02.463
  I0705 13:58:02.534086 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8628" for this suite. @ 07/05/25 13:58:02.543
  STEP: Destroying namespace "webhook-markers-1182" for this suite. @ 07/05/25 13:58:02.553
• [3.652 seconds]
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 07/05/25 13:58:02.561
  I0705 13:58:02.561579 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/05/25 13:58:02.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:58:02.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:58:02.576
  I0705 13:58:02.582219 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-4313" for this suite. @ 07/05/25 13:58:02.643
• [0.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 07/05/25 13:58:02.653
  I0705 13:58:02.653194 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename downward-api @ 07/05/25 13:58:02.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:58:02.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:58:02.669
  STEP: Creating a pod to test downward API volume plugin @ 07/05/25 13:58:02.672
  E0705 13:58:03.096303      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:58:04.096397      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:58:05.097450      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:58:06.097646      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/05/25 13:58:06.7
  I0705 13:58:06.706198 21 output.go:207] Trying to get logs from node ip-172-31-22-171 pod downwardapi-volume-2dce4791-a173-4520-b9e8-3d951c69eef9 container client-container: <nil>
  STEP: delete the pod @ 07/05/25 13:58:06.723
  I0705 13:58:06.746519 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9159" for this suite. @ 07/05/25 13:58:06.753
• [4.109 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 07/05/25 13:58:06.762
  I0705 13:58:06.762101 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/05/25 13:58:06.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:58:06.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:58:06.779
  I0705 13:58:06.782285 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  E0705 13:58:07.098546      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:58:08.099386      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:58:09.099468      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:58:09.826701 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-9724" for this suite. @ 07/05/25 13:58:09.833
• [3.081 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 07/05/25 13:58:09.843
  I0705 13:58:09.843315 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-724498336
  STEP: Building a namespace api object, basename deployment @ 07/05/25 13:58:09.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/05/25 13:58:09.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/05/25 13:58:09.859
  I0705 13:58:09.862568 21 deployment.go:798] Creating deployment "test-recreate-deployment"
  I0705 13:58:09.869655 21 deployment.go:804] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0705 13:58:09.877802 21 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  E0705 13:58:10.100146      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0705 13:58:11.100212      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0705 13:58:11.891596 21 deployment.go:808] Waiting deployment "test-recreate-deployment" to complete
  I0705 13:58:11.895450 21 deployment.go:813] Triggering a new rollout for deployment "test-recreate-deployment"
  I0705 13:58:11.907218 21 deployment.go:314] Updating deployment test-recreate-deployment
  I0705 13:58:11.907259 21 deployment.go:820] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0705 13:58:12.001179 21 deployment.go:632] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4740",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bff252e0-5419-48d8-9e13-dbfd0e221e40",
      ResourceVersion: (string) (len=5) "53022",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887320689,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887320691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887320691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887320691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887320691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887320691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887320689,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0705 13:58:12.007603 21 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4740",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "adcae9cf-203f-4fc7-b142-7d9b81cd795b",
      ResourceVersion: (string) (len=5) "53018",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887320691,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "bff252e0-5419-48d8-9e13-dbfd0e221e40",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887320691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 66 66 32 35 32  65 30 2d 35 34 31 39 2d  |\"bff252e0-5419-|
              00000120  34 38 64 38 2d 39 65 31  33 2d 64 62 66 64 30 65  |48d8-9e13-dbfd0e|
              00000130  32 32 31 65 34 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |221e40\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887320691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b",
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0705 13:58:12.008104 21 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0705 13:58:12.008298 21 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4740",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3ea931fe-ed01-4400-96b2-4253486bebf2",
      ResourceVersion: (string) (len=5) "53010",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887320689,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "bff252e0-5419-48d8-9e13-dbfd0e221e40",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887320691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 66 66 32 35 32  65 30 2d 35 34 31 39 2d  |\"bff252e0-5419-|
              00000120  34 38 64 38 2d 39 65 31  33 2d 64 62 66 64 30 65  |48d8-9e13-dbfd0e|
              00000130  32 32 31 65 34 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |221e40\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887320691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0705 13:58:12.014040 21 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-l2lkd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-l2lkd",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=15) "deployment-4740",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8bc033f6-23ac-4b01-a22b-beae454120c8",
      ResourceVersion: (string) (len=5) "53023",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887320691,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "adcae9cf-203f-4fc7-b142-7d9b81cd795b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887320691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 64  63 61 65 39 63 66 2d 32  |d\":\"adcae9cf-2|
              00000090  30 33 66 2d 34 66 63 37  2d 62 31 34 32 2d 37 64  |03f-4fc7-b142-7d|
              000000a0  39 62 38 31 63 64 37 39  35 62 5c 22 7d 22 3a 7b  |9b81cd795b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887320691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bqdwl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bqdwl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-171",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887320691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887320691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887320691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887320691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887320691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.171",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.171"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887320691,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bqdwl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0705 13:58:12.015232 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4740" for this suite. @ 07/05/25 13:58:12.021
• [2.187 seconds]
------------------------------
SSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0705 13:58:12.030454 21 suites.go:34] Running AfterSuite actions on node 1
  I0705 13:58:12.030473 21 util.go:563] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
[ReportAfterSuite] PASSED [0.031 seconds]
------------------------------

Ran 419 of 6731 Specs in 6471.956 seconds
SUCCESS! -- 419 Passed | 0 Failed | 0 Pending | 6312 Skipped
PASS

Ginkgo ran 1 suite in 1h47m52.986363797s
Test Suite Passed
