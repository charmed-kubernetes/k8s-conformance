  I0712 12:20:19.310157      20 e2e.go:109] Starting e2e run "950aee42-c137-4164-a80d-ad487f4e83d0" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1752322818 - will randomize all specs

Will run 419 of 6731 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0712 12:20:19.615978 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  I0712 12:20:19.617010 20 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0712 12:20:19.639140 20 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0712 12:20:19.642930 20 e2e.go:153] 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I0712 12:20:19.642958 20 e2e.go:245] e2e test version: v1.33.2
  I0712 12:20:19.643848 20 e2e.go:254] kube-apiserver version: v1.33.2
  I0712 12:20:19.643923 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  I0712 12:20:19.648410 20 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.033 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:340
  STEP: Creating a kubernetes client @ 07/12/25 12:20:19.831
  I0712 12:20:19.831758 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename statefulset @ 07/12/25 12:20:19.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:20:19.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:20:19.854
  STEP: Creating service test in namespace statefulset-1257 @ 07/12/25 12:20:19.857
  STEP: Creating a new StatefulSet @ 07/12/25 12:20:19.864
  I0712 12:20:19.878368 20 wait.go:44] Found 0 stateful pods, waiting for 3
  I0712 12:20:29.879841 20 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0712 12:20:29.879886 20 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0712 12:20:29.879893 20 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 07/12/25 12:20:29.888
  I0712 12:20:29.898032 20 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 07/12/25 12:20:29.898
  STEP: Not applying an update when the partition is greater than the number of replicas @ 07/12/25 12:20:39.905
  STEP: Performing a canary update @ 07/12/25 12:20:39.905
  I0712 12:20:39.913541 20 statefulset.go:2542] Updating stateful set ss2
  I0712 12:20:39.923732 20 wait.go:74] Waiting for Pod statefulset-1257/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 07/12/25 12:20:49.921
  I0712 12:20:49.958414 20 wait.go:44] Found 2 stateful pods, waiting for 3
  I0712 12:20:59.957894 20 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0712 12:20:59.957928 20 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0712 12:20:59.957938 20 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 07/12/25 12:20:59.963
  I0712 12:20:59.972747 20 statefulset.go:2542] Updating stateful set ss2
  I0712 12:20:59.981507 20 wait.go:74] Waiting for Pod statefulset-1257/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0712 12:21:09.991030 20 statefulset.go:2542] Updating stateful set ss2
  I0712 12:21:09.999218 20 wait.go:56] Waiting for StatefulSet statefulset-1257/ss2 to complete update
  I0712 12:21:09.999252 20 wait.go:63] Waiting for Pod statefulset-1257/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0712 12:21:19.999047 20 statefulset.go:138] Deleting all statefulset in ns statefulset-1257
  I0712 12:21:20.002234 20 rest.go:153] Scaling statefulset ss2 to 0
  I0712 12:21:30.017571 20 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0712 12:21:30.020715 20 rest.go:91] Deleting statefulset ss2
  I0712 12:21:30.033442 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1257" for this suite. @ 07/12/25 12:21:30.036
• [70.210 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 07/12/25 12:21:30.041
  I0712 12:21:30.041605 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename cronjob @ 07/12/25 12:21:30.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:21:30.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:21:30.056
  STEP: Creating a ForbidConcurrent cronjob @ 07/12/25 12:21:30.058
  STEP: Ensuring a job is scheduled @ 07/12/25 12:21:30.062
  STEP: Ensuring exactly one is scheduled @ 07/12/25 12:22:02.067
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 07/12/25 12:22:02.07
  STEP: Ensuring no more jobs are scheduled @ 07/12/25 12:22:02.074
  STEP: Removing cronjob @ 07/12/25 12:22:02.079
  I0712 12:22:02.086375 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5887" for this suite. @ 07/12/25 12:22:02.09
• [32.054 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 07/12/25 12:22:02.095
  I0712 12:22:02.095961 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename webhook @ 07/12/25 12:22:02.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:22:02.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:22:02.115
  STEP: Setting up server cert @ 07/12/25 12:22:02.135
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/12/25 12:22:02.354
  STEP: Deploying the webhook pod @ 07/12/25 12:22:02.36
  STEP: Wait for the deployment to be ready @ 07/12/25 12:22:02.371
  I0712 12:22:02.380401 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0712 12:22:04.392618 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 12, 12, 22, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 12, 22, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 12, 12, 22, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 12, 22, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 07/12/25 12:22:06.397
  STEP: Verifying the service has paired with the endpoint @ 07/12/25 12:22:06.411
  I0712 12:22:07.412325 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 07/12/25 12:22:07.416
  STEP: create a namespace for the webhook @ 07/12/25 12:22:07.429
  STEP: create a configmap should be unconditionally rejected by the webhook @ 07/12/25 12:22:07.449
  I0712 12:22:07.530983 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2797" for this suite. @ 07/12/25 12:22:07.534
  STEP: Destroying namespace "webhook-markers-1518" for this suite. @ 07/12/25 12:22:07.54
  STEP: Destroying namespace "fail-closed-namespace-4577" for this suite. @ 07/12/25 12:22:07.549
• [5.460 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 07/12/25 12:22:07.556
  I0712 12:22:07.556942 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename downward-api @ 07/12/25 12:22:07.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:22:07.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:22:07.571
  STEP: Creating a pod to test downward api env vars @ 07/12/25 12:22:07.573
  STEP: Saw pod success @ 07/12/25 12:22:11.596
  I0712 12:22:11.599889 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod downward-api-ff11feb0-4e92-4d33-abcd-9b7fad4af34d container dapi-container: <nil>
  STEP: delete the pod @ 07/12/25 12:22:11.615
  I0712 12:22:11.633759 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4207" for this suite. @ 07/12/25 12:22:11.637
• [4.087 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 07/12/25 12:22:11.643
  I0712 12:22:11.643501 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename webhook @ 07/12/25 12:22:11.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:22:11.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:22:11.658
  STEP: Setting up server cert @ 07/12/25 12:22:11.678
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/12/25 12:22:12.114
  STEP: Deploying the webhook pod @ 07/12/25 12:22:12.12
  STEP: Wait for the deployment to be ready @ 07/12/25 12:22:12.133
  I0712 12:22:12.140071 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/12/25 12:22:14.151
  STEP: Verifying the service has paired with the endpoint @ 07/12/25 12:22:14.167
  I0712 12:22:15.168726 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 07/12/25 12:22:15.173
  STEP: verifying the mutating webhook match conditions @ 07/12/25 12:22:15.186
  STEP: updating the mutating webhook match conditions @ 07/12/25 12:22:15.189
  STEP: verifying the mutating webhook match conditions @ 07/12/25 12:22:15.198
  I0712 12:22:15.251455 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3112" for this suite. @ 07/12/25 12:22:15.254
  STEP: Destroying namespace "webhook-markers-2634" for this suite. @ 07/12/25 12:22:15.262
• [3.625 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 07/12/25 12:22:15.268
  I0712 12:22:15.268949 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename watch @ 07/12/25 12:22:15.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:22:15.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:22:15.283
  STEP: creating a new configmap @ 07/12/25 12:22:15.285
  STEP: modifying the configmap once @ 07/12/25 12:22:15.288
  STEP: modifying the configmap a second time @ 07/12/25 12:22:15.293
  STEP: deleting the configmap @ 07/12/25 12:22:15.3
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 07/12/25 12:22:15.304
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 07/12/25 12:22:15.305
  I0712 12:22:15.305969 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-375  bbe15db9-d040-4db5-9216-08eab4c7bed3 4927 0 2025-07-12 12:22:15 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-07-12 12:22:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0712 12:22:15.306068 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-375  bbe15db9-d040-4db5-9216-08eab4c7bed3 4928 0 2025-07-12 12:22:15 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-07-12 12:22:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0712 12:22:15.306129 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-375" for this suite. @ 07/12/25 12:22:15.355
• [0.093 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 07/12/25 12:22:15.362
  I0712 12:22:15.362177 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename containers @ 07/12/25 12:22:15.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:22:15.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:22:15.378
  STEP: Creating a pod to test override all @ 07/12/25 12:22:15.38
  STEP: Saw pod success @ 07/12/25 12:22:19.4
  I0712 12:22:19.407348 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod client-containers-e9a4e897-5d02-495f-b61b-6f810663186e container agnhost-container: <nil>
  STEP: delete the pod @ 07/12/25 12:22:19.414
  I0712 12:22:19.434147 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-496" for this suite. @ 07/12/25 12:22:19.438
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 07/12/25 12:22:19.446
  I0712 12:22:19.446550 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename watch @ 07/12/25 12:22:19.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:22:19.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:22:19.459
  STEP: creating a watch on configmaps @ 07/12/25 12:22:19.461
  STEP: creating a new configmap @ 07/12/25 12:22:19.462
  STEP: modifying the configmap once @ 07/12/25 12:22:19.466
  STEP: closing the watch once it receives two notifications @ 07/12/25 12:22:19.472
  I0712 12:22:19.472813 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8655  c3ca3ffd-98a9-42c5-a8b5-e6786f42d7f7 4982 0 2025-07-12 12:22:19 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-07-12 12:22:19 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0712 12:22:19.474251 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8655  c3ca3ffd-98a9-42c5-a8b5-e6786f42d7f7 4983 0 2025-07-12 12:22:19 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-07-12 12:22:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 07/12/25 12:22:19.474
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 07/12/25 12:22:19.481
  STEP: deleting the configmap @ 07/12/25 12:22:19.482
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 07/12/25 12:22:19.487
  I0712 12:22:19.487763 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8655  c3ca3ffd-98a9-42c5-a8b5-e6786f42d7f7 4984 0 2025-07-12 12:22:19 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-07-12 12:22:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0712 12:22:19.487842 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8655  c3ca3ffd-98a9-42c5-a8b5-e6786f42d7f7 4985 0 2025-07-12 12:22:19 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-07-12 12:22:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0712 12:22:19.487908 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8655" for this suite. @ 07/12/25 12:22:19.539
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 07/12/25 12:22:19.546
  I0712 12:22:19.546514 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename var-expansion @ 07/12/25 12:22:19.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:22:19.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:22:19.563
  I0712 12:22:21.585528 20 delete.go:62] Deleting pod "var-expansion-b0c7128e-b5f7-493e-894a-40d8deef858c" in namespace "var-expansion-3216"
  I0712 12:22:21.595012 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-b0c7128e-b5f7-493e-894a-40d8deef858c" to be fully deleted
  I0712 12:22:23.605579 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3216" for this suite. @ 07/12/25 12:22:23.609
• [4.069 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 07/12/25 12:22:23.616
  I0712 12:22:23.616614 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename webhook @ 07/12/25 12:22:23.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:22:23.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:22:23.632
  STEP: Setting up server cert @ 07/12/25 12:22:23.652
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/12/25 12:22:23.867
  STEP: Deploying the webhook pod @ 07/12/25 12:22:23.873
  STEP: Wait for the deployment to be ready @ 07/12/25 12:22:23.885
  I0712 12:22:23.894740 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/12/25 12:22:25.906
  STEP: Verifying the service has paired with the endpoint @ 07/12/25 12:22:25.92
  I0712 12:22:26.921329 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 07/12/25 12:22:26.925
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 07/12/25 12:22:26.941
  STEP: Creating a dummy validating-webhook-configuration object @ 07/12/25 12:22:26.951
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 07/12/25 12:22:26.967
  STEP: Creating a dummy mutating-webhook-configuration object @ 07/12/25 12:22:26.973
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 07/12/25 12:22:26.981
  I0712 12:22:27.044602 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4140" for this suite. @ 07/12/25 12:22:27.047
  STEP: Destroying namespace "webhook-markers-210" for this suite. @ 07/12/25 12:22:27.052
• [3.443 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 07/12/25 12:22:27.059
  I0712 12:22:27.059865 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename field-validation @ 07/12/25 12:22:27.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:22:27.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:22:27.074
  STEP: apply creating a deployment @ 07/12/25 12:22:27.076
  I0712 12:22:27.087439 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2423" for this suite. @ 07/12/25 12:22:27.148
• [0.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 07/12/25 12:22:27.156
  I0712 12:22:27.156673 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename security-context @ 07/12/25 12:22:27.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:22:27.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:22:27.173
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 07/12/25 12:22:27.175
  STEP: Saw pod success @ 07/12/25 12:22:29.193
  I0712 12:22:29.196138 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod security-context-69bfdbd1-589b-455d-9a94-017b42672e5d container test-container: <nil>
  STEP: delete the pod @ 07/12/25 12:22:29.203
  I0712 12:22:29.220297 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-2766" for this suite. @ 07/12/25 12:22:29.223
• [2.075 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:488
  STEP: Creating a kubernetes client @ 07/12/25 12:22:29.231
  I0712 12:22:29.231458 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename gc @ 07/12/25 12:22:29.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:22:29.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:22:29.242
  STEP: create the deployment @ 07/12/25 12:22:29.245
  I0712 12:22:29.250810      20 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 07/12/25 12:22:29.25
  STEP: delete the deployment @ 07/12/25 12:22:29.756
  STEP: wait for all rs to be garbage collected @ 07/12/25 12:22:29.762
  STEP: expected 0 pods, got 2 pods @ 07/12/25 12:22:29.78
  STEP: Gathering metrics @ 07/12/25 12:22:30.272
  W0712 12:22:30.276067      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0712 12:22:30.276104 20 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0712 12:22:30.276254 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8165" for this suite. @ 07/12/25 12:22:30.28
• [1.058 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:168
  STEP: Creating a kubernetes client @ 07/12/25 12:22:30.289
  I0712 12:22:30.289970 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename resourcequota @ 07/12/25 12:22:30.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:22:30.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:22:30.303
  STEP: Discovering how many secrets are in namespace by default @ 07/12/25 12:22:30.305
  STEP: Counting existing ResourceQuota @ 07/12/25 12:22:35.309
  STEP: Creating a ResourceQuota @ 07/12/25 12:22:40.315
  STEP: Ensuring resource quota status is calculated @ 07/12/25 12:22:40.32
  STEP: Creating a Secret @ 07/12/25 12:22:42.327
  STEP: Ensuring resource quota status captures secret creation @ 07/12/25 12:22:42.338
  STEP: Deleting a secret @ 07/12/25 12:22:44.342
  STEP: Ensuring resource quota status released usage @ 07/12/25 12:22:44.347
  I0712 12:22:46.352654 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4166" for this suite. @ 07/12/25 12:22:46.356
• [16.072 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 07/12/25 12:22:46.361
  I0712 12:22:46.361744 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename chunking @ 07/12/25 12:22:46.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:22:46.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:22:46.376
  STEP: creating a large number of resources @ 07/12/25 12:22:46.378
  STEP: retrieving those results in paged fashion several times @ 07/12/25 12:23:04.068
  I0712 12:23:04.118358 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDE2XHUwMDAwIn0
  I0712 12:23:04.166945 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  I0712 12:23:04.217389 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  I0712 12:23:04.266665 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  I0712 12:23:04.317604 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  I0712 12:23:04.367451 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  I0712 12:23:04.416328 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  I0712 12:23:04.466835 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  I0712 12:23:04.517557 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  I0712 12:23:04.567177 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  I0712 12:23:04.616656 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  I0712 12:23:04.667263 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  I0712 12:23:04.715745 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  I0712 12:23:04.766773 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  I0712 12:23:04.817285 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  I0712 12:23:04.865948 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  I0712 12:23:04.917278 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  I0712 12:23:04.966433 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  I0712 12:23:05.016338 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  I0712 12:23:05.066947 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  I0712 12:23:05.117841 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  I0712 12:23:05.166758 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  I0712 12:23:05.217553 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  I0712 12:23:05.267286 20 chunking.go:98] Retrieved 9/17 results with rv 5790 and continue 
  I0712 12:23:05.319254 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDE2XHUwMDAwIn0
  I0712 12:23:05.366874 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  I0712 12:23:05.416782 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  I0712 12:23:05.467168 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  I0712 12:23:05.516278 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  I0712 12:23:05.566240 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  I0712 12:23:05.616007 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  I0712 12:23:05.666054 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  I0712 12:23:05.715741 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  I0712 12:23:05.767153 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  I0712 12:23:05.816054 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  I0712 12:23:05.869312 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  I0712 12:23:05.916973 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  I0712 12:23:05.967096 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  I0712 12:23:06.016615 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  I0712 12:23:06.066921 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  I0712 12:23:06.117688 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  I0712 12:23:06.167257 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  I0712 12:23:06.217005 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  I0712 12:23:06.266394 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  I0712 12:23:06.316234 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  I0712 12:23:06.366577 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  I0712 12:23:06.417558 20 chunking.go:98] Retrieved 17/17 results with rv 5790 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  I0712 12:23:06.466501 20 chunking.go:98] Retrieved 9/17 results with rv 5790 and continue 
  I0712 12:23:06.519623 20 chunking.go:98] Retrieved 17/17 results with rv 5794 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDE2XHUwMDAwIn0
  I0712 12:23:06.566269 20 chunking.go:98] Retrieved 17/17 results with rv 5794 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  I0712 12:23:06.616089 20 chunking.go:98] Retrieved 17/17 results with rv 5794 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  I0712 12:23:06.666006 20 chunking.go:98] Retrieved 17/17 results with rv 5794 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  I0712 12:23:06.717015 20 chunking.go:98] Retrieved 17/17 results with rv 5794 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  I0712 12:23:06.767181 20 chunking.go:98] Retrieved 17/17 results with rv 5794 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  I0712 12:23:06.816426 20 chunking.go:98] Retrieved 17/17 results with rv 5794 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  I0712 12:23:06.866399 20 chunking.go:98] Retrieved 17/17 results with rv 5794 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  I0712 12:23:06.916656 20 chunking.go:98] Retrieved 17/17 results with rv 5794 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  I0712 12:23:06.967165 20 chunking.go:98] Retrieved 17/17 results with rv 5794 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  I0712 12:23:07.015988 20 chunking.go:98] Retrieved 17/17 results with rv 5794 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  I0712 12:23:07.067739 20 chunking.go:98] Retrieved 17/17 results with rv 5794 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  I0712 12:23:07.117166 20 chunking.go:98] Retrieved 17/17 results with rv 5794 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  I0712 12:23:07.165668 20 chunking.go:98] Retrieved 17/17 results with rv 5794 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  I0712 12:23:07.216990 20 chunking.go:98] Retrieved 17/17 results with rv 5794 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  I0712 12:23:07.267554 20 chunking.go:98] Retrieved 17/17 results with rv 5794 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  I0712 12:23:07.316845 20 chunking.go:98] Retrieved 17/17 results with rv 5794 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  I0712 12:23:07.366965 20 chunking.go:98] Retrieved 17/17 results with rv 5794 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  I0712 12:23:07.415290 20 chunking.go:98] Retrieved 17/17 results with rv 5794 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  I0712 12:23:07.466431 20 chunking.go:98] Retrieved 17/17 results with rv 5794 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  I0712 12:23:07.517166 20 chunking.go:98] Retrieved 17/17 results with rv 5794 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  I0712 12:23:07.566898 20 chunking.go:98] Retrieved 17/17 results with rv 5794 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  I0712 12:23:07.616817 20 chunking.go:98] Retrieved 17/17 results with rv 5794 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc5NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  I0712 12:23:07.666779 20 chunking.go:98] Retrieved 9/17 results with rv 5794 and continue 
  STEP: retrieving those results all at once @ 07/12/25 12:23:07.666
  I0712 12:23:07.726339 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-585" for this suite. @ 07/12/25 12:23:07.766
• [21.458 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 07/12/25 12:23:07.819
  I0712 12:23:07.819687 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename projected @ 07/12/25 12:23:07.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:23:07.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:23:07.839
  STEP: Creating a pod to test downward API volume plugin @ 07/12/25 12:23:07.841
  STEP: Saw pod success @ 07/12/25 12:23:11.863
  I0712 12:23:11.867737 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod downwardapi-volume-51a74a5e-eb19-4d89-bd0f-2f9f2328109c container client-container: <nil>
  STEP: delete the pod @ 07/12/25 12:23:11.875
  I0712 12:23:11.893137 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9852" for this suite. @ 07/12/25 12:23:11.896
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 07/12/25 12:23:11.903
  I0712 12:23:11.903572 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename downward-api @ 07/12/25 12:23:11.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:23:11.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:23:11.918
  STEP: Creating a pod to test downward API volume plugin @ 07/12/25 12:23:11.92
  STEP: Saw pod success @ 07/12/25 12:23:15.938
  I0712 12:23:15.941875 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod downwardapi-volume-8ece9e6f-756e-46e2-b8a0-9c628f3df798 container client-container: <nil>
  STEP: delete the pod @ 07/12/25 12:23:15.947
  I0712 12:23:15.966308 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8434" for this suite. @ 07/12/25 12:23:15.973
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 07/12/25 12:23:15.979
  I0712 12:23:15.979907 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename projected @ 07/12/25 12:23:15.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:23:15.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:23:15.993
  STEP: Creating a pod to test downward API volume plugin @ 07/12/25 12:23:15.996
  STEP: Saw pod success @ 07/12/25 12:23:20.013
  I0712 12:23:20.016539 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod downwardapi-volume-ed103ab5-51af-41d4-9567-8492e22cb24d container client-container: <nil>
  STEP: delete the pod @ 07/12/25 12:23:20.023
  I0712 12:23:20.040652 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2653" for this suite. @ 07/12/25 12:23:20.044
• [4.072 seconds]
------------------------------
S
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:753
  STEP: Creating a kubernetes client @ 07/12/25 12:23:20.052
  I0712 12:23:20.052373 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename services @ 07/12/25 12:23:20.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:23:20.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:23:20.064
  STEP: creating service endpoint-test2 in namespace services-336 @ 07/12/25 12:23:20.066
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-336 to expose endpoints map[] @ 07/12/25 12:23:20.078
  I0712 12:23:20.083792      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0712 12:23:20.083858 20 service.go:4613] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  I0712 12:23:21.086256      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0712 12:23:21.090468 20 service.go:4645] successfully validated that service endpoint-test2 in namespace services-336 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-336 @ 07/12/25 12:23:21.09
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-336 to expose endpoints map[pod1:[80]] @ 07/12/25 12:23:23.159
  I0712 12:23:23.165132      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0712 12:23:23.169599 20 service.go:4645] successfully validated that service endpoint-test2 in namespace services-336 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 07/12/25 12:23:23.169
  I0712 12:23:23.169638 20 resource.go:361] Creating new exec pod
  I0712 12:23:25.188462 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-336 exec execpodvshqj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0712 12:23:25.279533 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.152.183.89) 80 port [tcp/http] succeeded!\n"
  I0712 12:23:25.279569 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0712 12:23:25.279689 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-336 exec execpodvshqj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.89 80'
  I0712 12:23:25.357808 20 builder.go:146] stderr: "+ + ncecho -v hostName -t\n -w 2 10.152.183.89 80\nConnection to 10.152.183.89 80 port [tcp/http] succeeded!\n"
  I0712 12:23:25.357845 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-336 @ 07/12/25 12:23:25.357
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-336 to expose endpoints map[pod1:[80] pod2:[80]] @ 07/12/25 12:23:27.376
  I0712 12:23:27.384736      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0712 12:23:27.389257 20 service.go:4645] successfully validated that service endpoint-test2 in namespace services-336 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 07/12/25 12:23:27.389
  I0712 12:23:27.392316 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-336 exec execpodvshqj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0712 12:23:27.469534 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.152.183.89) 80 port [tcp/http] succeeded!\n"
  I0712 12:23:27.469562 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0712 12:23:27.469612 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-336 exec execpodvshqj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.89 80'
  I0712 12:23:27.563761 20 builder.go:146] stderr: "+ + ncecho -v hostName -t\n -w 2 10.152.183.89 80\nConnection to 10.152.183.89 80 port [tcp/http] succeeded!\n"
  I0712 12:23:27.563793 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-336 @ 07/12/25 12:23:27.563
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-336 to expose endpoints map[pod2:[80]] @ 07/12/25 12:23:27.578
  I0712 12:23:27.589407      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0712 12:23:27.593267 20 service.go:4645] successfully validated that service endpoint-test2 in namespace services-336 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 07/12/25 12:23:27.593
  I0712 12:23:27.596486 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-336 exec execpodvshqj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0712 12:23:27.676993 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.152.183.89) 80 port [tcp/http] succeeded!\n"
  I0712 12:23:27.677022 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0712 12:23:27.677089 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-336 exec execpodvshqj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.89 80'
  I0712 12:23:27.750754 20 builder.go:146] stderr: "+ echo+  hostName\nnc -v -t -w 2 10.152.183.89 80\nConnection to 10.152.183.89 80 port [tcp/http] succeeded!\n"
  I0712 12:23:27.750780 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-336 @ 07/12/25 12:23:27.75
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-336 to expose endpoints map[] @ 07/12/25 12:23:27.769
  I0712 12:23:27.771833      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0712 12:23:27.776060 20 service.go:4645] successfully validated that service endpoint-test2 in namespace services-336 exposes endpoints map[]
  I0712 12:23:27.795995 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-336" for this suite. @ 07/12/25 12:23:27.798
• [7.754 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1394
  STEP: Creating a kubernetes client @ 07/12/25 12:23:27.806
  I0712 12:23:27.806253 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename kubectl @ 07/12/25 12:23:27.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:23:27.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:23:27.822
  I0712 12:23:27.824996 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-1237 create -f -'
  I0712 12:23:27.995537 20 builder.go:146] stderr: ""
  I0712 12:23:27.995603 20 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0712 12:23:27.995652 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-1237 create -f -'
  I0712 12:23:28.099601 20 builder.go:146] stderr: ""
  I0712 12:23:28.099644 20 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/12/25 12:23:28.099
  I0712 12:23:29.105336 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0712 12:23:29.105366 20 framework.go:733] Found 1 / 1
  I0712 12:23:29.105381 20 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0712 12:23:29.110159 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0712 12:23:29.110193 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0712 12:23:29.110258 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-1237 describe pod agnhost-primary-r9tsc'
  I0712 12:23:29.165149 20 builder.go:146] stderr: ""
  I0712 12:23:29.165330 20 builder.go:147] stdout: "Name:             agnhost-primary-r9tsc\nNamespace:        kubectl-1237\nPriority:         0\nService Account:  default\nNode:             ip-172-31-39-13/172.31.39.13\nStart Time:       Sat, 12 Jul 2025 12:23:28 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.235.143\nIPs:\n  IP:           192.168.235.143\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://c00afa263390d40fff9278ea266eb15f86992b2695253889ee48044b641a4cf5\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 12 Jul 2025 12:23:28 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-bc72m (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-bc72m:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    Optional:                false\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-1237/agnhost-primary-r9tsc to ip-172-31-39-13\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" already present on machine\n  Normal  Created    1s    kubelet            Created container: agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I0712 12:23:29.165430 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-1237 describe rc agnhost-primary'
  I0712 12:23:29.220548 20 builder.go:146] stderr: ""
  I0712 12:23:29.220613 20 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-1237\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-r9tsc\n"
  I0712 12:23:29.220654 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-1237 describe service agnhost-primary'
  I0712 12:23:29.272821 20 builder.go:146] stderr: ""
  I0712 12:23:29.272854 20 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-1237\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.152.183.162\nIPs:                      10.152.183.162\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                192.168.235.143:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0712 12:23:29.276590 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-1237 describe node ip-172-31-0-19'
  I0712 12:23:29.352619 20 builder.go:146] stderr: ""
  I0712 12:23:29.352856 20 builder.go:147] stdout: "Name:               ip-172-31-0-19\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-control-plane\n                    juju-charm=kubernetes-control-plane\n                    juju.io/cloud=ec2\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-0-19\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    topology.kubernetes.io/zone=us-east-1a\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 12 Jul 2025 11:57:30 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-0-19\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 12 Jul 2025 12:23:20 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 12 Jul 2025 12:17:21 +0000   Sat, 12 Jul 2025 12:17:21 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 12 Jul 2025 12:20:48 +0000   Sat, 12 Jul 2025 11:57:30 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 12 Jul 2025 12:20:48 +0000   Sat, 12 Jul 2025 11:57:30 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 12 Jul 2025 12:20:48 +0000   Sat, 12 Jul 2025 11:57:30 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 12 Jul 2025 12:20:48 +0000   Sat, 12 Jul 2025 12:00:11 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.31.0.19\n  Hostname:    ip-172-31-0-19\nCapacity:\n  cpu:                2\n  ephemeral-storage:  15159300Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7967624Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  13970810857\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7865224Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ec2d0618ca2b3e0c11febd2d40c6ba68\n  System UUID:                ec2d0618-ca2b-3e0c-11fe-bd2d40c6ba68\n  Boot ID:                    fef6bc80-63de-49a3-b7cb-57b4fabf2be0\n  Kernel Version:             6.8.0-1030-aws\n  OS Image:                   Ubuntu 24.04.2 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.38\n  Kubelet Version:            v1.33.2\n  Kube-Proxy Version:         \nNon-terminated Pods:          (3 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-kube-controllers-789cf4cf7c-sx5pp                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         6m40s\n  kube-system                 calico-node-bs4dv                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         6m10s\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-e4f977ec76064d15-pbpgr    0 (0%)        0 (0%)      0 (0%)           0 (0%)         3m18s\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                250m (12%)  0 (0%)\n  memory             0 (0%)      0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type     Reason                   Age                From             Message\n  ----     ------                   ----               ----             -------\n  Normal   Starting                 10m                kube-proxy       \n  Normal   Starting                 20m                kube-proxy       \n  Normal   Starting                 14m                kube-proxy       \n  Normal   Starting                 23m                kube-proxy       \n  Normal   Starting                 13m                kube-proxy       \n  Normal   Starting                 18m                kube-proxy       \n  Normal   Starting                 15m                kube-proxy       \n  Normal   Starting                 12m                kube-proxy       \n  Normal   Starting                 25m                kube-proxy       \n  Normal   Starting                 16m                kube-proxy       \n  Normal   Starting                 15m                kube-proxy       \n  Normal   Starting                 21m                kube-proxy       \n  Normal   Starting                 18m                kube-proxy       \n  Normal   Starting                 19m                kube-proxy       \n  Normal   Starting                 11m                kube-proxy       \n  Normal   Starting                 17m                kube-proxy       \n  Normal   Starting                 24m                kube-proxy       \n  Normal   Starting                 8m18s              kube-proxy       \n  Normal   Starting                 25m                kube-proxy       \n  Normal   Starting                 9m3s               kube-proxy       \n  Normal   Starting                 9m58s              kube-proxy       \n  Normal   Starting                 22m                kube-proxy       \n  Normal   Starting                 26m                kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      25m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  25m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientPID     25m (x2 over 25m)  kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientPID\n  Normal   NodeHasNoDiskPressure    25m (x2 over 25m)  kubelet          Node ip-172-31-0-19 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  25m (x2 over 25m)  kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientMemory\n  Normal   NodeAllocatableEnforced  25m                kubelet          Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      25m                kubelet          invalid capacity 0 on image filesystem\n  Normal   Starting                 25m                kubelet          Starting kubelet.\n  Normal   NodeHasNoDiskPressure    25m                kubelet          Node ip-172-31-0-19 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  25m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientMemory\n  Normal   NodeHasSufficientPID     25m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientPID\n  Normal   NodeHasSufficientPID     24m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientPID\n  Normal   Starting                 24m                kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      24m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  24m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  24m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    24m                kubelet          Node ip-172-31-0-19 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  23m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    23m                kubelet          Node ip-172-31-0-19 status is now: NodeHasNoDiskPressure\n  Normal   NodeAllocatableEnforced  23m                kubelet          Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      23m                kubelet          invalid capacity 0 on image filesystem\n  Normal   Starting                 23m                kubelet          Starting kubelet.\n  Normal   NodeHasSufficientPID     23m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientPID\n  Normal   RegisteredNode           23m                node-controller  Node ip-172-31-0-19 event: Registered Node ip-172-31-0-19 in Controller\n  Normal   NodeReady                23m                kubelet          Node ip-172-31-0-19 status is now: NodeReady\n  Normal   Starting                 22m                kubelet          Starting kubelet.\n  Normal   NodeHasSufficientPID     22m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientPID\n  Normal   NodeHasNoDiskPressure    22m                kubelet          Node ip-172-31-0-19 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  22m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientMemory\n  Normal   NodeAllocatableEnforced  22m                kubelet          Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      22m                kubelet          invalid capacity 0 on image filesystem\n  Normal   Starting                 21m                kubelet          Starting kubelet.\n  Normal   NodeHasSufficientPID     21m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientPID\n  Normal   NodeHasSufficientMemory  21m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientMemory\n  Warning  InvalidDiskCapacity      21m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasNoDiskPressure    21m                kubelet          Node ip-172-31-0-19 status is now: NodeHasNoDiskPressure\n  Normal   NodeAllocatableEnforced  21m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientPID     20m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientPID\n  Normal   NodeHasNoDiskPressure    20m                kubelet          Node ip-172-31-0-19 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  20m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientMemory\n  Normal   NodeAllocatableEnforced  20m                kubelet          Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      20m                kubelet          invalid capacity 0 on image filesystem\n  Normal   Starting                 20m                kubelet          Starting kubelet.\n  Normal   RegisteredNode           20m                node-controller  Node ip-172-31-0-19 event: Registered Node ip-172-31-0-19 in Controller\n  Warning  InvalidDiskCapacity      19m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  19m                kubelet          Updated Node Allocatable limit across pods\n  Normal   Starting                 19m                kubelet          Starting kubelet.\n  Normal   NodeHasNoDiskPressure    19m                kubelet          Node ip-172-31-0-19 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  19m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientMemory\n  Normal   NodeHasSufficientPID     19m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  18m                kubelet          Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      18m                kubelet          invalid capacity 0 on image filesystem\n  Normal   Starting                 18m                kubelet          Starting kubelet.\n  Normal   NodeHasSufficientPID     18m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientPID\n  Normal   NodeHasSufficientMemory  18m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    18m                kubelet          Node ip-172-31-0-19 status is now: NodeHasNoDiskPressure\n  Normal   NodeAllocatableEnforced  18m                kubelet          Updated Node Allocatable limit across pods\n  Normal   Starting                 18m                kubelet          Starting kubelet.\n  Normal   NodeHasSufficientPID     18m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientPID\n  Normal   NodeHasNoDiskPressure    18m                kubelet          Node ip-172-31-0-19 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  18m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientMemory\n  Normal   Starting                 17m                kubelet          Starting kubelet.\n  Normal   NodeHasSufficientPID     17m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientPID\n  Warning  InvalidDiskCapacity      17m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  17m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  17m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    17m                kubelet          Node ip-172-31-0-19 status is now: NodeHasNoDiskPressure\n  Warning  InvalidDiskCapacity      16m                kubelet          invalid capacity 0 on image filesystem\n  Normal   Starting                 16m                kubelet          Starting kubelet.\n  Normal   NodeAllocatableEnforced  16m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientPID     16m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientPID\n  Normal   NodeHasSufficientMemory  16m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    16m                kubelet          Node ip-172-31-0-19 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  15m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientMemory\n  Normal   NodeAllocatableEnforced  15m                kubelet          Updated Node Allocatable limit across pods\n  Normal   Starting                 15m                kubelet          Starting kubelet.\n  Normal   NodeHasNoDiskPressure    15m                kubelet          Node ip-172-31-0-19 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     15m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientPID\n  Normal   NodeHasNoDiskPressure    15m                kubelet          Node ip-172-31-0-19 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     15m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientPID\n  Normal   NodeHasSufficientMemory  15m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientMemory\n  Normal   NodeAllocatableEnforced  15m                kubelet          Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      15m                kubelet          invalid capacity 0 on image filesystem\n  Normal   Starting                 15m                kubelet          Starting kubelet.\n  Normal   NodeHasSufficientMemory  14m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    14m                kubelet          Node ip-172-31-0-19 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     14m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  14m                kubelet          Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      14m                kubelet          invalid capacity 0 on image filesystem\n  Normal   Starting                 14m                kubelet          Starting kubelet.\n  Normal   NodeHasSufficientMemory  13m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientMemory\n  Normal   NodeHasSufficientPID     13m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientPID\n  Normal   Starting                 13m                kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      13m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  13m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasNoDiskPressure    13m                kubelet          Node ip-172-31-0-19 status is now: NodeHasNoDiskPressure\n  Normal   RegisteredNode           13m                node-controller  Node ip-172-31-0-19 event: Registered Node ip-172-31-0-19 in Controller\n  Normal   Starting                 12m                kubelet          Starting kubelet.\n  Normal   NodeHasSufficientPID     12m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientPID\n  Normal   NodeHasNoDiskPressure    12m                kubelet          Node ip-172-31-0-19 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  12m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientMemory\n  Normal   NodeAllocatableEnforced  12m                kubelet          Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      12m                kubelet          invalid capacity 0 on image filesystem\n  Normal   RegisteredNode           12m                node-controller  Node ip-172-31-0-19 event: Registered Node ip-172-31-0-19 in Controller\n  Normal   NodeHasSufficientMemory  11m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientMemory\n  Normal   NodeAllocatableEnforced  11m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasNoDiskPressure    11m                kubelet          Node ip-172-31-0-19 status is now: NodeHasNoDiskPressure\n  Warning  InvalidDiskCapacity      11m                kubelet          invalid capacity 0 on image filesystem\n  Normal   Starting                 11m                kubelet          Starting kubelet.\n  Normal   NodeHasSufficientPID     11m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientPID\n  Normal   Starting                 10m                kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      10m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  10m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  10m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    10m                kubelet          Node ip-172-31-0-19 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     10m                kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientPID\n  Normal   Starting                 9m59s              kubelet          Starting kubelet.\n  Normal   NodeHasNoDiskPressure    9m59s              kubelet          Node ip-172-31-0-19 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     9m59s              kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientPID\n  Normal   NodeHasSufficientMemory  9m59s              kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientMemory\n  Normal   NodeAllocatableEnforced  9m59s              kubelet          Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      9m59s              kubelet          invalid capacity 0 on image filesystem\n  Normal   RegisteredNode           9m44s              node-controller  Node ip-172-31-0-19 event: Registered Node ip-172-31-0-19 in Controller\n  Normal   RegisteredNode           9m23s              node-controller  Node ip-172-31-0-19 event: Registered Node ip-172-31-0-19 in Controller\n  Normal   NodeAllocatableEnforced  9m5s               kubelet          Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      9m5s               kubelet          invalid capacity 0 on image filesystem\n  Normal   Starting                 9m5s               kubelet          Starting kubelet.\n  Normal   NodeHasSufficientMemory  9m4s               kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    9m4s               kubelet          Node ip-172-31-0-19 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     9m4s               kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientPID\n  Warning  InvalidDiskCapacity      8m19s              kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  8m19s              kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  8m19s              kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    8m19s              kubelet          Node ip-172-31-0-19 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     8m19s              kubelet          Node ip-172-31-0-19 status is now: NodeHasSufficientPID\n  Normal   Starting                 8m19s              kubelet          Starting kubelet.\n  Normal   RegisteredNode           8m4s               node-controller  Node ip-172-31-0-19 event: Registered Node ip-172-31-0-19 in Controller\n"
  I0712 12:23:29.352958 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-1237 describe namespace kubectl-1237'
  I0712 12:23:29.413006 20 builder.go:146] stderr: ""
  I0712 12:23:29.413071 20 builder.go:147] stdout: "Name:         kubectl-1237\nLabels:       e2e-framework=kubectl\n              e2e-run=950aee42-c137-4164-a80d-ad487f4e83d0\n              kubernetes.io/metadata.name=kubectl-1237\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0712 12:23:29.413486 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1237" for this suite. @ 07/12/25 12:23:29.418
• [1.619 seconds]
------------------------------
SS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 07/12/25 12:23:29.426
  I0712 12:23:29.426104 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename disruption @ 07/12/25 12:23:29.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:23:29.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:23:29.445
  STEP: creating the pdb @ 07/12/25 12:23:29.448
  STEP: Waiting for the pdb to be processed @ 07/12/25 12:23:29.452
  STEP: updating the pdb @ 07/12/25 12:23:31.457
  STEP: Waiting for the pdb to be processed @ 07/12/25 12:23:31.464
  STEP: patching the pdb @ 07/12/25 12:23:33.467
  STEP: Waiting for the pdb to be processed @ 07/12/25 12:23:33.476
  STEP: Waiting for the pdb to be deleted @ 07/12/25 12:23:35.486
  I0712 12:23:35.489175 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9970" for this suite. @ 07/12/25 12:23:35.492
• [6.072 seconds]
------------------------------
S
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 07/12/25 12:23:35.497
  I0712 12:23:35.497921 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename sysctl @ 07/12/25 12:23:35.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:23:35.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:23:35.516
  STEP: Creating a pod with one valid and two invalid sysctls @ 07/12/25 12:23:35.518
  I0712 12:23:35.522729 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-2343" for this suite. @ 07/12/25 12:23:35.593
• [0.103 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 07/12/25 12:23:35.6
  I0712 12:23:35.600894 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename daemonsets @ 07/12/25 12:23:35.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:23:35.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:23:35.618
  STEP: Creating a simple DaemonSet "daemon-set" @ 07/12/25 12:23:35.703
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/12/25 12:23:35.709
  I0712 12:23:35.794842 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:23:35.794880 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:23:35.798405 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0712 12:23:35.798444 20 fixtures.go:131] Node ip-172-31-23-206 is running 0 daemon pod, expected 1
  I0712 12:23:36.713647 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:23:36.713695 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:23:36.716880 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0712 12:23:36.716906 20 fixtures.go:131] Node ip-172-31-23-206 is running 0 daemon pod, expected 1
  I0712 12:23:37.714587 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:23:37.714638 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:23:37.718768 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0712 12:23:37.718803 20 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 07/12/25 12:23:37.721
  I0712 12:23:37.815480 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:23:37.815519 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:23:37.818366 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0712 12:23:37.818386 20 fixtures.go:131] Node ip-172-31-39-13 is running 0 daemon pod, expected 1
  I0712 12:23:38.736987 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:23:38.737040 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:23:38.740923 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0712 12:23:38.740939 20 fixtures.go:131] Node ip-172-31-39-13 is running 0 daemon pod, expected 1
  I0712 12:23:39.736062 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:23:39.736108 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:23:39.740457 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0712 12:23:39.740476 20 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 07/12/25 12:23:39.74
  STEP: Deleting DaemonSet "daemon-set" @ 07/12/25 12:23:39.805
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9980, will wait for the garbage collector to delete the pods @ 07/12/25 12:23:39.805
  I0712 12:23:39.868436 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.518524ms
  I0712 12:23:39.968973 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.53207ms
  I0712 12:23:41.072973 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0712 12:23:41.073006 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0712 12:23:41.077413 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"6661"},"items":null}

  I0712 12:23:41.080090 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"6661"},"items":null}

  I0712 12:23:41.091326 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9980" for this suite. @ 07/12/25 12:23:41.094
• [5.499 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 07/12/25 12:23:41.1
  I0712 12:23:41.100322 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename secrets @ 07/12/25 12:23:41.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:23:41.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:23:41.119
  STEP: Creating secret with name secret-test-c51fccdd-3c72-4a77-bde4-aa19fbfff11d @ 07/12/25 12:23:41.121
  STEP: Creating a pod to test consume secrets @ 07/12/25 12:23:41.127
  STEP: Saw pod success @ 07/12/25 12:23:43.173
  I0712 12:23:43.176267 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-secrets-a6e765e0-51df-44db-9876-984d418be69e container secret-volume-test: <nil>
  STEP: delete the pod @ 07/12/25 12:23:43.182
  I0712 12:23:43.199830 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-604" for this suite. @ 07/12/25 12:23:43.202
• [2.109 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:359
  STEP: Creating a kubernetes client @ 07/12/25 12:23:43.209
  I0712 12:23:43.209403 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/12/25 12:23:43.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:23:43.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:23:43.224
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 07/12/25 12:23:43.226
  I0712 12:23:43.226816 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  I0712 12:23:44.601836 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  I0712 12:23:49.566108 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1647" for this suite. @ 07/12/25 12:23:49.574
• [6.371 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 07/12/25 12:23:49.581
  I0712 12:23:49.581147 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename podtemplate @ 07/12/25 12:23:49.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:23:49.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:23:49.596
  STEP: Create a pod template @ 07/12/25 12:23:49.598
  STEP: Replace a pod template @ 07/12/25 12:23:49.603
  I0712 12:23:49.610788 20 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0712 12:23:49.610868 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9483" for this suite. @ 07/12/25 12:23:49.674
• [0.101 seconds]
------------------------------
SS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 07/12/25 12:23:49.682
  I0712 12:23:49.682193 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename sysctl @ 07/12/25 12:23:49.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:23:49.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:23:49.697
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 07/12/25 12:23:49.7
  STEP: Watching for error events or started pod @ 07/12/25 12:23:49.707
  STEP: Waiting for pod completion @ 07/12/25 12:23:51.712
  STEP: Checking that the pod succeeded @ 07/12/25 12:23:53.727
  STEP: Getting logs from the pod @ 07/12/25 12:23:53.727
  STEP: Checking that the sysctl is actually updated @ 07/12/25 12:23:53.739
  I0712 12:23:53.739703 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-2158" for this suite. @ 07/12/25 12:23:53.744
• [4.068 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 07/12/25 12:23:53.75
  I0712 12:23:53.750627 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename container-runtime @ 07/12/25 12:23:53.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:23:53.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:23:53.769
  STEP: create the container @ 07/12/25 12:23:53.772
  I0712 12:23:53.782089      20 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Failed @ 07/12/25 12:23:53.782
  STEP: get the container status @ 07/12/25 12:23:56.801
  STEP: the container should be terminated @ 07/12/25 12:23:56.805
  STEP: the termination message should be set @ 07/12/25 12:23:56.805
  I0712 12:23:56.805892 20 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 07/12/25 12:23:56.805
  I0712 12:23:56.823619 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7443" for this suite. @ 07/12/25 12:23:56.827
• [3.085 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 07/12/25 12:23:56.836
  I0712 12:23:56.836012 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename projected @ 07/12/25 12:23:56.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:23:56.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:23:56.848
  STEP: Creating configMap with name projected-configmap-test-volume-5f86f1e8-1453-4393-aa41-022f40fbd6c5 @ 07/12/25 12:23:56.851
  STEP: Creating a pod to test consume configMaps @ 07/12/25 12:23:56.855
  STEP: Saw pod success @ 07/12/25 12:24:00.878
  I0712 12:24:00.881912 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-projected-configmaps-3102dc93-1ac9-4a6e-8faf-2813fd2d59c3 container agnhost-container: <nil>
  STEP: delete the pod @ 07/12/25 12:24:00.89
  I0712 12:24:00.909387 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4248" for this suite. @ 07/12/25 12:24:00.913
• [4.083 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 07/12/25 12:24:00.919
  I0712 12:24:00.919686 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename statefulset @ 07/12/25 12:24:00.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:24:00.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:24:00.935
  STEP: Creating service test in namespace statefulset-4856 @ 07/12/25 12:24:00.937
  STEP: Creating a new StatefulSet @ 07/12/25 12:24:00.945
  I0712 12:24:00.957548 20 wait.go:44] Found 0 stateful pods, waiting for 3
  I0712 12:24:10.958822 20 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0712 12:24:10.958860 20 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0712 12:24:10.958866 20 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0712 12:24:10.969440 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=statefulset-4856 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0712 12:24:11.059847 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0712 12:24:11.059889 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0712 12:24:11.059899 20 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 07/12/25 12:24:21.069
  I0712 12:24:21.078370 20 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 07/12/25 12:24:21.078
  STEP: Updating Pods in reverse ordinal order @ 07/12/25 12:24:31.089
  I0712 12:24:31.093145 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=statefulset-4856 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0712 12:24:31.173542 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0712 12:24:31.173588 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0712 12:24:31.173598 20 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 07/12/25 12:24:41.19
  I0712 12:24:41.190628 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=statefulset-4856 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0712 12:24:41.279232 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0712 12:24:41.279302 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0712 12:24:41.279331 20 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0712 12:24:51.296035 20 statefulset.go:2542] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 07/12/25 12:25:01.305
  I0712 12:25:01.308493 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=statefulset-4856 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0712 12:25:01.393092 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0712 12:25:01.393132 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0712 12:25:01.393142 20 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0712 12:25:11.411714 20 statefulset.go:138] Deleting all statefulset in ns statefulset-4856
  I0712 12:25:11.416087 20 rest.go:153] Scaling statefulset ss2 to 0
  I0712 12:25:21.434771 20 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0712 12:25:21.437525 20 rest.go:91] Deleting statefulset ss2
  I0712 12:25:21.452276 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4856" for this suite. @ 07/12/25 12:25:21.456
• [80.544 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 07/12/25 12:25:21.463
  I0712 12:25:21.463908 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename projected @ 07/12/25 12:25:21.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:25:21.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:25:21.479
  STEP: Creating projection with secret that has name projected-secret-test-map-4dcde181-487d-456c-af14-88a382b16bee @ 07/12/25 12:25:21.481
  STEP: Creating a pod to test consume secrets @ 07/12/25 12:25:21.486
  STEP: Saw pod success @ 07/12/25 12:25:23.502
  I0712 12:25:23.505099 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-projected-secrets-fce92dc2-9267-4f0f-81fb-315f6a679a5a container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/12/25 12:25:23.512
  I0712 12:25:23.529988 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-225" for this suite. @ 07/12/25 12:25:23.534
• [2.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 07/12/25 12:25:23.54
  I0712 12:25:23.540832 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename cronjob @ 07/12/25 12:25:23.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:25:23.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:25:23.557
  STEP: Creating a suspended cronjob @ 07/12/25 12:25:23.56
  STEP: Ensuring no jobs are scheduled @ 07/12/25 12:25:23.567
  STEP: Ensuring no job exists by listing jobs explicitly @ 07/12/25 12:30:23.567
  STEP: Removing cronjob @ 07/12/25 12:30:23.572
  I0712 12:30:23.578404 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8113" for this suite. @ 07/12/25 12:30:23.582
• [300.050 seconds]
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:104
  STEP: Creating a kubernetes client @ 07/12/25 12:30:23.591
  I0712 12:30:23.591127 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 07/12/25 12:30:23.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:30:23.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:30:23.608
  STEP: creating a target pod @ 07/12/25 12:30:23.612
  STEP: adding an ephemeral container @ 07/12/25 12:30:25.631
  STEP: verifying the pod's generation is 2 @ 07/12/25 12:30:27.652
  STEP: checking pod container endpoints @ 07/12/25 12:30:27.656
  I0712 12:30:27.656471 20 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4109 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0712 12:30:27.656489 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0712 12:30:27.656532 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-4109/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0712 12:30:27.701650 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0712 12:30:27.701672 20 exec_util.go:112] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 07/12/25 12:30:27.72
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 07/12/25 12:30:27.725
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 07/12/25 12:30:27.737
  I0712 12:30:27.741652 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-4109" for this suite. @ 07/12/25 12:30:27.745
• [4.164 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 07/12/25 12:30:27.754
  I0712 12:30:27.754917 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename daemonsets @ 07/12/25 12:30:27.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:30:27.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:30:27.769
  I0712 12:30:27.859847 20 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0712 12:30:27.865489 20 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0712 12:30:27.946957 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:30:27.946998 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:30:27.950608 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0712 12:30:27.950629 20 fixtures.go:131] Node ip-172-31-23-206 is running 0 daemon pod, expected 1
  I0712 12:30:28.870253 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:30:28.870308 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:30:28.873519 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0712 12:30:28.873536 20 fixtures.go:131] Node ip-172-31-23-206 is running 0 daemon pod, expected 1
  I0712 12:30:29.870672 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:30:29.870718 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:30:29.874507 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0712 12:30:29.874528 20 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I0712 12:30:29.874540 20 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0712 12:30:29.883278 20 daemon_set.go:102] Updating DaemonSet daemon-set
  I0712 12:30:30.895362 20 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0712 12:30:30.906395 20 daemon_set.go:102] Updating DaemonSet daemon-set
  I0712 12:30:30.906426 20 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0712 12:30:30.995686 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:30:30.995737 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:30:31.915410 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:30:31.915460 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:30:32.911896 20 daemon_set.go:1198] Pod daemon-set-59jvd is not available
  I0712 12:30:32.915397 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:30:32.915440 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 07/12/25 12:30:32.924
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-668, will wait for the garbage collector to delete the pods @ 07/12/25 12:30:32.924
  I0712 12:30:32.985861 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.260318ms
  I0712 12:30:33.086920 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.054249ms
  I0712 12:30:34.391596 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0712 12:30:34.391634 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0712 12:30:34.396267 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"8366"},"items":null}

  I0712 12:30:34.398796 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"8366"},"items":null}

  I0712 12:30:34.413867 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-668" for this suite. @ 07/12/25 12:30:34.417
• [6.670 seconds]
------------------------------
SS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 07/12/25 12:30:34.424
  I0712 12:30:34.424495 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename kubelet-test @ 07/12/25 12:30:34.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:30:34.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:30:34.441
  STEP: Waiting for pod completion @ 07/12/25 12:30:34.451
  I0712 12:30:38.472766 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-253" for this suite. @ 07/12/25 12:30:38.476
• [4.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 07/12/25 12:30:38.485
  I0712 12:30:38.485222 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename job @ 07/12/25 12:30:38.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:30:38.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:30:38.503
  STEP: Creating Indexed job @ 07/12/25 12:30:38.505
  STEP: Ensuring job reaches completions @ 07/12/25 12:30:38.512
  STEP: Ensuring pods with index for job exist @ 07/12/25 12:30:46.54
  I0712 12:30:46.545111 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2430" for this suite. @ 07/12/25 12:30:46.55
• [8.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:431
  STEP: Creating a kubernetes client @ 07/12/25 12:30:46.556
  I0712 12:30:46.556652 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename security-context-test @ 07/12/25 12:30:46.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:30:46.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:30:46.573
  I0712 12:30:50.601399 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7424" for this suite. @ 07/12/25 12:30:50.603
• [4.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 07/12/25 12:30:50.611
  I0712 12:30:50.611231 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 07/12/25 12:30:50.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:30:50.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:30:50.625
  STEP: creating a target pod @ 07/12/25 12:30:50.628
  STEP: adding an ephemeral container @ 07/12/25 12:30:52.648
  STEP: verifying the pod's generation is 2 @ 07/12/25 12:30:54.667
  STEP: checking pod container endpoints @ 07/12/25 12:30:54.67
  I0712 12:30:54.670744 20 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-46 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0712 12:30:54.670762 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0712 12:30:54.670800 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-46/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0712 12:30:54.710341 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0712 12:30:54.710373 20 exec_util.go:112] Exec stderr: ""
  I0712 12:30:54.725300 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-46" for this suite. @ 07/12/25 12:30:54.729
• [4.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1081
  STEP: Creating a kubernetes client @ 07/12/25 12:30:54.738
  I0712 12:30:54.738660 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename kubectl @ 07/12/25 12:30:54.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:30:54.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:30:54.754
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/12/25 12:30:54.757
  I0712 12:30:54.757177 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-3479 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0712 12:30:54.808360 20 builder.go:146] stderr: ""
  I0712 12:30:54.808390 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 07/12/25 12:30:54.808
  I0712 12:30:54.808469 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-3479 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0712 12:30:54.855946 20 builder.go:146] stderr: ""
  I0712 12:30:54.855981 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/12/25 12:30:54.855
  I0712 12:30:54.860090 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-3479 delete pods e2e-test-httpd-pod'
  I0712 12:30:56.677241 20 builder.go:146] stderr: ""
  I0712 12:30:56.677282 20 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0712 12:30:56.677457 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3479" for this suite. @ 07/12/25 12:30:56.681
• [1.950 seconds]
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 07/12/25 12:30:56.689
  I0712 12:30:56.689153 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename downward-api @ 07/12/25 12:30:56.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:30:56.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:30:56.704
  STEP: Creating a pod to test downward API volume plugin @ 07/12/25 12:30:56.708
  STEP: Saw pod success @ 07/12/25 12:31:00.736
  I0712 12:31:00.739218 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod downwardapi-volume-e156e3e3-6808-424d-8cde-e9c6c86593a2 container client-container: <nil>
  STEP: delete the pod @ 07/12/25 12:31:00.747
  I0712 12:31:00.763444 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1349" for this suite. @ 07/12/25 12:31:00.766
• [4.083 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 07/12/25 12:31:00.772
  I0712 12:31:00.772436 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename secrets @ 07/12/25 12:31:00.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:31:00.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:31:00.786
  STEP: Creating secret with name secret-test-1b1dc7c5-6d55-4ead-81b6-567a16f85b3f @ 07/12/25 12:31:00.789
  STEP: Creating a pod to test consume secrets @ 07/12/25 12:31:00.792
  STEP: Saw pod success @ 07/12/25 12:31:02.807
  I0712 12:31:02.811554 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-secrets-56599f31-119c-4242-a394-e31d655905c5 container secret-env-test: <nil>
  STEP: delete the pod @ 07/12/25 12:31:02.818
  I0712 12:31:02.832567 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2003" for this suite. @ 07/12/25 12:31:02.837
• [2.071 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 07/12/25 12:31:02.843
  I0712 12:31:02.843518 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename container-probe @ 07/12/25 12:31:02.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:31:02.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:31:02.858
  STEP: Creating pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 in namespace container-probe-3014 @ 07/12/25 12:31:02.861
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/12/25 12:31:04.881
  I0712 12:31:04.884980 20 container_probe.go:1748] Initial restart count of pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 is 0
  I0712 12:31:04.888165 20 container_probe.go:1758] Get pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 in namespace container-probe-3014
  I0712 12:31:06.894393 20 container_probe.go:1758] Get pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 in namespace container-probe-3014
  I0712 12:31:08.899135 20 container_probe.go:1758] Get pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 in namespace container-probe-3014
  I0712 12:31:10.903010 20 container_probe.go:1758] Get pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 in namespace container-probe-3014
  I0712 12:31:12.909050 20 container_probe.go:1758] Get pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 in namespace container-probe-3014
  I0712 12:31:14.913826 20 container_probe.go:1758] Get pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 in namespace container-probe-3014
  I0712 12:31:16.917986 20 container_probe.go:1758] Get pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 in namespace container-probe-3014
  I0712 12:31:18.923421 20 container_probe.go:1758] Get pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 in namespace container-probe-3014
  I0712 12:31:20.929040 20 container_probe.go:1758] Get pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 in namespace container-probe-3014
  I0712 12:31:22.934188 20 container_probe.go:1758] Get pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 in namespace container-probe-3014
  I0712 12:31:24.939525 20 container_probe.go:1758] Get pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 in namespace container-probe-3014
  I0712 12:31:26.945061 20 container_probe.go:1758] Get pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 in namespace container-probe-3014
  I0712 12:31:28.950004 20 container_probe.go:1758] Get pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 in namespace container-probe-3014
  I0712 12:31:30.954552 20 container_probe.go:1758] Get pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 in namespace container-probe-3014
  I0712 12:31:32.959389 20 container_probe.go:1758] Get pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 in namespace container-probe-3014
  I0712 12:31:34.964281 20 container_probe.go:1758] Get pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 in namespace container-probe-3014
  I0712 12:31:36.969162 20 container_probe.go:1758] Get pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 in namespace container-probe-3014
  I0712 12:31:38.973843 20 container_probe.go:1758] Get pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 in namespace container-probe-3014
  I0712 12:31:40.978515 20 container_probe.go:1758] Get pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 in namespace container-probe-3014
  I0712 12:31:42.983125 20 container_probe.go:1758] Get pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 in namespace container-probe-3014
  I0712 12:31:44.988042 20 container_probe.go:1758] Get pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 in namespace container-probe-3014
  I0712 12:31:46.993914 20 container_probe.go:1758] Get pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 in namespace container-probe-3014
  I0712 12:31:48.999809 20 container_probe.go:1758] Get pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 in namespace container-probe-3014
  I0712 12:31:51.007019 20 container_probe.go:1758] Get pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 in namespace container-probe-3014
  I0712 12:31:53.011986 20 container_probe.go:1758] Get pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 in namespace container-probe-3014
  I0712 12:31:55.017479 20 container_probe.go:1758] Get pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 in namespace container-probe-3014
  I0712 12:31:57.024286 20 container_probe.go:1758] Get pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 in namespace container-probe-3014
  I0712 12:31:59.030447 20 container_probe.go:1758] Get pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 in namespace container-probe-3014
  I0712 12:32:01.035892 20 container_probe.go:1758] Get pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 in namespace container-probe-3014
  I0712 12:32:03.041257 20 container_probe.go:1758] Get pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 in namespace container-probe-3014
  I0712 12:32:05.047656 20 container_probe.go:1758] Get pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 in namespace container-probe-3014
  I0712 12:32:07.053722 20 container_probe.go:1758] Get pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 in namespace container-probe-3014
  I0712 12:32:09.058760 20 container_probe.go:1758] Get pod test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 in namespace container-probe-3014
  I0712 12:32:09.058803 20 container_probe.go:1762] Restart count of pod container-probe-3014/test-grpc-725f5f03-52ac-496a-9a3a-6755caeae1d2 is now 1 (1m4.173799254s elapsed)
  STEP: deleting the pod @ 07/12/25 12:32:09.058
  I0712 12:32:09.073873 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3014" for this suite. @ 07/12/25 12:32:09.078
• [66.243 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1794
  STEP: Creating a kubernetes client @ 07/12/25 12:32:09.086
  I0712 12:32:09.086510 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename kubectl @ 07/12/25 12:32:09.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:32:09.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:32:09.103
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/12/25 12:32:09.105
  I0712 12:32:09.105857 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-1397 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0712 12:32:09.153811 20 builder.go:146] stderr: ""
  I0712 12:32:09.153842 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 07/12/25 12:32:09.153
  STEP: verifying the pod e2e-test-httpd-pod was created @ 07/12/25 12:32:14.207
  I0712 12:32:14.208028 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-1397 get pod e2e-test-httpd-pod -o json'
  I0712 12:32:14.250885 20 builder.go:146] stderr: ""
  I0712 12:32:14.250986 20 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2025-07-12T12:32:09Z\",\n        \"generation\": 1,\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-1397\",\n        \"resourceVersion\": \"8975\",\n        \"uid\": \"b2387ec1-83e9-42fc-a929-95124be93d7e\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-lrxgz\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-39-13\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-lrxgz\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-12T12:32:09Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-12T12:32:09Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-12T12:32:09Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-12T12:32:09Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-12T12:32:09Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://5cc49a4c6b540d20859315915477cf165bd12eff0b76d9715323e1a60abaf07c\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"resources\": {},\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-07-12T12:32:09Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-lrxgz\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"172.31.39.13\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.39.13\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.235.162\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.235.162\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-07-12T12:32:09Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 07/12/25 12:32:14.251
  I0712 12:32:14.251069 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-1397 replace -f -'
  I0712 12:32:14.337636 20 builder.go:146] stderr: ""
  I0712 12:32:14.337669 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 07/12/25 12:32:14.337
  I0712 12:32:14.340464 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-1397 delete pods e2e-test-httpd-pod'
  I0712 12:32:15.797321 20 builder.go:146] stderr: ""
  I0712 12:32:15.797359 20 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0712 12:32:15.797502 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1397" for this suite. @ 07/12/25 12:32:15.802
• [6.722 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:306
  STEP: Creating a kubernetes client @ 07/12/25 12:32:15.808
  I0712 12:32:15.808686 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename namespaces @ 07/12/25 12:32:15.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:32:15.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:32:15.824
  STEP: Read namespace status @ 07/12/25 12:32:15.826
  I0712 12:32:15.830472 20 namespace.go:319] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 07/12/25 12:32:15.83
  I0712 12:32:15.835397 20 namespace.go:339] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 07/12/25 12:32:15.835
  I0712 12:32:15.844988 20 namespace.go:364] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0712 12:32:15.845077 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3127" for this suite. @ 07/12/25 12:32:15.903
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 07/12/25 12:32:15.911
  I0712 12:32:15.911889 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename certificates @ 07/12/25 12:32:15.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:32:15.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:32:15.927
  STEP: getting /apis @ 07/12/25 12:32:16.351
  STEP: getting /apis/certificates.k8s.io @ 07/12/25 12:32:16.354
  STEP: getting /apis/certificates.k8s.io/v1 @ 07/12/25 12:32:16.356
  STEP: creating @ 07/12/25 12:32:16.357
  STEP: getting @ 07/12/25 12:32:16.375
  STEP: listing @ 07/12/25 12:32:16.378
  STEP: watching @ 07/12/25 12:32:16.382
  I0712 12:32:16.382419 20 certificates.go:316] starting watch
  STEP: patching @ 07/12/25 12:32:16.383
  STEP: updating @ 07/12/25 12:32:16.39
  I0712 12:32:16.394977 20 certificates.go:332] waiting for watch events with expected annotations
  I0712 12:32:16.395007 20 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 07/12/25 12:32:16.395
  STEP: patching /approval @ 07/12/25 12:32:16.398
  STEP: updating /approval @ 07/12/25 12:32:16.405
  STEP: getting /status @ 07/12/25 12:32:16.411
  STEP: patching /status @ 07/12/25 12:32:16.414
  STEP: updating /status @ 07/12/25 12:32:16.422
  STEP: deleting @ 07/12/25 12:32:16.428
  STEP: deleting a collection @ 07/12/25 12:32:16.441
  I0712 12:32:16.459068 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-9904" for this suite. @ 07/12/25 12:32:16.464
• [0.560 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 07/12/25 12:32:16.471
  I0712 12:32:16.471923 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename apf @ 07/12/25 12:32:16.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:32:16.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:32:16.484
  STEP: getting /apis @ 07/12/25 12:32:16.487
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 07/12/25 12:32:16.489
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 07/12/25 12:32:16.49
  STEP: creating @ 07/12/25 12:32:16.492
  STEP: getting @ 07/12/25 12:32:16.506
  STEP: listing @ 07/12/25 12:32:16.509
  STEP: watching @ 07/12/25 12:32:16.513
  I0712 12:32:16.513695 20 flowcontrol.go:620] starting watch
  STEP: patching @ 07/12/25 12:32:16.514
  STEP: updating @ 07/12/25 12:32:16.52
  I0712 12:32:16.529947 20 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 07/12/25 12:32:16.53
  STEP: patching /status @ 07/12/25 12:32:16.532
  STEP: updating /status @ 07/12/25 12:32:16.538
  STEP: deleting @ 07/12/25 12:32:16.546
  STEP: deleting a collection @ 07/12/25 12:32:16.559
  I0712 12:32:16.580988 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-7841" for this suite. @ 07/12/25 12:32:16.585
• [0.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 07/12/25 12:32:16.592
  I0712 12:32:16.592517 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename kubelet-test @ 07/12/25 12:32:16.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:32:16.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:32:16.61
  I0712 12:32:18.641634 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4322" for this suite. @ 07/12/25 12:32:18.646
• [2.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 07/12/25 12:32:18.654
  I0712 12:32:18.654793 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename container-runtime @ 07/12/25 12:32:18.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:32:18.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:32:18.671
  STEP: create the container @ 07/12/25 12:32:18.674
  I0712 12:32:18.683922      20 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 07/12/25 12:32:18.684
  STEP: get the container status @ 07/12/25 12:32:21.7
  STEP: the container should be terminated @ 07/12/25 12:32:21.706
  STEP: the termination message should be set @ 07/12/25 12:32:21.706
  I0712 12:32:21.706908 20 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 07/12/25 12:32:21.706
  I0712 12:32:21.732051 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1658" for this suite. @ 07/12/25 12:32:21.736
• [3.087 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:329
  STEP: Creating a kubernetes client @ 07/12/25 12:32:21.742
  I0712 12:32:21.742377 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename proxy @ 07/12/25 12:32:21.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:32:21.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:32:21.758
  I0712 12:32:21.762005 20 proxy.go:336] Creating pod...
  I0712 12:32:23.781107 20 proxy.go:360] Creating service...
  I0712 12:32:23.795429 20 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6839/pods/agnhost/proxy/some/path/with/DELETE
  I0712 12:32:23.802390 20 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0712 12:32:23.802418 20 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6839/pods/agnhost/proxy/some/path/with/GET
  I0712 12:32:23.806362 20 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0712 12:32:23.806387 20 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6839/pods/agnhost/proxy/some/path/with/HEAD
  I0712 12:32:23.812712 20 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I0712 12:32:23.812732 20 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6839/pods/agnhost/proxy/some/path/with/OPTIONS
  I0712 12:32:23.817555 20 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0712 12:32:23.817582 20 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6839/pods/agnhost/proxy/some/path/with/PATCH
  I0712 12:32:23.821375 20 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0712 12:32:23.821403 20 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6839/pods/agnhost/proxy/some/path/with/POST
  I0712 12:32:23.825316 20 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0712 12:32:23.825340 20 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6839/pods/agnhost/proxy/some/path/with/PUT
  I0712 12:32:23.829594 20 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0712 12:32:23.829618 20 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6839/services/test-service/proxy/some/path/with/DELETE
  I0712 12:32:23.834166 20 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0712 12:32:23.834221 20 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6839/services/test-service/proxy/some/path/with/GET
  I0712 12:32:23.840990 20 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0712 12:32:23.841025 20 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6839/services/test-service/proxy/some/path/with/HEAD
  I0712 12:32:23.847740 20 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I0712 12:32:23.847763 20 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6839/services/test-service/proxy/some/path/with/OPTIONS
  I0712 12:32:23.852357 20 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0712 12:32:23.852382 20 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6839/services/test-service/proxy/some/path/with/PATCH
  I0712 12:32:23.859345 20 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0712 12:32:23.859381 20 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6839/services/test-service/proxy/some/path/with/POST
  I0712 12:32:23.865780 20 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0712 12:32:23.865816 20 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6839/services/test-service/proxy/some/path/with/PUT
  I0712 12:32:23.871292 20 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0712 12:32:23.871412 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6839" for this suite. @ 07/12/25 12:32:23.877
• [2.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 07/12/25 12:32:23.885
  I0712 12:32:23.885358 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename field-validation @ 07/12/25 12:32:23.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:32:23.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:32:23.9
  I0712 12:32:23.903233 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  I0712 12:32:26.436633      20 warnings.go:110] "Warning: unknown field \"alpha\""
  I0712 12:32:26.436653      20 warnings.go:110] "Warning: unknown field \"beta\""
  I0712 12:32:26.436659      20 warnings.go:110] "Warning: unknown field \"delta\""
  I0712 12:32:26.436665      20 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0712 12:32:26.436671      20 warnings.go:110] "Warning: unknown field \"gamma\""
  I0712 12:32:26.977624 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4213" for this suite. @ 07/12/25 12:32:26.981
• [3.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:458
  STEP: Creating a kubernetes client @ 07/12/25 12:32:26.987
  I0712 12:32:26.987625 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename resourcequota @ 07/12/25 12:32:26.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:32:26.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:32:27.002
  STEP: Counting existing ResourceQuota @ 07/12/25 12:32:27.004
  STEP: Creating a ResourceQuota @ 07/12/25 12:32:32.009
  STEP: Ensuring resource quota status is calculated @ 07/12/25 12:32:32.014
  STEP: Creating a ReplicaSet @ 07/12/25 12:32:34.019
  STEP: Ensuring resource quota status captures replicaset creation @ 07/12/25 12:32:34.031
  STEP: Deleting a ReplicaSet @ 07/12/25 12:32:36.035
  STEP: Ensuring resource quota status released usage @ 07/12/25 12:32:36.042
  I0712 12:32:38.048589 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6165" for this suite. @ 07/12/25 12:32:38.052
• [11.072 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 07/12/25 12:32:38.06
  I0712 12:32:38.060389 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename container-runtime @ 07/12/25 12:32:38.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:32:38.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:32:38.074
  STEP: create the container @ 07/12/25 12:32:38.077
  I0712 12:32:38.085460      20 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 07/12/25 12:32:38.085
  STEP: get the container status @ 07/12/25 12:32:40.098
  STEP: the container should be terminated @ 07/12/25 12:32:40.102
  STEP: the termination message should be set @ 07/12/25 12:32:40.102
  I0712 12:32:40.102610 20 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 07/12/25 12:32:40.102
  I0712 12:32:40.120564 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-901" for this suite. @ 07/12/25 12:32:40.127
• [2.073 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:570
  STEP: Creating a kubernetes client @ 07/12/25 12:32:40.133
  I0712 12:32:40.133540 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename security-context-test @ 07/12/25 12:32:40.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:32:40.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:32:40.15
  I0712 12:32:42.174992 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6943" for this suite. @ 07/12/25 12:32:42.178
• [2.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:492
  STEP: Creating a kubernetes client @ 07/12/25 12:32:42.186
  I0712 12:32:42.186862 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename webhook @ 07/12/25 12:32:42.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:32:42.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:32:42.201
  STEP: Setting up server cert @ 07/12/25 12:32:42.219
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/12/25 12:32:42.486
  STEP: Deploying the webhook pod @ 07/12/25 12:32:42.495
  STEP: Wait for the deployment to be ready @ 07/12/25 12:32:42.507
  I0712 12:32:42.514771 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/12/25 12:32:44.528
  STEP: Verifying the service has paired with the endpoint @ 07/12/25 12:32:44.547
  I0712 12:32:45.547400 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 07/12/25 12:32:45.553
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 07/12/25 12:32:45.57
  STEP: Creating a configMap that should not be mutated @ 07/12/25 12:32:45.577
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 07/12/25 12:32:45.589
  STEP: Creating a configMap that should be mutated @ 07/12/25 12:32:45.597
  I0712 12:32:45.658646 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4132" for this suite. @ 07/12/25 12:32:45.663
  STEP: Destroying namespace "webhook-markers-6243" for this suite. @ 07/12/25 12:32:45.669
• [3.490 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 07/12/25 12:32:45.677
  I0712 12:32:45.677141 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename container-runtime @ 07/12/25 12:32:45.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:32:45.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:32:45.688
  STEP: create the container @ 07/12/25 12:32:45.691
  I0712 12:32:45.699792      20 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 07/12/25 12:32:45.699
  STEP: get the container status @ 07/12/25 12:32:48.72
  STEP: the container should be terminated @ 07/12/25 12:32:48.723
  STEP: the termination message should be set @ 07/12/25 12:32:48.723
  I0712 12:32:48.723796 20 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 07/12/25 12:32:48.723
  I0712 12:32:48.739073 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5282" for this suite. @ 07/12/25 12:32:48.743
• [3.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 07/12/25 12:32:48.751
  I0712 12:32:48.751556 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename init-container @ 07/12/25 12:32:48.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:32:48.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:32:48.766
  STEP: creating the pod @ 07/12/25 12:32:48.768
  I0712 12:32:48.768847 20 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I0712 12:33:30.126052 20 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-317c2e75-d6ea-41ce-ae99-849b0900b9f8", GenerateName:"", Namespace:"init-container-3595", SelfLink:"", UID:"dab34965-89e2-4555-831f-a13fea23bef2", ResourceVersion:"9621", Generation:1, CreationTimestamp:time.Date(2025, time.July, 12, 12, 32, 48, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"768840674"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 12, 32, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002e35410), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 12, 33, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002e35440), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-mmxjn", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc001706fc0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-mmxjn", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-mmxjn", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-mmxjn", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc002c08918), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-3-36", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc003c7ecf0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002c089a0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002c089c0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc002c089c8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc002c089cc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0013d0340), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{ObservedGeneration:0, Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 12, 12, 32, 50, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 12, 12, 32, 48, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 12, 12, 32, 48, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 12, 12, 32, 48, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 12, 12, 32, 48, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.3.36", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.3.36"}}, PodIP:"192.168.246.150", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.246.150"}}, StartTime:time.Date(2025, time.July, 12, 12, 32, 48, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc003c4f5e0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc003c4f650)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://34f54237ce056cf2fffaa27bf78610e84208d14492c84fc655384d2e2c6e3909", Started:(*bool)(0xc002c08a7a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(0xc003c89140), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-mmxjn", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc0013d0360)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc001707020), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc002c08a8d), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-mmxjn", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc0013d0370)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc001707000), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc002c08a4f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-mmxjn", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc0013d0350)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0712 12:33:30.126236 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3595" for this suite. @ 07/12/25 12:33:30.13
• [41.386 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:196
  STEP: Creating a kubernetes client @ 07/12/25 12:33:30.138
  I0712 12:33:30.138176 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/12/25 12:33:30.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:33:30.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:33:30.153
  I0712 12:33:30.155994 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/12/25 12:33:31.365
  I0712 12:33:31.365575 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=crd-publish-openapi-3245 --namespace=crd-publish-openapi-3245 create -f -'
  I0712 12:33:33.430634 20 builder.go:146] stderr: ""
  I0712 12:33:33.430735 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6297-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0712 12:33:33.430792 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=crd-publish-openapi-3245 --namespace=crd-publish-openapi-3245 delete e2e-test-crd-publish-openapi-6297-crds test-cr'
  I0712 12:33:33.481935 20 builder.go:146] stderr: ""
  I0712 12:33:33.481975 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6297-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0712 12:33:33.482021 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=crd-publish-openapi-3245 --namespace=crd-publish-openapi-3245 apply -f -'
  I0712 12:33:33.539149 20 builder.go:146] stderr: ""
  I0712 12:33:33.539181 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6297-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0712 12:33:33.539282 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=crd-publish-openapi-3245 --namespace=crd-publish-openapi-3245 delete e2e-test-crd-publish-openapi-6297-crds test-cr'
  I0712 12:33:33.587032 20 builder.go:146] stderr: ""
  I0712 12:33:33.587073 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6297-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 07/12/25 12:33:33.587
  I0712 12:33:33.587158 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=crd-publish-openapi-3245 explain e2e-test-crd-publish-openapi-6297-crds'
  I0712 12:33:33.653465 20 builder.go:146] stderr: ""
  I0712 12:33:33.653510 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-6297-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0712 12:33:34.850981 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3245" for this suite. @ 07/12/25 12:33:34.857
• [4.726 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should mark indexes as failed when the FailIndex action is matched in podFailurePolicy [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:730
  STEP: Creating a kubernetes client @ 07/12/25 12:33:34.864
  I0712 12:33:34.864651 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename job @ 07/12/25 12:33:34.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:33:34.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:33:34.879
  STEP: Creating an indexed job with failing pods matching the FailIndex action @ 07/12/25 12:33:34.881
  STEP: Awaiting for the job to fail as all indexes are failed @ 07/12/25 12:33:34.887
  STEP: Verifying the Job status fields to ensure the upper indexes didn't execute @ 07/12/25 12:33:38.899
  I0712 12:33:38.903196 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-360" for this suite. @ 07/12/25 12:33:38.907
• [4.049 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 07/12/25 12:33:38.913
  I0712 12:33:38.913918 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename volumeattachment @ 07/12/25 12:33:38.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:33:38.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:33:38.929
  STEP: Create VolumeAttachment "va-e2e-ngfs7" on node "ip-172-31-0-19" @ 07/12/25 12:33:39.007
  STEP: Get VolumeAttachment "va-e2e-ngfs7" on node "ip-172-31-0-19" @ 07/12/25 12:33:39.014
  STEP: Patch VolumeAttachment "va-e2e-ngfs7" on node "ip-172-31-0-19" @ 07/12/25 12:33:39.016
  STEP: List VolumeAttachments with "va-e2e-ngfs7=patched" label @ 07/12/25 12:33:39.022
  STEP: Delete VolumeAttachment "va-e2e-ngfs7" on node "ip-172-31-0-19" @ 07/12/25 12:33:39.025
  STEP: Confirm deletion of VolumeAttachment "va-e2e-ngfs7" on node "ip-172-31-0-19" @ 07/12/25 12:33:39.031
  STEP: Create VolumeAttachment "va-e2e-htgvd" on node "ip-172-31-82-38" @ 07/12/25 12:33:39.108
  STEP: Update the VolumeAttachment "va-e2e-htgvd" on node "ip-172-31-82-38" with label "va-e2e=updated" @ 07/12/25 12:33:39.113
  STEP: Create VolumeAttachment "va-e2e-jd99c" on node "ip-172-31-0-19" @ 07/12/25 12:33:39.209
  STEP: Update the VolumeAttachment "va-e2e-jd99c" on node "ip-172-31-0-19" with label "va-e2e=updated" @ 07/12/25 12:33:39.213
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 07/12/25 12:33:39.221
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 07/12/25 12:33:39.234
  I0712 12:33:39.236763 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-6037" for this suite. @ 07/12/25 12:33:39.309
• [0.404 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 07/12/25 12:33:39.318
  I0712 12:33:39.318313 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename job @ 07/12/25 12:33:39.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:33:39.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:33:39.329
  STEP: Looking for a node to schedule job pod @ 07/12/25 12:33:39.332
  STEP: Creating a job @ 07/12/25 12:33:39.409
  STEP: Ensuring job fails @ 07/12/25 12:33:39.415
  I0712 12:33:43.428183 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-100" for this suite. @ 07/12/25 12:33:43.432
• [4.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 07/12/25 12:33:43.439
  I0712 12:33:43.439414 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename crd-watch @ 07/12/25 12:33:43.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:33:43.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:33:43.456
  I0712 12:33:43.459243 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Creating first CR  @ 07/12/25 12:33:45.991
  I0712 12:33:45.996135 20 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-12T12:33:45Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-12T12:33:45Z]] name:name1 resourceVersion:9844 uid:446a4dcf-29b6-432a-8a2c-df73d918db68] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 07/12/25 12:33:55.996
  I0712 12:33:56.003731 20 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-12T12:33:55Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-12T12:33:55Z]] name:name2 resourceVersion:9886 uid:94d6420b-b3db-483a-8f6c-6e1c42a13989] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 07/12/25 12:34:06.004
  I0712 12:34:06.013452 20 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-12T12:33:45Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-12T12:34:06Z]] name:name1 resourceVersion:9908 uid:446a4dcf-29b6-432a-8a2c-df73d918db68] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 07/12/25 12:34:16.013
  I0712 12:34:16.019974 20 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-12T12:33:55Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-12T12:34:16Z]] name:name2 resourceVersion:9930 uid:94d6420b-b3db-483a-8f6c-6e1c42a13989] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 07/12/25 12:34:26.02
  I0712 12:34:26.030884 20 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-12T12:33:45Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-12T12:34:06Z]] name:name1 resourceVersion:9951 uid:446a4dcf-29b6-432a-8a2c-df73d918db68] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 07/12/25 12:34:36.031
  I0712 12:34:36.038882 20 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-12T12:33:55Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-12T12:34:16Z]] name:name2 resourceVersion:9973 uid:94d6420b-b3db-483a-8f6c-6e1c42a13989] num:map[num1:9223372036854775807 num2:1000000]]}
  I0712 12:34:46.550027 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-1758" for this suite. @ 07/12/25 12:34:46.555
• [63.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:209
  STEP: Creating a kubernetes client @ 07/12/25 12:34:46.562
  I0712 12:34:46.562935 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename dns @ 07/12/25 12:34:46.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:34:46.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:34:46.579
  STEP: Creating a test headless service @ 07/12/25 12:34:46.581
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4276 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-4276;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4276 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-4276;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4276.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-4276.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4276.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-4276.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4276.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-4276.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4276.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-4276.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4276.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-4276.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4276.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-4276.svc;check="$$(dig +notcp +noall +answer +search 139.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.139_udp@PTR;check="$$(dig +tcp +noall +answer +search 139.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.139_tcp@PTR;sleep 1; done
   @ 07/12/25 12:34:46.602
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4276 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4276;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4276 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4276;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4276.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4276.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4276.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4276.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4276.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-4276.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4276.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-4276.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4276.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-4276.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4276.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-4276.svc;check="$$(dig +notcp +noall +answer +search 139.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.139_udp@PTR;check="$$(dig +tcp +noall +answer +search 139.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.139_tcp@PTR;sleep 1; done
   @ 07/12/25 12:34:46.602
  STEP: creating a pod to probe DNS @ 07/12/25 12:34:46.602
  STEP: submitting the pod to kubernetes @ 07/12/25 12:34:46.602
  STEP: retrieving the pod @ 07/12/25 12:34:52.633
  STEP: looking for the results for each expected name from probers @ 07/12/25 12:34:52.636
  I0712 12:34:52.657501 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-4276.svc from pod dns-4276/dns-test-1d927dce-4ef1-4ec2-bac7-ab41dac62035: the server could not find the requested resource (get pods dns-test-1d927dce-4ef1-4ec2-bac7-ab41dac62035)
  I0712 12:34:52.661445 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-4276.svc from pod dns-4276/dns-test-1d927dce-4ef1-4ec2-bac7-ab41dac62035: the server could not find the requested resource (get pods dns-test-1d927dce-4ef1-4ec2-bac7-ab41dac62035)
  I0712 12:34:52.664836 20 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-4276.svc from pod dns-4276/dns-test-1d927dce-4ef1-4ec2-bac7-ab41dac62035: the server could not find the requested resource (get pods dns-test-1d927dce-4ef1-4ec2-bac7-ab41dac62035)
  I0712 12:34:52.668681 20 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-4276.svc from pod dns-4276/dns-test-1d927dce-4ef1-4ec2-bac7-ab41dac62035: the server could not find the requested resource (get pods dns-test-1d927dce-4ef1-4ec2-bac7-ab41dac62035)
  I0712 12:34:52.711843 20 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4276.svc from pod dns-4276/dns-test-1d927dce-4ef1-4ec2-bac7-ab41dac62035: the server could not find the requested resource (get pods dns-test-1d927dce-4ef1-4ec2-bac7-ab41dac62035)
  I0712 12:34:52.716082 20 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4276.svc from pod dns-4276/dns-test-1d927dce-4ef1-4ec2-bac7-ab41dac62035: the server could not find the requested resource (get pods dns-test-1d927dce-4ef1-4ec2-bac7-ab41dac62035)
  I0712 12:34:52.731975 20 dns_common.go:506] Lookups using dns-4276/dns-test-1d927dce-4ef1-4ec2-bac7-ab41dac62035 failed for: [agnhost_udp@dns-test-service.dns-4276.svc agnhost_tcp@dns-test-service.dns-4276.svc agnhost_udp@_http._tcp.dns-test-service.dns-4276.svc agnhost_tcp@_http._tcp.dns-test-service.dns-4276.svc jessie_udp@_http._tcp.dns-test-service.dns-4276.svc jessie_tcp@_http._tcp.dns-test-service.dns-4276.svc]

  I0712 12:34:52.742737 20 dns_common.go:514] Pod client logs for webserver: 
  I0712 12:34:52.749000 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0712 12:34:52.755746 20 dns_common.go:514] Pod client logs for jessie-querier: 
  I0712 12:34:57.736254 20 dns_common.go:546] DNS probes using dns-4276/dns-test-1d927dce-4ef1-4ec2-bac7-ab41dac62035 succeeded

  STEP: deleting the pod @ 07/12/25 12:34:57.736
  STEP: deleting the test service @ 07/12/25 12:34:57.76
  STEP: deleting the test headless service @ 07/12/25 12:34:57.795
  I0712 12:34:57.808355 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4276" for this suite. @ 07/12/25 12:34:57.913
• [11.361 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 07/12/25 12:34:57.923
  I0712 12:34:57.923512 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename var-expansion @ 07/12/25 12:34:57.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:34:57.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:34:57.939
  STEP: Creating a pod to test env composition @ 07/12/25 12:34:57.946
  STEP: Saw pod success @ 07/12/25 12:35:01.976
  I0712 12:35:01.979839 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod var-expansion-eb4785fd-4326-49dd-9d05-1e25d8330e66 container dapi-container: <nil>
  STEP: delete the pod @ 07/12/25 12:35:01.987
  I0712 12:35:02.004704 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6832" for this suite. @ 07/12/25 12:35:02.008
• [4.090 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2207
  STEP: Creating a kubernetes client @ 07/12/25 12:35:02.013
  I0712 12:35:02.013925 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename services @ 07/12/25 12:35:02.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:35:02.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:35:02.029
  STEP: creating service in namespace services-4087 @ 07/12/25 12:35:02.031
  STEP: creating service affinity-clusterip-transition in namespace services-4087 @ 07/12/25 12:35:02.031
  I0712 12:35:02.059482 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0712 12:35:04.064509 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 12, 12, 35, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 12, 35, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 12, 12, 35, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 12, 35, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-clusterip-transition-5cffb65545\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0712 12:35:06.077622 20 resource.go:361] Creating new exec pod
  I0712 12:35:08.095626 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-4087 exec execpod-affinityhpztp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0712 12:35:08.178262 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.152.183.216) 80 port [tcp/http] succeeded!\n"
  I0712 12:35:08.178298 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0712 12:35:08.178362 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-4087 exec execpod-affinityhpztp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.216 80'
  I0712 12:35:08.259238 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.216 80\nConnection to 10.152.183.216 80 port [tcp/http] succeeded!\n"
  I0712 12:35:08.259280 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0712 12:35:08.267060 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-4087 exec execpod-affinityhpztp -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.216:80/ ; done'
  I0712 12:35:08.408817 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.216:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.216:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.216:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.216:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.216:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.216:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.216:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.216:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.216:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.216:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.216:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.216:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.216:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.216:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.216:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.216:80/\n"
  I0712 12:35:08.408859 20 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-9ttsb\naffinity-clusterip-transition-5cffb65545-5mbf6\naffinity-clusterip-transition-5cffb65545-5mbf6\naffinity-clusterip-transition-5cffb65545-9ttsb\naffinity-clusterip-transition-5cffb65545-5mbf6\naffinity-clusterip-transition-5cffb65545-9ttsb\naffinity-clusterip-transition-5cffb65545-vprcx\naffinity-clusterip-transition-5cffb65545-vprcx\naffinity-clusterip-transition-5cffb65545-9ttsb\naffinity-clusterip-transition-5cffb65545-5mbf6\naffinity-clusterip-transition-5cffb65545-5mbf6\naffinity-clusterip-transition-5cffb65545-5mbf6\naffinity-clusterip-transition-5cffb65545-9ttsb\naffinity-clusterip-transition-5cffb65545-9ttsb\naffinity-clusterip-transition-5cffb65545-5mbf6\naffinity-clusterip-transition-5cffb65545-vprcx"
  I0712 12:35:08.408872 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-9ttsb
  I0712 12:35:08.408880 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5mbf6
  I0712 12:35:08.408887 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5mbf6
  I0712 12:35:08.408893 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-9ttsb
  I0712 12:35:08.408901 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5mbf6
  I0712 12:35:08.408907 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-9ttsb
  I0712 12:35:08.408913 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vprcx
  I0712 12:35:08.408923 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vprcx
  I0712 12:35:08.408932 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-9ttsb
  I0712 12:35:08.409036 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5mbf6
  I0712 12:35:08.409043 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5mbf6
  I0712 12:35:08.409051 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5mbf6
  I0712 12:35:08.409057 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-9ttsb
  I0712 12:35:08.409064 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-9ttsb
  I0712 12:35:08.409070 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5mbf6
  I0712 12:35:08.409076 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vprcx
  I0712 12:35:08.418254 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-4087 exec execpod-affinityhpztp -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.216:80/ ; done'
  I0712 12:35:08.578322 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.216:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.216:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.216:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.216:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.216:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.216:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.216:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.216:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.216:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.216:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.216:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.216:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.216:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.216:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.216:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.216:80/\n"
  I0712 12:35:08.578367 20 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-vprcx\naffinity-clusterip-transition-5cffb65545-vprcx\naffinity-clusterip-transition-5cffb65545-vprcx\naffinity-clusterip-transition-5cffb65545-vprcx\naffinity-clusterip-transition-5cffb65545-vprcx\naffinity-clusterip-transition-5cffb65545-vprcx\naffinity-clusterip-transition-5cffb65545-vprcx\naffinity-clusterip-transition-5cffb65545-vprcx\naffinity-clusterip-transition-5cffb65545-vprcx\naffinity-clusterip-transition-5cffb65545-vprcx\naffinity-clusterip-transition-5cffb65545-vprcx\naffinity-clusterip-transition-5cffb65545-vprcx\naffinity-clusterip-transition-5cffb65545-vprcx\naffinity-clusterip-transition-5cffb65545-vprcx\naffinity-clusterip-transition-5cffb65545-vprcx\naffinity-clusterip-transition-5cffb65545-vprcx"
  I0712 12:35:08.578380 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vprcx
  I0712 12:35:08.578389 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vprcx
  I0712 12:35:08.578396 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vprcx
  I0712 12:35:08.578402 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vprcx
  I0712 12:35:08.578408 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vprcx
  I0712 12:35:08.578414 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vprcx
  I0712 12:35:08.578420 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vprcx
  I0712 12:35:08.578427 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vprcx
  I0712 12:35:08.578438 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vprcx
  I0712 12:35:08.578443 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vprcx
  I0712 12:35:08.578449 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vprcx
  I0712 12:35:08.578455 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vprcx
  I0712 12:35:08.578461 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vprcx
  I0712 12:35:08.578468 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vprcx
  I0712 12:35:08.578474 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vprcx
  I0712 12:35:08.578479 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vprcx
  I0712 12:35:08.578551 20 service.go:4352] Cleaning up the exec pod
  I0712 12:35:08.633419 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4087" for this suite. @ 07/12/25 12:35:08.64
• [6.634 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:169
  STEP: Creating a kubernetes client @ 07/12/25 12:35:08.648
  I0712 12:35:08.648356 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename emptydir @ 07/12/25 12:35:08.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:35:08.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:35:08.663
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 07/12/25 12:35:08.664
  STEP: Saw pod success @ 07/12/25 12:35:12.682
  I0712 12:35:12.685999 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-b2220728-6902-4ac4-a9f4-d1ffc9cb7400 container test-container: <nil>
  STEP: delete the pod @ 07/12/25 12:35:12.694
  I0712 12:35:12.711588 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6591" for this suite. @ 07/12/25 12:35:12.715
• [4.075 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:811
  STEP: Creating a kubernetes client @ 07/12/25 12:35:12.723
  I0712 12:35:12.723378 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename statefulset @ 07/12/25 12:35:12.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:35:12.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:35:12.736
  STEP: Creating service test in namespace statefulset-6671 @ 07/12/25 12:35:12.738
  STEP: Looking for a node to schedule stateful set and pod @ 07/12/25 12:35:12.747
  STEP: Creating pod with conflicting port in namespace statefulset-6671 @ 07/12/25 12:35:12.816
  STEP: Waiting until pod test-pod will start running in namespace statefulset-6671 @ 07/12/25 12:35:12.826
  STEP: Creating statefulset with conflicting port in namespace statefulset-6671 @ 07/12/25 12:35:14.834
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-6671 @ 07/12/25 12:35:14.84
  I0712 12:35:14.851939 20 statefulset.go:884] Observed stateful pod in namespace: statefulset-6671, name: ss-0, uid: 0bff7f09-34fb-42f8-90de-149ef9b8b782, status phase: Pending. Waiting for statefulset controller to delete.
  I0712 12:35:14.866413 20 statefulset.go:884] Observed stateful pod in namespace: statefulset-6671, name: ss-0, uid: 0bff7f09-34fb-42f8-90de-149ef9b8b782, status phase: Failed. Waiting for statefulset controller to delete.
  I0712 12:35:14.886945 20 statefulset.go:884] Observed stateful pod in namespace: statefulset-6671, name: ss-0, uid: 0bff7f09-34fb-42f8-90de-149ef9b8b782, status phase: Failed. Waiting for statefulset controller to delete.
  I0712 12:35:14.893306 20 statefulset.go:878] Observed delete event for stateful pod ss-0 in namespace statefulset-6671
  STEP: Removing pod with conflicting port in namespace statefulset-6671 @ 07/12/25 12:35:14.893
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-6671 and will be in running state @ 07/12/25 12:35:14.91
  I0712 12:35:16.918117 20 statefulset.go:138] Deleting all statefulset in ns statefulset-6671
  I0712 12:35:16.921910 20 rest.go:153] Scaling statefulset ss to 0
  I0712 12:35:26.936836 20 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0712 12:35:26.939595 20 rest.go:91] Deleting statefulset ss
  I0712 12:35:26.952388 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6671" for this suite. @ 07/12/25 12:35:27.057
• [14.343 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 07/12/25 12:35:27.067
  I0712 12:35:27.067011 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename kubectl-logs @ 07/12/25 12:35:27.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:35:27.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:35:27.082
  STEP: creating a pod @ 07/12/25 12:35:27.084
  I0712 12:35:27.084364 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-logs-6914 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0712 12:35:27.133309 20 builder.go:146] stderr: ""
  I0712 12:35:27.133336 20 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 07/12/25 12:35:27.133
  I0712 12:35:27.133508 20 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0712 12:35:29.141267 20 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 07/12/25 12:35:29.141
  I0712 12:35:29.141370 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-logs-6914 logs logs-generator logs-generator'
  I0712 12:35:29.196640 20 builder.go:146] stderr: ""
  I0712 12:35:29.196685 20 builder.go:147] stdout: "I0712 12:35:27.697458       1 logs_generator.go:76] 0 POST /api/v1/namespaces/kube-system/pods/wtl 420\nI0712 12:35:27.897565       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/w9g5 234\nI0712 12:35:28.097965       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/825 537\nI0712 12:35:28.298283       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/666 473\nI0712 12:35:28.497517       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/default/pods/g8h 334\nI0712 12:35:28.697848       1 logs_generator.go:76] 5 POST /api/v1/namespaces/ns/pods/h59 263\nI0712 12:35:28.898149       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/8p9 355\nI0712 12:35:29.098298       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/zgr8 511\n"
  STEP: limiting log lines @ 07/12/25 12:35:29.196
  I0712 12:35:29.196755 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-logs-6914 logs logs-generator logs-generator --tail=1'
  I0712 12:35:29.253144 20 builder.go:146] stderr: ""
  I0712 12:35:29.253179 20 builder.go:147] stdout: "I0712 12:35:29.098298       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/zgr8 511\n"
  I0712 12:35:29.253189 20 logs.go:180] got output "I0712 12:35:29.098298       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/zgr8 511\n"
  STEP: limiting log bytes @ 07/12/25 12:35:29.253
  I0712 12:35:29.253276 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-logs-6914 logs logs-generator logs-generator --limit-bytes=1'
  I0712 12:35:29.304365 20 builder.go:146] stderr: ""
  I0712 12:35:29.304397 20 builder.go:147] stdout: "I"
  I0712 12:35:29.304406 20 logs.go:186] got output "I"
  STEP: exposing timestamps @ 07/12/25 12:35:29.304
  I0712 12:35:29.304471 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-logs-6914 logs logs-generator logs-generator --tail=1 --timestamps'
  I0712 12:35:29.354635 20 builder.go:146] stderr: ""
  I0712 12:35:29.354666 20 builder.go:147] stdout: "2025-07-12T12:35:29.297724956Z I0712 12:35:29.297594       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/9qjt 415\n"
  I0712 12:35:29.354676 20 logs.go:192] got output "2025-07-12T12:35:29.297724956Z I0712 12:35:29.297594       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/9qjt 415\n"
  STEP: restricting to a time range @ 07/12/25 12:35:29.354
  I0712 12:35:31.854894 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-logs-6914 logs logs-generator logs-generator --since=1s'
  I0712 12:35:31.908309 20 builder.go:146] stderr: ""
  I0712 12:35:31.908346 20 builder.go:147] stdout: "I0712 12:35:31.098150       1 logs_generator.go:76] 17 GET /api/v1/namespaces/default/pods/85n2 501\nI0712 12:35:31.298457       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/swgw 417\nI0712 12:35:31.497549       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/qdd 441\nI0712 12:35:31.697926       1 logs_generator.go:76] 20 GET /api/v1/namespaces/ns/pods/pn82 531\nI0712 12:35:31.898221       1 logs_generator.go:76] 21 GET /api/v1/namespaces/kube-system/pods/mppc 263\n"
  I0712 12:35:31.908395 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-logs-6914 logs logs-generator logs-generator --since=24h'
  I0712 12:35:31.960368 20 builder.go:146] stderr: ""
  I0712 12:35:31.960415 20 builder.go:147] stdout: "I0712 12:35:27.697458       1 logs_generator.go:76] 0 POST /api/v1/namespaces/kube-system/pods/wtl 420\nI0712 12:35:27.897565       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/w9g5 234\nI0712 12:35:28.097965       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/825 537\nI0712 12:35:28.298283       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/666 473\nI0712 12:35:28.497517       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/default/pods/g8h 334\nI0712 12:35:28.697848       1 logs_generator.go:76] 5 POST /api/v1/namespaces/ns/pods/h59 263\nI0712 12:35:28.898149       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/8p9 355\nI0712 12:35:29.098298       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/zgr8 511\nI0712 12:35:29.297594       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/9qjt 415\nI0712 12:35:29.497855       1 logs_generator.go:76] 9 GET /api/v1/namespaces/default/pods/hcvh 222\nI0712 12:35:29.698161       1 logs_generator.go:76] 10 GET /api/v1/namespaces/ns/pods/8r4m 313\nI0712 12:35:29.898464       1 logs_generator.go:76] 11 GET /api/v1/namespaces/ns/pods/pwjv 544\nI0712 12:35:30.097767       1 logs_generator.go:76] 12 GET /api/v1/namespaces/ns/pods/6bz 385\nI0712 12:35:30.297930       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/default/pods/sg5 475\nI0712 12:35:30.498221       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/default/pods/f5c6 267\nI0712 12:35:30.698522       1 logs_generator.go:76] 15 GET /api/v1/namespaces/kube-system/pods/w9m 510\nI0712 12:35:30.897872       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/gq6t 586\nI0712 12:35:31.098150       1 logs_generator.go:76] 17 GET /api/v1/namespaces/default/pods/85n2 501\nI0712 12:35:31.298457       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/swgw 417\nI0712 12:35:31.497549       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/qdd 441\nI0712 12:35:31.697926       1 logs_generator.go:76] 20 GET /api/v1/namespaces/ns/pods/pn82 531\nI0712 12:35:31.898221       1 logs_generator.go:76] 21 GET /api/v1/namespaces/kube-system/pods/mppc 263\n"
  I0712 12:35:31.960492 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-logs-6914 delete pod logs-generator'
  I0712 12:35:33.134586 20 builder.go:146] stderr: ""
  I0712 12:35:33.134625 20 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0712 12:35:33.134827 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-6914" for this suite. @ 07/12/25 12:35:33.138
• [6.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2244
  STEP: Creating a kubernetes client @ 07/12/25 12:35:33.144
  I0712 12:35:33.144581 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename services @ 07/12/25 12:35:33.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:35:33.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:35:33.162
  STEP: creating service in namespace services-7567 @ 07/12/25 12:35:33.164
  STEP: creating service affinity-nodeport-transition in namespace services-7567 @ 07/12/25 12:35:33.164
  I0712 12:35:33.198451 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0712 12:35:35.220528 20 resource.go:361] Creating new exec pod
  I0712 12:35:37.243260 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-7567 exec execpod-affinity67hbl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0712 12:35:37.331616 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.152.183.56) 80 port [tcp/http] succeeded!\n"
  I0712 12:35:37.331656 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0712 12:35:37.331785 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-7567 exec execpod-affinity67hbl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.56 80'
  I0712 12:35:37.414430 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.56 80\nConnection to 10.152.183.56 80 port [tcp/http] succeeded!\n"
  I0712 12:35:37.414471 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0712 12:35:37.414560 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-7567 exec execpod-affinity67hbl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.39.13 30464'
  I0712 12:35:37.494686 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.39.13 30464\nConnection to 172.31.39.13 30464 port [tcp/*] succeeded!\n"
  I0712 12:35:37.494727 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0712 12:35:37.494802 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-7567 exec execpod-affinity67hbl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.36 30464'
  I0712 12:35:37.597420 20 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.3.36 30464\n+ echo hostName\nConnection to 172.31.3.36 30464 port [tcp/*] succeeded!\n"
  I0712 12:35:37.597534 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0712 12:35:37.609636 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-7567 exec execpod-affinity67hbl -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:30464/ ; done'
  I0712 12:35:37.784355 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:30464/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:30464/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:30464/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:30464/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:30464/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:30464/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:30464/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:30464/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:30464/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:30464/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:30464/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:30464/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:30464/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:30464/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:30464/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:30464/\n"
  I0712 12:35:37.784409 20 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-h9rps\naffinity-nodeport-transition-7d57658b6c-q56v4\naffinity-nodeport-transition-7d57658b6c-q56v4\naffinity-nodeport-transition-7d57658b6c-q56v4\naffinity-nodeport-transition-7d57658b6c-q56v4\naffinity-nodeport-transition-7d57658b6c-bwgf7\naffinity-nodeport-transition-7d57658b6c-h9rps\naffinity-nodeport-transition-7d57658b6c-q56v4\naffinity-nodeport-transition-7d57658b6c-q56v4\naffinity-nodeport-transition-7d57658b6c-h9rps\naffinity-nodeport-transition-7d57658b6c-q56v4\naffinity-nodeport-transition-7d57658b6c-h9rps\naffinity-nodeport-transition-7d57658b6c-bwgf7\naffinity-nodeport-transition-7d57658b6c-bwgf7\naffinity-nodeport-transition-7d57658b6c-q56v4\naffinity-nodeport-transition-7d57658b6c-q56v4"
  I0712 12:35:37.784441 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-h9rps
  I0712 12:35:37.784451 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-q56v4
  I0712 12:35:37.784459 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-q56v4
  I0712 12:35:37.784470 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-q56v4
  I0712 12:35:37.784476 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-q56v4
  I0712 12:35:37.784482 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bwgf7
  I0712 12:35:37.784488 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-h9rps
  I0712 12:35:37.784494 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-q56v4
  I0712 12:35:37.784568 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-q56v4
  I0712 12:35:37.784688 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-h9rps
  I0712 12:35:37.784696 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-q56v4
  I0712 12:35:37.784703 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-h9rps
  I0712 12:35:37.784710 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bwgf7
  I0712 12:35:37.784727 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bwgf7
  I0712 12:35:37.784734 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-q56v4
  I0712 12:35:37.784741 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-q56v4
  I0712 12:35:37.793175 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-7567 exec execpod-affinity67hbl -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:30464/ ; done'
  I0712 12:35:37.988975 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:30464/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:30464/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:30464/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:30464/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:30464/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:30464/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:30464/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:30464/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:30464/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:30464/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:30464/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:30464/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:30464/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:30464/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:30464/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:30464/\n"
  I0712 12:35:37.989027 20 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-bwgf7\naffinity-nodeport-transition-7d57658b6c-bwgf7\naffinity-nodeport-transition-7d57658b6c-bwgf7\naffinity-nodeport-transition-7d57658b6c-bwgf7\naffinity-nodeport-transition-7d57658b6c-bwgf7\naffinity-nodeport-transition-7d57658b6c-bwgf7\naffinity-nodeport-transition-7d57658b6c-bwgf7\naffinity-nodeport-transition-7d57658b6c-bwgf7\naffinity-nodeport-transition-7d57658b6c-bwgf7\naffinity-nodeport-transition-7d57658b6c-bwgf7\naffinity-nodeport-transition-7d57658b6c-bwgf7\naffinity-nodeport-transition-7d57658b6c-bwgf7\naffinity-nodeport-transition-7d57658b6c-bwgf7\naffinity-nodeport-transition-7d57658b6c-bwgf7\naffinity-nodeport-transition-7d57658b6c-bwgf7\naffinity-nodeport-transition-7d57658b6c-bwgf7"
  I0712 12:35:37.989039 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bwgf7
  I0712 12:35:37.989048 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bwgf7
  I0712 12:35:37.989055 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bwgf7
  I0712 12:35:37.989062 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bwgf7
  I0712 12:35:37.989069 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bwgf7
  I0712 12:35:37.989075 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bwgf7
  I0712 12:35:37.989080 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bwgf7
  I0712 12:35:37.989087 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bwgf7
  I0712 12:35:37.989094 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bwgf7
  I0712 12:35:37.989103 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bwgf7
  I0712 12:35:37.989109 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bwgf7
  I0712 12:35:37.989114 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bwgf7
  I0712 12:35:37.989120 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bwgf7
  I0712 12:35:37.989126 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bwgf7
  I0712 12:35:37.989132 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bwgf7
  I0712 12:35:37.989139 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-bwgf7
  I0712 12:35:37.989238 20 service.go:4352] Cleaning up the exec pod
  I0712 12:35:38.054783 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7567" for this suite. @ 07/12/25 12:35:38.058
• [4.918 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 07/12/25 12:35:38.062
  I0712 12:35:38.062890 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename job @ 07/12/25 12:35:38.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:35:38.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:35:38.077
  STEP: Looking for a node to schedule job pods @ 07/12/25 12:35:38.079
  STEP: Creating a job @ 07/12/25 12:35:38.158
  STEP: Waiting for all the pods to be ready @ 07/12/25 12:35:38.164
  STEP: Fetch all running pods @ 07/12/25 12:35:42.177
  STEP: Evict all the Pods @ 07/12/25 12:35:42.181
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-mwr7c/job-6116 @ 07/12/25 12:35:42.181
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-l2nqh/job-6116 @ 07/12/25 12:35:42.181
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-q62zc/job-6116 @ 07/12/25 12:35:42.181
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-l2nqh/job-6116 to be deleted @ 07/12/25 12:35:42.201
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-q62zc/job-6116 to be deleted @ 07/12/25 12:35:42.21
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-mwr7c/job-6116 to be deleted @ 07/12/25 12:35:42.21
  STEP: Ensuring job reaches completions @ 07/12/25 12:35:48.227
  I0712 12:36:28.324651 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6116" for this suite. @ 07/12/25 12:36:28.328
• [50.272 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:71
  STEP: Creating a kubernetes client @ 07/12/25 12:36:28.334
  I0712 12:36:28.334471 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/12/25 12:36:28.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:36:28.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:36:28.35
  I0712 12:36:28.352034 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 07/12/25 12:36:29.62
  I0712 12:36:29.620759 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=crd-publish-openapi-2086 --namespace=crd-publish-openapi-2086 create -f -'
  I0712 12:36:31.688237 20 builder.go:146] stderr: ""
  I0712 12:36:31.688281 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9578-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0712 12:36:31.688346 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=crd-publish-openapi-2086 --namespace=crd-publish-openapi-2086 delete e2e-test-crd-publish-openapi-9578-crds test-foo'
  I0712 12:36:31.738508 20 builder.go:146] stderr: ""
  I0712 12:36:31.738541 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9578-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0712 12:36:31.738591 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=crd-publish-openapi-2086 --namespace=crd-publish-openapi-2086 apply -f -'
  I0712 12:36:31.801138 20 builder.go:146] stderr: ""
  I0712 12:36:31.801171 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9578-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0712 12:36:31.801299 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=crd-publish-openapi-2086 --namespace=crd-publish-openapi-2086 delete e2e-test-crd-publish-openapi-9578-crds test-foo'
  I0712 12:36:31.848555 20 builder.go:146] stderr: ""
  I0712 12:36:31.848584 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9578-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 07/12/25 12:36:31.848
  I0712 12:36:31.848702 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=crd-publish-openapi-2086 --namespace=crd-publish-openapi-2086 create -f -'
  I0712 12:36:31.890388 20 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 07/12/25 12:36:31.89
  I0712 12:36:31.890555 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=crd-publish-openapi-2086 --namespace=crd-publish-openapi-2086 create -f -'
  I0712 12:36:31.933771 20 builder.go:135] rc: 1
  I0712 12:36:31.933832 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=crd-publish-openapi-2086 --namespace=crd-publish-openapi-2086 apply -f -'
  I0712 12:36:31.980284 20 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 07/12/25 12:36:31.98
  I0712 12:36:31.980373 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=crd-publish-openapi-2086 --namespace=crd-publish-openapi-2086 create -f -'
  I0712 12:36:32.023362 20 builder.go:135] rc: 1
  I0712 12:36:32.023498 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=crd-publish-openapi-2086 --namespace=crd-publish-openapi-2086 apply -f -'
  I0712 12:36:32.075153 20 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 07/12/25 12:36:32.075
  I0712 12:36:32.075284 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=crd-publish-openapi-2086 explain e2e-test-crd-publish-openapi-9578-crds'
  I0712 12:36:32.119573 20 builder.go:146] stderr: ""
  I0712 12:36:32.119618 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9578-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 07/12/25 12:36:32.119
  I0712 12:36:32.119928 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=crd-publish-openapi-2086 explain e2e-test-crd-publish-openapi-9578-crds.metadata'
  I0712 12:36:32.161445 20 builder.go:146] stderr: ""
  I0712 12:36:32.161558 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9578-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0712 12:36:32.161744 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=crd-publish-openapi-2086 explain e2e-test-crd-publish-openapi-9578-crds.spec'
  I0712 12:36:32.202015 20 builder.go:146] stderr: ""
  I0712 12:36:32.202047 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9578-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0712 12:36:32.202121 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=crd-publish-openapi-2086 explain e2e-test-crd-publish-openapi-9578-crds.spec.bars'
  I0712 12:36:32.242467 20 builder.go:146] stderr: ""
  I0712 12:36:32.242499 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9578-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 07/12/25 12:36:32.242
  I0712 12:36:32.242752 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=crd-publish-openapi-2086 explain e2e-test-crd-publish-openapi-9578-crds.spec.bars2'
  I0712 12:36:32.282839 20 builder.go:135] rc: 1
  I0712 12:36:33.509982 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2086" for this suite. @ 07/12/25 12:36:33.516
• [5.188 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:814
  STEP: Creating a kubernetes client @ 07/12/25 12:36:33.522
  I0712 12:36:33.522588 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename services @ 07/12/25 12:36:33.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:36:33.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:36:33.543
  STEP: creating service multi-endpoint-test in namespace services-2115 @ 07/12/25 12:36:33.545
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2115 to expose endpoints map[] @ 07/12/25 12:36:33.567
  I0712 12:36:33.577546      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0712 12:36:33.583444 20 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-2115 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-2115 @ 07/12/25 12:36:33.583
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2115 to expose endpoints map[pod1:[100]] @ 07/12/25 12:36:35.604
  I0712 12:36:35.611147      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0712 12:36:35.615688 20 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-2115 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-2115 @ 07/12/25 12:36:35.615
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2115 to expose endpoints map[pod1:[100] pod2:[101]] @ 07/12/25 12:36:37.635
  I0712 12:36:37.645183      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0712 12:36:37.651248 20 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-2115 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 07/12/25 12:36:37.651
  I0712 12:36:37.651291 20 resource.go:361] Creating new exec pod
  I0712 12:36:39.672915 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-2115 exec execpodcwl9z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0712 12:36:39.762320 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.152.183.62) 80 port [tcp/http] succeeded!\n"
  I0712 12:36:39.762371 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0712 12:36:39.762448 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-2115 exec execpodcwl9z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.62 80'
  I0712 12:36:39.839032 20 builder.go:146] stderr: "+ + nc -v -t -w 2 10.152.183.62 80\necho hostName\nConnection to 10.152.183.62 80 port [tcp/http] succeeded!\n"
  I0712 12:36:39.839080 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0712 12:36:39.839151 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-2115 exec execpodcwl9z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0712 12:36:39.922154 20 builder.go:146] stderr: "+ nc -v -t -w 2 multi-endpoint-test 81\n+ echo hostName\nConnection to multi-endpoint-test (10.152.183.62) 81 port [tcp/*] succeeded!\n"
  I0712 12:36:39.922222 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0712 12:36:39.922293 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-2115 exec execpodcwl9z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.62 81'
  I0712 12:36:40.004744 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.62 81\nConnection to 10.152.183.62 81 port [tcp/*] succeeded!\n"
  I0712 12:36:40.004791 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-2115 @ 07/12/25 12:36:40.004
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2115 to expose endpoints map[pod2:[101]] @ 07/12/25 12:36:40.023
  I0712 12:36:40.030896      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0712 12:36:40.034684 20 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-2115 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-2115 @ 07/12/25 12:36:40.034
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2115 to expose endpoints map[] @ 07/12/25 12:36:40.052
  I0712 12:36:40.055347      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0712 12:36:41.066365      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0712 12:36:41.071439 20 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-2115 exposes endpoints map[]
  I0712 12:36:41.091351 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2115" for this suite. @ 07/12/25 12:36:41.094
• [7.579 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 07/12/25 12:36:41.101
  I0712 12:36:41.101966 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename field-validation @ 07/12/25 12:36:41.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:36:41.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:36:41.118
  STEP: apply creating a deployment @ 07/12/25 12:36:41.12
  I0712 12:36:41.130850 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6897" for this suite. @ 07/12/25 12:36:41.195
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 07/12/25 12:36:41.204
  I0712 12:36:41.204828 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename tables @ 07/12/25 12:36:41.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:36:41.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:36:41.217
  I0712 12:36:41.221571 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-5764" for this suite. @ 07/12/25 12:36:41.295
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 07/12/25 12:36:41.302
  I0712 12:36:41.302902 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename daemonsets @ 07/12/25 12:36:41.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:36:41.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:36:41.321
  STEP: Creating simple DaemonSet "daemon-set" @ 07/12/25 12:36:41.405
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/12/25 12:36:41.412
  I0712 12:36:41.507383 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:36:41.507429 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:36:41.510570 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0712 12:36:41.510589 20 fixtures.go:131] Node ip-172-31-23-206 is running 0 daemon pod, expected 1
  I0712 12:36:42.417194 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:36:42.417383 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:36:42.420991 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0712 12:36:42.421019 20 fixtures.go:131] Node ip-172-31-23-206 is running 0 daemon pod, expected 1
  I0712 12:36:43.418494 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:36:43.418545 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:36:43.422084 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0712 12:36:43.422107 20 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 07/12/25 12:36:43.425
  I0712 12:36:43.519532 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:36:43.519571 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:36:43.523925 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0712 12:36:43.523961 20 fixtures.go:131] Node ip-172-31-23-206 is running 0 daemon pod, expected 1
  I0712 12:36:44.441843 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:36:44.441895 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:36:44.445258 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0712 12:36:44.445278 20 fixtures.go:131] Node ip-172-31-23-206 is running 0 daemon pod, expected 1
  I0712 12:36:45.440856 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:36:45.440898 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:36:45.444328 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0712 12:36:45.444348 20 fixtures.go:131] Node ip-172-31-23-206 is running 0 daemon pod, expected 1
  I0712 12:36:46.440696 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:36:46.440758 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 12:36:46.443797 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0712 12:36:46.443822 20 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/12/25 12:36:46.446
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2226, will wait for the garbage collector to delete the pods @ 07/12/25 12:36:46.446
  I0712 12:36:46.507305 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.707096ms
  I0712 12:36:46.607714 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.404209ms
  I0712 12:36:48.112530 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0712 12:36:48.112565 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0712 12:36:48.116256 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"11252"},"items":null}

  I0712 12:36:48.119308 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"11252"},"items":null}

  I0712 12:36:48.130856 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2226" for this suite. @ 07/12/25 12:36:48.134
• [6.838 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 07/12/25 12:36:48.141
  I0712 12:36:48.141241 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename webhook @ 07/12/25 12:36:48.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:36:48.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:36:48.156
  STEP: Setting up server cert @ 07/12/25 12:36:48.181
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/12/25 12:36:48.521
  STEP: Deploying the webhook pod @ 07/12/25 12:36:48.527
  STEP: Wait for the deployment to be ready @ 07/12/25 12:36:48.541
  I0712 12:36:48.546413 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/12/25 12:36:50.557
  STEP: Verifying the service has paired with the endpoint @ 07/12/25 12:36:50.573
  I0712 12:36:51.573835 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 07/12/25 12:36:51.578
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/12/25 12:36:51.578
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 07/12/25 12:36:51.593
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 07/12/25 12:36:52.603
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/12/25 12:36:52.603
  STEP: Having no error when timeout is longer than webhook latency @ 07/12/25 12:36:53.634
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/12/25 12:36:53.635
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 07/12/25 12:36:58.667
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/12/25 12:36:58.667
  I0712 12:37:03.753446 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6482" for this suite. @ 07/12/25 12:37:03.758
  STEP: Destroying namespace "webhook-markers-4468" for this suite. @ 07/12/25 12:37:03.765
• [15.630 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 07/12/25 12:37:03.77
  I0712 12:37:03.770806 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/12/25 12:37:03.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:37:03.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:37:03.789
  STEP: create the container to handle the HTTPGet hook request. @ 07/12/25 12:37:03.859
  STEP: create the pod with lifecycle hook @ 07/12/25 12:37:05.886
  STEP: check poststart hook @ 07/12/25 12:37:07.906
  STEP: delete the pod with lifecycle hook @ 07/12/25 12:37:07.919
  I0712 12:37:09.935980 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4208" for this suite. @ 07/12/25 12:37:09.939
• [6.177 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:817
  STEP: Creating a kubernetes client @ 07/12/25 12:37:09.947
  I0712 12:37:09.947941 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename webhook @ 07/12/25 12:37:09.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:37:09.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:37:09.96
  STEP: Setting up server cert @ 07/12/25 12:37:09.977
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/12/25 12:37:10.435
  STEP: Deploying the webhook pod @ 07/12/25 12:37:10.442
  STEP: Wait for the deployment to be ready @ 07/12/25 12:37:10.454
  I0712 12:37:10.464156 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/12/25 12:37:12.474
  STEP: Verifying the service has paired with the endpoint @ 07/12/25 12:37:12.492
  I0712 12:37:13.493324 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 07/12/25 12:37:13.498
  I0712 12:37:13.541575 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6713" for this suite. @ 07/12/25 12:37:13.545
  STEP: Destroying namespace "webhook-markers-226" for this suite. @ 07/12/25 12:37:13.553
• [3.613 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:179
  STEP: Creating a kubernetes client @ 07/12/25 12:37:13.561
  I0712 12:37:13.561122 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename emptydir @ 07/12/25 12:37:13.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:37:13.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:37:13.578
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 07/12/25 12:37:13.58
  STEP: Saw pod success @ 07/12/25 12:37:17.603
  I0712 12:37:17.606262 20 output.go:207] Trying to get logs from node ip-172-31-3-36 pod pod-f2a04cd2-2781-47a6-8e6f-cdd8b463cf47 container test-container: <nil>
  STEP: delete the pod @ 07/12/25 12:37:17.62
  I0712 12:37:17.638100 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5663" for this suite. @ 07/12/25 12:37:17.641
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 07/12/25 12:37:17.647
  I0712 12:37:17.647875 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename discovery @ 07/12/25 12:37:17.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:37:17.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:37:17.662
  STEP: Setting up server cert @ 07/12/25 12:37:17.665
  STEP: Requesting APIResourceList from "/api/v1" @ 07/12/25 12:37:18.107
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 07/12/25 12:37:18.109
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 07/12/25 12:37:18.11
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 07/12/25 12:37:18.11
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 07/12/25 12:37:18.111
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 07/12/25 12:37:18.112
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 07/12/25 12:37:18.112
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 07/12/25 12:37:18.113
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 07/12/25 12:37:18.114
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 07/12/25 12:37:18.114
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 07/12/25 12:37:18.115
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 07/12/25 12:37:18.116
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 07/12/25 12:37:18.116
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 07/12/25 12:37:18.117
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 07/12/25 12:37:18.117
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 07/12/25 12:37:18.118
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 07/12/25 12:37:18.119
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 07/12/25 12:37:18.119
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 07/12/25 12:37:18.12
  I0712 12:37:18.121438 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-3349" for this suite. @ 07/12/25 12:37:18.125
• [0.484 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 07/12/25 12:37:18.132
  I0712 12:37:18.132274 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename downward-api @ 07/12/25 12:37:18.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:37:18.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:37:18.149
  STEP: Creating the pod @ 07/12/25 12:37:18.152
  I0712 12:37:20.689113 20 pod_client.go:173] Successfully updated pod "labelsupdatec26648e7-0ff4-41aa-919b-e84e4765bab7"
  I0712 12:37:24.711710 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1920" for this suite. @ 07/12/25 12:37:24.715
• [6.592 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:255
  STEP: Creating a kubernetes client @ 07/12/25 12:37:24.724
  I0712 12:37:24.724565 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename namespaces @ 07/12/25 12:37:24.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:37:24.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:37:24.74
  STEP: Creating a test namespace @ 07/12/25 12:37:24.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:37:24.756
  STEP: Creating a service in the namespace @ 07/12/25 12:37:24.759
  STEP: Deleting the namespace @ 07/12/25 12:37:24.779
  STEP: Waiting for the namespace to be removed. @ 07/12/25 12:37:24.79
  STEP: Recreating the namespace @ 07/12/25 12:37:30.794
  STEP: Verifying there is no service in the namespace @ 07/12/25 12:37:30.807
  I0712 12:37:30.813516 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6114" for this suite. @ 07/12/25 12:37:30.817
  STEP: Destroying namespace "nsdeletetest-6489" for this suite. @ 07/12/25 12:37:30.823
  I0712 12:37:30.826699 20 framework.go:370] Namespace nsdeletetest-6489 was already deleted
  STEP: Destroying namespace "nsdeletetest-3079" for this suite. @ 07/12/25 12:37:30.826
• [6.109 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 07/12/25 12:37:30.833
  I0712 12:37:30.833195 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename webhook @ 07/12/25 12:37:30.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:37:30.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:37:30.849
  STEP: Setting up server cert @ 07/12/25 12:37:30.87
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/12/25 12:37:31.637
  STEP: Deploying the webhook pod @ 07/12/25 12:37:31.642
  STEP: Wait for the deployment to be ready @ 07/12/25 12:37:31.656
  I0712 12:37:31.662938 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/12/25 12:37:33.673
  STEP: Verifying the service has paired with the endpoint @ 07/12/25 12:37:33.685
  I0712 12:37:34.685791 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 07/12/25 12:37:34.69
  STEP: Creating a custom resource definition that should be denied by the webhook @ 07/12/25 12:37:34.703
  I0712 12:37:34.703824 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  I0712 12:37:34.774289 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9172" for this suite. @ 07/12/25 12:37:34.78
  STEP: Destroying namespace "webhook-markers-1362" for this suite. @ 07/12/25 12:37:34.794
• [3.978 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 07/12/25 12:37:34.811
  I0712 12:37:34.811562 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename configmap @ 07/12/25 12:37:34.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:37:34.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:37:34.833
  STEP: Creating configMap with name configmap-test-volume-24e3d146-d4b5-496f-8d6d-abd7f0c77350 @ 07/12/25 12:37:34.836
  STEP: Creating a pod to test consume configMaps @ 07/12/25 12:37:34.841
  STEP: Saw pod success @ 07/12/25 12:37:38.864
  I0712 12:37:38.867363 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-configmaps-2a8c44cb-0d03-48bc-92a1-2e6a46e56a70 container agnhost-container: <nil>
  STEP: delete the pod @ 07/12/25 12:37:38.873
  I0712 12:37:38.892317 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2406" for this suite. @ 07/12/25 12:37:38.895
• [4.090 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:944
  STEP: Creating a kubernetes client @ 07/12/25 12:37:38.901
  I0712 12:37:38.901509 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename resourcequota @ 07/12/25 12:37:38.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:37:38.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:37:38.917
  STEP: Creating a ResourceQuota @ 07/12/25 12:37:38.918
  STEP: Getting a ResourceQuota @ 07/12/25 12:37:38.922
  STEP: Updating a ResourceQuota @ 07/12/25 12:37:38.925
  STEP: Verifying a ResourceQuota was modified @ 07/12/25 12:37:38.931
  STEP: Deleting a ResourceQuota @ 07/12/25 12:37:38.933
  STEP: Verifying the deleted ResourceQuota @ 07/12/25 12:37:38.94
  I0712 12:37:38.942786 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7549" for this suite. @ 07/12/25 12:37:38.997
• [0.103 seconds]
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 07/12/25 12:37:39.004
  I0712 12:37:39.004093 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename downward-api @ 07/12/25 12:37:39.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:37:39.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:37:39.018
  STEP: Creating a pod to test downward API volume plugin @ 07/12/25 12:37:39.02
  STEP: Saw pod success @ 07/12/25 12:37:43.044
  I0712 12:37:43.046804 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod downwardapi-volume-a9bd6fdc-fdf4-4e65-9270-558dad18d168 container client-container: <nil>
  STEP: delete the pod @ 07/12/25 12:37:43.054
  I0712 12:37:43.070435 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5171" for this suite. @ 07/12/25 12:37:43.074
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:769
  STEP: Creating a kubernetes client @ 07/12/25 12:37:43.08
  I0712 12:37:43.080422 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename statefulset @ 07/12/25 12:37:43.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:37:43.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:37:43.094
  STEP: Creating service test in namespace statefulset-6349 @ 07/12/25 12:37:43.096
  STEP: Creating stateful set ss in namespace statefulset-6349 @ 07/12/25 12:37:43.101
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6349 @ 07/12/25 12:37:43.106
  I0712 12:37:43.114489 20 wait.go:44] Found 0 stateful pods, waiting for 1
  I0712 12:37:53.114038 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 07/12/25 12:37:53.114
  I0712 12:37:53.117166 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=statefulset-6349 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0712 12:37:53.208163 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0712 12:37:53.208213 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0712 12:37:53.208227 20 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0712 12:37:53.214779 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0712 12:38:03.213287 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0712 12:38:03.213329 20 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0712 12:38:03.238524 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 9.99999987s
  I0712 12:38:04.243661 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.984733755s
  I0712 12:38:05.249944 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.978733733s
  I0712 12:38:06.255553 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.973048447s
  I0712 12:38:07.260626 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.967685843s
  I0712 12:38:08.266080 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.961952973s
  I0712 12:38:09.271578 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.957144187s
  I0712 12:38:10.276266 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.951617359s
  I0712 12:38:11.281006 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.946931329s
  I0712 12:38:12.285772 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 942.039679ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6349 @ 07/12/25 12:38:13.285
  I0712 12:38:13.290802 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=statefulset-6349 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0712 12:38:13.372383 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0712 12:38:13.372425 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0712 12:38:13.372435 20 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0712 12:38:13.372481 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=statefulset-6349 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0712 12:38:13.453601 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0712 12:38:13.453631 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0712 12:38:13.453641 20 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0712 12:38:13.453683 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=statefulset-6349 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0712 12:38:13.542365 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0712 12:38:13.542397 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0712 12:38:13.542406 20 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0712 12:38:13.546653 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  I0712 12:38:23.551539 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0712 12:38:23.551575 20 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0712 12:38:23.551585 20 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 07/12/25 12:38:23.551
  I0712 12:38:23.554431 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=statefulset-6349 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0712 12:38:23.637861 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0712 12:38:23.637927 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0712 12:38:23.637940 20 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0712 12:38:23.638122 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=statefulset-6349 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0712 12:38:23.726112 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0712 12:38:23.726153 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0712 12:38:23.726164 20 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0712 12:38:23.726238 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=statefulset-6349 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0712 12:38:23.808128 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0712 12:38:23.808162 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0712 12:38:23.808172 20 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0712 12:38:23.808181 20 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0712 12:38:23.811797 20 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I0712 12:38:33.820491 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0712 12:38:33.820529 20 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0712 12:38:33.820537 20 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0712 12:38:33.843449 20 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I0712 12:38:33.843723 20 resource.go:175] ss-0  ip-172-31-39-13   Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-12 12:37:44 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-12 12:37:43 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-12 12:38:24 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-12 12:38:24 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-12 12:37:43 +0000 UTC  }]
  I0712 12:38:33.844139 20 resource.go:175] ss-1  ip-172-31-23-206  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-12 12:38:04 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-12 12:38:03 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-12 12:38:24 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-12 12:38:24 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-12 12:38:03 +0000 UTC  }]
  I0712 12:38:33.844308 20 resource.go:175] ss-2  ip-172-31-3-36    Running  30s    [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-12 12:38:04 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-12 12:38:03 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-12 12:38:24 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-12 12:38:24 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-12 12:38:03 +0000 UTC  }]
  I0712 12:38:33.844317 20 resource.go:178] 
  I0712 12:38:33.844324 20 statefulset.go:2448] StatefulSet ss has not reached scale 0, at 3
  I0712 12:38:34.848789 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 8.987373288s
  I0712 12:38:35.852962 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 7.983064107s
  I0712 12:38:36.857877 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 6.978862432s
  I0712 12:38:37.862630 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 5.973953376s
  I0712 12:38:38.868157 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 4.968595542s
  I0712 12:38:39.873066 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 3.962965348s
  I0712 12:38:40.878044 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 2.958755938s
  I0712 12:38:41.882732 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 1.953795358s
  I0712 12:38:42.887220 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 949.007304ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6349 @ 07/12/25 12:38:43.887
  I0712 12:38:43.892082 20 rest.go:153] Scaling statefulset ss to 0
  I0712 12:38:43.897143 20 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0712 12:38:43.900577 20 statefulset.go:138] Deleting all statefulset in ns statefulset-6349
  I0712 12:38:43.904017 20 rest.go:153] Scaling statefulset ss to 0
  I0712 12:38:43.909697 20 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0712 12:38:43.912881 20 rest.go:91] Deleting statefulset ss
  I0712 12:38:43.926869 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6349" for this suite. @ 07/12/25 12:38:43.93
• [60.858 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:114
  STEP: Creating a kubernetes client @ 07/12/25 12:38:43.938
  I0712 12:38:43.938093 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename replication-controller @ 07/12/25 12:38:43.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:38:43.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:38:43.95
  STEP: creating a ReplicationController @ 07/12/25 12:38:43.956
  STEP: waiting for RC to be added @ 07/12/25 12:38:43.961
  STEP: waiting for available Replicas @ 07/12/25 12:38:43.961
  STEP: patching ReplicationController @ 07/12/25 12:38:45.453
  STEP: waiting for RC to be modified @ 07/12/25 12:38:45.461
  STEP: patching ReplicationController status @ 07/12/25 12:38:45.461
  STEP: waiting for RC to be modified @ 07/12/25 12:38:45.465
  STEP: waiting for available Replicas @ 07/12/25 12:38:45.465
  STEP: fetching ReplicationController status @ 07/12/25 12:38:45.471
  STEP: patching ReplicationController scale @ 07/12/25 12:38:45.474
  STEP: waiting for RC to be modified @ 07/12/25 12:38:45.48
  STEP: waiting for ReplicationController's scale to be the max amount @ 07/12/25 12:38:45.48
  STEP: fetching ReplicationController; ensuring that it's patched @ 07/12/25 12:38:46.619
  STEP: updating ReplicationController status @ 07/12/25 12:38:46.622
  STEP: waiting for RC to be modified @ 07/12/25 12:38:46.627
  STEP: listing all ReplicationControllers @ 07/12/25 12:38:46.627
  STEP: checking that ReplicationController has expected values @ 07/12/25 12:38:46.633
  STEP: deleting ReplicationControllers by collection @ 07/12/25 12:38:46.633
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 07/12/25 12:38:46.642
  I0712 12:38:46.686152 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0712 12:38:46.686288      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-9002" for this suite. @ 07/12/25 12:38:46.689
• [2.756 seconds]
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 07/12/25 12:38:46.694
  I0712 12:38:46.694237 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename watch @ 07/12/25 12:38:46.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:38:46.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:38:46.709
  STEP: creating a watch on configmaps with label A @ 07/12/25 12:38:46.71
  STEP: creating a watch on configmaps with label B @ 07/12/25 12:38:46.711
  STEP: creating a watch on configmaps with label A or B @ 07/12/25 12:38:46.712
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 07/12/25 12:38:46.713
  I0712 12:38:46.718080 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-652  0ed9ad52-7f32-4d40-a0b0-54e00f624131 12289 0 2025-07-12 12:38:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-12 12:38:46 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0712 12:38:46.718178 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-652  0ed9ad52-7f32-4d40-a0b0-54e00f624131 12289 0 2025-07-12 12:38:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-12 12:38:46 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 07/12/25 12:38:46.718
  I0712 12:38:46.725010 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-652  0ed9ad52-7f32-4d40-a0b0-54e00f624131 12290 0 2025-07-12 12:38:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-12 12:38:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0712 12:38:46.725080 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-652  0ed9ad52-7f32-4d40-a0b0-54e00f624131 12290 0 2025-07-12 12:38:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-12 12:38:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 07/12/25 12:38:46.725
  I0712 12:38:46.733414 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-652  0ed9ad52-7f32-4d40-a0b0-54e00f624131 12291 0 2025-07-12 12:38:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-12 12:38:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0712 12:38:46.733490 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-652  0ed9ad52-7f32-4d40-a0b0-54e00f624131 12291 0 2025-07-12 12:38:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-12 12:38:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 07/12/25 12:38:46.733
  I0712 12:38:46.738781 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-652  0ed9ad52-7f32-4d40-a0b0-54e00f624131 12292 0 2025-07-12 12:38:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-12 12:38:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0712 12:38:46.738812 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-652  0ed9ad52-7f32-4d40-a0b0-54e00f624131 12292 0 2025-07-12 12:38:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-12 12:38:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 07/12/25 12:38:46.738
  I0712 12:38:46.744999 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-652  85317f10-8b42-4354-bf1c-ec2f718d7301 12293 0 2025-07-12 12:38:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-07-12 12:38:46 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0712 12:38:46.745056 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-652  85317f10-8b42-4354-bf1c-ec2f718d7301 12293 0 2025-07-12 12:38:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-07-12 12:38:46 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0712 12:38:47.686476      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:38:48.686629      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:38:49.687436      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:38:50.687647      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:38:51.687775      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:38:52.687918      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:38:53.688056      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:38:54.688868      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:38:55.689278      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:38:56.689346      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 07/12/25 12:38:56.745
  I0712 12:38:56.750910 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-652  85317f10-8b42-4354-bf1c-ec2f718d7301 12363 0 2025-07-12 12:38:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-07-12 12:38:46 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0712 12:38:56.750949 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-652  85317f10-8b42-4354-bf1c-ec2f718d7301 12363 0 2025-07-12 12:38:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-07-12 12:38:46 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0712 12:38:57.690404      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:38:58.690547      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:38:59.690626      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:00.690713      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:01.690780      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:02.690896      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:03.690973      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:04.691796      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:05.692416      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:06.693405      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:39:06.751587 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-652" for this suite. @ 07/12/25 12:39:06.757
• [20.069 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:335
  STEP: Creating a kubernetes client @ 07/12/25 12:39:06.763
  I0712 12:39:06.763272 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename resourcequota @ 07/12/25 12:39:06.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:39:06.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:39:06.778
  E0712 12:39:07.694432      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:08.694558      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:09.695516      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:10.696007      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:11.696368      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:12.696638      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:13.696575      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:14.696692      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:15.697356      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:16.697445      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:17.697543      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:18.697631      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:19.697753      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:20.698127      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:21.698349      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:22.698463      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:23.698922      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 07/12/25 12:39:23.786
  E0712 12:39:24.699460      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:25.699502      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:26.699628      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:27.700417      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:28.700508      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/12/25 12:39:28.791
  STEP: Ensuring resource quota status is calculated @ 07/12/25 12:39:28.796
  E0712 12:39:29.700597      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:30.700670      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 07/12/25 12:39:30.802
  STEP: Ensuring resource quota status captures configMap creation @ 07/12/25 12:39:30.812
  E0712 12:39:31.700932      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:32.701773      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 07/12/25 12:39:32.816
  STEP: Ensuring resource quota status released usage @ 07/12/25 12:39:32.821
  E0712 12:39:33.701765      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:34.702842      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:39:34.827458 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9816" for this suite. @ 07/12/25 12:39:34.831
• [28.075 seconds]
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 07/12/25 12:39:34.837
  I0712 12:39:34.838022 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename security-context @ 07/12/25 12:39:34.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:39:34.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:39:34.854
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 07/12/25 12:39:34.856
  E0712 12:39:35.703011      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:36.703112      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 12:39:36.875
  I0712 12:39:36.878403 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod security-context-23b55b3c-bf97-4166-8cf9-2e240740d216 container test-container: <nil>
  STEP: delete the pod @ 07/12/25 12:39:36.888
  I0712 12:39:36.908419 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-3579" for this suite. @ 07/12/25 12:39:36.912
• [2.081 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1861
  STEP: Creating a kubernetes client @ 07/12/25 12:39:36.919
  I0712 12:39:36.919449 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename kubectl @ 07/12/25 12:39:36.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:39:36.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:39:36.936
  STEP: Starting the proxy @ 07/12/25 12:39:36.938
  I0712 12:39:36.938315 20 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-3293 proxy --unix-socket=/tmp/kubectl-proxy-unix1700008945/test'
  STEP: retrieving proxy /api/ output @ 07/12/25 12:39:36.97
  I0712 12:39:36.971197 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3293" for this suite. @ 07/12/25 12:39:37.012
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 07/12/25 12:39:37.019
  I0712 12:39:37.019891 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename downward-api @ 07/12/25 12:39:37.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:39:37.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:39:37.041
  STEP: Creating a pod to test downward API volume plugin @ 07/12/25 12:39:37.044
  E0712 12:39:37.703225      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:38.703455      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:39.703672      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:40.703781      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 12:39:41.07
  I0712 12:39:41.073338 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod downwardapi-volume-376a8668-1df4-4ec8-86e0-b3e72faf521a container client-container: <nil>
  STEP: delete the pod @ 07/12/25 12:39:41.08
  I0712 12:39:41.097860 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7126" for this suite. @ 07/12/25 12:39:41.101
• [4.088 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 07/12/25 12:39:41.107
  I0712 12:39:41.107986 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename limitrange @ 07/12/25 12:39:41.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:39:41.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:39:41.123
  STEP: Creating LimitRange "e2e-limitrange-hwhjc" in namespace "limitrange-3796" @ 07/12/25 12:39:41.125
  STEP: Creating another limitRange in another namespace @ 07/12/25 12:39:41.131
  I0712 12:39:41.145069 20 limit_range.go:299] Namespace "e2e-limitrange-hwhjc-8959" created
  I0712 12:39:41.145087 20 limit_range.go:300] Creating LimitRange "e2e-limitrange-hwhjc" in namespace "e2e-limitrange-hwhjc-8959"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-hwhjc" @ 07/12/25 12:39:41.15
  I0712 12:39:41.152890 20 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-hwhjc" in "limitrange-3796" namespace @ 07/12/25 12:39:41.152
  I0712 12:39:41.157997 20 limit_range.go:335] LimitRange "e2e-limitrange-hwhjc" has been patched
  STEP: Delete LimitRange "e2e-limitrange-hwhjc" by Collection with labelSelector: "e2e-limitrange-hwhjc=patched" @ 07/12/25 12:39:41.158
  STEP: Confirm that the limitRange "e2e-limitrange-hwhjc" has been deleted @ 07/12/25 12:39:41.167
  I0712 12:39:41.167751 20 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0712 12:39:41.170284 20 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-hwhjc=patched"
  I0712 12:39:41.170308 20 limit_range.go:344] LimitRange "e2e-limitrange-hwhjc" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-hwhjc" @ 07/12/25 12:39:41.17
  I0712 12:39:41.172667 20 limit_range.go:350] Found 1 limitRange
  I0712 12:39:41.172745 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-3796" for this suite. @ 07/12/25 12:39:41.201
  STEP: Destroying namespace "e2e-limitrange-hwhjc-8959" for this suite. @ 07/12/25 12:39:41.21
• [0.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:153
  STEP: Creating a kubernetes client @ 07/12/25 12:39:41.216
  I0712 12:39:41.216399 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename dns @ 07/12/25 12:39:41.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:39:41.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:39:41.228
  STEP: Creating a test headless service @ 07/12/25 12:39:41.232
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8607.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-8607.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8607.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-8607.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8607.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-8607.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8607.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-8607.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8607.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-8607.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8607.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-8607.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 70.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.70_udp@PTR;check="$$(dig +tcp +noall +answer +search 70.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.70_tcp@PTR;sleep 1; done
   @ 07/12/25 12:39:41.252
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8607.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8607.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8607.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8607.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8607.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8607.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8607.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8607.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8607.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8607.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8607.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8607.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 70.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.70_udp@PTR;check="$$(dig +tcp +noall +answer +search 70.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.70_tcp@PTR;sleep 1; done
   @ 07/12/25 12:39:41.252
  STEP: creating a pod to probe DNS @ 07/12/25 12:39:41.252
  STEP: submitting the pod to kubernetes @ 07/12/25 12:39:41.252
  E0712 12:39:41.703982      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:42.704075      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/12/25 12:39:43.279
  STEP: looking for the results for each expected name from probers @ 07/12/25 12:39:43.283
  I0712 12:39:43.288636 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-8607.svc.cluster.local from pod dns-8607/dns-test-746ecf23-892b-4de4-9ab0-27d7f54276d5: the server could not find the requested resource (get pods dns-test-746ecf23-892b-4de4-9ab0-27d7f54276d5)
  I0712 12:39:43.292975 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-8607.svc.cluster.local from pod dns-8607/dns-test-746ecf23-892b-4de4-9ab0-27d7f54276d5: the server could not find the requested resource (get pods dns-test-746ecf23-892b-4de4-9ab0-27d7f54276d5)
  I0712 12:39:43.297065 20 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-8607.svc.cluster.local from pod dns-8607/dns-test-746ecf23-892b-4de4-9ab0-27d7f54276d5: the server could not find the requested resource (get pods dns-test-746ecf23-892b-4de4-9ab0-27d7f54276d5)
  I0712 12:39:43.301314 20 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-8607.svc.cluster.local from pod dns-8607/dns-test-746ecf23-892b-4de4-9ab0-27d7f54276d5: the server could not find the requested resource (get pods dns-test-746ecf23-892b-4de4-9ab0-27d7f54276d5)
  I0712 12:39:43.321868 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-8607.svc.cluster.local from pod dns-8607/dns-test-746ecf23-892b-4de4-9ab0-27d7f54276d5: the server could not find the requested resource (get pods dns-test-746ecf23-892b-4de4-9ab0-27d7f54276d5)
  I0712 12:39:43.325220 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-8607.svc.cluster.local from pod dns-8607/dns-test-746ecf23-892b-4de4-9ab0-27d7f54276d5: the server could not find the requested resource (get pods dns-test-746ecf23-892b-4de4-9ab0-27d7f54276d5)
  I0712 12:39:43.329631 20 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8607.svc.cluster.local from pod dns-8607/dns-test-746ecf23-892b-4de4-9ab0-27d7f54276d5: the server could not find the requested resource (get pods dns-test-746ecf23-892b-4de4-9ab0-27d7f54276d5)
  I0712 12:39:43.334043 20 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8607.svc.cluster.local from pod dns-8607/dns-test-746ecf23-892b-4de4-9ab0-27d7f54276d5: the server could not find the requested resource (get pods dns-test-746ecf23-892b-4de4-9ab0-27d7f54276d5)
  I0712 12:39:43.350055 20 dns_common.go:506] Lookups using dns-8607/dns-test-746ecf23-892b-4de4-9ab0-27d7f54276d5 failed for: [agnhost_udp@dns-test-service.dns-8607.svc.cluster.local agnhost_tcp@dns-test-service.dns-8607.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-8607.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-8607.svc.cluster.local jessie_udp@dns-test-service.dns-8607.svc.cluster.local jessie_tcp@dns-test-service.dns-8607.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-8607.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-8607.svc.cluster.local]

  I0712 12:39:43.356808 20 dns_common.go:514] Pod client logs for webserver: 
  I0712 12:39:43.361635 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0712 12:39:43.367472 20 dns_common.go:514] Pod client logs for jessie-querier: 
  E0712 12:39:43.705016      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:44.705912      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:45.706131      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:46.706298      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:47.706498      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:39:48.349845 20 dns_common.go:546] DNS probes using dns-8607/dns-test-746ecf23-892b-4de4-9ab0-27d7f54276d5 succeeded

  STEP: deleting the pod @ 07/12/25 12:39:48.349
  STEP: deleting the test service @ 07/12/25 12:39:48.363
  STEP: deleting the test headless service @ 07/12/25 12:39:48.397
  I0712 12:39:48.408609 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8607" for this suite. @ 07/12/25 12:39:48.412
• [7.200 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 07/12/25 12:39:48.417
  I0712 12:39:48.417160 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/12/25 12:39:48.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:39:48.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:39:48.433
  I0712 12:39:48.435065 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  E0712 12:39:48.706590      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:49.707437      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:50.707902      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:51.708741      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:52.709428      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:53.709972      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:39:54.602685 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3686" for this suite. @ 07/12/25 12:39:54.607
• [6.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 07/12/25 12:39:54.613
  I0712 12:39:54.613760 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename projected @ 07/12/25 12:39:54.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:39:54.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:39:54.63
  STEP: Creating configMap with name projected-configmap-test-volume-map-a387f784-5aed-4ccb-bae7-03527855112e @ 07/12/25 12:39:54.632
  STEP: Creating a pod to test consume configMaps @ 07/12/25 12:39:54.636
  E0712 12:39:54.710894      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:55.710995      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:56.711745      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:39:57.711844      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 12:39:58.658
  I0712 12:39:58.661680 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-projected-configmaps-a7dab470-b401-420d-af6b-fb3f902d0ec6 container agnhost-container: <nil>
  STEP: delete the pod @ 07/12/25 12:39:58.668
  I0712 12:39:58.684795 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9996" for this suite. @ 07/12/25 12:39:58.687
• [4.081 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 07/12/25 12:39:58.694
  I0712 12:39:58.694809 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename init-container @ 07/12/25 12:39:58.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:39:58.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:39:58.711
  E0712 12:39:58.712662      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: creating the pod @ 07/12/25 12:39:58.713
  I0712 12:39:58.713744 20 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E0712 12:39:59.713766      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:00.714503      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:01.715423      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:02.715581      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:40:02.731928 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1913" for this suite. @ 07/12/25 12:40:02.736
• [4.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 07/12/25 12:40:02.745
  I0712 12:40:02.745790 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename volumeattachment @ 07/12/25 12:40:02.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:40:02.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:40:02.76
  STEP: Create VolumeAttachment "va-e2e-647vl" on node "ip-172-31-3-36" @ 07/12/25 12:40:02.837
  STEP: Patch VolumeAttachment "va-e2e-647vl" on node "ip-172-31-3-36" @ 07/12/25 12:40:02.842
  STEP: Reading "va-e2e-647vl" Status @ 07/12/25 12:40:02.846
  STEP: Patching "va-e2e-647vl" Status @ 07/12/25 12:40:02.849
  I0712 12:40:02.854663 20 volume_attachment.go:224] "va-e2e-647vl" Status.Attached: true
  STEP: Updating "va-e2e-647vl" Status @ 07/12/25 12:40:02.854
  I0712 12:40:02.861046 20 volume_attachment.go:240] "va-e2e-647vl" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-647vl" on node "ip-172-31-3-36" @ 07/12/25 12:40:02.861
  STEP: Confirm deletion of VolumeAttachment "va-e2e-647vl" on node "ip-172-31-3-36" @ 07/12/25 12:40:02.866
  I0712 12:40:02.869166 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-296" for this suite. @ 07/12/25 12:40:02.937
• [0.201 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1627
  STEP: Creating a kubernetes client @ 07/12/25 12:40:02.946
  I0712 12:40:02.946894 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename kubectl @ 07/12/25 12:40:02.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:40:02.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:40:02.958
  STEP: creating the pod @ 07/12/25 12:40:02.961
  I0712 12:40:02.961837 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-4750 create -f -'
  I0712 12:40:03.057805 20 builder.go:146] stderr: ""
  I0712 12:40:03.057847 20 builder.go:147] stdout: "pod/pause created\n"
  E0712 12:40:03.715746      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:04.715815      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 07/12/25 12:40:05.068
  I0712 12:40:05.068725 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-4750 label pods pause testing-label=testing-label-value'
  I0712 12:40:05.122801 20 builder.go:146] stderr: ""
  I0712 12:40:05.122832 20 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 07/12/25 12:40:05.122
  I0712 12:40:05.122900 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-4750 get pod pause -L testing-label'
  I0712 12:40:05.165141 20 builder.go:146] stderr: ""
  I0712 12:40:05.165173 20 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 07/12/25 12:40:05.165
  I0712 12:40:05.165497 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-4750 label pods pause testing-label-'
  I0712 12:40:05.217277 20 builder.go:146] stderr: ""
  I0712 12:40:05.217316 20 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 07/12/25 12:40:05.217
  I0712 12:40:05.217377 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-4750 get pod pause -L testing-label'
  I0712 12:40:05.258790 20 builder.go:146] stderr: ""
  I0712 12:40:05.258819 20 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 07/12/25 12:40:05.258
  I0712 12:40:05.259034 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-4750 delete --grace-period=0 --force -f -'
  I0712 12:40:05.313320 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0712 12:40:05.313363 20 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0712 12:40:05.313398 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-4750 get rc,svc -l name=pause --no-headers'
  I0712 12:40:05.367628 20 builder.go:146] stderr: "No resources found in kubectl-4750 namespace.\n"
  I0712 12:40:05.367661 20 builder.go:147] stdout: ""
  I0712 12:40:05.367698 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-4750 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0712 12:40:05.410312 20 builder.go:146] stderr: ""
  I0712 12:40:05.410347 20 builder.go:147] stdout: ""
  I0712 12:40:05.410448 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4750" for this suite. @ 07/12/25 12:40:05.414
• [2.476 seconds]
------------------------------
SSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 07/12/25 12:40:05.423
  I0712 12:40:05.423343 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename events @ 07/12/25 12:40:05.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:40:05.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:40:05.439
  STEP: creating a test event @ 07/12/25 12:40:05.442
  STEP: listing all events in all namespaces @ 07/12/25 12:40:05.446
  STEP: patching the test event @ 07/12/25 12:40:05.464
  STEP: fetching the test event @ 07/12/25 12:40:05.469
  STEP: updating the test event @ 07/12/25 12:40:05.472
  STEP: getting the test event @ 07/12/25 12:40:05.479
  STEP: deleting the test event @ 07/12/25 12:40:05.481
  STEP: listing all events in all namespaces @ 07/12/25 12:40:05.488
  I0712 12:40:05.497685 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3246" for this suite. @ 07/12/25 12:40:05.515
• [0.101 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 07/12/25 12:40:05.524
  I0712 12:40:05.524119 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/12/25 12:40:05.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:40:05.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:40:05.539
  STEP: create the container to handle the HTTPGet hook request. @ 07/12/25 12:40:05.616
  E0712 12:40:05.716733      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:06.716854      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/12/25 12:40:07.64
  E0712 12:40:07.716981      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:08.717088      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 07/12/25 12:40:09.656
  STEP: delete the pod with lifecycle hook @ 07/12/25 12:40:09.665
  E0712 12:40:09.718095      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:10.718229      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:40:11.681421 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7422" for this suite. @ 07/12/25 12:40:11.685
• [6.168 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 07/12/25 12:40:11.692
  I0712 12:40:11.692655 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename secrets @ 07/12/25 12:40:11.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:40:11.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:40:11.709
  STEP: Creating secret with name secret-test-b4937399-a5ed-4059-addf-ac5c3a870c4f @ 07/12/25 12:40:11.71
  STEP: Creating a pod to test consume secrets @ 07/12/25 12:40:11.714
  E0712 12:40:11.718321      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:12.719362      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:13.719438      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:14.719549      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:15.719622      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 12:40:15.736
  I0712 12:40:15.738778 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-secrets-69fa25d4-08d4-44fe-896a-292fff0e45a9 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/12/25 12:40:15.745
  I0712 12:40:15.763282 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1649" for this suite. @ 07/12/25 12:40:15.767
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 07/12/25 12:40:15.773
  I0712 12:40:15.773251 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename containers @ 07/12/25 12:40:15.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:40:15.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:40:15.789
  E0712 12:40:16.719709      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:17.720076      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:40:17.817429 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-564" for this suite. @ 07/12/25 12:40:17.82
• [2.053 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 07/12/25 12:40:17.826
  I0712 12:40:17.826557 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename cronjob @ 07/12/25 12:40:17.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:40:17.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:40:17.841
  STEP: Creating a cronjob @ 07/12/25 12:40:17.843
  STEP: creating @ 07/12/25 12:40:17.843
  STEP: getting @ 07/12/25 12:40:17.85
  STEP: listing @ 07/12/25 12:40:17.853
  STEP: watching @ 07/12/25 12:40:17.855
  I0712 12:40:17.855855 20 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 07/12/25 12:40:17.856
  STEP: cluster-wide watching @ 07/12/25 12:40:17.859
  I0712 12:40:17.859138 20 cronjob.go:407] starting watch
  STEP: patching @ 07/12/25 12:40:17.859
  STEP: updating @ 07/12/25 12:40:17.864
  I0712 12:40:17.871194 20 cronjob.go:431] waiting for watch events with expected annotations
  I0712 12:40:17.871250 20 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 07/12/25 12:40:17.871
  STEP: updating /status @ 07/12/25 12:40:17.877
  STEP: get /status @ 07/12/25 12:40:17.883
  STEP: deleting @ 07/12/25 12:40:17.885
  STEP: deleting a collection @ 07/12/25 12:40:17.898
  I0712 12:40:17.909801 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-665" for this suite. @ 07/12/25 12:40:17.921
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 07/12/25 12:40:17.93
  I0712 12:40:17.930314 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename projected @ 07/12/25 12:40:17.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:40:17.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:40:17.946
  STEP: Creating a pod to test downward API volume plugin @ 07/12/25 12:40:17.947
  E0712 12:40:18.720372      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:19.720459      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 12:40:19.961
  I0712 12:40:19.964904 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod downwardapi-volume-bd95fe0a-d3cd-4cfd-843f-0e775e5a6791 container client-container: <nil>
  STEP: delete the pod @ 07/12/25 12:40:19.97
  I0712 12:40:19.986278 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4050" for this suite. @ 07/12/25 12:40:19.989
• [2.067 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:351
  STEP: Creating a kubernetes client @ 07/12/25 12:40:19.997
  I0712 12:40:19.997532 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename kubectl @ 07/12/25 12:40:19.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:40:20.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:40:20.012
  STEP: creating a replication controller @ 07/12/25 12:40:20.014
  I0712 12:40:20.014975 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-6720 create -f -'
  I0712 12:40:20.105288 20 builder.go:146] stderr: ""
  I0712 12:40:20.105326 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/12/25 12:40:20.105
  I0712 12:40:20.105456 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-6720 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0712 12:40:20.158380 20 builder.go:146] stderr: ""
  I0712 12:40:20.158416 20 builder.go:147] stdout: "update-demo-nautilus-fl2zl update-demo-nautilus-xsjn8 "
  I0712 12:40:20.158464 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-6720 get pods update-demo-nautilus-fl2zl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0712 12:40:20.202633 20 builder.go:146] stderr: ""
  I0712 12:40:20.202666 20 builder.go:147] stdout: ""
  I0712 12:40:20.202674 20 kubectl.go:2505] update-demo-nautilus-fl2zl is created but not running
  E0712 12:40:20.720709      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:21.721428      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:22.721515      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:23.721644      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:24.721725      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:40:25.203241 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-6720 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0712 12:40:25.250552 20 builder.go:146] stderr: ""
  I0712 12:40:25.250589 20 builder.go:147] stdout: "update-demo-nautilus-fl2zl update-demo-nautilus-xsjn8 "
  I0712 12:40:25.250629 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-6720 get pods update-demo-nautilus-fl2zl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0712 12:40:25.293554 20 builder.go:146] stderr: ""
  I0712 12:40:25.293588 20 builder.go:147] stdout: "true"
  I0712 12:40:25.293640 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-6720 get pods update-demo-nautilus-fl2zl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0712 12:40:25.336257 20 builder.go:146] stderr: ""
  I0712 12:40:25.336290 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0712 12:40:25.336300 20 kubectl.go:2396] validating pod update-demo-nautilus-fl2zl
  I0712 12:40:25.342659 20 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0712 12:40:25.342714 20 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0712 12:40:25.342724 20 kubectl.go:2523] update-demo-nautilus-fl2zl is verified up and running
  I0712 12:40:25.342761 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-6720 get pods update-demo-nautilus-xsjn8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0712 12:40:25.385308 20 builder.go:146] stderr: ""
  I0712 12:40:25.385334 20 builder.go:147] stdout: "true"
  I0712 12:40:25.385380 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-6720 get pods update-demo-nautilus-xsjn8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0712 12:40:25.426904 20 builder.go:146] stderr: ""
  I0712 12:40:25.426932 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0712 12:40:25.426942 20 kubectl.go:2396] validating pod update-demo-nautilus-xsjn8
  I0712 12:40:25.430977 20 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0712 12:40:25.431027 20 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0712 12:40:25.431037 20 kubectl.go:2523] update-demo-nautilus-xsjn8 is verified up and running
  STEP: scaling down the replication controller @ 07/12/25 12:40:25.431
  I0712 12:40:25.431838 20 kubectl.go:320] scanned /root for discovery docs: <nil>
  I0712 12:40:25.431864 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-6720 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0712 12:40:25.722556      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:40:26.483924 20 builder.go:146] stderr: ""
  I0712 12:40:26.483980 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/12/25 12:40:26.484
  I0712 12:40:26.484064 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-6720 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0712 12:40:26.532145 20 builder.go:146] stderr: ""
  I0712 12:40:26.532179 20 builder.go:147] stdout: "update-demo-nautilus-fl2zl update-demo-nautilus-xsjn8 "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 07/12/25 12:40:26.532
  E0712 12:40:26.722527      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:27.722678      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:28.722897      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:29.723949      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:30.724044      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:40:31.532872 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-6720 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0712 12:40:31.580883 20 builder.go:146] stderr: ""
  I0712 12:40:31.580917 20 builder.go:147] stdout: "update-demo-nautilus-fl2zl "
  I0712 12:40:31.580961 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-6720 get pods update-demo-nautilus-fl2zl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0712 12:40:31.623522 20 builder.go:146] stderr: ""
  I0712 12:40:31.623554 20 builder.go:147] stdout: "true"
  I0712 12:40:31.623606 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-6720 get pods update-demo-nautilus-fl2zl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0712 12:40:31.665560 20 builder.go:146] stderr: ""
  I0712 12:40:31.665605 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0712 12:40:31.665616 20 kubectl.go:2396] validating pod update-demo-nautilus-fl2zl
  I0712 12:40:31.670516 20 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0712 12:40:31.670553 20 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0712 12:40:31.670565 20 kubectl.go:2523] update-demo-nautilus-fl2zl is verified up and running
  STEP: scaling up the replication controller @ 07/12/25 12:40:31.67
  I0712 12:40:31.671372 20 kubectl.go:320] scanned /root for discovery docs: <nil>
  I0712 12:40:31.671402 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-6720 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0712 12:40:31.724733      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:32.725425      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:40:32.727235 20 builder.go:146] stderr: ""
  I0712 12:40:32.727265 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/12/25 12:40:32.727
  I0712 12:40:32.727357 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-6720 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0712 12:40:32.775077 20 builder.go:146] stderr: ""
  I0712 12:40:32.775110 20 builder.go:147] stdout: "update-demo-nautilus-2xjbx update-demo-nautilus-fl2zl "
  I0712 12:40:32.775157 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-6720 get pods update-demo-nautilus-2xjbx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0712 12:40:32.818142 20 builder.go:146] stderr: ""
  I0712 12:40:32.818173 20 builder.go:147] stdout: "true"
  I0712 12:40:32.818228 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-6720 get pods update-demo-nautilus-2xjbx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0712 12:40:32.860253 20 builder.go:146] stderr: ""
  I0712 12:40:32.860284 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0712 12:40:32.860294 20 kubectl.go:2396] validating pod update-demo-nautilus-2xjbx
  I0712 12:40:32.864925 20 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0712 12:40:32.864967 20 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0712 12:40:32.864977 20 kubectl.go:2523] update-demo-nautilus-2xjbx is verified up and running
  I0712 12:40:32.865010 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-6720 get pods update-demo-nautilus-fl2zl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0712 12:40:32.908076 20 builder.go:146] stderr: ""
  I0712 12:40:32.908107 20 builder.go:147] stdout: "true"
  I0712 12:40:32.908160 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-6720 get pods update-demo-nautilus-fl2zl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0712 12:40:32.950970 20 builder.go:146] stderr: ""
  I0712 12:40:32.951002 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0712 12:40:32.951014 20 kubectl.go:2396] validating pod update-demo-nautilus-fl2zl
  I0712 12:40:32.956419 20 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0712 12:40:32.956461 20 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0712 12:40:32.956471 20 kubectl.go:2523] update-demo-nautilus-fl2zl is verified up and running
  STEP: using delete to clean up resources @ 07/12/25 12:40:32.956
  I0712 12:40:32.956574 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-6720 delete --grace-period=0 --force -f -'
  I0712 12:40:33.003899 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0712 12:40:33.003933 20 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0712 12:40:33.003970 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-6720 get rc,svc -l name=update-demo --no-headers'
  I0712 12:40:33.058368 20 builder.go:146] stderr: "No resources found in kubectl-6720 namespace.\n"
  I0712 12:40:33.058401 20 builder.go:147] stdout: ""
  I0712 12:40:33.058457 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-6720 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0712 12:40:33.103915 20 builder.go:146] stderr: ""
  I0712 12:40:33.103947 20 builder.go:147] stdout: ""
  I0712 12:40:33.104089 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6720" for this suite. @ 07/12/25 12:40:33.109
• [13.117 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 07/12/25 12:40:33.114
  I0712 12:40:33.114893 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename pod-network-test @ 07/12/25 12:40:33.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:40:33.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:40:33.13
  STEP: Performing setup for networking test in namespace pod-network-test-4785 @ 07/12/25 12:40:33.132
  STEP: creating a selector @ 07/12/25 12:40:33.132
  STEP: Creating the service pods in kubernetes @ 07/12/25 12:40:33.132
  I0712 12:40:33.132750 20 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0712 12:40:33.725959      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:34.726970      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:35.727952      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:36.728027      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:37.728169      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:38.728810      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:39.729425      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:40.729544      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:41.730062      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:42.730425      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:43.730522      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:44.730587      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:45.730727      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:46.730791      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 07/12/25 12:40:47.293
  E0712 12:40:47.731405      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:48.731652      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:40:49.312512 20 utils.go:802] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0712 12:40:49.312548 20 networking.go:42] Breadth first check of 192.168.214.157 on host 172.31.23.206...
  I0712 12:40:49.314846 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.235.139:9080/dial?request=hostname&protocol=udp&host=192.168.214.157&port=8081&tries=1'] Namespace:pod-network-test-4785 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0712 12:40:49.314870 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0712 12:40:49.314913 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4785/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.235.139%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.214.157%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0712 12:40:49.362320 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0712 12:40:49.362370 20 utils.go:355] Waiting for responses: map[]
  I0712 12:40:49.362380 20 utils.go:359] reached 192.168.214.157 after 0/1 tries
  I0712 12:40:49.362405 20 networking.go:42] Breadth first check of 192.168.246.164 on host 172.31.3.36...
  I0712 12:40:49.366111 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.235.139:9080/dial?request=hostname&protocol=udp&host=192.168.246.164&port=8081&tries=1'] Namespace:pod-network-test-4785 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0712 12:40:49.366129 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0712 12:40:49.366172 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4785/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.235.139%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.246.164%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0712 12:40:49.405945 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0712 12:40:49.406061 20 utils.go:355] Waiting for responses: map[]
  I0712 12:40:49.406195 20 utils.go:359] reached 192.168.246.164 after 0/1 tries
  I0712 12:40:49.406326 20 networking.go:42] Breadth first check of 192.168.235.133 on host 172.31.39.13...
  I0712 12:40:49.409531 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.235.139:9080/dial?request=hostname&protocol=udp&host=192.168.235.133&port=8081&tries=1'] Namespace:pod-network-test-4785 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0712 12:40:49.409553 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0712 12:40:49.409590 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4785/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.235.139%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.235.133%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0712 12:40:49.442455 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0712 12:40:49.442486 20 utils.go:355] Waiting for responses: map[]
  I0712 12:40:49.442499 20 utils.go:359] reached 192.168.235.133 after 0/1 tries
  I0712 12:40:49.442508 20 networking.go:53] Going to retry 0 out of 3 pods....
  I0712 12:40:49.442636 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4785" for this suite. @ 07/12/25 12:40:49.445
• [16.337 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 07/12/25 12:40:49.453
  I0712 12:40:49.453518 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename subpath @ 07/12/25 12:40:49.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:40:49.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:40:49.467
  STEP: Setting up data @ 07/12/25 12:40:49.47
  STEP: Creating pod pod-subpath-test-configmap-rcqv @ 07/12/25 12:40:49.477
  STEP: Creating a pod to test atomic-volume-subpath @ 07/12/25 12:40:49.477
  E0712 12:40:49.732125      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:50.732361      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:51.732447      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:52.732538      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:53.733589      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:54.733690      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:55.734285      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:56.734370      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:57.735135      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:58.735364      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:40:59.735488      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:00.735721      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:01.735798      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:02.735885      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:03.736341      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:04.736508      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:05.736674      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:06.736881      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:07.737490      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:08.737591      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:09.738575      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:10.738660      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:11.739724      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:12.739804      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 12:41:13.541
  I0712 12:41:13.544608 20 output.go:207] Trying to get logs from node ip-172-31-3-36 pod pod-subpath-test-configmap-rcqv container test-container-subpath-configmap-rcqv: <nil>
  STEP: delete the pod @ 07/12/25 12:41:13.55
  STEP: Deleting pod pod-subpath-test-configmap-rcqv @ 07/12/25 12:41:13.566
  I0712 12:41:13.566459 20 delete.go:62] Deleting pod "pod-subpath-test-configmap-rcqv" in namespace "subpath-1645"
  I0712 12:41:13.569288 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1645" for this suite. @ 07/12/25 12:41:13.572
• [24.125 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 07/12/25 12:41:13.578
  I0712 12:41:13.578729 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename configmap @ 07/12/25 12:41:13.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:41:13.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:41:13.592
  STEP: Creating configMap with name configmap-test-volume-map-407cab41-1c53-4ea4-9d58-98152662260e @ 07/12/25 12:41:13.596
  STEP: Creating a pod to test consume configMaps @ 07/12/25 12:41:13.601
  E0712 12:41:13.740708      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:14.740797      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:15.741591      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:16.741670      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 12:41:17.62
  I0712 12:41:17.623809 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-configmaps-0a4d7623-173e-4d71-88e8-804d8ae44bb8 container agnhost-container: <nil>
  STEP: delete the pod @ 07/12/25 12:41:17.635
  I0712 12:41:17.653070 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2425" for this suite. @ 07/12/25 12:41:17.657
• [4.086 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:393
  STEP: Creating a kubernetes client @ 07/12/25 12:41:17.665
  I0712 12:41:17.665269 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/12/25 12:41:17.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:41:17.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:41:17.681
  STEP: set up a multi version CRD @ 07/12/25 12:41:17.683
  I0712 12:41:17.683419 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  E0712 12:41:17.742376      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:18.743325      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:19.743484      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:20.744479      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: rename a version @ 07/12/25 12:41:20.798
  STEP: check the new version name is served @ 07/12/25 12:41:20.811
  STEP: check the old version name is removed @ 07/12/25 12:41:21.557
  E0712 12:41:21.745491      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 07/12/25 12:41:22.17
  E0712 12:41:22.746020      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:23.746931      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:41:24.599693 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3632" for this suite. @ 07/12/25 12:41:24.605
• [6.949 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 07/12/25 12:41:24.614
  I0712 12:41:24.614300 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename secrets @ 07/12/25 12:41:24.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:41:24.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:41:24.626
  STEP: Creating secret with name secret-test-5eee6b07-0d27-4385-9e43-2576dee8152f @ 07/12/25 12:41:24.628
  STEP: Creating a pod to test consume secrets @ 07/12/25 12:41:24.633
  E0712 12:41:24.747628      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:25.747775      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:26.748598      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:27.748789      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 12:41:28.652
  I0712 12:41:28.655346 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-secrets-65b9024c-76a6-4982-ad7d-dfe162c1d6c3 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/12/25 12:41:28.662
  I0712 12:41:28.679936 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-292" for this suite. @ 07/12/25 12:41:28.682
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:980
  STEP: Creating a kubernetes client @ 07/12/25 12:41:28.689
  I0712 12:41:28.689831 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename statefulset @ 07/12/25 12:41:28.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:41:28.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:41:28.705
  STEP: Creating service test in namespace statefulset-8004 @ 07/12/25 12:41:28.707
  I0712 12:41:28.721900 20 wait.go:44] Found 0 stateful pods, waiting for 1
  E0712 12:41:28.749086      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:29.749911      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:30.750003      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:31.750146      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:32.750371      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:33.750461      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:34.750554      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:35.751419      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:36.751634      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:37.752431      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:41:38.723488 20 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 07/12/25 12:41:38.729
  I0712 12:41:38.751824 20 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0712 12:41:38.751845 20 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  E0712 12:41:38.752815      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:39.752915      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:40.753130      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:41.753370      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:42.753473      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:43.753566      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:44.753648      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:45.753744      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:46.753883      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:47.753984      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:41:48.746522 20 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0712 12:41:48.746555 20 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 07/12/25 12:41:48.752
  E0712 12:41:48.754400      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Delete all of the StatefulSets @ 07/12/25 12:41:48.755
  STEP: Verify that StatefulSets have been deleted @ 07/12/25 12:41:48.766
  I0712 12:41:48.770337 20 statefulset.go:138] Deleting all statefulset in ns statefulset-8004
  I0712 12:41:48.786829 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8004" for this suite. @ 07/12/25 12:41:48.79
• [20.109 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 07/12/25 12:41:48.798
  I0712 12:41:48.799413 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename apf @ 07/12/25 12:41:48.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:41:48.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:41:48.813
  STEP: getting /apis @ 07/12/25 12:41:48.815
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 07/12/25 12:41:48.818
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 07/12/25 12:41:48.819
  STEP: creating @ 07/12/25 12:41:48.82
  STEP: getting @ 07/12/25 12:41:48.833
  STEP: listing @ 07/12/25 12:41:48.836
  STEP: watching @ 07/12/25 12:41:48.84
  I0712 12:41:48.840946 20 flowcontrol.go:394] starting watch
  STEP: patching @ 07/12/25 12:41:48.842
  STEP: updating @ 07/12/25 12:41:48.853
  I0712 12:41:48.862052 20 flowcontrol.go:422] waiting for watch events with expected annotations
  I0712 12:41:48.862084 20 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  I0712 12:41:48.862120 20 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 07/12/25 12:41:48.862
  STEP: patching /status @ 07/12/25 12:41:48.865
  STEP: updating /status @ 07/12/25 12:41:48.869
  STEP: deleting @ 07/12/25 12:41:48.9
  STEP: deleting a collection @ 07/12/25 12:41:48.914
  I0712 12:41:48.936161 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-2767" for this suite. @ 07/12/25 12:41:48.94
• [0.160 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 07/12/25 12:41:48.965
  I0712 12:41:48.968288 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename webhook @ 07/12/25 12:41:48.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:41:48.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:41:48.984
  STEP: Setting up server cert @ 07/12/25 12:41:49.003
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/12/25 12:41:49.45
  STEP: Deploying the webhook pod @ 07/12/25 12:41:49.458
  STEP: Wait for the deployment to be ready @ 07/12/25 12:41:49.471
  I0712 12:41:49.477081 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0712 12:41:49.754570      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:50.755018      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/12/25 12:41:51.487
  STEP: Verifying the service has paired with the endpoint @ 07/12/25 12:41:51.504
  E0712 12:41:51.755915      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:41:52.505242 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0712 12:41:52.509595 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  E0712 12:41:52.756407      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2705-crds.webhook.example.com via the AdmissionRegistration API @ 07/12/25 12:41:53.017
  STEP: Creating a custom resource that should be mutated by the webhook @ 07/12/25 12:41:53.034
  E0712 12:41:53.757168      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:54.757286      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:41:55.630703 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1710" for this suite. @ 07/12/25 12:41:55.634
  STEP: Destroying namespace "webhook-markers-8294" for this suite. @ 07/12/25 12:41:55.64
• [6.682 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1049
  STEP: Creating a kubernetes client @ 07/12/25 12:41:55.646
  I0712 12:41:55.646427 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename statefulset @ 07/12/25 12:41:55.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:41:55.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:41:55.66
  STEP: Creating service test in namespace statefulset-7330 @ 07/12/25 12:41:55.662
  STEP: Creating statefulset ss in namespace statefulset-7330 @ 07/12/25 12:41:55.676
  I0712 12:41:55.686159 20 wait.go:44] Found 0 stateful pods, waiting for 1
  E0712 12:41:55.757358      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:56.757474      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:57.757623      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:58.757722      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:41:59.757876      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:00.757944      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:01.758062      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:02.758168      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:03.758379      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:04.758488      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:42:05.688003 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 07/12/25 12:42:05.695
  STEP: Getting /status @ 07/12/25 12:42:05.7
  I0712 12:42:05.705635 20 statefulset.go:1085] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 07/12/25 12:42:05.705
  I0712 12:42:05.715826 20 statefulset.go:1105] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 07/12/25 12:42:05.715
  I0712 12:42:05.717049 20 statefulset.go:1133] Observed &StatefulSet event: ADDED
  I0712 12:42:05.717072 20 statefulset.go:1126] Found Statefulset ss in namespace statefulset-7330 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0712 12:42:05.717082 20 statefulset.go:1137] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 07/12/25 12:42:05.717
  I0712 12:42:05.717107 20 statefulset.go:1141] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0712 12:42:05.723515 20 statefulset.go:1145] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 07/12/25 12:42:05.723
  I0712 12:42:05.724624 20 statefulset.go:1170] Observed &StatefulSet event: ADDED
  I0712 12:42:05.724693 20 statefulset.go:138] Deleting all statefulset in ns statefulset-7330
  I0712 12:42:05.728001 20 rest.go:153] Scaling statefulset ss to 0
  E0712 12:42:05.758726      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:06.758892      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:07.759887      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:08.759960      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:09.760883      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:10.760966      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:11.761103      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:12.761338      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:13.761545      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:14.761617      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:42:15.740859 20 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0712 12:42:15.743678 20 rest.go:91] Deleting statefulset ss
  I0712 12:42:15.755952 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7330" for this suite. @ 07/12/25 12:42:15.758
  E0712 12:42:15.761714      20 retrywatcher.go:169] "Watch failed" err="context canceled"
• [20.119 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 07/12/25 12:42:15.765
  I0712 12:42:15.765162 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename disruption @ 07/12/25 12:42:15.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:42:15.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:42:15.777
  STEP: Creating a kubernetes client @ 07/12/25 12:42:15.78
  I0712 12:42:15.780193 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename disruption-2 @ 07/12/25 12:42:15.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:42:15.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:42:15.792
  STEP: Waiting for the pdb to be processed @ 07/12/25 12:42:15.8
  E0712 12:42:16.761937      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:17.762048      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 07/12/25 12:42:17.811
  E0712 12:42:18.762852      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:19.762889      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 07/12/25 12:42:19.819
  E0712 12:42:20.763392      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:21.763615      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 07/12/25 12:42:21.823
  STEP: listing a collection of PDBs in namespace disruption-1993 @ 07/12/25 12:42:21.827
  STEP: deleting a collection of PDBs @ 07/12/25 12:42:21.831
  STEP: Waiting for the PDB collection to be deleted @ 07/12/25 12:42:21.844
  I0712 12:42:21.847409 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-9262" for this suite. @ 07/12/25 12:42:21.85
  I0712 12:42:21.858369 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1993" for this suite. @ 07/12/25 12:42:21.951
• [6.194 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 07/12/25 12:42:21.959
  I0712 12:42:21.959848 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename deployment @ 07/12/25 12:42:21.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:42:21.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:42:21.975
  I0712 12:42:21.977774 20 deployment.go:798] Creating deployment "test-recreate-deployment"
  I0712 12:42:21.985390 20 deployment.go:804] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0712 12:42:21.998344 20 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  E0712 12:42:22.763776      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:23.763925      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:42:24.006630 20 deployment.go:808] Waiting deployment "test-recreate-deployment" to complete
  I0712 12:42:24.009410 20 deployment.go:813] Triggering a new rollout for deployment "test-recreate-deployment"
  I0712 12:42:24.020028 20 deployment.go:314] Updating deployment test-recreate-deployment
  I0712 12:42:24.020054 20 deployment.go:820] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0712 12:42:24.112280 20 deployment.go:632] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fe994371-6453-4622-9d65-5dd82c8b68d7",
      ResourceVersion: (string) (len=5) "14155",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887920941,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887920944,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887920944,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887920944,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887920944,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887920944,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887920941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0712 12:42:24.116505 20 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "94d9cc6c-04ed-488f-bdc9-9f71095e27cb",
      ResourceVersion: (string) (len=5) "14154",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887920944,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "fe994371-6453-4622-9d65-5dd82c8b68d7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887920944,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 65 39 39 34 33  37 31 2d 36 34 35 33 2d  |\"fe994371-6453-|
              00000120  34 36 32 32 2d 39 64 36  35 2d 35 64 64 38 32 63  |4622-9d65-5dd82c|
              00000130  38 62 36 38 64 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8b68d7\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887920944,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0712 12:42:24.117026 20 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0712 12:42:24.117242 20 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "65178938-ebdb-436c-8e0b-016710c1faa1",
      ResourceVersion: (string) (len=5) "14144",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887920941,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "fe994371-6453-4622-9d65-5dd82c8b68d7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887920944,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 65 39 39 34 33  37 31 2d 36 34 35 33 2d  |\"fe994371-6453-|
              00000120  34 36 32 32 2d 39 64 36  35 2d 35 64 64 38 32 63  |4622-9d65-5dd82c|
              00000130  38 62 36 38 64 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8b68d7\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887920944,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0712 12:42:24.120796 20 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-mstxp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-mstxp",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=15) "deployment-6013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6fc74ef0-2ebd-477a-b4bc-43fe61a9ae0d",
      ResourceVersion: (string) (len=5) "14156",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887920944,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "94d9cc6c-04ed-488f-bdc9-9f71095e27cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887920944,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 34  64 39 63 63 36 63 2d 30  |d\":\"94d9cc6c-0|
              00000090  34 65 64 2d 34 38 38 66  2d 62 64 63 39 2d 39 66  |4ed-488f-bdc9-9f|
              000000a0  37 31 30 39 35 65 32 37  63 62 5c 22 7d 22 3a 7b  |71095e27cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887920944,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jpq5d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jpq5d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-39-13",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887920944,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887920944,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887920944,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887920944,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887920944,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.39.13",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.39.13"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887920944,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jpq5d",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 12:42:24.121959 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6013" for this suite. @ 07/12/25 12:42:24.125
• [2.171 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:437
  STEP: Creating a kubernetes client @ 07/12/25 12:42:24.13
  I0712 12:42:24.130968 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename dns @ 07/12/25 12:42:24.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:42:24.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:42:24.145
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 07/12/25 12:42:24.147
  I0712 12:42:24.156491 20 dns.go:449] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-6277  c62f7318-b4de-4aec-a7ee-f729fc746e46 14164 1 2025-07-12 12:42:24 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-07-12 12:42:24 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qmnx5,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qmnx5,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},ObservedGeneration:0,},}
  E0712 12:42:24.764780      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:25.764954      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 07/12/25 12:42:26.167
  I0712 12:42:26.167459 20 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-6277 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0712 12:42:26.167477 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0712 12:42:26.167514 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/dns-6277/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  I0712 12:42:26.212128 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: Verifying customized DNS server is configured on pod... @ 07/12/25 12:42:26.212
  I0712 12:42:26.212191 20 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-6277 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0712 12:42:26.212219 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0712 12:42:26.212258 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/dns-6277/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0712 12:42:26.250331 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0712 12:42:26.250405 20 dns.go:451] Deleting pod test-dns-nameservers...
  I0712 12:42:26.265862 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6277" for this suite. @ 07/12/25 12:42:26.269
• [2.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 07/12/25 12:42:26.275
  I0712 12:42:26.275370 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename pod-network-test @ 07/12/25 12:42:26.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:42:26.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:42:26.29
  STEP: Performing setup for networking test in namespace pod-network-test-9308 @ 07/12/25 12:42:26.292
  STEP: creating a selector @ 07/12/25 12:42:26.292
  STEP: Creating the service pods in kubernetes @ 07/12/25 12:42:26.292
  I0712 12:42:26.292175 20 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0712 12:42:26.765099      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:27.765325      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:28.765902      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:29.766951      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:30.767492      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:31.767638      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:32.768508      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:33.768583      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:34.768722      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:35.768928      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:36.769903      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:37.769983      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:38.770430      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:39.771082      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 07/12/25 12:42:40.46
  E0712 12:42:40.771887      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:41.771968      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:42:42.477438 20 utils.go:802] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0712 12:42:42.477476 20 networking.go:42] Breadth first check of 192.168.214.158 on host 172.31.23.206...
  I0712 12:42:42.480568 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.235.149:9080/dial?request=hostname&protocol=http&host=192.168.214.158&port=8083&tries=1'] Namespace:pod-network-test-9308 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0712 12:42:42.480596 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0712 12:42:42.480639 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9308/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.235.149%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.214.158%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0712 12:42:42.522851 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0712 12:42:42.522897 20 utils.go:355] Waiting for responses: map[]
  I0712 12:42:42.522907 20 utils.go:359] reached 192.168.214.158 after 0/1 tries
  I0712 12:42:42.522916 20 networking.go:42] Breadth first check of 192.168.246.167 on host 172.31.3.36...
  I0712 12:42:42.525833 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.235.149:9080/dial?request=hostname&protocol=http&host=192.168.246.167&port=8083&tries=1'] Namespace:pod-network-test-9308 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0712 12:42:42.525846 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0712 12:42:42.525886 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9308/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.235.149%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.246.167%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0712 12:42:42.565904 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0712 12:42:42.565936 20 utils.go:355] Waiting for responses: map[]
  I0712 12:42:42.565945 20 utils.go:359] reached 192.168.246.167 after 0/1 tries
  I0712 12:42:42.565958 20 networking.go:42] Breadth first check of 192.168.235.148 on host 172.31.39.13...
  I0712 12:42:42.569656 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.235.149:9080/dial?request=hostname&protocol=http&host=192.168.235.148&port=8083&tries=1'] Namespace:pod-network-test-9308 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0712 12:42:42.569679 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0712 12:42:42.569718 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9308/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.235.149%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.235.148%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0712 12:42:42.607472 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0712 12:42:42.607503 20 utils.go:355] Waiting for responses: map[]
  I0712 12:42:42.607513 20 utils.go:359] reached 192.168.235.148 after 0/1 tries
  I0712 12:42:42.607521 20 networking.go:53] Going to retry 0 out of 3 pods....
  I0712 12:42:42.607701 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9308" for this suite. @ 07/12/25 12:42:42.611
• [16.342 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:892
  STEP: Creating a kubernetes client @ 07/12/25 12:42:42.618
  I0712 12:42:42.618432 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename job @ 07/12/25 12:42:42.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:42:42.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:42:42.682
  STEP: Creating a job @ 07/12/25 12:42:42.684
  STEP: Ensuring active pods == parallelism @ 07/12/25 12:42:42.691
  E0712 12:42:42.772902      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:43.774046      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete a job @ 07/12/25 12:42:44.7
  STEP: deleting Job.batch foo in namespace job-3880, will wait for the garbage collector to delete the pods @ 07/12/25 12:42:44.7
  I0712 12:42:44.761292 20 resources.go:139] Deleting Job.batch foo took: 7.201946ms
  E0712 12:42:44.774593      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:42:44.861381 20 resources.go:163] Terminating Job.batch foo pods took: 100.095597ms
  E0712 12:42:45.774939      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 07/12/25 12:42:46.062
  I0712 12:42:46.065901 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3880" for this suite. @ 07/12/25 12:42:46.07
• [3.459 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1693
  STEP: Creating a kubernetes client @ 07/12/25 12:42:46.077
  I0712 12:42:46.077800 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename kubectl @ 07/12/25 12:42:46.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:42:46.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:42:46.095
  STEP: creating Agnhost RC @ 07/12/25 12:42:46.097
  I0712 12:42:46.097316 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-855 create -f -'
  I0712 12:42:46.192046 20 builder.go:146] stderr: ""
  I0712 12:42:46.192078 20 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/12/25 12:42:46.192
  E0712 12:42:46.775295      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:42:47.197639 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0712 12:42:47.197671 20 framework.go:733] Found 1 / 1
  I0712 12:42:47.197685 20 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 07/12/25 12:42:47.197
  I0712 12:42:47.200462 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0712 12:42:47.200478 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0712 12:42:47.200521 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-855 patch pod agnhost-primary-kdg2c -p {"metadata":{"annotations":{"x":"y"}}}'
  I0712 12:42:47.252765 20 builder.go:146] stderr: ""
  I0712 12:42:47.252799 20 builder.go:147] stdout: "pod/agnhost-primary-kdg2c patched\n"
  STEP: checking annotations @ 07/12/25 12:42:47.252
  I0712 12:42:47.256151 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0712 12:42:47.256167 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0712 12:42:47.256321 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-855" for this suite. @ 07/12/25 12:42:47.26
• [1.188 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:189
  STEP: Creating a kubernetes client @ 07/12/25 12:42:47.265
  I0712 12:42:47.265718 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename emptydir @ 07/12/25 12:42:47.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:42:47.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:42:47.28
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 07/12/25 12:42:47.281
  E0712 12:42:47.775796      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:48.775786      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:49.775893      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:50.775985      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 12:42:51.301
  I0712 12:42:51.303782 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-acf0d803-2768-48d9-8463-73a46025808a container test-container: <nil>
  STEP: delete the pod @ 07/12/25 12:42:51.309
  I0712 12:42:51.328445 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-432" for this suite. @ 07/12/25 12:42:51.331
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:333
  STEP: Creating a kubernetes client @ 07/12/25 12:42:51.338
  I0712 12:42:51.338604 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename sched-pred @ 07/12/25 12:42:51.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:42:51.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:42:51.354
  I0712 12:42:51.356064 20 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0712 12:42:51.435869 20 util.go:390] Waiting for terminating namespaces to be deleted...
  I0712 12:42:51.439365 20 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-23-206 before test
  I0712 12:42:51.442335 20 predicates.go:958] nginx-ingress-controller-kubernetes-worker-p7kz8 from ingress-nginx-kubernetes-worker started at 2025-07-12 12:00:11 +0000 UTC (1 container statuses recorded)
  I0712 12:42:51.442349 20 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0712 12:42:51.442356 20 predicates.go:958] calico-node-54plq from kube-system started at 2025-07-12 12:17:03 +0000 UTC (1 container statuses recorded)
  I0712 12:42:51.442362 20 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0712 12:42:51.442368 20 predicates.go:958] coredns-5d946bb58-r22cc from kube-system started at 2025-07-12 12:00:11 +0000 UTC (1 container statuses recorded)
  I0712 12:42:51.442373 20 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0712 12:42:51.442378 20 predicates.go:958] kube-state-metrics-b84f44f45-pv9bk from kube-system started at 2025-07-12 12:00:10 +0000 UTC (1 container statuses recorded)
  I0712 12:42:51.442383 20 predicates.go:960] 	Container kube-state-metrics ready: true, restart count 0
  I0712 12:42:51.442389 20 predicates.go:958] metrics-server-v0.7.2-7d878b47f8-n56rt from kube-system started at 2025-07-12 12:00:11 +0000 UTC (2 container statuses recorded)
  I0712 12:42:51.442394 20 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0712 12:42:51.442401 20 predicates.go:960] 	Container metrics-server-nanny ready: true, restart count 0
  I0712 12:42:51.442411 20 predicates.go:958] dashboard-metrics-scraper-5cf87bc988-lp8pr from kubernetes-dashboard started at 2025-07-12 12:00:11 +0000 UTC (1 container statuses recorded)
  I0712 12:42:51.442416 20 predicates.go:960] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0712 12:42:51.442422 20 predicates.go:958] kubernetes-dashboard-6858576c98-27582 from kubernetes-dashboard started at 2025-07-12 12:00:11 +0000 UTC (1 container statuses recorded)
  I0712 12:42:51.442427 20 predicates.go:960] 	Container kubernetes-dashboard ready: true, restart count 5
  I0712 12:42:51.442433 20 predicates.go:958] sonobuoy-systemd-logs-daemon-set-e4f977ec76064d15-wlvd7 from sonobuoy started at 2025-07-12 12:20:11 +0000 UTC (2 container statuses recorded)
  I0712 12:42:51.442437 20 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0712 12:42:51.442442 20 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0712 12:42:51.442447 20 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-3-36 before test
  I0712 12:42:51.544004 20 predicates.go:958] nginx-ingress-controller-kubernetes-worker-l54zn from ingress-nginx-kubernetes-worker started at 2025-07-12 12:16:01 +0000 UTC (1 container statuses recorded)
  I0712 12:42:51.544027 20 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0712 12:42:51.544034 20 predicates.go:958] calico-node-w9rj4 from kube-system started at 2025-07-12 12:16:49 +0000 UTC (1 container statuses recorded)
  I0712 12:42:51.544040 20 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0712 12:42:51.544045 20 predicates.go:958] agnhost-primary-kdg2c from kubectl-855 started at 2025-07-12 12:42:46 +0000 UTC (1 container statuses recorded)
  I0712 12:42:51.544049 20 predicates.go:960] 	Container agnhost-primary ready: true, restart count 0
  I0712 12:42:51.544055 20 predicates.go:958] sonobuoy-e2e-job-ff92fb6baa0d42bd from sonobuoy started at 2025-07-12 12:20:11 +0000 UTC (2 container statuses recorded)
  I0712 12:42:51.544060 20 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0712 12:42:51.544064 20 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0712 12:42:51.544070 20 predicates.go:958] sonobuoy-systemd-logs-daemon-set-e4f977ec76064d15-82lg9 from sonobuoy started at 2025-07-12 12:20:11 +0000 UTC (2 container statuses recorded)
  I0712 12:42:51.544074 20 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0712 12:42:51.544079 20 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0712 12:42:51.544084 20 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-39-13 before test
  I0712 12:42:51.547617 20 predicates.go:958] nginx-ingress-controller-kubernetes-worker-dgps6 from ingress-nginx-kubernetes-worker started at 2025-07-12 12:14:14 +0000 UTC (1 container statuses recorded)
  I0712 12:42:51.547636 20 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0712 12:42:51.547644 20 predicates.go:958] calico-node-r8w6x from kube-system started at 2025-07-12 12:17:33 +0000 UTC (1 container statuses recorded)
  I0712 12:42:51.547650 20 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0712 12:42:51.547656 20 predicates.go:958] sonobuoy from sonobuoy started at 2025-07-12 12:20:10 +0000 UTC (1 container statuses recorded)
  I0712 12:42:51.547662 20 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0712 12:42:51.547667 20 predicates.go:958] sonobuoy-systemd-logs-daemon-set-e4f977ec76064d15-wz4t4 from sonobuoy started at 2025-07-12 12:20:11 +0000 UTC (2 container statuses recorded)
  I0712 12:42:51.547672 20 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0712 12:42:51.547677 20 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-23-206 @ 07/12/25 12:42:51.561
  STEP: verifying the node has the label node ip-172-31-3-36 @ 07/12/25 12:42:51.572
  STEP: verifying the node has the label node ip-172-31-39-13 @ 07/12/25 12:42:51.582
  I0712 12:42:51.645979 20 predicates.go:373] Pod nginx-ingress-controller-kubernetes-worker-dgps6 requesting resource cpu=0m on Node ip-172-31-39-13
  I0712 12:42:51.645998 20 predicates.go:373] Pod nginx-ingress-controller-kubernetes-worker-l54zn requesting resource cpu=0m on Node ip-172-31-3-36
  I0712 12:42:51.646004 20 predicates.go:373] Pod nginx-ingress-controller-kubernetes-worker-p7kz8 requesting resource cpu=0m on Node ip-172-31-23-206
  I0712 12:42:51.646010 20 predicates.go:373] Pod calico-node-54plq requesting resource cpu=250m on Node ip-172-31-23-206
  I0712 12:42:51.646016 20 predicates.go:373] Pod calico-node-r8w6x requesting resource cpu=250m on Node ip-172-31-39-13
  I0712 12:42:51.646022 20 predicates.go:373] Pod calico-node-w9rj4 requesting resource cpu=250m on Node ip-172-31-3-36
  I0712 12:42:51.646027 20 predicates.go:373] Pod coredns-5d946bb58-r22cc requesting resource cpu=100m on Node ip-172-31-23-206
  I0712 12:42:51.646034 20 predicates.go:373] Pod kube-state-metrics-b84f44f45-pv9bk requesting resource cpu=0m on Node ip-172-31-23-206
  I0712 12:42:51.646040 20 predicates.go:373] Pod metrics-server-v0.7.2-7d878b47f8-n56rt requesting resource cpu=5m on Node ip-172-31-23-206
  I0712 12:42:51.646046 20 predicates.go:373] Pod agnhost-primary-kdg2c requesting resource cpu=0m on Node ip-172-31-3-36
  I0712 12:42:51.646058 20 predicates.go:373] Pod dashboard-metrics-scraper-5cf87bc988-lp8pr requesting resource cpu=0m on Node ip-172-31-23-206
  I0712 12:42:51.646064 20 predicates.go:373] Pod kubernetes-dashboard-6858576c98-27582 requesting resource cpu=0m on Node ip-172-31-23-206
  I0712 12:42:51.646070 20 predicates.go:373] Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-39-13
  I0712 12:42:51.646076 20 predicates.go:373] Pod sonobuoy-e2e-job-ff92fb6baa0d42bd requesting resource cpu=0m on Node ip-172-31-3-36
  I0712 12:42:51.646081 20 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-e4f977ec76064d15-82lg9 requesting resource cpu=0m on Node ip-172-31-3-36
  I0712 12:42:51.646087 20 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-e4f977ec76064d15-wlvd7 requesting resource cpu=0m on Node ip-172-31-23-206
  I0712 12:42:51.646092 20 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-e4f977ec76064d15-wz4t4 requesting resource cpu=0m on Node ip-172-31-39-13
  STEP: Starting Pods to consume most of the cluster CPU. @ 07/12/25 12:42:51.646
  I0712 12:42:51.646114 20 predicates.go:383] Creating a pod which consumes cpu=1151m on Node ip-172-31-23-206
  I0712 12:42:51.656348 20 predicates.go:383] Creating a pod which consumes cpu=1225m on Node ip-172-31-3-36
  I0712 12:42:51.664460 20 predicates.go:383] Creating a pod which consumes cpu=1225m on Node ip-172-31-39-13
  E0712 12:42:51.776357      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:52.776516      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 07/12/25 12:42:53.689
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-2ad0995a-728b-468e-be6a-49fb7db43efe.1851818cc856600f], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2751/filler-pod-2ad0995a-728b-468e-be6a-49fb7db43efe to ip-172-31-39-13] @ 07/12/25 12:42:53.693
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-2ad0995a-728b-468e-be6a-49fb7db43efe.1851818ce6c26792], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 07/12/25 12:42:53.693
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-2ad0995a-728b-468e-be6a-49fb7db43efe.1851818ce81b0281], Reason = [Created], Message = [Created container: filler-pod-2ad0995a-728b-468e-be6a-49fb7db43efe] @ 07/12/25 12:42:53.693
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-2ad0995a-728b-468e-be6a-49fb7db43efe.1851818cea7b18aa], Reason = [Started], Message = [Started container filler-pod-2ad0995a-728b-468e-be6a-49fb7db43efe] @ 07/12/25 12:42:53.693
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-38f8cbca-dcf9-4995-b86a-11bbd8620ecc.1851818cc7728be4], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2751/filler-pod-38f8cbca-dcf9-4995-b86a-11bbd8620ecc to ip-172-31-23-206] @ 07/12/25 12:42:53.693
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-38f8cbca-dcf9-4995-b86a-11bbd8620ecc.1851818ce51e4654], Reason = [Pulling], Message = [Pulling image "registry.k8s.io/pause:3.10"] @ 07/12/25 12:42:53.693
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-38f8cbca-dcf9-4995-b86a-11bbd8620ecc.1851818cf8f54460], Reason = [Pulled], Message = [Successfully pulled image "registry.k8s.io/pause:3.10" in 332ms (332ms including waiting). Image size: 320368 bytes.] @ 07/12/25 12:42:53.693
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-38f8cbca-dcf9-4995-b86a-11bbd8620ecc.1851818cfa3c84b0], Reason = [Created], Message = [Created container: filler-pod-38f8cbca-dcf9-4995-b86a-11bbd8620ecc] @ 07/12/25 12:42:53.693
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-38f8cbca-dcf9-4995-b86a-11bbd8620ecc.1851818cfd57017d], Reason = [Started], Message = [Started container filler-pod-38f8cbca-dcf9-4995-b86a-11bbd8620ecc] @ 07/12/25 12:42:53.693
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-474eed8b-5693-4011-bd71-3c62461c4260.1851818cc827b31d], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2751/filler-pod-474eed8b-5693-4011-bd71-3c62461c4260 to ip-172-31-3-36] @ 07/12/25 12:42:53.693
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-474eed8b-5693-4011-bd71-3c62461c4260.1851818ce6075373], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 07/12/25 12:42:53.693
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-474eed8b-5693-4011-bd71-3c62461c4260.1851818ce769725b], Reason = [Created], Message = [Created container: filler-pod-474eed8b-5693-4011-bd71-3c62461c4260] @ 07/12/25 12:42:53.693
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-474eed8b-5693-4011-bd71-3c62461c4260.1851818cea195428], Reason = [Started], Message = [Started container filler-pod-474eed8b-5693-4011-bd71-3c62461c4260] @ 07/12/25 12:42:53.693
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.1851818d40a9d887], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 07/12/25 12:42:53.706
  E0712 12:42:53.777532      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-3-36 @ 07/12/25 12:42:54.703
  STEP: verifying the node doesn't have the label node @ 07/12/25 12:42:54.714
  STEP: removing the label node off the node ip-172-31-39-13 @ 07/12/25 12:42:54.717
  STEP: verifying the node doesn't have the label node @ 07/12/25 12:42:54.732
  STEP: removing the label node off the node ip-172-31-23-206 @ 07/12/25 12:42:54.737
  STEP: verifying the node doesn't have the label node @ 07/12/25 12:42:54.748
  I0712 12:42:54.752616 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2751" for this suite. @ 07/12/25 12:42:54.757
• [3.425 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 07/12/25 12:42:54.763
  I0712 12:42:54.763810 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename csistoragecapacity @ 07/12/25 12:42:54.765
  E0712 12:42:54.777776      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:42:54.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:42:54.782
  STEP: getting /apis @ 07/12/25 12:42:54.783
  STEP: getting /apis/storage.k8s.io @ 07/12/25 12:42:54.786
  STEP: getting /apis/storage.k8s.io/v1 @ 07/12/25 12:42:54.786
  STEP: creating @ 07/12/25 12:42:54.787
  STEP: watching @ 07/12/25 12:42:54.802
  I0712 12:42:54.802127 20 csistoragecapacity.go:143] starting watch
  STEP: getting @ 07/12/25 12:42:54.807
  STEP: listing in namespace @ 07/12/25 12:42:54.81
  STEP: listing across namespaces @ 07/12/25 12:42:54.812
  STEP: patching @ 07/12/25 12:42:54.815
  STEP: updating @ 07/12/25 12:42:54.819
  I0712 12:42:54.825339 20 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0712 12:42:54.825408 20 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 07/12/25 12:42:54.825
  STEP: deleting a collection @ 07/12/25 12:42:54.835
  I0712 12:42:54.850830 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-9643" for this suite. @ 07/12/25 12:42:54.857
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 07/12/25 12:42:54.862
  I0712 12:42:54.862772 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename container-probe @ 07/12/25 12:42:54.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:42:54.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:42:54.878
  E0712 12:42:55.777965      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:56.778118      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:57.778367      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:58.778571      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:42:59.778667      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:00.778775      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:01.779369      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:02.779454      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:03.779685      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:04.779795      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:05.779866      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:06.780850      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:07.781364      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:08.781476      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:09.781552      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:10.781661      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:11.781824      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:12.781931      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:13.782065      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:14.782936      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:15.783064      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:16.783182      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:17.783302      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:18.783372      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:19.783479      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:20.784431      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:21.784561      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:22.785435      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:23.785594      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:24.785883      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:25.785877      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:26.786121      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:27.786175      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:28.787186      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:29.787343      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:30.788327      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:31.789420      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:32.789530      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:33.790106      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:34.790403      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:35.791215      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:36.791300      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:37.792022      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:38.792138      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:39.792174      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:40.793274      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:41.793379      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:42.793516      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:43.793634      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:44.793876      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:45.794864      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:46.795020      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:47.795976      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:48.796370      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:49.796469      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:50.796951      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:51.797340      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:52.797450      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:53.797841      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:54.798903      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:43:54.895484 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2423" for this suite. @ 07/12/25 12:43:54.898
• [60.044 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 07/12/25 12:43:54.907
  I0712 12:43:54.907246 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename configmap @ 07/12/25 12:43:54.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:43:54.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:43:54.923
  STEP: Creating configMap with name cm-test-opt-del-70f8a135-2cd3-443a-8220-8655eef6a6de @ 07/12/25 12:43:54.999
  STEP: Creating configMap with name cm-test-opt-upd-58e75dd3-af6a-48de-9f6d-4f8d5543ce5a @ 07/12/25 12:43:55.004
  STEP: Creating the pod @ 07/12/25 12:43:55.008
  E0712 12:43:55.799416      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:56.800435      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-70f8a135-2cd3-443a-8220-8655eef6a6de @ 07/12/25 12:43:57.057
  STEP: Updating configmap cm-test-opt-upd-58e75dd3-af6a-48de-9f6d-4f8d5543ce5a @ 07/12/25 12:43:57.063
  STEP: Creating configMap with name cm-test-opt-create-296ba71e-6b22-4413-9cf9-f240ad968437 @ 07/12/25 12:43:57.067
  STEP: waiting to observe update in volume @ 07/12/25 12:43:57.071
  E0712 12:43:57.801434      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:58.801527      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:43:59.801610      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:00.801725      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:01.801819      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:02.801931      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:03.802363      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:04.802460      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:05.802543      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:06.802665      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:07.802763      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:08.802908      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:09.803031      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:10.803133      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:11.803385      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:12.803597      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:13.803722      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:14.803849      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:15.804828      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:16.805043      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:17.805116      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:18.805353      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:19.805465      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:20.805676      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:21.806370      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:22.806466      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:23.807438      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:24.807713      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:25.807847      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:26.807963      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:27.808766      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:28.809819      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:29.809903      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:30.809985      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:31.810115      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:32.810364      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:33.810458      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:34.810559      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:35.811424      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:36.811502      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:37.811694      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:38.811763      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:39.811898      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:40.811975      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:41.812031      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:42.812279      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:43.812380      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:44.812472      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:45.812625      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:46.812697      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:47.812788      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:48.812927      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:49.813624      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:50.813733      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:51.814706      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:52.814975      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:53.815743      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:54.815926      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:55.816077      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:56.816196      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:57.817024      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:58.817166      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:44:59.817849      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:00.818011      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:01.818088      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:02.818325      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:03.819240      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:04.819975      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:05.820300      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:06.820369      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:07.821432      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:08.821507      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:09.821734      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:10.822433      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:11.822872      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:12.823095      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:13.824148      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:14.825167      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:15.825924      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:16.826144      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:17.826876      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:18.826993      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:19.827273      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:20.827488      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:21.828143      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:22.828381      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:23.828735      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:24.828981      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:25.829701      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:26.829773      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:27.830399      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:28.830490      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:45:29.437790 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3410" for this suite. @ 07/12/25 12:45:29.441
• [94.541 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1050
  STEP: Creating a kubernetes client @ 07/12/25 12:45:29.448
  I0712 12:45:29.448132 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename kubectl @ 07/12/25 12:45:29.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:45:29.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:45:29.463
  STEP: create deployment with httpd image @ 07/12/25 12:45:29.464
  I0712 12:45:29.464984 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-8239 create -f -'
  I0712 12:45:29.534538 20 builder.go:146] stderr: ""
  I0712 12:45:29.534571 20 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 07/12/25 12:45:29.534
  I0712 12:45:29.534640 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-8239 diff -f -'
  E0712 12:45:29.831293      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:30.831391      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:31.832415      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:32.832511      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:45:33.831228 20 builder.go:135] rc: 1
  I0712 12:45:33.831315 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-8239 delete -f -'
  E0712 12:45:33.832531      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:45:33.880564 20 builder.go:146] stderr: ""
  I0712 12:45:33.880596 20 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0712 12:45:33.880769 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8239" for this suite. @ 07/12/25 12:45:33.883
• [4.444 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy succeededIndexes rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:526
  STEP: Creating a kubernetes client @ 07/12/25 12:45:33.892
  I0712 12:45:33.892604 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename job @ 07/12/25 12:45:33.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:45:33.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:45:33.912
  STEP: Creating an indexed job with successPolicy succeededIndexes rule @ 07/12/25 12:45:33.914
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 07/12/25 12:45:33.919
  E0712 12:45:34.833240      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:35.833372      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:36.833473      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:37.833586      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensure that the job reaches completions @ 07/12/25 12:45:37.931
  STEP: Verifying that the only appropriately index succeeded @ 07/12/25 12:45:37.937
  I0712 12:45:37.940578 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1227" for this suite. @ 07/12/25 12:45:37.944
• [4.059 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 07/12/25 12:45:37.951
  I0712 12:45:37.951395 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename podtemplate @ 07/12/25 12:45:37.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:45:37.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:45:37.967
  STEP: Create set of pod templates @ 07/12/25 12:45:37.969
  I0712 12:45:37.975657 20 podtemplates.go:143] created test-podtemplate-1
  I0712 12:45:37.980382 20 podtemplates.go:143] created test-podtemplate-2
  I0712 12:45:37.984795 20 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 07/12/25 12:45:37.984
  STEP: delete collection of pod templates @ 07/12/25 12:45:37.988
  I0712 12:45:37.988223 20 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 07/12/25 12:45:38.003
  I0712 12:45:38.003997 20 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0712 12:45:38.006173 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2889" for this suite. @ 07/12/25 12:45:38.045
• [0.102 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:647
  STEP: Creating a kubernetes client @ 07/12/25 12:45:38.052
  I0712 12:45:38.053024 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename gc @ 07/12/25 12:45:38.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:45:38.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:45:38.07
  STEP: create the rc @ 07/12/25 12:45:38.146
  I0712 12:45:38.151898      20 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0712 12:45:38.834462      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:39.834568      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:40.835375      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:41.836431      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:42.836455      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:43.857934      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 07/12/25 12:45:44.161
  STEP: wait for the rc to be deleted @ 07/12/25 12:45:44.168
  E0712 12:45:44.857961      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:45:45.184125 20 garbage_collector.go:678] 80 pods remaining
  I0712 12:45:45.184159 20 garbage_collector.go:685] 80 pods has nil DeletionTimestamp
  I0712 12:45:45.184163 20 garbage_collector.go:686] 
  E0712 12:45:45.859060      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:45:46.190327 20 garbage_collector.go:678] 71 pods remaining
  I0712 12:45:46.190388 20 garbage_collector.go:685] 70 pods has nil DeletionTimestamp
  I0712 12:45:46.190394 20 garbage_collector.go:686] 
  E0712 12:45:46.859704      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:45:47.176742 20 garbage_collector.go:678] 60 pods remaining
  I0712 12:45:47.176772 20 garbage_collector.go:685] 60 pods has nil DeletionTimestamp
  I0712 12:45:47.176777 20 garbage_collector.go:686] 
  E0712 12:45:47.859889      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:45:48.177893 20 garbage_collector.go:678] 40 pods remaining
  I0712 12:45:48.177929 20 garbage_collector.go:685] 40 pods has nil DeletionTimestamp
  I0712 12:45:48.177936 20 garbage_collector.go:686] 
  E0712 12:45:48.859876      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:45:49.179717 20 garbage_collector.go:678] 31 pods remaining
  I0712 12:45:49.179751 20 garbage_collector.go:685] 31 pods has nil DeletionTimestamp
  I0712 12:45:49.179758 20 garbage_collector.go:686] 
  E0712 12:45:49.860661      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:45:50.177876 20 garbage_collector.go:678] 20 pods remaining
  I0712 12:45:50.177902 20 garbage_collector.go:685] 20 pods has nil DeletionTimestamp
  I0712 12:45:50.177908 20 garbage_collector.go:686] 
  E0712 12:45:50.860713      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/12/25 12:45:51.173
  W0712 12:45:51.275942      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0712 12:45:51.275975 20 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0712 12:45:51.276257 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7573" for this suite. @ 07/12/25 12:45:51.279
• [13.235 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 07/12/25 12:45:51.288
  I0712 12:45:51.288352 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename endpointslice @ 07/12/25 12:45:51.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:45:51.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:45:51.304
  STEP: getting /apis @ 07/12/25 12:45:51.307
  STEP: getting /apis/discovery.k8s.io @ 07/12/25 12:45:51.309
  STEP: getting /apis/discovery.k8s.iov1 @ 07/12/25 12:45:51.31
  STEP: creating @ 07/12/25 12:45:51.31
  STEP: getting @ 07/12/25 12:45:51.327
  STEP: listing @ 07/12/25 12:45:51.329
  STEP: watching @ 07/12/25 12:45:51.332
  I0712 12:45:51.332574 20 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 07/12/25 12:45:51.333
  STEP: cluster-wide watching @ 07/12/25 12:45:51.335
  I0712 12:45:51.335713 20 endpointslice.go:459] starting watch
  STEP: patching @ 07/12/25 12:45:51.336
  STEP: updating @ 07/12/25 12:45:51.344
  I0712 12:45:51.354094 20 endpointslice.go:482] waiting for watch events with expected annotations
  I0712 12:45:51.354138 20 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 07/12/25 12:45:51.354
  STEP: deleting a collection @ 07/12/25 12:45:51.364
  I0712 12:45:51.380364 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1344" for this suite. @ 07/12/25 12:45:51.383
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 07/12/25 12:45:51.39
  I0712 12:45:51.390250 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename watch @ 07/12/25 12:45:51.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:45:51.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:45:51.403
  STEP: creating a watch on configmaps with a certain label @ 07/12/25 12:45:51.406
  STEP: creating a new configmap @ 07/12/25 12:45:51.406
  STEP: modifying the configmap once @ 07/12/25 12:45:51.41
  STEP: changing the label value of the configmap @ 07/12/25 12:45:51.417
  STEP: Expecting to observe a delete notification for the watched object @ 07/12/25 12:45:51.425
  I0712 12:45:51.425325 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8793  e2bf7570-119a-4bb6-9b90-55d1e5beb4c9 17170 0 2025-07-12 12:45:51 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-12 12:45:51 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0712 12:45:51.425548 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8793  e2bf7570-119a-4bb6-9b90-55d1e5beb4c9 17171 0 2025-07-12 12:45:51 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-12 12:45:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0712 12:45:51.425656 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8793  e2bf7570-119a-4bb6-9b90-55d1e5beb4c9 17172 0 2025-07-12 12:45:51 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-12 12:45:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 07/12/25 12:45:51.425
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 07/12/25 12:45:51.432
  E0712 12:45:51.861098      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:52.861241      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:53.861346      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:54.862114      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:55.862343      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:56.862544      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:57.862664      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:58.862762      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:45:59.862894      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:00.862999      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 07/12/25 12:46:01.433
  STEP: modifying the configmap a third time @ 07/12/25 12:46:01.442
  STEP: deleting the configmap @ 07/12/25 12:46:01.451
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 07/12/25 12:46:01.456
  I0712 12:46:01.456755 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8793  e2bf7570-119a-4bb6-9b90-55d1e5beb4c9 17779 0 2025-07-12 12:45:51 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-12 12:46:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0712 12:46:01.456834 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8793  e2bf7570-119a-4bb6-9b90-55d1e5beb4c9 17780 0 2025-07-12 12:45:51 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-12 12:46:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0712 12:46:01.456895 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8793  e2bf7570-119a-4bb6-9b90-55d1e5beb4c9 17781 0 2025-07-12 12:45:51 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-12 12:46:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0712 12:46:01.456975 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8793" for this suite. @ 07/12/25 12:46:01.46
• [10.080 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:426
  STEP: Creating a kubernetes client @ 07/12/25 12:46:01.47
  I0712 12:46:01.470691 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename replication-controller @ 07/12/25 12:46:01.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:46:01.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:46:01.489
  STEP: Creating ReplicationController "e2e-rc-hphk7" @ 07/12/25 12:46:01.491
  I0712 12:46:01.497454 20 rc.go:795] Get Replication Controller "e2e-rc-hphk7" to confirm replicas
  E0712 12:46:01.863081      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:46:02.497709 20 rc.go:795] Get Replication Controller "e2e-rc-hphk7" to confirm replicas
  I0712 12:46:02.500404 20 rc.go:804] Found 1 replicas for "e2e-rc-hphk7" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-hphk7" @ 07/12/25 12:46:02.5
  STEP: Updating a scale subresource @ 07/12/25 12:46:02.503
  STEP: Verifying replicas where modified for replication controller "e2e-rc-hphk7" @ 07/12/25 12:46:02.51
  I0712 12:46:02.510390 20 rc.go:795] Get Replication Controller "e2e-rc-hphk7" to confirm replicas
  E0712 12:46:02.863888      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:46:03.511310 20 rc.go:795] Get Replication Controller "e2e-rc-hphk7" to confirm replicas
  I0712 12:46:03.515395 20 rc.go:804] Found 2 replicas for "e2e-rc-hphk7" replication controller
  I0712 12:46:03.515534 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-412" for this suite. @ 07/12/25 12:46:03.519
• [2.057 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:96
  STEP: Creating a kubernetes client @ 07/12/25 12:46:03.527
  I0712 12:46:03.527625 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename replication-controller @ 07/12/25 12:46:03.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:46:03.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:46:03.542
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 07/12/25 12:46:03.545
  E0712 12:46:03.864363      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:04.864456      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 07/12/25 12:46:05.564
  STEP: Then the orphan pod is adopted @ 07/12/25 12:46:05.569
  E0712 12:46:05.864883      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:46:06.576564 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8243" for this suite. @ 07/12/25 12:46:06.579
• [3.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 07/12/25 12:46:06.586
  I0712 12:46:06.586582 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename configmap @ 07/12/25 12:46:06.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:46:06.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:46:06.603
  STEP: Creating configMap with name configmap-test-volume-b8f08b2a-52ff-447a-88e2-fd1931e85ebe @ 07/12/25 12:46:06.605
  STEP: Creating a pod to test consume configMaps @ 07/12/25 12:46:06.609
  E0712 12:46:06.865348      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:07.865536      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 12:46:08.628
  I0712 12:46:08.633905 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-configmaps-5837f85f-b708-4b7a-9993-7da72180efde container agnhost-container: <nil>
  STEP: delete the pod @ 07/12/25 12:46:08.646
  I0712 12:46:08.662623 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1561" for this suite. @ 07/12/25 12:46:08.666
• [2.087 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 07/12/25 12:46:08.674
  I0712 12:46:08.674532 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/12/25 12:46:08.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:46:08.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:46:08.69
  STEP: creating a policy with variables @ 07/12/25 12:46:08.698
  STEP: waiting until the marker is denied @ 07/12/25 12:46:08.715
  E0712 12:46:08.865767      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 07/12/25 12:46:09.127
  STEP: testing a non-replicated ReplicaSet not to be denied @ 07/12/25 12:46:09.141
  I0712 12:46:09.210841 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-5955" for this suite. @ 07/12/25 12:46:09.214
• [0.547 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 07/12/25 12:46:09.221
  I0712 12:46:09.221760 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename webhook @ 07/12/25 12:46:09.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:46:09.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:46:09.236
  STEP: Setting up server cert @ 07/12/25 12:46:09.25
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/12/25 12:46:09.59
  STEP: Deploying the webhook pod @ 07/12/25 12:46:09.598
  STEP: Wait for the deployment to be ready @ 07/12/25 12:46:09.612
  I0712 12:46:09.621497 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0712 12:46:09.866832      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:10.866968      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/12/25 12:46:11.632
  STEP: Verifying the service has paired with the endpoint @ 07/12/25 12:46:11.645
  E0712 12:46:11.867927      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:46:12.645647 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 07/12/25 12:46:12.65
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 07/12/25 12:46:12.651
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 07/12/25 12:46:12.651
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 07/12/25 12:46:12.651
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 07/12/25 12:46:12.652
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 07/12/25 12:46:12.652
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 07/12/25 12:46:12.653
  I0712 12:46:12.692950 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8280" for this suite. @ 07/12/25 12:46:12.695
  STEP: Destroying namespace "webhook-markers-2814" for this suite. @ 07/12/25 12:46:12.707
• [3.491 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:388
  STEP: Creating a kubernetes client @ 07/12/25 12:46:12.712
  I0712 12:46:12.713001 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename gc @ 07/12/25 12:46:12.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:46:12.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:46:12.726
  STEP: create the rc @ 07/12/25 12:46:12.796
  I0712 12:46:12.803951      20 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0712 12:46:12.868183      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:13.869350      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:14.870867      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:15.871699      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:16.872091      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:17.873094      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 07/12/25 12:46:18.807
  STEP: wait for the rc to be deleted @ 07/12/25 12:46:18.814
  E0712 12:46:18.873837      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:19.873995      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:20.874264      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:21.874375      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:22.874504      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 07/12/25 12:46:23.82
  E0712 12:46:23.874562      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:24.874741      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:25.874832      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:26.874918      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:27.875062      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:28.875144      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:29.876059      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:30.876431      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:31.876558      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:32.876626      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:33.876871      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:34.876940      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:35.877126      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:36.877438      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:37.877539      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:38.877644      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:39.877989      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:40.878413      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:41.878479      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:42.878638      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:43.878725      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:44.878877      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:45.878991      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:46.879857      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:47.879966      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:48.880659      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:49.880735      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:50.881403      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:51.882425      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:52.883404      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/12/25 12:46:53.83
  W0712 12:46:53.835090      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0712 12:46:53.835135 20 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0712 12:46:53.835186 20 delete.go:95] Deleting pod "simpletest.rc-295gm" in namespace "gc-9368"
  I0712 12:46:53.850805 20 delete.go:95] Deleting pod "simpletest.rc-2bllk" in namespace "gc-9368"
  I0712 12:46:53.864000 20 delete.go:95] Deleting pod "simpletest.rc-2w2pl" in namespace "gc-9368"
  I0712 12:46:53.875080 20 delete.go:95] Deleting pod "simpletest.rc-42d5k" in namespace "gc-9368"
  E0712 12:46:53.884476      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:46:53.888512 20 delete.go:95] Deleting pod "simpletest.rc-47jq2" in namespace "gc-9368"
  I0712 12:46:53.906102 20 delete.go:95] Deleting pod "simpletest.rc-4k6rn" in namespace "gc-9368"
  I0712 12:46:53.919809 20 delete.go:95] Deleting pod "simpletest.rc-4vxmf" in namespace "gc-9368"
  I0712 12:46:53.937275 20 delete.go:95] Deleting pod "simpletest.rc-5gnsx" in namespace "gc-9368"
  I0712 12:46:53.951858 20 delete.go:95] Deleting pod "simpletest.rc-6dn45" in namespace "gc-9368"
  I0712 12:46:53.966446 20 delete.go:95] Deleting pod "simpletest.rc-6jdpg" in namespace "gc-9368"
  I0712 12:46:53.981438 20 delete.go:95] Deleting pod "simpletest.rc-6skm4" in namespace "gc-9368"
  I0712 12:46:53.998986 20 delete.go:95] Deleting pod "simpletest.rc-7khhd" in namespace "gc-9368"
  I0712 12:46:54.010492 20 delete.go:95] Deleting pod "simpletest.rc-82dfn" in namespace "gc-9368"
  I0712 12:46:54.026246 20 delete.go:95] Deleting pod "simpletest.rc-82j7b" in namespace "gc-9368"
  I0712 12:46:54.038934 20 delete.go:95] Deleting pod "simpletest.rc-9cjfs" in namespace "gc-9368"
  I0712 12:46:54.055384 20 delete.go:95] Deleting pod "simpletest.rc-9ffgc" in namespace "gc-9368"
  I0712 12:46:54.071998 20 delete.go:95] Deleting pod "simpletest.rc-9n98q" in namespace "gc-9368"
  I0712 12:46:54.086577 20 delete.go:95] Deleting pod "simpletest.rc-9nz6k" in namespace "gc-9368"
  I0712 12:46:54.100866 20 delete.go:95] Deleting pod "simpletest.rc-b5kbb" in namespace "gc-9368"
  I0712 12:46:54.115131 20 delete.go:95] Deleting pod "simpletest.rc-b8lbf" in namespace "gc-9368"
  I0712 12:46:54.127128 20 delete.go:95] Deleting pod "simpletest.rc-bhgn6" in namespace "gc-9368"
  I0712 12:46:54.148492 20 delete.go:95] Deleting pod "simpletest.rc-bvrd2" in namespace "gc-9368"
  I0712 12:46:54.164767 20 delete.go:95] Deleting pod "simpletest.rc-cpf6b" in namespace "gc-9368"
  I0712 12:46:54.180033 20 delete.go:95] Deleting pod "simpletest.rc-cskwk" in namespace "gc-9368"
  I0712 12:46:54.194465 20 delete.go:95] Deleting pod "simpletest.rc-d46q7" in namespace "gc-9368"
  I0712 12:46:54.215363 20 delete.go:95] Deleting pod "simpletest.rc-d7c5k" in namespace "gc-9368"
  I0712 12:46:54.234761 20 delete.go:95] Deleting pod "simpletest.rc-dbt5p" in namespace "gc-9368"
  I0712 12:46:54.251766 20 delete.go:95] Deleting pod "simpletest.rc-df97c" in namespace "gc-9368"
  I0712 12:46:54.269457 20 delete.go:95] Deleting pod "simpletest.rc-fcld4" in namespace "gc-9368"
  I0712 12:46:54.286303 20 delete.go:95] Deleting pod "simpletest.rc-fh9hg" in namespace "gc-9368"
  I0712 12:46:54.298879 20 delete.go:95] Deleting pod "simpletest.rc-frpdh" in namespace "gc-9368"
  I0712 12:46:54.319670 20 delete.go:95] Deleting pod "simpletest.rc-fxjl9" in namespace "gc-9368"
  I0712 12:46:54.333132 20 delete.go:95] Deleting pod "simpletest.rc-gfh62" in namespace "gc-9368"
  I0712 12:46:54.356600 20 delete.go:95] Deleting pod "simpletest.rc-gfnms" in namespace "gc-9368"
  I0712 12:46:54.372025 20 delete.go:95] Deleting pod "simpletest.rc-gh28x" in namespace "gc-9368"
  I0712 12:46:54.387526 20 delete.go:95] Deleting pod "simpletest.rc-gztql" in namespace "gc-9368"
  I0712 12:46:54.400002 20 delete.go:95] Deleting pod "simpletest.rc-h5746" in namespace "gc-9368"
  I0712 12:46:54.415856 20 delete.go:95] Deleting pod "simpletest.rc-hdsxk" in namespace "gc-9368"
  I0712 12:46:54.434137 20 delete.go:95] Deleting pod "simpletest.rc-hm48k" in namespace "gc-9368"
  I0712 12:46:54.445960 20 delete.go:95] Deleting pod "simpletest.rc-hxwpn" in namespace "gc-9368"
  I0712 12:46:54.461808 20 delete.go:95] Deleting pod "simpletest.rc-j4jtw" in namespace "gc-9368"
  I0712 12:46:54.483727 20 delete.go:95] Deleting pod "simpletest.rc-jdtx5" in namespace "gc-9368"
  I0712 12:46:54.499337 20 delete.go:95] Deleting pod "simpletest.rc-jjmj2" in namespace "gc-9368"
  I0712 12:46:54.521338 20 delete.go:95] Deleting pod "simpletest.rc-k8gz4" in namespace "gc-9368"
  I0712 12:46:54.535549 20 delete.go:95] Deleting pod "simpletest.rc-k9m2h" in namespace "gc-9368"
  I0712 12:46:54.551862 20 delete.go:95] Deleting pod "simpletest.rc-kcbqh" in namespace "gc-9368"
  I0712 12:46:54.569323 20 delete.go:95] Deleting pod "simpletest.rc-kglsw" in namespace "gc-9368"
  I0712 12:46:54.583821 20 delete.go:95] Deleting pod "simpletest.rc-kkb59" in namespace "gc-9368"
  I0712 12:46:54.598391 20 delete.go:95] Deleting pod "simpletest.rc-kkwrh" in namespace "gc-9368"
  I0712 12:46:54.609629 20 delete.go:95] Deleting pod "simpletest.rc-l6t7w" in namespace "gc-9368"
  I0712 12:46:54.625498 20 delete.go:95] Deleting pod "simpletest.rc-lbhh2" in namespace "gc-9368"
  I0712 12:46:54.651508 20 delete.go:95] Deleting pod "simpletest.rc-ldcmn" in namespace "gc-9368"
  I0712 12:46:54.667010 20 delete.go:95] Deleting pod "simpletest.rc-ldz44" in namespace "gc-9368"
  I0712 12:46:54.685773 20 delete.go:95] Deleting pod "simpletest.rc-ljptj" in namespace "gc-9368"
  I0712 12:46:54.704506 20 delete.go:95] Deleting pod "simpletest.rc-lk6wt" in namespace "gc-9368"
  I0712 12:46:54.723322 20 delete.go:95] Deleting pod "simpletest.rc-llhrh" in namespace "gc-9368"
  I0712 12:46:54.733711 20 delete.go:95] Deleting pod "simpletest.rc-lphhg" in namespace "gc-9368"
  I0712 12:46:54.748470 20 delete.go:95] Deleting pod "simpletest.rc-lr2sr" in namespace "gc-9368"
  I0712 12:46:54.762481 20 delete.go:95] Deleting pod "simpletest.rc-lxjk4" in namespace "gc-9368"
  I0712 12:46:54.777862 20 delete.go:95] Deleting pod "simpletest.rc-mvpvp" in namespace "gc-9368"
  I0712 12:46:54.787064 20 delete.go:95] Deleting pod "simpletest.rc-mwjrb" in namespace "gc-9368"
  I0712 12:46:54.797379 20 delete.go:95] Deleting pod "simpletest.rc-mzp6z" in namespace "gc-9368"
  I0712 12:46:54.816323 20 delete.go:95] Deleting pod "simpletest.rc-nd4gv" in namespace "gc-9368"
  I0712 12:46:54.836261 20 delete.go:95] Deleting pod "simpletest.rc-nqgmr" in namespace "gc-9368"
  I0712 12:46:54.856777 20 delete.go:95] Deleting pod "simpletest.rc-nr8dh" in namespace "gc-9368"
  I0712 12:46:54.870331 20 delete.go:95] Deleting pod "simpletest.rc-pd2sf" in namespace "gc-9368"
  E0712 12:46:54.885847      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:46:54.889899 20 delete.go:95] Deleting pod "simpletest.rc-pj4z4" in namespace "gc-9368"
  I0712 12:46:54.904752 20 delete.go:95] Deleting pod "simpletest.rc-pk2b8" in namespace "gc-9368"
  I0712 12:46:54.919634 20 delete.go:95] Deleting pod "simpletest.rc-plwr8" in namespace "gc-9368"
  I0712 12:46:54.933886 20 delete.go:95] Deleting pod "simpletest.rc-pvksn" in namespace "gc-9368"
  I0712 12:46:54.947339 20 delete.go:95] Deleting pod "simpletest.rc-q5ct7" in namespace "gc-9368"
  I0712 12:46:54.982983 20 delete.go:95] Deleting pod "simpletest.rc-q9hp2" in namespace "gc-9368"
  I0712 12:46:55.037738 20 delete.go:95] Deleting pod "simpletest.rc-qkj4p" in namespace "gc-9368"
  I0712 12:46:55.084334 20 delete.go:95] Deleting pod "simpletest.rc-qxb8c" in namespace "gc-9368"
  I0712 12:46:55.134547 20 delete.go:95] Deleting pod "simpletest.rc-rfmqd" in namespace "gc-9368"
  I0712 12:46:55.185903 20 delete.go:95] Deleting pod "simpletest.rc-rkrlc" in namespace "gc-9368"
  I0712 12:46:55.236383 20 delete.go:95] Deleting pod "simpletest.rc-rtmhv" in namespace "gc-9368"
  I0712 12:46:55.286988 20 delete.go:95] Deleting pod "simpletest.rc-s59x5" in namespace "gc-9368"
  I0712 12:46:55.338656 20 delete.go:95] Deleting pod "simpletest.rc-shtrw" in namespace "gc-9368"
  I0712 12:46:55.386473 20 delete.go:95] Deleting pod "simpletest.rc-sxjrk" in namespace "gc-9368"
  I0712 12:46:55.437919 20 delete.go:95] Deleting pod "simpletest.rc-szlpq" in namespace "gc-9368"
  I0712 12:46:55.487397 20 delete.go:95] Deleting pod "simpletest.rc-t9tzf" in namespace "gc-9368"
  I0712 12:46:55.533462 20 delete.go:95] Deleting pod "simpletest.rc-td6wf" in namespace "gc-9368"
  I0712 12:46:55.592366 20 delete.go:95] Deleting pod "simpletest.rc-tkd8j" in namespace "gc-9368"
  I0712 12:46:55.636594 20 delete.go:95] Deleting pod "simpletest.rc-tkt56" in namespace "gc-9368"
  I0712 12:46:55.685547 20 delete.go:95] Deleting pod "simpletest.rc-tsb5m" in namespace "gc-9368"
  I0712 12:46:55.737248 20 delete.go:95] Deleting pod "simpletest.rc-v9cpt" in namespace "gc-9368"
  I0712 12:46:55.789359 20 delete.go:95] Deleting pod "simpletest.rc-vhd58" in namespace "gc-9368"
  I0712 12:46:55.833733 20 delete.go:95] Deleting pod "simpletest.rc-vmjgr" in namespace "gc-9368"
  I0712 12:46:55.885901 20 delete.go:95] Deleting pod "simpletest.rc-vpv8z" in namespace "gc-9368"
  E0712 12:46:55.886160      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:46:55.935576 20 delete.go:95] Deleting pod "simpletest.rc-w5pr5" in namespace "gc-9368"
  I0712 12:46:55.993956 20 delete.go:95] Deleting pod "simpletest.rc-w5rx9" in namespace "gc-9368"
  I0712 12:46:56.036566 20 delete.go:95] Deleting pod "simpletest.rc-wf2qs" in namespace "gc-9368"
  I0712 12:46:56.090001 20 delete.go:95] Deleting pod "simpletest.rc-wwwxh" in namespace "gc-9368"
  I0712 12:46:56.135423 20 delete.go:95] Deleting pod "simpletest.rc-x7s8v" in namespace "gc-9368"
  I0712 12:46:56.188787 20 delete.go:95] Deleting pod "simpletest.rc-xgd2r" in namespace "gc-9368"
  I0712 12:46:56.235586 20 delete.go:95] Deleting pod "simpletest.rc-xgwc7" in namespace "gc-9368"
  I0712 12:46:56.284633 20 delete.go:95] Deleting pod "simpletest.rc-xmzl2" in namespace "gc-9368"
  I0712 12:46:56.334876 20 delete.go:95] Deleting pod "simpletest.rc-xsv2v" in namespace "gc-9368"
  I0712 12:46:56.391450 20 delete.go:95] Deleting pod "simpletest.rc-zp2xm" in namespace "gc-9368"
  I0712 12:46:56.436599 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9368" for this suite. @ 07/12/25 12:46:56.475
• [43.815 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:743
  STEP: Creating a kubernetes client @ 07/12/25 12:46:56.528
  I0712 12:46:56.528439 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename services @ 07/12/25 12:46:56.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:46:56.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:46:56.551
  I0712 12:46:56.556222 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3429" for this suite. @ 07/12/25 12:46:56.576
• [0.056 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 07/12/25 12:46:56.584
  I0712 12:46:56.584695 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/12/25 12:46:56.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:46:56.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:46:56.6
  STEP: getting /apis @ 07/12/25 12:46:56.611
  STEP: getting /apis/admissionregistration.k8s.io @ 07/12/25 12:46:56.616
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 07/12/25 12:46:56.617
  STEP: creating @ 07/12/25 12:46:56.619
  STEP: getting @ 07/12/25 12:46:56.636
  STEP: listing @ 07/12/25 12:46:56.642
  STEP: watching @ 07/12/25 12:46:56.645
  I0712 12:46:56.645343 20 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 07/12/25 12:46:56.646
  STEP: updating @ 07/12/25 12:46:56.65
  I0712 12:46:56.659604 20 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 07/12/25 12:46:56.659
  STEP: deleting a collection @ 07/12/25 12:46:56.673
  I0712 12:46:56.694772 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-9550" for this suite. @ 07/12/25 12:46:56.702
• [0.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 07/12/25 12:46:56.708
  I0712 12:46:56.708571 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename configmap @ 07/12/25 12:46:56.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:46:56.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:46:56.757
  STEP: Creating configMap that has name configmap-test-emptyKey-701afa6e-7d15-4e34-afbb-418b6bd0fb64 @ 07/12/25 12:46:56.76
  I0712 12:46:56.761611 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7936" for this suite. @ 07/12/25 12:46:56.799
• [0.096 seconds]
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:770
  STEP: Creating a kubernetes client @ 07/12/25 12:46:56.804
  I0712 12:46:56.804704 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename svcaccounts @ 07/12/25 12:46:56.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:46:56.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:46:56.874
  I0712 12:46:56.884053 20 service_accounts.go:782] Got root ca configmap in namespace "svcaccounts-2311"
  E0712 12:46:56.886307      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:46:56.890501 20 service_accounts.go:785] Deleted root ca configmap in namespace "svcaccounts-2311"
  STEP: waiting for a new root ca configmap created @ 07/12/25 12:46:57.39
  I0712 12:46:57.395150 20 service_accounts.go:799] Recreated root ca configmap in namespace "svcaccounts-2311"
  I0712 12:46:57.401038 20 service_accounts.go:810] Updated root ca configmap in namespace "svcaccounts-2311"
  E0712 12:46:57.893844      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 07/12/25 12:46:57.902
  I0712 12:46:57.907320 20 service_accounts.go:828] Reconciled root ca configmap in namespace "svcaccounts-2311"
  I0712 12:46:57.907540 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2311" for this suite. @ 07/12/25 12:46:57.913
• [1.118 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 07/12/25 12:46:57.922
  I0712 12:46:57.922912 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/12/25 12:46:57.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:46:57.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:46:57.948
  I0712 12:46:57.953591 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  I0712 12:46:58.506178 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6553" for this suite. @ 07/12/25 12:46:58.513
• [0.597 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 07/12/25 12:46:58.521
  I0712 12:46:58.521601 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename init-container @ 07/12/25 12:46:58.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:46:58.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:46:58.542
  STEP: creating the pod @ 07/12/25 12:46:58.545
  I0712 12:46:58.545653 20 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E0712 12:46:58.890801      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:46:59.891427      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:00.892416      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:01.892542      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:47:02.159234 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1623" for this suite. @ 07/12/25 12:47:02.164
• [3.650 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 07/12/25 12:47:02.171
  I0712 12:47:02.171884 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename webhook @ 07/12/25 12:47:02.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:47:02.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:47:02.19
  STEP: Setting up server cert @ 07/12/25 12:47:02.211
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/12/25 12:47:02.425
  STEP: Deploying the webhook pod @ 07/12/25 12:47:02.43
  STEP: Wait for the deployment to be ready @ 07/12/25 12:47:02.445
  I0712 12:47:02.455550 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0712 12:47:02.892911      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:03.893129      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/12/25 12:47:04.464
  STEP: Verifying the service has paired with the endpoint @ 07/12/25 12:47:04.48
  E0712 12:47:04.893912      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:47:05.480358 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 07/12/25 12:47:05.485
  STEP: create a configmap that should be updated by the webhook @ 07/12/25 12:47:05.499
  I0712 12:47:05.562951 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1127" for this suite. @ 07/12/25 12:47:05.567
  STEP: Destroying namespace "webhook-markers-1198" for this suite. @ 07/12/25 12:47:05.573
• [3.406 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 07/12/25 12:47:05.578
  I0712 12:47:05.578403 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename container-probe @ 07/12/25 12:47:05.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:47:05.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:47:05.591
  E0712 12:47:05.894261      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:06.894360      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:07.894992      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:08.895225      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:09.895832      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:10.896036      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:11.896744      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:12.896840      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:13.897745      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:14.897950      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:15.899023      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:16.899128      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:17.899375      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:18.899464      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:19.900322      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:20.900363      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:21.901216      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:22.901359      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:23.901972      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:24.901964      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:25.902761      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:26.902975      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:47:27.661644 20 container_probe.go:91] Container started at 2025-07-12 12:47:06 +0000 UTC, pod became ready at 2025-07-12 12:47:27 +0000 UTC
  I0712 12:47:27.661758 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3867" for this suite. @ 07/12/25 12:47:27.664
• [22.093 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 07/12/25 12:47:27.673
  I0712 12:47:27.673516 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename disruption @ 07/12/25 12:47:27.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:47:27.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:47:27.689
  STEP: Waiting for the pdb to be processed @ 07/12/25 12:47:27.695
  E0712 12:47:27.904006      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:28.904128      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 07/12/25 12:47:29.698
  STEP: Waiting for all pods to be running @ 07/12/25 12:47:29.708
  I0712 12:47:29.715698 20 disruption.go:691] running pods: 0 < 1
  E0712 12:47:29.905033      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:30.905166      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 07/12/25 12:47:31.714
  STEP: Waiting for the pdb to be processed @ 07/12/25 12:47:31.725
  STEP: Patching PodDisruptionBudget status @ 07/12/25 12:47:31.734
  STEP: Waiting for the pdb to be processed @ 07/12/25 12:47:31.742
  I0712 12:47:31.745128 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4419" for this suite. @ 07/12/25 12:47:31.748
• [4.080 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 07/12/25 12:47:31.754
  I0712 12:47:31.754164 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename pods @ 07/12/25 12:47:31.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:47:31.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:47:31.767
  STEP: creating the pod @ 07/12/25 12:47:31.769
  STEP: submitting the pod to kubernetes @ 07/12/25 12:47:31.769
  I0712 12:47:31.779559      20 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  E0712 12:47:31.906079      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:32.906225      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 07/12/25 12:47:33.794
  STEP: updating the pod @ 07/12/25 12:47:33.798
  E0712 12:47:33.907021      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:47:34.312092 20 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-6e8888c0-fb51-4cef-b9ef-3c844db51cdf"
  E0712 12:47:34.907994      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:35.908118      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:36.909105      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:37.909175      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:47:38.324807 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1146" for this suite. @ 07/12/25 12:47:38.329
• [6.580 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 07/12/25 12:47:38.334
  I0712 12:47:38.334584 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename replicaset @ 07/12/25 12:47:38.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:47:38.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:47:38.347
  I0712 12:47:38.349479 20 replica_set.go:192] Creating ReplicaSet my-hostname-basic-a3e2a139-ae42-43f3-88b2-18f8ebab301b
  I0712 12:47:38.359983 20 resource.go:81] Pod name my-hostname-basic-a3e2a139-ae42-43f3-88b2-18f8ebab301b: Found 0 pods out of 1
  E0712 12:47:38.909364      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:39.909456      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:40.909522      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:41.909626      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:42.909710      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:47:43.363753 20 resource.go:81] Pod name my-hostname-basic-a3e2a139-ae42-43f3-88b2-18f8ebab301b: Found 1 pods out of 1
  I0712 12:47:43.363794 20 replica_set.go:205] Ensuring a pod for ReplicaSet "my-hostname-basic-a3e2a139-ae42-43f3-88b2-18f8ebab301b" is running
  I0712 12:47:43.366674 20 replica_set.go:221] Pod "my-hostname-basic-a3e2a139-ae42-43f3-88b2-18f8ebab301b-k6hdw" is running (conditions: [{Type:PodReadyToStartContainers ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-12 12:47:39 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-12 12:47:38 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-12 12:47:39 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-12 12:47:39 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-12 12:47:38 +0000 UTC Reason: Message:}])
  I0712 12:47:43.366791 20 replica_set.go:229] Trying to dial the pod
  STEP: trying to dial each unique pod @ 07/12/25 12:47:43.366
  I0712 12:47:43.376969 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3052" for this suite. @ 07/12/25 12:47:43.38
• [5.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 07/12/25 12:47:43.387
  I0712 12:47:43.387683 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename projected @ 07/12/25 12:47:43.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:47:43.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:47:43.402
  STEP: Creating a pod to test downward API volume plugin @ 07/12/25 12:47:43.405
  E0712 12:47:43.909794      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:44.910395      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 12:47:45.424
  I0712 12:47:45.426853 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod downwardapi-volume-fc1fb036-700d-45e8-ab32-6aabda2f359a container client-container: <nil>
  STEP: delete the pod @ 07/12/25 12:47:45.442
  I0712 12:47:45.458844 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-398" for this suite. @ 07/12/25 12:47:45.462
• [2.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:640
  STEP: Creating a kubernetes client @ 07/12/25 12:47:45.47
  I0712 12:47:45.470636 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename webhook @ 07/12/25 12:47:45.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:47:45.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:47:45.485
  STEP: Setting up server cert @ 07/12/25 12:47:45.507
  E0712 12:47:45.911327      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/12/25 12:47:46.107
  STEP: Deploying the webhook pod @ 07/12/25 12:47:46.115
  STEP: Wait for the deployment to be ready @ 07/12/25 12:47:46.128
  I0712 12:47:46.137458 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0712 12:47:46.912353      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:47.912468      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/12/25 12:47:48.148
  STEP: Verifying the service has paired with the endpoint @ 07/12/25 12:47:48.161
  E0712 12:47:48.912534      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:47:49.161621 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 07/12/25 12:47:49.263
  STEP: Creating a configMap that should be mutated @ 07/12/25 12:47:49.274
  STEP: Deleting the collection of validation webhooks @ 07/12/25 12:47:49.303
  STEP: Creating a configMap that should not be mutated @ 07/12/25 12:47:49.359
  I0712 12:47:49.410145 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4735" for this suite. @ 07/12/25 12:47:49.413
  STEP: Destroying namespace "webhook-markers-7620" for this suite. @ 07/12/25 12:47:49.422
• [3.964 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 07/12/25 12:47:49.435
  I0712 12:47:49.435257 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename var-expansion @ 07/12/25 12:47:49.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:47:49.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:47:49.452
  STEP: Creating a pod to test substitution in container's args @ 07/12/25 12:47:49.454
  E0712 12:47:49.913349      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:50.913416      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 12:47:51.472
  I0712 12:47:51.474826 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod var-expansion-808a34b0-17be-48b1-a428-e0fb9afc5ad5 container dapi-container: <nil>
  STEP: delete the pod @ 07/12/25 12:47:51.481
  I0712 12:47:51.499364 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1559" for this suite. @ 07/12/25 12:47:51.502
• [2.074 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:229
  STEP: Creating a kubernetes client @ 07/12/25 12:47:51.509
  I0712 12:47:51.509336 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename emptydir @ 07/12/25 12:47:51.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:47:51.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:47:51.524
  STEP: Creating Pod @ 07/12/25 12:47:51.526
  E0712 12:47:51.913773      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:52.913995      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 07/12/25 12:47:53.545
  I0712 12:47:53.546023 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-8507 PodName:pod-sharedvolume-760e5800-0945-4c90-a96f-2b3efed9b413 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0712 12:47:53.546041 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0712 12:47:53.546087 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/emptydir-8507/pods/pod-sharedvolume-760e5800-0945-4c90-a96f-2b3efed9b413/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0712 12:47:53.600865 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0712 12:47:53.600899 20 exec_util.go:112] Exec stderr: ""
  I0712 12:47:53.601007 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8507" for this suite. @ 07/12/25 12:47:53.606
• [2.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should execute all indexes despite some failing when using backoffLimitPerIndex [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:609
  STEP: Creating a kubernetes client @ 07/12/25 12:47:53.614
  I0712 12:47:53.615007 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename job @ 07/12/25 12:47:53.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:47:53.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:47:53.631
  STEP: Creating an indexed job with backoffLimit per index and failing pods @ 07/12/25 12:47:53.633
  STEP: Awaiting for the job to fail as there are failed indexes @ 07/12/25 12:47:53.638
  E0712 12:47:53.914819      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:54.914943      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:55.915069      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:56.915421      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:57.915487      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:58.916523      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:47:59.916644      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:00.916737      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:01.916980      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:02.917084      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:03.918108      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:04.919030      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:05.919744      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:06.919819      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:07.920431      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:08.921422      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:09.922031      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:10.922107      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:11.922820      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:12.922899      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure all indexes were executed @ 07/12/25 12:48:13.688
  I0712 12:48:13.692353 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9810" for this suite. @ 07/12/25 12:48:13.696
• [20.087 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 07/12/25 12:48:13.702
  I0712 12:48:13.702621 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename var-expansion @ 07/12/25 12:48:13.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:48:13.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:48:13.72
  STEP: Creating a pod to test substitution in volume subpath @ 07/12/25 12:48:13.722
  E0712 12:48:13.923747      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:14.923861      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:15.924235      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:16.924346      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 12:48:17.744
  I0712 12:48:17.748364 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod var-expansion-7118c9aa-44bc-4aae-8367-9c2e2f0e8465 container dapi-container: <nil>
  STEP: delete the pod @ 07/12/25 12:48:17.754
  I0712 12:48:17.772223 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7026" for this suite. @ 07/12/25 12:48:17.775
• [4.079 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 07/12/25 12:48:17.781
  I0712 12:48:17.781298 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename pods @ 07/12/25 12:48:17.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:48:17.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:48:17.794
  I0712 12:48:17.796759 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: creating the pod @ 07/12/25 12:48:17.797
  STEP: submitting the pod to kubernetes @ 07/12/25 12:48:17.797
  E0712 12:48:17.924329      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:18.924500      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:48:19.873996 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5827" for this suite. @ 07/12/25 12:48:19.878
• [2.104 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 07/12/25 12:48:19.884
  I0712 12:48:19.884845 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/12/25 12:48:19.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:48:19.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:48:19.903
  I0712 12:48:19.905169 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  E0712 12:48:19.924833      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:20.925006      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:21.925125      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:22.925272      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:48:22.947289 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-4785" for this suite. @ 07/12/25 12:48:22.95
• [3.071 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:239
  STEP: Creating a kubernetes client @ 07/12/25 12:48:22.955
  I0712 12:48:22.955990 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename resourcequota @ 07/12/25 12:48:22.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:48:22.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:48:22.973
  STEP: Counting existing ResourceQuota @ 07/12/25 12:48:22.98
  E0712 12:48:23.925703      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:24.926058      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:25.926177      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:26.926369      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:27.926489      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/12/25 12:48:27.983
  STEP: Ensuring resource quota status is calculated @ 07/12/25 12:48:27.99
  E0712 12:48:28.926561      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:29.926725      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 07/12/25 12:48:29.994
  STEP: Ensuring ResourceQuota status captures the pod usage @ 07/12/25 12:48:30.012
  E0712 12:48:30.926857      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:31.926919      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 07/12/25 12:48:32.017
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 07/12/25 12:48:32.019
  STEP: Ensuring a pod cannot update its resource requirements @ 07/12/25 12:48:32.02
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 07/12/25 12:48:32.024
  E0712 12:48:32.927069      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:33.927158      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/12/25 12:48:34.029
  STEP: Ensuring resource quota status released the pod usage @ 07/12/25 12:48:34.047
  E0712 12:48:34.927327      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:35.927536      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:48:36.052433 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7393" for this suite. @ 07/12/25 12:48:36.056
• [13.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 07/12/25 12:48:36.064
  I0712 12:48:36.064130 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename configmap @ 07/12/25 12:48:36.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:48:36.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:48:36.08
  STEP: Creating configMap with name configmap-test-upd-ba960a06-d949-4ece-96ff-afe20177242e @ 07/12/25 12:48:36.157
  STEP: Creating the pod @ 07/12/25 12:48:36.162
  E0712 12:48:36.927691      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:37.927789      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 07/12/25 12:48:38.181
  STEP: Waiting for pod with binary data @ 07/12/25 12:48:38.192
  I0712 12:48:38.198086 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8282" for this suite. @ 07/12/25 12:48:38.201
• [2.145 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2185
  STEP: Creating a kubernetes client @ 07/12/25 12:48:38.208
  I0712 12:48:38.208863 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename services @ 07/12/25 12:48:38.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:48:38.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:48:38.222
  STEP: creating service in namespace services-9822 @ 07/12/25 12:48:38.224
  STEP: creating service affinity-clusterip in namespace services-9822 @ 07/12/25 12:48:38.224
  I0712 12:48:38.255122 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0712 12:48:38.928030      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:39.929098      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:48:40.272817 20 resource.go:361] Creating new exec pod
  E0712 12:48:40.929156      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:41.929361      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:48:42.292524 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-9822 exec execpod-affinity8kcmk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0712 12:48:42.380378 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.152.183.135) 80 port [tcp/http] succeeded!\n"
  I0712 12:48:42.380422 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0712 12:48:42.380475 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-9822 exec execpod-affinity8kcmk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.135 80'
  I0712 12:48:42.458416 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.135 80\nConnection to 10.152.183.135 80 port [tcp/http] succeeded!\n"
  I0712 12:48:42.458447 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0712 12:48:42.458728 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-9822 exec execpod-affinity8kcmk -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.135:80/ ; done'
  I0712 12:48:42.580542 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.135:80/\n"
  I0712 12:48:42.580590 20 builder.go:147] stdout: "\naffinity-clusterip-6dd57cf8dc-dxd69\naffinity-clusterip-6dd57cf8dc-dxd69\naffinity-clusterip-6dd57cf8dc-dxd69\naffinity-clusterip-6dd57cf8dc-dxd69\naffinity-clusterip-6dd57cf8dc-dxd69\naffinity-clusterip-6dd57cf8dc-dxd69\naffinity-clusterip-6dd57cf8dc-dxd69\naffinity-clusterip-6dd57cf8dc-dxd69\naffinity-clusterip-6dd57cf8dc-dxd69\naffinity-clusterip-6dd57cf8dc-dxd69\naffinity-clusterip-6dd57cf8dc-dxd69\naffinity-clusterip-6dd57cf8dc-dxd69\naffinity-clusterip-6dd57cf8dc-dxd69\naffinity-clusterip-6dd57cf8dc-dxd69\naffinity-clusterip-6dd57cf8dc-dxd69\naffinity-clusterip-6dd57cf8dc-dxd69"
  I0712 12:48:42.580600 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-dxd69
  I0712 12:48:42.580606 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-dxd69
  I0712 12:48:42.580611 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-dxd69
  I0712 12:48:42.580671 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-dxd69
  I0712 12:48:42.580678 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-dxd69
  I0712 12:48:42.580684 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-dxd69
  I0712 12:48:42.580691 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-dxd69
  I0712 12:48:42.580697 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-dxd69
  I0712 12:48:42.580703 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-dxd69
  I0712 12:48:42.580709 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-dxd69
  I0712 12:48:42.580739 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-dxd69
  I0712 12:48:42.580745 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-dxd69
  I0712 12:48:42.580751 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-dxd69
  I0712 12:48:42.580757 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-dxd69
  I0712 12:48:42.580763 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-dxd69
  I0712 12:48:42.580770 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-dxd69
  I0712 12:48:42.580856 20 service.go:4352] Cleaning up the exec pod
  I0712 12:48:42.626067 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9822" for this suite. @ 07/12/25 12:48:42.632
• [4.438 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 07/12/25 12:48:42.646
  I0712 12:48:42.646835 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename projected @ 07/12/25 12:48:42.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:48:42.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:48:42.664
  STEP: Creating the pod @ 07/12/25 12:48:42.666
  E0712 12:48:42.930027      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:43.930232      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:44.930792      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:48:45.206998 20 pod_client.go:173] Successfully updated pod "annotationupdate4012e41a-9d15-4dbe-832b-67e0b6fbf7c7"
  E0712 12:48:45.931369      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:46.931478      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:47.931570      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:48.931664      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:48:49.228923 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3387" for this suite. @ 07/12/25 12:48:49.232
• [6.594 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 07/12/25 12:48:49.24
  I0712 12:48:49.240956 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename chunking @ 07/12/25 12:48:49.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:48:49.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:48:49.257
  STEP: creating a large number of resources @ 07/12/25 12:48:49.259
  E0712 12:48:49.932525      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:50.933168      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:51.933792      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:52.934357      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:53.934748      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:54.934835      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:55.935244      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:56.935283      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:57.935565      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:58.936285      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:48:59.936908      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:00.937553      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:01.937749      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:02.938547      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:03.938660      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:04.938723      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:05.939487      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:06.940385      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 07/12/25 12:49:06.948
  I0712 12:49:07.000057 20 chunking.go:163] Retrieved 40/40 results with rv 22435 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0MzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 07/12/25 12:49:07
  E0712 12:49:07.940508      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:08.940577      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:09.940693      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:10.940756      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:11.940869      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:12.940952      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:13.941075      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:14.942085      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:15.942463      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:16.942590      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:17.942840      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:18.943424      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:19.943588      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:20.943787      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:21.943979      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:22.944180      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:23.944387      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:24.944506      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:25.944697      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:26.944820      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:49:27.005815 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0MzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0712 12:49:27.945052      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:28.945161      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:29.946130      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:30.946272      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:31.946459      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:32.946752      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:33.946871      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:34.947095      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:35.948040      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:36.948290      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:37.948345      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:38.948532      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:39.948637      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:40.948865      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:41.948946      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:42.949803      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:43.949892      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:44.950098      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:45.950404      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:46.951421      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:49:47.004928 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0MzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0712 12:49:47.951512      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:48.952398      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:49.952526      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:50.953406      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:51.953585      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:52.953790      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:53.954007      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:54.954087      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:55.954493      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:56.954681      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:57.954802      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:58.955003      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:49:59.955122      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:00.955342      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:01.955535      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:02.955725      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:03.955905      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:04.956087      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:05.957073      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:06.957237      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:50:07.005494 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0MzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0712 12:50:07.957355      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:08.957545      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:09.957669      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:10.957854      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:11.958128      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:12.958286      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:13.958495      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:14.958584      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:15.958772      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:16.958951      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:17.959266      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:18.959282      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:19.959349      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:20.959428      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:21.960400      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:22.961415      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:23.962406      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:24.962540      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:25.963401      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:26.963591      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:50:27.005270 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0MzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0712 12:50:27.964143      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:28.964327      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:29.964454      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:30.964635      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:31.965423      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:32.965609      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:33.966403      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:34.966531      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:35.967581      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:36.967723      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:37.967934      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:38.968412      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:39.969399      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:40.970400      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:41.971414      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:42.972399      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:43.973401      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:44.973520      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:45.973720      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:46.973916      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:50:47.005933 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0MzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0712 12:50:47.974083      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:48.974298      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:49.975252      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:50.975337      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:51.975531      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:52.975716      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:53.975903      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:54.976027      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:55.976253      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:56.976447      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:57.976628      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:58.977443      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:50:59.977547      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:00.977733      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:01.977921      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:02.978124      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:03.978367      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:04.978521      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:05.978624      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:06.979566      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:51:07.004689 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0MzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0712 12:51:07.980395      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:08.980489      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:09.980583      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:10.980675      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:11.981403      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:12.982395      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:13.982580      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:14.982694      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:15.982880      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:16.983095      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:17.983284      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:18.983472      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:19.983566      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:20.984406      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:21.984584      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:22.984769      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:23.985437      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:24.985560      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:25.985749      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:26.985943      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:51:27.005520 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0MzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0712 12:51:27.986332      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:28.986459      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:29.986597      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:30.986797      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:31.987432      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:32.987654      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:33.987842      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:34.987938      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:35.988419      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:36.988611      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:37.988738      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:38.988851      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:39.989051      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:40.989332      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:41.989485      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:42.989582      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:43.990476      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:44.991438      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:45.991600      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:46.992413      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:51:47.005454 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0MzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0712 12:51:47.993376      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:48.993590      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:49.993724      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:50.993828      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:51.993938      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:52.994075      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:53.994168      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:54.995176      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:55.995373      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:56.995549      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:57.995691      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:58.995890      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:51:59.996077      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:00.996288      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:01.996476      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:02.997409      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:03.998400      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:04.998504      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:05.999405      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:06.999515      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:52:07.004884 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0MzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0712 12:52:07.999606      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:09.000410      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:10.000509      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:11.001397      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:12.002406      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:13.002599      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:14.002784      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:15.002944      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:16.003150      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:17.003328      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:18.003640      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:19.003967      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:20.004495      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:21.004686      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:22.004877      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:23.005088      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:24.005152      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:25.006225      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:26.006315      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:52:27.005343 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0MzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0712 12:52:27.007278      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:28.007422      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:29.007687      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:30.007793      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:31.007837      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:32.008021      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:33.008230      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:34.008401      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:35.008477      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:36.008620      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:37.008794      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:38.008898      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:39.008996      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:40.010024      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:41.010114      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:42.010430      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:43.011391      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:44.011592      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:45.011687      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:46.012414      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:52:47.005269 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0MzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0712 12:52:47.013268      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:48.013346      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:49.013529      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:50.013752      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:51.013939      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:52.014402      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:53.015393      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:54.016401      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:55.016456      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:56.016656      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:57.016852      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:58.017036      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:52:59.017258      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:00.018233      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:01.018363      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:02.018441      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:03.018502      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:04.018593      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:05.018699      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:06.019404      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:53:07.004681 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0MzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0712 12:53:07.019606      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:08.019769      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:09.020392      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:10.020494      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:11.021425      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:12.022392      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:13.022572      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:14.023396      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:15.023618      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:16.023805      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:17.024329      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:18.024512      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:19.024638      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:20.024752      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:21.025406      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:22.025582      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:23.025767      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:24.026434      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:25.026535      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:26.026730      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:53:27.005790 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0MzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0712 12:53:27.026762      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:28.026946      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:29.027134      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:30.027266      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:31.027336      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:32.027511      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:33.027696      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:34.027903      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:35.027981      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:36.028436      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:37.028517      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:38.029396      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:39.030405      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:40.031397      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:41.032408      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:42.033405      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:43.033586      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:44.033779      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:45.033898      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:46.034095      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:53:47.005237 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0MzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0712 12:53:47.034120      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:48.034342      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:49.034526      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:50.034648      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:51.034836      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:52.035397      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:53.035632      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:54.035831      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:55.035921      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:56.036103      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:57.036766      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:58.036949      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:53:59.037170      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:00.037265      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:01.037448      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:02.037633      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:03.037819      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:04.038029      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:05.038145      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:06.038416      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:54:07.004189 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0MzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0712 12:54:07.039225      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:08.039339      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:09.040408      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:10.040499      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:11.041406      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:12.041581      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:13.042393      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:14.043407      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:15.043528      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:16.043721      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:17.044420      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:18.044518      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:19.044704      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:20.044892      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:21.045088      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:22.045233      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:23.045437      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:24.045651      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:25.045773      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:26.045966      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:54:27.005099 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0MzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0712 12:54:27.046547      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:28.046666      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:29.047535      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:30.047698      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:31.047893      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:32.047950      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:33.048149      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:34.048400      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:35.049399      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:36.050401      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:37.051187      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:38.051396      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:39.051483      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:40.051557      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:41.052428      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:42.052529      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:43.052728      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:44.053418      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:45.053545      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:46.054372      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:54:47.004753 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0MzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0712 12:54:47.055022      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:48.055343      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:49.055524      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:50.055640      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:51.056411      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:52.056590      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:53.056837      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:54.057051      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:55.057155      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:56.057372      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:57.057554      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:58.058411      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:54:59.058506      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:00.058600      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:01.058682      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:02.058774      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:03.058922      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:04.059033      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:05.059795      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:06.059992      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:55:07.004481 20 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0712 12:55:07.004514 20 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 07/12/25 12:55:07.004
  STEP: retrieving all remaining pages @ 07/12/25 12:55:07.008
  I0712 12:55:07.011981 20 chunking.go:221] Retrieved 40/40 results with rv 23171 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMxNzEsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0712 12:55:07.016034 20 chunking.go:221] Retrieved 40/40 results with rv 23171 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMxNzEsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0712 12:55:07.019310 20 chunking.go:221] Retrieved 40/40 results with rv 23171 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMxNzEsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0712 12:55:07.022392 20 chunking.go:221] Retrieved 40/40 results with rv 23171 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMxNzEsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0712 12:55:07.026083 20 chunking.go:221] Retrieved 40/40 results with rv 23171 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMxNzEsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0712 12:55:07.029589 20 chunking.go:221] Retrieved 40/40 results with rv 23171 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMxNzEsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0712 12:55:07.032910 20 chunking.go:221] Retrieved 40/40 results with rv 23171 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMxNzEsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0712 12:55:07.036421 20 chunking.go:221] Retrieved 40/40 results with rv 23171 and continue 
  I0712 12:55:07.036545 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-9427" for this suite. @ 07/12/25 12:55:07.039
• [377.805 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:863
  STEP: Creating a kubernetes client @ 07/12/25 12:55:07.045
  I0712 12:55:07.045981 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename resourcequota @ 07/12/25 12:55:07.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:55:07.057
  E0712 12:55:07.060595      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:55:07.061
  STEP: Creating a ResourceQuota with best effort scope @ 07/12/25 12:55:07.063
  STEP: Ensuring ResourceQuota status is calculated @ 07/12/25 12:55:07.066
  E0712 12:55:08.060739      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:09.060854      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 07/12/25 12:55:09.071
  STEP: Ensuring ResourceQuota status is calculated @ 07/12/25 12:55:09.075
  E0712 12:55:10.061429      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:11.061503      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 07/12/25 12:55:11.081
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 07/12/25 12:55:11.094
  E0712 12:55:12.062455      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:13.062671      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 07/12/25 12:55:13.097
  E0712 12:55:14.062792      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:15.062886      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/12/25 12:55:15.101
  STEP: Ensuring resource quota status released the pod usage @ 07/12/25 12:55:15.115
  E0712 12:55:16.063370      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:17.063463      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 07/12/25 12:55:17.12
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 07/12/25 12:55:17.133
  E0712 12:55:18.063902      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:19.064120      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 07/12/25 12:55:19.138
  E0712 12:55:20.064260      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:21.064475      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/12/25 12:55:21.144
  STEP: Ensuring resource quota status released the pod usage @ 07/12/25 12:55:21.158
  E0712 12:55:22.064533      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:23.064622      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:55:23.162921 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1162" for this suite. @ 07/12/25 12:55:23.167
• [16.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 07/12/25 12:55:23.175
  I0712 12:55:23.175122 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename secrets @ 07/12/25 12:55:23.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:55:23.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:55:23.192
  STEP: Creating secret with name secret-test-1985f4f9-d573-4520-ac22-5a18d7e97f18 @ 07/12/25 12:55:23.211
  STEP: Creating a pod to test consume secrets @ 07/12/25 12:55:23.217
  E0712 12:55:24.064780      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:25.065409      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 12:55:25.234
  I0712 12:55:25.236886 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-secrets-7b7b75ed-6f09-43ae-b586-abc5bea4ad1e container secret-volume-test: <nil>
  STEP: delete the pod @ 07/12/25 12:55:25.252
  I0712 12:55:25.270829 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3502" for this suite. @ 07/12/25 12:55:25.274
  STEP: Destroying namespace "secret-namespace-3259" for this suite. @ 07/12/25 12:55:25.28
• [2.113 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 07/12/25 12:55:25.287
  I0712 12:55:25.287855 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename podtemplate @ 07/12/25 12:55:25.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:55:25.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:55:25.302
  I0712 12:55:25.331364 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2353" for this suite. @ 07/12/25 12:55:25.374
• [0.101 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1426
  STEP: Creating a kubernetes client @ 07/12/25 12:55:25.388
  I0712 12:55:25.388832 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename services @ 07/12/25 12:55:25.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:55:25.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:55:25.411
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-9647 @ 07/12/25 12:55:25.414
  STEP: changing the ExternalName service to type=NodePort @ 07/12/25 12:55:25.424
  I0712 12:55:25.485432 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0712 12:55:26.065671      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:27.065986      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:55:27.490827 20 resource.go:361] Creating new exec pod
  E0712 12:55:28.066427      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:29.067426      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:55:29.512954 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-9647 exec execpod5ll9m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0712 12:55:29.601688 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.168) 80 port [tcp/http] succeeded!\n"
  I0712 12:55:29.601722 20 builder.go:147] stdout: ""
  E0712 12:55:30.068357      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:55:30.513847 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-9647 exec execpod5ll9m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0712 12:55:30.591344 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.168) 80 port [tcp/http] succeeded!\n"
  I0712 12:55:30.591381 20 builder.go:147] stdout: ""
  E0712 12:55:31.069009      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:55:31.513435 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-9647 exec execpod5ll9m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0712 12:55:31.598543 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.168) 80 port [tcp/http] succeeded!\n"
  I0712 12:55:31.598579 20 builder.go:147] stdout: "externalname-service-cc98698bd-nhmsd"
  I0712 12:55:31.598642 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-9647 exec execpod5ll9m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.168 80'
  I0712 12:55:31.677577 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.168 80\nConnection to 10.152.183.168 80 port [tcp/http] succeeded!\n"
  I0712 12:55:31.677703 20 builder.go:147] stdout: "externalname-service-cc98698bd-mfzqb"
  I0712 12:55:31.677824 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-9647 exec execpod5ll9m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.36 30770'
  I0712 12:55:31.761911 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.3.36 30770\nConnection to 172.31.3.36 30770 port [tcp/*] succeeded!\n"
  I0712 12:55:31.761949 20 builder.go:147] stdout: "externalname-service-cc98698bd-nhmsd"
  I0712 12:55:31.762032 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-9647 exec execpod5ll9m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.39.13 30770'
  I0712 12:55:31.845493 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.39.13 30770\nConnection to 172.31.39.13 30770 port [tcp/*] succeeded!\n"
  I0712 12:55:31.845532 20 builder.go:147] stdout: ""
  E0712 12:55:32.069804      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:55:32.762192 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-9647 exec execpod5ll9m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.39.13 30770'
  I0712 12:55:32.845026 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.39.13 30770\nConnection to 172.31.39.13 30770 port [tcp/*] succeeded!\n"
  I0712 12:55:32.845065 20 builder.go:147] stdout: "externalname-service-cc98698bd-mfzqb"
  I0712 12:55:32.845142 20 service.go:1435] Cleaning up the ExternalName to NodePort test service
  I0712 12:55:32.883067 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9647" for this suite. @ 07/12/25 12:55:32.886
• [7.503 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:338
  STEP: Creating a kubernetes client @ 07/12/25 12:55:32.892
  I0712 12:55:32.892136 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename kubectl @ 07/12/25 12:55:32.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:55:32.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:55:32.906
  STEP: creating a replication controller @ 07/12/25 12:55:32.908
  I0712 12:55:32.908549 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-5886 create -f -'
  I0712 12:55:32.995038 20 builder.go:146] stderr: ""
  I0712 12:55:32.995068 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/12/25 12:55:32.995
  I0712 12:55:32.995146 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-5886 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0712 12:55:33.044757 20 builder.go:146] stderr: ""
  I0712 12:55:33.044792 20 builder.go:147] stdout: "update-demo-nautilus-5cx46 update-demo-nautilus-z27wz "
  I0712 12:55:33.044835 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-5886 get pods update-demo-nautilus-5cx46 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0712 12:55:33.070157      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:55:33.087152 20 builder.go:146] stderr: ""
  I0712 12:55:33.087175 20 builder.go:147] stdout: ""
  I0712 12:55:33.087184 20 kubectl.go:2505] update-demo-nautilus-5cx46 is created but not running
  E0712 12:55:34.070442      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:35.070532      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:36.070652      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:37.070886      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:38.071430      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:55:38.087480 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-5886 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0712 12:55:38.134357 20 builder.go:146] stderr: ""
  I0712 12:55:38.134384 20 builder.go:147] stdout: "update-demo-nautilus-5cx46 update-demo-nautilus-z27wz "
  I0712 12:55:38.134425 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-5886 get pods update-demo-nautilus-5cx46 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0712 12:55:38.177031 20 builder.go:146] stderr: ""
  I0712 12:55:38.177059 20 builder.go:147] stdout: "true"
  I0712 12:55:38.177138 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-5886 get pods update-demo-nautilus-5cx46 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0712 12:55:38.216743 20 builder.go:146] stderr: ""
  I0712 12:55:38.216770 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0712 12:55:38.216781 20 kubectl.go:2396] validating pod update-demo-nautilus-5cx46
  I0712 12:55:38.223263 20 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0712 12:55:38.223309 20 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0712 12:55:38.223375 20 kubectl.go:2523] update-demo-nautilus-5cx46 is verified up and running
  I0712 12:55:38.223412 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-5886 get pods update-demo-nautilus-z27wz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0712 12:55:38.264974 20 builder.go:146] stderr: ""
  I0712 12:55:38.264999 20 builder.go:147] stdout: "true"
  I0712 12:55:38.265039 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-5886 get pods update-demo-nautilus-z27wz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0712 12:55:38.306038 20 builder.go:146] stderr: ""
  I0712 12:55:38.306062 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0712 12:55:38.306072 20 kubectl.go:2396] validating pod update-demo-nautilus-z27wz
  I0712 12:55:38.312640 20 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0712 12:55:38.312677 20 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0712 12:55:38.312687 20 kubectl.go:2523] update-demo-nautilus-z27wz is verified up and running
  STEP: using delete to clean up resources @ 07/12/25 12:55:38.312
  I0712 12:55:38.312790 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-5886 delete --grace-period=0 --force -f -'
  I0712 12:55:38.358774 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0712 12:55:38.358799 20 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0712 12:55:38.358922 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-5886 get rc,svc -l name=update-demo --no-headers'
  I0712 12:55:38.427980 20 builder.go:146] stderr: "No resources found in kubectl-5886 namespace.\n"
  I0712 12:55:38.428029 20 builder.go:147] stdout: ""
  I0712 12:55:38.428067 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-5886 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0712 12:55:38.496042 20 builder.go:146] stderr: ""
  I0712 12:55:38.496069 20 builder.go:147] stdout: ""
  I0712 12:55:38.496239 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5886" for this suite. @ 07/12/25 12:55:38.5
• [5.615 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 07/12/25 12:55:38.508
  I0712 12:55:38.508137 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename security-context-test @ 07/12/25 12:55:38.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:55:38.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:55:38.547
  E0712 12:55:39.071535      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:40.071635      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:41.071737      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:42.071814      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:55:42.582803 20 security_context.go:619] Got logs for pod "busybox-privileged-false-1d9d6e5e-0c04-4b13-a37e-85b7876648a2": "ip: RTNETLINK answers: Operation not permitted\n"
  I0712 12:55:42.582932 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6922" for this suite. @ 07/12/25 12:55:42.587
• [4.086 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 07/12/25 12:55:42.594
  I0712 12:55:42.594432 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename watch @ 07/12/25 12:55:42.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:55:42.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:55:42.609
  STEP: getting a starting resourceVersion @ 07/12/25 12:55:42.611
  STEP: starting a background goroutine to produce watch events @ 07/12/25 12:55:42.613
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 07/12/25 12:55:42.613
  E0712 12:55:43.072155      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:44.072596      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:45.073239      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:55:45.403835 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2699" for this suite. @ 07/12/25 12:55:45.45
• [2.909 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 07/12/25 12:55:45.503
  I0712 12:55:45.503800 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename downward-api @ 07/12/25 12:55:45.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:55:45.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:55:45.521
  STEP: Creating a pod to test downward API volume plugin @ 07/12/25 12:55:45.525
  E0712 12:55:46.073313      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:47.073545      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:48.073672      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:49.073919      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 12:55:49.546
  I0712 12:55:49.549865 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod downwardapi-volume-54cf7256-39f7-4ec6-88a3-25cf0abe4437 container client-container: <nil>
  STEP: delete the pod @ 07/12/25 12:55:49.555
  I0712 12:55:49.571675 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5653" for this suite. @ 07/12/25 12:55:49.575
• [4.079 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:841
  STEP: Creating a kubernetes client @ 07/12/25 12:55:49.582
  I0712 12:55:49.582632 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename webhook @ 07/12/25 12:55:49.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:55:49.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:55:49.601
  STEP: Setting up server cert @ 07/12/25 12:55:49.622
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/12/25 12:55:49.901
  STEP: Deploying the webhook pod @ 07/12/25 12:55:49.907
  STEP: Wait for the deployment to be ready @ 07/12/25 12:55:49.922
  I0712 12:55:49.929837 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0712 12:55:50.073937      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:51.074026      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/12/25 12:55:51.941
  STEP: Verifying the service has paired with the endpoint @ 07/12/25 12:55:51.957
  E0712 12:55:52.074699      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:55:52.957499 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 07/12/25 12:55:52.962
  I0712 12:55:53.002876 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9254" for this suite. @ 07/12/25 12:55:53.005
  STEP: Destroying namespace "webhook-markers-6468" for this suite. @ 07/12/25 12:55:53.015
• [3.441 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 07/12/25 12:55:53.023
  I0712 12:55:53.023648 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename replicaset @ 07/12/25 12:55:53.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:55:53.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:55:53.039
  STEP: Create a Replicaset @ 07/12/25 12:55:53.043
  STEP: Verify that the required pods have come up. @ 07/12/25 12:55:53.051
  I0712 12:55:53.053735 20 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0712 12:55:53.074883      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:54.075075      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:55.075187      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:56.075426      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:55:57.075675      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:55:58.056983 20 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/12/25 12:55:58.057
  STEP: Getting /status @ 07/12/25 12:55:58.057
  I0712 12:55:58.061903 20 replica_set.go:649] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 07/12/25 12:55:58.061
  I0712 12:55:58.069871 20 replica_set.go:669] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 07/12/25 12:55:58.069
  I0712 12:55:58.071143 20 replica_set.go:695] Observed &ReplicaSet event: ADDED
  I0712 12:55:58.071283 20 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0712 12:55:58.071344 20 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0712 12:55:58.071476 20 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0712 12:55:58.071502 20 replica_set.go:688] Found replicaset test-rs in namespace replicaset-441 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0712 12:55:58.071515 20 replica_set.go:699] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 07/12/25 12:55:58.071
  I0712 12:55:58.071539 20 replica_set.go:703] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  E0712 12:55:58.075962      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:55:58.076094 20 replica_set.go:707] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 07/12/25 12:55:58.076
  I0712 12:55:58.077114 20 replica_set.go:731] Observed &ReplicaSet event: ADDED
  I0712 12:55:58.077174 20 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0712 12:55:58.077247 20 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0712 12:55:58.077459 20 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0712 12:55:58.077477 20 replica_set.go:727] Observed replicaset test-rs in namespace replicaset-441 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0712 12:55:58.077557 20 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0712 12:55:58.077574 20 replica_set.go:724] Found replicaset test-rs in namespace replicaset-441 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0712 12:55:58.077585 20 replica_set.go:735] Replicaset test-rs has a patched status
  I0712 12:55:58.077778 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-441" for this suite. @ 07/12/25 12:55:58.081
• [5.064 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 07/12/25 12:55:58.087
  I0712 12:55:58.087751 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename webhook @ 07/12/25 12:55:58.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:55:58.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:55:58.098
  STEP: Setting up server cert @ 07/12/25 12:55:58.118
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/12/25 12:55:58.688
  STEP: Deploying the webhook pod @ 07/12/25 12:55:58.693
  STEP: Wait for the deployment to be ready @ 07/12/25 12:55:58.703
  I0712 12:55:58.710952 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0712 12:55:59.076371      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:56:00.076441      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/12/25 12:56:00.722
  STEP: Verifying the service has paired with the endpoint @ 07/12/25 12:56:00.736
  E0712 12:56:01.076989      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:56:01.736587 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 07/12/25 12:56:01.741
  STEP: create a pod that should be updated by the webhook @ 07/12/25 12:56:01.753
  I0712 12:56:01.820421 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7476" for this suite. @ 07/12/25 12:56:01.823
  STEP: Destroying namespace "webhook-markers-4979" for this suite. @ 07/12/25 12:56:01.828
• [3.747 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 07/12/25 12:56:01.834
  I0712 12:56:01.834739 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename configmap @ 07/12/25 12:56:01.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:56:01.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:56:01.85
  STEP: Creating configMap with name configmap-test-volume-map-19b82882-ba3b-4728-b47c-300f40205609 @ 07/12/25 12:56:01.853
  STEP: Creating a pod to test consume configMaps @ 07/12/25 12:56:01.856
  E0712 12:56:02.077425      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:56:03.077529      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:56:04.078096      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:56:05.078190      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 12:56:05.874
  I0712 12:56:05.878405 20 output.go:207] Trying to get logs from node ip-172-31-3-36 pod pod-configmaps-851c033d-b847-41df-8919-f921ec60f237 container agnhost-container: <nil>
  STEP: delete the pod @ 07/12/25 12:56:05.891
  I0712 12:56:05.908120 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4509" for this suite. @ 07/12/25 12:56:05.911
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1003
  STEP: Creating a kubernetes client @ 07/12/25 12:56:05.92
  I0712 12:56:05.920057 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename resourcequota @ 07/12/25 12:56:05.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:56:05.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:56:05.935
  STEP: Creating a ResourceQuota @ 07/12/25 12:56:05.937
  STEP: Getting a ResourceQuota @ 07/12/25 12:56:05.942
  STEP: Listing all ResourceQuotas with LabelSelector @ 07/12/25 12:56:05.944
  STEP: Patching the ResourceQuota @ 07/12/25 12:56:05.947
  STEP: Deleting a Collection of ResourceQuotas @ 07/12/25 12:56:05.955
  STEP: Verifying the deleted ResourceQuota @ 07/12/25 12:56:05.967
  I0712 12:56:05.969842 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4406" for this suite. @ 07/12/25 12:56:06.013
• [0.102 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1162
  STEP: Creating a kubernetes client @ 07/12/25 12:56:06.022
  I0712 12:56:06.022092 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename job @ 07/12/25 12:56:06.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:56:06.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:56:06.035
  STEP: Creating a suspended job @ 07/12/25 12:56:06.04
  STEP: Patching the Job @ 07/12/25 12:56:06.045
  STEP: Watching for Job to be patched @ 07/12/25 12:56:06.063
  I0712 12:56:06.064425 20 job.go:1369] Event ADDED observed for Job e2e-xvrv2 in namespace job-8713 with labels: map[e2e-job-label:e2e-xvrv2] and annotations: map[]
  I0712 12:56:06.064459 20 job.go:1369] Event MODIFIED observed for Job e2e-xvrv2 in namespace job-8713 with labels: map[e2e-job-label:e2e-xvrv2] and annotations: map[]
  I0712 12:56:06.064477 20 job.go:1372] Event MODIFIED found for Job e2e-xvrv2 in namespace job-8713 with labels: map[e2e-job-label:e2e-xvrv2 e2e-xvrv2:patched] and annotations: map[]
  STEP: Updating the job @ 07/12/25 12:56:06.064
  STEP: Watching for Job to be updated @ 07/12/25 12:56:06.072
  I0712 12:56:06.073727 20 job.go:1372] Event MODIFIED found for Job e2e-xvrv2 in namespace job-8713 with labels: map[e2e-job-label:e2e-xvrv2 e2e-xvrv2:patched] and annotations: map[updated:true]
  I0712 12:56:06.073757 20 job.go:1240] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 07/12/25 12:56:06.073
  I0712 12:56:06.076437 20 job.go:1247] Job: e2e-xvrv2 as labels: map[e2e-job-label:e2e-xvrv2 e2e-xvrv2:patched]
  STEP: Waiting for job to complete @ 07/12/25 12:56:06.076
  E0712 12:56:06.078499      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:56:07.078776      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:56:08.078865      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:56:09.079370      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:56:10.079457      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:56:11.079550      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:56:12.079630      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:56:13.079739      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:56:14.079804      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 07/12/25 12:56:14.096
  STEP: Watching for Job to be deleted @ 07/12/25 12:56:14.106
  I0712 12:56:14.107883 20 job.go:1369] Event MODIFIED observed for Job e2e-xvrv2 in namespace job-8713 with labels: map[e2e-job-label:e2e-xvrv2 e2e-xvrv2:patched] and annotations: map[updated:true]
  I0712 12:56:14.107939 20 job.go:1369] Event MODIFIED observed for Job e2e-xvrv2 in namespace job-8713 with labels: map[e2e-job-label:e2e-xvrv2 e2e-xvrv2:patched] and annotations: map[updated:true]
  I0712 12:56:14.107988 20 job.go:1369] Event MODIFIED observed for Job e2e-xvrv2 in namespace job-8713 with labels: map[e2e-job-label:e2e-xvrv2 e2e-xvrv2:patched] and annotations: map[updated:true]
  I0712 12:56:14.108006 20 job.go:1369] Event MODIFIED observed for Job e2e-xvrv2 in namespace job-8713 with labels: map[e2e-job-label:e2e-xvrv2 e2e-xvrv2:patched] and annotations: map[updated:true]
  I0712 12:56:14.108085 20 job.go:1369] Event MODIFIED observed for Job e2e-xvrv2 in namespace job-8713 with labels: map[e2e-job-label:e2e-xvrv2 e2e-xvrv2:patched] and annotations: map[updated:true]
  I0712 12:56:14.108121 20 job.go:1372] Event DELETED found for Job e2e-xvrv2 in namespace job-8713 with labels: map[e2e-job-label:e2e-xvrv2 e2e-xvrv2:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 07/12/25 12:56:14.108
  I0712 12:56:14.111249 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8713" for this suite. @ 07/12/25 12:56:14.122
• [8.114 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 07/12/25 12:56:14.135
  I0712 12:56:14.135890 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename secrets @ 07/12/25 12:56:14.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:56:14.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:56:14.151
  STEP: creating a secret @ 07/12/25 12:56:14.153
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 07/12/25 12:56:14.158
  STEP: patching the secret @ 07/12/25 12:56:14.162
  STEP: deleting the secret using a LabelSelector @ 07/12/25 12:56:14.17
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 07/12/25 12:56:14.178
  I0712 12:56:14.180892 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4659" for this suite. @ 07/12/25 12:56:14.222
• [0.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:401
  STEP: Creating a kubernetes client @ 07/12/25 12:56:14.23
  I0712 12:56:14.230422 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename namespaces @ 07/12/25 12:56:14.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:56:14.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:56:14.245
  STEP: Creating namespace "e2e-ns-8t5cv" @ 07/12/25 12:56:14.247
  I0712 12:56:14.259524 20 namespace.go:412] Namespace "e2e-ns-8t5cv-3081" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-8t5cv-3081" @ 07/12/25 12:56:14.259
  I0712 12:56:14.266665 20 namespace.go:435] Namespace "e2e-ns-8t5cv-3081" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-8t5cv-3081" @ 07/12/25 12:56:14.266
  I0712 12:56:14.274901 20 namespace.go:464] Namespace "e2e-ns-8t5cv-3081" has []v1.FinalizerName{"kubernetes"}
  I0712 12:56:14.274985 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5876" for this suite. @ 07/12/25 12:56:14.323
  STEP: Destroying namespace "e2e-ns-8t5cv-3081" for this suite. @ 07/12/25 12:56:14.33
• [0.109 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 07/12/25 12:56:14.339
  I0712 12:56:14.339408 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/12/25 12:56:14.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:56:14.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:56:14.354
  STEP: create the container to handle the HTTPGet hook request. @ 07/12/25 12:56:14.423
  E0712 12:56:15.080808      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:56:16.081425      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/12/25 12:56:16.445
  E0712 12:56:17.081547      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:56:18.081625      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 07/12/25 12:56:18.464
  E0712 12:56:19.081744      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:56:20.081819      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 07/12/25 12:56:20.48
  I0712 12:56:20.487456 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3150" for this suite. @ 07/12/25 12:56:20.491
• [6.161 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 07/12/25 12:56:20.499
  I0712 12:56:20.499968 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename container-probe @ 07/12/25 12:56:20.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:56:20.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:56:20.514
  STEP: Creating pod busybox-edceade5-3e95-42c6-99bd-9a5fbd68d858 in namespace container-probe-27 @ 07/12/25 12:56:20.516
  E0712 12:56:21.081942      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:56:22.082029      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/12/25 12:56:22.532
  I0712 12:56:22.535869 20 container_probe.go:1748] Initial restart count of pod busybox-edceade5-3e95-42c6-99bd-9a5fbd68d858 is 0
  I0712 12:56:22.539398 20 container_probe.go:1758] Get pod busybox-edceade5-3e95-42c6-99bd-9a5fbd68d858 in namespace container-probe-27
  E0712 12:56:23.083123      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:56:24.083244      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:56:24.544548 20 container_probe.go:1758] Get pod busybox-edceade5-3e95-42c6-99bd-9a5fbd68d858 in namespace container-probe-27
  E0712 12:56:25.084195      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:56:26.084412      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:56:26.549086 20 container_probe.go:1758] Get pod busybox-edceade5-3e95-42c6-99bd-9a5fbd68d858 in namespace container-probe-27
  E0712 12:56:27.084535      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:56:28.084612      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:56:28.554115 20 container_probe.go:1758] Get pod busybox-edceade5-3e95-42c6-99bd-9a5fbd68d858 in namespace container-probe-27
  E0712 12:56:29.085428      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:56:30.085518      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:56:30.559428 20 container_probe.go:1758] Get pod busybox-edceade5-3e95-42c6-99bd-9a5fbd68d858 in namespace container-probe-27
  E0712 12:56:31.086012      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:56:32.086093      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:56:32.564539 20 container_probe.go:1758] Get pod busybox-edceade5-3e95-42c6-99bd-9a5fbd68d858 in namespace container-probe-27
  E0712 12:56:33.087179      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:56:34.087310      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:56:34.569483 20 container_probe.go:1758] Get pod busybox-edceade5-3e95-42c6-99bd-9a5fbd68d858 in namespace container-probe-27
  E0712 12:56:35.088060      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:56:36.088161      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:56:36.574292 20 container_probe.go:1758] Get pod busybox-edceade5-3e95-42c6-99bd-9a5fbd68d858 in namespace container-probe-27
  E0712 12:56:37.088953      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:56:38.089030      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:56:38.578923 20 container_probe.go:1758] Get pod busybox-edceade5-3e95-42c6-99bd-9a5fbd68d858 in namespace container-probe-27
  E0712 12:56:39.089363      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:56:40.089425      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:56:40.584292 20 container_probe.go:1758] Get pod busybox-edceade5-3e95-42c6-99bd-9a5fbd68d858 in namespace container-probe-27
  E0712 12:56:41.089550      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:56:42.089624      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:56:42.589057 20 container_probe.go:1758] Get pod busybox-edceade5-3e95-42c6-99bd-9a5fbd68d858 in namespace container-probe-27
  E0712 12:56:43.090416      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:56:44.090524      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:56:44.594970 20 container_probe.go:1758] Get pod busybox-edceade5-3e95-42c6-99bd-9a5fbd68d858 in namespace container-probe-27
  E0712 12:56:45.091459      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:56:46.092528      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:56:46.600127 20 container_probe.go:1758] Get pod busybox-edceade5-3e95-42c6-99bd-9a5fbd68d858 in namespace container-probe-27
  E0712 12:56:47.092555      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:56:48.092736      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:56:48.604760 20 container_probe.go:1758] Get pod busybox-edceade5-3e95-42c6-99bd-9a5fbd68d858 in namespace container-probe-27
  E0712 12:56:49.093356      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:56:50.093481      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:56:50.608397 20 container_probe.go:1758] Get pod busybox-edceade5-3e95-42c6-99bd-9a5fbd68d858 in namespace container-probe-27
  E0712 12:56:51.093955      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:56:52.094171      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:56:52.615409 20 container_probe.go:1758] Get pod busybox-edceade5-3e95-42c6-99bd-9a5fbd68d858 in namespace container-probe-27
  E0712 12:56:53.094957      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:56:54.095132      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:56:54.619846 20 container_probe.go:1758] Get pod busybox-edceade5-3e95-42c6-99bd-9a5fbd68d858 in namespace container-probe-27
  E0712 12:56:55.095365      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:56:56.095479      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:56:56.624535 20 container_probe.go:1758] Get pod busybox-edceade5-3e95-42c6-99bd-9a5fbd68d858 in namespace container-probe-27
  E0712 12:56:57.096095      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:56:58.096331      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:56:58.628531 20 container_probe.go:1758] Get pod busybox-edceade5-3e95-42c6-99bd-9a5fbd68d858 in namespace container-probe-27
  E0712 12:56:59.097225      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:00.097276      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:57:00.632642 20 container_probe.go:1758] Get pod busybox-edceade5-3e95-42c6-99bd-9a5fbd68d858 in namespace container-probe-27
  E0712 12:57:01.098319      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:02.098410      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:57:02.636578 20 container_probe.go:1758] Get pod busybox-edceade5-3e95-42c6-99bd-9a5fbd68d858 in namespace container-probe-27
  E0712 12:57:03.099121      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:04.099235      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:57:04.641306 20 container_probe.go:1758] Get pod busybox-edceade5-3e95-42c6-99bd-9a5fbd68d858 in namespace container-probe-27
  E0712 12:57:05.099434      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:06.099496      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:57:06.645675 20 container_probe.go:1758] Get pod busybox-edceade5-3e95-42c6-99bd-9a5fbd68d858 in namespace container-probe-27
  E0712 12:57:07.100287      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:08.100365      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:57:08.650223 20 container_probe.go:1758] Get pod busybox-edceade5-3e95-42c6-99bd-9a5fbd68d858 in namespace container-probe-27
  E0712 12:57:09.101425      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:10.101523      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:57:10.655136 20 container_probe.go:1758] Get pod busybox-edceade5-3e95-42c6-99bd-9a5fbd68d858 in namespace container-probe-27
  E0712 12:57:11.101650      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:12.101899      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:57:12.659394 20 container_probe.go:1758] Get pod busybox-edceade5-3e95-42c6-99bd-9a5fbd68d858 in namespace container-probe-27
  I0712 12:57:12.659432 20 container_probe.go:1762] Restart count of pod container-probe-27/busybox-edceade5-3e95-42c6-99bd-9a5fbd68d858 is now 1 (50.12353825s elapsed)
  STEP: deleting the pod @ 07/12/25 12:57:12.659
  I0712 12:57:12.674059 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-27" for this suite. @ 07/12/25 12:57:12.677
• [52.182 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:133
  STEP: Creating a kubernetes client @ 07/12/25 12:57:12.681
  I0712 12:57:12.681855 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename runtimeclass @ 07/12/25 12:57:12.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:57:12.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:57:12.697
  E0712 12:57:13.101956      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:14.102055      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:57:14.728388 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7849" for this suite. @ 07/12/25 12:57:14.732
• [2.058 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 07/12/25 12:57:14.739
  I0712 12:57:14.739997 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename replicaset @ 07/12/25 12:57:14.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:57:14.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:57:14.753
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 07/12/25 12:57:14.755
  E0712 12:57:15.102137      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:16.102436      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 07/12/25 12:57:16.773
  STEP: Then the orphan pod is adopted @ 07/12/25 12:57:16.779
  E0712 12:57:17.103358      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 07/12/25 12:57:17.784
  I0712 12:57:17.792718 20 resource.go:81] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 07/12/25 12:57:17.802
  E0712 12:57:18.103447      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:57:18.810438 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3676" for this suite. @ 07/12/25 12:57:18.814
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 07/12/25 12:57:18.82
  I0712 12:57:18.820699 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename csinodes @ 07/12/25 12:57:18.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:57:18.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:57:18.836
  STEP: Creating initial csiNode "e2e-csinode-nxl8f" @ 07/12/25 12:57:18.838
  STEP: Getting initial csiNode "e2e-csinode-nxl8f" @ 07/12/25 12:57:18.842
  STEP: Patching initial csiNode: "e2e-csinode-nxl8f" @ 07/12/25 12:57:18.844
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-nxl8f=patched" @ 07/12/25 12:57:18.848
  STEP: Delete initial csiNode: "e2e-csinode-nxl8f" @ 07/12/25 12:57:18.851
  STEP: Confirm deletion of csiNode "e2e-csinode-nxl8f" @ 07/12/25 12:57:18.859
  STEP: Creating replacement csiNode "e2e-csinode-dxmng" @ 07/12/25 12:57:18.862
  STEP: Getting replacement csiNode "e2e-csinode-dxmng" @ 07/12/25 12:57:18.866
  STEP: Updating replacement csiNode "e2e-csinode-dxmng" @ 07/12/25 12:57:18.869
  STEP: DeleteCollection of CSINodes with "e2e-csinode-dxmng=updated" label @ 07/12/25 12:57:18.875
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-dxmng=updated" @ 07/12/25 12:57:18.883
  I0712 12:57:18.886280 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-8431" for this suite. @ 07/12/25 12:57:18.915
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:194
  STEP: Creating a kubernetes client @ 07/12/25 12:57:18.922
  I0712 12:57:18.922420 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename runtimeclass @ 07/12/25 12:57:18.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:57:18.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:57:18.937
  STEP: getting /apis @ 07/12/25 12:57:18.939
  STEP: getting /apis/node.k8s.io @ 07/12/25 12:57:18.941
  STEP: getting /apis/node.k8s.io/v1 @ 07/12/25 12:57:18.942
  STEP: creating @ 07/12/25 12:57:18.942
  STEP: watching @ 07/12/25 12:57:18.957
  I0712 12:57:18.957846 20 runtimeclass.go:278] starting watch
  STEP: getting @ 07/12/25 12:57:18.962
  STEP: listing @ 07/12/25 12:57:18.964
  STEP: patching @ 07/12/25 12:57:18.967
  STEP: updating @ 07/12/25 12:57:18.971
  I0712 12:57:18.978350 20 runtimeclass.go:308] waiting for watch events with expected annotations
  STEP: deleting @ 07/12/25 12:57:18.978
  STEP: deleting a collection @ 07/12/25 12:57:18.989
  I0712 12:57:19.004928 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5029" for this suite. @ 07/12/25 12:57:19.015
• [0.099 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 07/12/25 12:57:19.021
  I0712 12:57:19.021249 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename subpath @ 07/12/25 12:57:19.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:57:19.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:57:19.035
  STEP: Setting up data @ 07/12/25 12:57:19.037
  STEP: Creating pod pod-subpath-test-configmap-xstj @ 07/12/25 12:57:19.046
  STEP: Creating a pod to test atomic-volume-subpath @ 07/12/25 12:57:19.046
  E0712 12:57:19.103926      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:20.104143      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:21.104900      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:22.105030      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:23.105061      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:24.105451      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:25.106452      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:26.107435      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:27.108254      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:28.108352      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:29.108665      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:30.108785      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:31.109297      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:32.109390      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:33.110101      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:34.110704      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:35.111153      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:36.111334      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:37.111692      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:38.112409      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:39.113429      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:40.113578      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:41.114379      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:42.114589      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 12:57:43.11
  I0712 12:57:43.114488 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-subpath-test-configmap-xstj container test-container-subpath-configmap-xstj: <nil>
  E0712 12:57:43.114701      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod @ 07/12/25 12:57:43.125
  STEP: Deleting pod pod-subpath-test-configmap-xstj @ 07/12/25 12:57:43.142
  I0712 12:57:43.142828 20 delete.go:62] Deleting pod "pod-subpath-test-configmap-xstj" in namespace "subpath-2287"
  I0712 12:57:43.145412 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2287" for this suite. @ 07/12/25 12:57:43.148
• [24.133 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 07/12/25 12:57:43.154
  I0712 12:57:43.154235 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename projected @ 07/12/25 12:57:43.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:57:43.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:57:43.168
  STEP: Creating secret with name projected-secret-test-c2a8ddfe-53cc-45ed-97c4-504215fe5c59 @ 07/12/25 12:57:43.169
  STEP: Creating a pod to test consume secrets @ 07/12/25 12:57:43.176
  E0712 12:57:44.114862      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:45.114990      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:46.116052      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:47.116158      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 12:57:47.199
  I0712 12:57:47.202823 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-projected-secrets-dbc4ef33-36f5-411e-93d9-ae4c37fe6792 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/12/25 12:57:47.209
  I0712 12:57:47.226262 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6194" for this suite. @ 07/12/25 12:57:47.229
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 07/12/25 12:57:47.234
  I0712 12:57:47.234529 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename pv @ 07/12/25 12:57:47.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:57:47.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:57:47.249
  STEP: Creating initial PV and PVC @ 07/12/25 12:57:47.251
  I0712 12:57:47.251788 20 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-442" @ 07/12/25 12:57:47.265
  STEP: Listing PVCs in namespace "pv-442" @ 07/12/25 12:57:47.272
  STEP: Reading "pvc-9t7cb" Status @ 07/12/25 12:57:47.275
  STEP: Reading "pv-442-kd78g" Status @ 07/12/25 12:57:47.278
  STEP: Patching "pvc-9t7cb" Status @ 07/12/25 12:57:47.282
  STEP: Patching "pv-442-kd78g" Status @ 07/12/25 12:57:47.288
  STEP: Updating "pvc-9t7cb" Status @ 07/12/25 12:57:47.294
  STEP: Updating "pv-442-kd78g" Status @ 07/12/25 12:57:47.302
  I0712 12:57:47.331908 20 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0712 12:57:47.331928 20 pv.go:205] Deleting PersistentVolumeClaim "pvc-9t7cb"
  I0712 12:57:47.337862 20 pv.go:193] Deleting PersistentVolume "pv-442-kd78g"
  I0712 12:57:47.345191 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-442" for this suite. @ 07/12/25 12:57:47.348
• [0.119 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:264
  STEP: Creating a kubernetes client @ 07/12/25 12:57:47.353
  I0712 12:57:47.353270 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename dns @ 07/12/25 12:57:47.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:57:47.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:57:47.369
  STEP: Creating a test headless service @ 07/12/25 12:57:47.371
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1673.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-1673.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 07/12/25 12:57:47.377
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1673.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-1673.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 07/12/25 12:57:47.377
  STEP: creating a pod to probe DNS @ 07/12/25 12:57:47.377
  STEP: submitting the pod to kubernetes @ 07/12/25 12:57:47.377
  E0712 12:57:48.116299      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:49.116516      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/12/25 12:57:49.399
  STEP: looking for the results for each expected name from probers @ 07/12/25 12:57:49.401
  I0712 12:57:49.429448 20 dns_common.go:546] DNS probes using dns-1673/dns-test-5cc74d98-c333-425c-86bf-c08d5e198200 succeeded

  STEP: deleting the pod @ 07/12/25 12:57:49.43
  STEP: deleting the test headless service @ 07/12/25 12:57:49.454
  I0712 12:57:49.472655 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1673" for this suite. @ 07/12/25 12:57:49.477
• [2.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1068
  STEP: Creating a kubernetes client @ 07/12/25 12:57:49.486
  I0712 12:57:49.486133 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename job @ 07/12/25 12:57:49.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:57:49.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:57:49.502
  STEP: Creating a job @ 07/12/25 12:57:49.504
  STEP: Ensure pods equal to parallelism count is attached to the job @ 07/12/25 12:57:49.513
  E0712 12:57:50.116638      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:51.116857      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching /status @ 07/12/25 12:57:51.522
  STEP: updating /status @ 07/12/25 12:57:51.53
  STEP: get /status @ 07/12/25 12:57:51.537
  I0712 12:57:51.539939 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3055" for this suite. @ 07/12/25 12:57:51.543
• [2.063 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:444
  STEP: Creating a kubernetes client @ 07/12/25 12:57:51.548
  I0712 12:57:51.549002 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/12/25 12:57:51.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:57:51.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:57:51.564
  STEP: set up a multi version CRD @ 07/12/25 12:57:51.566
  I0712 12:57:51.567172 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  E0712 12:57:52.117539      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:53.118520      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:54.119364      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 07/12/25 12:57:54.649
  STEP: check the unserved version gets removed @ 07/12/25 12:57:54.663
  E0712 12:57:55.120232      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 07/12/25 12:57:55.495
  E0712 12:57:56.120383      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:57.121405      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:57:57.895155 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1726" for this suite. @ 07/12/25 12:57:57.901
• [6.359 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:69
  STEP: Creating a kubernetes client @ 07/12/25 12:57:57.907
  I0712 12:57:57.907820 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename emptydir-wrapper @ 07/12/25 12:57:57.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:57:57.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:57:57.925
  E0712 12:57:58.121493      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:57:59.121606      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 07/12/25 12:57:59.955
  STEP: Cleaning up the configmap @ 07/12/25 12:57:59.961
  STEP: Cleaning up the pod @ 07/12/25 12:57:59.967
  I0712 12:57:59.981466 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-6300" for this suite. @ 07/12/25 12:57:59.985
• [2.083 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 07/12/25 12:57:59.991
  I0712 12:57:59.991070 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/12/25 12:57:59.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:58:00.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:58:00.005
  STEP: creating the policy @ 07/12/25 12:58:00.012
  STEP: waiting until the marker is denied @ 07/12/25 12:58:00.023
  E0712 12:58:00.122380      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 07/12/25 12:58:00.53
  STEP: testing a non-replicated ReplicaSet not to be denied @ 07/12/25 12:58:00.548
  I0712 12:58:00.602595 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-4263" for this suite. @ 07/12/25 12:58:00.611
• [0.626 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 07/12/25 12:58:00.617
  I0712 12:58:00.617044 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename projected @ 07/12/25 12:58:00.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:58:00.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:58:00.63
  STEP: Creating configMap with name cm-test-opt-del-48b6a81e-f317-49f3-852c-ae17bf8f8b15 @ 07/12/25 12:58:00.712
  STEP: Creating configMap with name cm-test-opt-upd-b4a7d38c-35c7-42d6-8916-0e8ea6377bf4 @ 07/12/25 12:58:00.717
  STEP: Creating the pod @ 07/12/25 12:58:00.723
  E0712 12:58:01.122537      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:02.122634      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-48b6a81e-f317-49f3-852c-ae17bf8f8b15 @ 07/12/25 12:58:02.766
  STEP: Updating configmap cm-test-opt-upd-b4a7d38c-35c7-42d6-8916-0e8ea6377bf4 @ 07/12/25 12:58:02.773
  STEP: Creating configMap with name cm-test-opt-create-36ab90f4-295d-405f-a90a-7fbc466c772c @ 07/12/25 12:58:02.777
  STEP: waiting to observe update in volume @ 07/12/25 12:58:02.782
  E0712 12:58:03.122647      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:04.122878      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:58:04.810426 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9675" for this suite. @ 07/12/25 12:58:04.813
• [4.204 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 07/12/25 12:58:04.821
  I0712 12:58:04.821588 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename configmap @ 07/12/25 12:58:04.822
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:58:04.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:58:04.836
  STEP: Creating configMap configmap-4287/configmap-test-6ef6c31a-deea-4f18-8331-2df420c8e577 @ 07/12/25 12:58:04.838
  STEP: Creating a pod to test consume configMaps @ 07/12/25 12:58:04.843
  E0712 12:58:05.123590      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:06.123689      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:07.124273      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:08.124481      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 12:58:08.865
  I0712 12:58:08.868410 20 output.go:207] Trying to get logs from node ip-172-31-3-36 pod pod-configmaps-b8456bbf-d662-4a51-b2bf-3259731e53dd container env-test: <nil>
  STEP: delete the pod @ 07/12/25 12:58:08.876
  I0712 12:58:08.896437 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4287" for this suite. @ 07/12/25 12:58:08.899
• [4.083 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:559
  STEP: Creating a kubernetes client @ 07/12/25 12:58:08.904
  I0712 12:58:08.904456 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename svcaccounts @ 07/12/25 12:58:08.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:58:08.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:58:08.919
  I0712 12:58:08.934315 20 service_accounts.go:646] created pod
  E0712 12:58:09.124830      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:10.124883      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:11.124972      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:12.125073      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 12:58:12.946
  E0712 12:58:13.126043      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:14.126150      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:15.126258      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:16.126346      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:17.126485      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:18.126597      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:19.126730      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:20.126821      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:21.126958      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:22.127097      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:23.127506      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:24.128563      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:25.129390      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:26.130401      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:27.131398      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:28.132255      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:29.132367      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:30.132483      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:31.133406      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:32.133624      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:33.133812      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:34.134003      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:35.134126      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:36.134332      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:37.134518      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:38.134715      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:39.134898      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:40.135012      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:41.135238      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:42.135420      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:58:42.946900 20 service_accounts.go:652] polling logs
  I0712 12:58:42.953761 20 service_accounts.go:662] Pod logs: 
  I0712 12:58:09.532912       1 log.go:245] OK: Got token
  I0712 12:58:09.532958       1 log.go:245] validating with in-cluster discovery
  I0712 12:58:09.533115       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0712 12:58:09.533127       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-6692:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000013410), NotBefore:(*jwt.NumericDate)(0xc000013500), IssuedAt:(*jwt.NumericDate)(0xc000013420), ID:"b6c5196b-5ba6-4c14-9c5a-43a94e642831"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6692", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"a76563cf-ba3f-49f9-a8c1-2a1b3b002ed6"}}}
  I0712 12:58:09.540120       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0712 12:58:09.543948       1 log.go:245] OK: Validated signature on JWT
  I0712 12:58:09.544026       1 log.go:245] OK: Got valid claims from token!
  I0712 12:58:09.544069       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-6692:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00049ec70), NotBefore:(*jwt.NumericDate)(0xc00049ec98), IssuedAt:(*jwt.NumericDate)(0xc00049ec78), ID:"b6c5196b-5ba6-4c14-9c5a-43a94e642831"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6692", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"a76563cf-ba3f-49f9-a8c1-2a1b3b002ed6"}}}

  I0712 12:58:42.953799 20 service_accounts.go:666] completed pod
  I0712 12:58:42.959648 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6692" for this suite. @ 07/12/25 12:58:42.962
• [34.066 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:722
  STEP: Creating a kubernetes client @ 07/12/25 12:58:42.97
  I0712 12:58:42.970851 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename gc @ 07/12/25 12:58:42.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:58:42.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:58:42.984
  STEP: create the rc1 @ 07/12/25 12:58:43.063
  STEP: create the rc2 @ 07/12/25 12:58:43.068
  E0712 12:58:43.135797      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:44.140231      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:45.137042      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:46.138716      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:47.138758      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:48.145523      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 07/12/25 12:58:49.104
  E0712 12:58:49.148347      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 07/12/25 12:58:49.758
  STEP: wait for the rc to be deleted @ 07/12/25 12:58:49.771
  E0712 12:58:50.149406      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:51.149528      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:52.149614      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:53.149725      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:54.149809      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:58:54.782799 20 garbage_collector.go:770] 69 pods remaining
  I0712 12:58:54.782862 20 garbage_collector.go:777] 69 pods has nil DeletionTimestamp
  I0712 12:58:54.782868 20 garbage_collector.go:778] 
  E0712 12:58:55.150439      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:56.150523      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:57.150642      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:58.151420      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:58:59.152404      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/12/25 12:58:59.78
  W0712 12:58:59.784869      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0712 12:58:59.784896 20 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0712 12:58:59.784948 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-26gm8" in namespace "gc-7216"
  I0712 12:58:59.798278 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-27bp5" in namespace "gc-7216"
  I0712 12:58:59.811342 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2bjp2" in namespace "gc-7216"
  I0712 12:58:59.822417 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2ds99" in namespace "gc-7216"
  I0712 12:58:59.836941 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2n757" in namespace "gc-7216"
  I0712 12:58:59.849644 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2qrbc" in namespace "gc-7216"
  I0712 12:58:59.859644 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2wwnd" in namespace "gc-7216"
  I0712 12:58:59.878322 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-45d7c" in namespace "gc-7216"
  I0712 12:58:59.890327 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-49mff" in namespace "gc-7216"
  I0712 12:58:59.903339 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4bjxg" in namespace "gc-7216"
  I0712 12:58:59.919920 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4c7bf" in namespace "gc-7216"
  I0712 12:58:59.931058 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-52f22" in namespace "gc-7216"
  I0712 12:58:59.943648 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-56c7t" in namespace "gc-7216"
  I0712 12:58:59.957388 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5b8l4" in namespace "gc-7216"
  I0712 12:58:59.969952 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6q2s6" in namespace "gc-7216"
  I0712 12:58:59.981703 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6z2xl" in namespace "gc-7216"
  I0712 12:58:59.992159 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7h6kr" in namespace "gc-7216"
  I0712 12:59:00.006175 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7mfnl" in namespace "gc-7216"
  I0712 12:59:00.021563 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7sd47" in namespace "gc-7216"
  I0712 12:59:00.030801 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8kng5" in namespace "gc-7216"
  I0712 12:59:00.045639 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-92c29" in namespace "gc-7216"
  I0712 12:59:00.055433 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-99nld" in namespace "gc-7216"
  I0712 12:59:00.070356 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9dt6p" in namespace "gc-7216"
  I0712 12:59:00.083597 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9p7mr" in namespace "gc-7216"
  I0712 12:59:00.100122 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9sqhd" in namespace "gc-7216"
  I0712 12:59:00.113225 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9wb7q" in namespace "gc-7216"
  I0712 12:59:00.126064 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bcn64" in namespace "gc-7216"
  I0712 12:59:00.140692 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bk6b5" in namespace "gc-7216"
  E0712 12:59:00.153105      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:59:00.158624 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bpx4b" in namespace "gc-7216"
  I0712 12:59:00.172801 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-brwt4" in namespace "gc-7216"
  I0712 12:59:00.188696 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bscvl" in namespace "gc-7216"
  I0712 12:59:00.197275 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c82xt" in namespace "gc-7216"
  I0712 12:59:00.213020 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c99l6" in namespace "gc-7216"
  I0712 12:59:00.227408 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c9ssl" in namespace "gc-7216"
  I0712 12:59:00.239561 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cgknw" in namespace "gc-7216"
  I0712 12:59:00.255044 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-chpfg" in namespace "gc-7216"
  I0712 12:59:00.267407 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ckvh5" in namespace "gc-7216"
  I0712 12:59:00.284311 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d27p5" in namespace "gc-7216"
  I0712 12:59:00.296539 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d4rx4" in namespace "gc-7216"
  I0712 12:59:00.310745 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d5jw7" in namespace "gc-7216"
  I0712 12:59:00.322284 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dfbch" in namespace "gc-7216"
  I0712 12:59:00.339516 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dpnq8" in namespace "gc-7216"
  I0712 12:59:00.353498 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f7m8b" in namespace "gc-7216"
  I0712 12:59:00.364484 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g7grv" in namespace "gc-7216"
  I0712 12:59:00.377446 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g9bpq" in namespace "gc-7216"
  I0712 12:59:00.387342 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gcz2p" in namespace "gc-7216"
  I0712 12:59:00.402748 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hmkvh" in namespace "gc-7216"
  I0712 12:59:00.418012 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hmmc6" in namespace "gc-7216"
  I0712 12:59:00.430162 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hrtz7" in namespace "gc-7216"
  I0712 12:59:00.445603 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hwk58" in namespace "gc-7216"
  I0712 12:59:00.463689 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7216" for this suite. @ 07/12/25 12:59:00.475
• [17.511 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:238
  STEP: Creating a kubernetes client @ 07/12/25 12:59:00.493
  I0712 12:59:00.493982 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/12/25 12:59:00.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:59:00.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:59:00.511
  I0712 12:59:00.528861 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  E0712 12:59:01.153158      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/12/25 12:59:01.944
  I0712 12:59:01.944695 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=crd-publish-openapi-136 --namespace=crd-publish-openapi-136 create -f -'
  I0712 12:59:02.040486 20 builder.go:146] stderr: ""
  I0712 12:59:02.040527 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-408-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0712 12:59:02.040656 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=crd-publish-openapi-136 --namespace=crd-publish-openapi-136 delete e2e-test-crd-publish-openapi-408-crds test-cr'
  I0712 12:59:02.100107 20 builder.go:146] stderr: ""
  I0712 12:59:02.100148 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-408-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0712 12:59:02.100190 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=crd-publish-openapi-136 --namespace=crd-publish-openapi-136 apply -f -'
  I0712 12:59:02.152825 20 builder.go:146] stderr: ""
  I0712 12:59:02.152984 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-408-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0712 12:59:02.153026 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=crd-publish-openapi-136 --namespace=crd-publish-openapi-136 delete e2e-test-crd-publish-openapi-408-crds test-cr'
  E0712 12:59:02.153177      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:59:02.214066 20 builder.go:146] stderr: ""
  I0712 12:59:02.214105 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-408-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 07/12/25 12:59:02.214
  I0712 12:59:02.214256 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=crd-publish-openapi-136 explain e2e-test-crd-publish-openapi-408-crds'
  I0712 12:59:02.256662 20 builder.go:146] stderr: ""
  I0712 12:59:02.256713 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-408-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0712 12:59:03.153920      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:59:03.536717 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-136" for this suite. @ 07/12/25 12:59:03.543
• [3.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 07/12/25 12:59:03.551
  I0712 12:59:03.551711 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename projected @ 07/12/25 12:59:03.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:59:03.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:59:03.562
  STEP: Creating a pod to test downward API volume plugin @ 07/12/25 12:59:03.564
  E0712 12:59:04.154042      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:05.154130      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:06.154308      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:07.154523      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 12:59:07.585
  I0712 12:59:07.589097 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod downwardapi-volume-aad03340-2c20-44c2-8366-c6d4cc088cf2 container client-container: <nil>
  STEP: delete the pod @ 07/12/25 12:59:07.597
  I0712 12:59:07.613120 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3197" for this suite. @ 07/12/25 12:59:07.616
• [4.070 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 07/12/25 12:59:07.622
  I0712 12:59:07.622051 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename configmap @ 07/12/25 12:59:07.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:59:07.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:59:07.638
  I0712 12:59:07.673261 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3200" for this suite. @ 07/12/25 12:59:07.717
• [0.100 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:305
  STEP: Creating a kubernetes client @ 07/12/25 12:59:07.722
  I0712 12:59:07.722578 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename svcaccounts @ 07/12/25 12:59:07.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:59:07.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:59:07.738
  STEP: Creating a pod to test service account token:  @ 07/12/25 12:59:07.74
  E0712 12:59:08.155333      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:09.155538      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:10.156158      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:11.156385      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 12:59:11.762
  I0712 12:59:11.765267 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod test-pod-8d318224-aff4-4084-887e-88ef074e4d92 container agnhost-container: <nil>
  STEP: delete the pod @ 07/12/25 12:59:11.772
  I0712 12:59:11.788516 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1528" for this suite. @ 07/12/25 12:59:11.791
• [4.074 seconds]
------------------------------
S
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 07/12/25 12:59:11.796
  I0712 12:59:11.796686 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename ingressclass @ 07/12/25 12:59:11.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:59:11.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:59:11.81
  STEP: getting /apis @ 07/12/25 12:59:11.812
  STEP: getting /apis/networking.k8s.io @ 07/12/25 12:59:11.815
  STEP: getting /apis/networking.k8s.iov1 @ 07/12/25 12:59:11.815
  STEP: creating @ 07/12/25 12:59:11.816
  STEP: getting @ 07/12/25 12:59:11.829
  STEP: listing @ 07/12/25 12:59:11.832
  STEP: watching @ 07/12/25 12:59:11.835
  I0712 12:59:11.835168 20 ingressclass.go:348] starting watch
  STEP: patching @ 07/12/25 12:59:11.835
  STEP: updating @ 07/12/25 12:59:11.84
  I0712 12:59:11.844163 20 ingressclass.go:364] waiting for watch events with expected annotations
  I0712 12:59:11.844189 20 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 07/12/25 12:59:11.844
  STEP: deleting a collection @ 07/12/25 12:59:11.854
  I0712 12:59:11.869192 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-8264" for this suite. @ 07/12/25 12:59:11.893
• [0.103 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:659
  STEP: Creating a kubernetes client @ 07/12/25 12:59:11.899
  I0712 12:59:11.899985 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename statefulset @ 07/12/25 12:59:11.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 12:59:11.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 12:59:11.914
  STEP: Creating service test in namespace statefulset-1454 @ 07/12/25 12:59:11.916
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 07/12/25 12:59:11.922
  STEP: Creating stateful set ss in namespace statefulset-1454 @ 07/12/25 12:59:11.927
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-1454 @ 07/12/25 12:59:11.934
  I0712 12:59:11.948254 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  E0712 12:59:12.157216      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:13.157355      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:14.157472      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:15.157600      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:16.157764      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:17.157866      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:18.157960      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:19.158192      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:20.158341      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:21.158407      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:59:21.940129 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 07/12/25 12:59:21.94
  I0712 12:59:21.943414 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=statefulset-1454 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0712 12:59:22.036497 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0712 12:59:22.036542 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0712 12:59:22.036551 20 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0712 12:59:22.040846 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0712 12:59:22.159313      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:23.159347      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:24.160431      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:25.160495      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:26.160610      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:27.160674      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:28.160790      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:29.160861      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:30.160945      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:31.161965      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:59:32.042577 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0712 12:59:32.042627 20 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0712 12:59:32.143620 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 9.999999813s
  E0712 12:59:32.161877      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:59:33.148534 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 8.911746264s
  E0712 12:59:33.162646      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:59:34.154312 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 7.906711784s
  E0712 12:59:34.163289      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:59:35.159267 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 6.901184927s
  E0712 12:59:35.164302      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:36.164553      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:59:36.164602 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 5.89531176s
  E0712 12:59:37.164757      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:59:37.170275 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 4.890889717s
  E0712 12:59:38.165311      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:59:38.175681 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 3.884270091s
  E0712 12:59:39.165691      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:59:39.181055 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 2.8788146s
  E0712 12:59:40.165821      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:59:40.186907 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 1.873692354s
  E0712 12:59:41.165880      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:59:41.192308 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 868.465724ms
  E0712 12:59:42.166007      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-1454 @ 07/12/25 12:59:42.193
  I0712 12:59:42.198409 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=statefulset-1454 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0712 12:59:42.278092 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0712 12:59:42.278123 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0712 12:59:42.278133 20 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0712 12:59:42.298980 20 wait.go:44] Found 1 stateful pods, waiting for 3
  E0712 12:59:43.166273      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:44.166369      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:45.166488      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:46.166673      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:47.167421      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:48.167517      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:49.167654      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:50.167810      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:51.167971      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:52.168729      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 12:59:52.284659 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0712 12:59:52.284707 20 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0712 12:59:52.284715 20 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 07/12/25 12:59:52.284
  STEP: Scale down will halt with unhealthy stateful pod @ 07/12/25 12:59:52.284
  I0712 12:59:52.291946 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=statefulset-1454 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0712 12:59:52.394674 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0712 12:59:52.394719 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0712 12:59:52.394730 20 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0712 12:59:52.394780 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=statefulset-1454 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0712 12:59:52.521147 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0712 12:59:52.521261 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0712 12:59:52.521271 20 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0712 12:59:52.521317 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=statefulset-1454 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0712 12:59:52.635653 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0712 12:59:52.635706 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0712 12:59:52.635718 20 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0712 12:59:52.635727 20 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0712 12:59:52.638095 20 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0712 12:59:53.169301      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:54.169371      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:55.169469      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:56.169542      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:57.169660      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:58.169739      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 12:59:59.169861      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:00:00.169922      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:00:01.170023      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:00:02.170098      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:00:02.645839 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0712 13:00:02.645868 20 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0712 13:00:02.645874 20 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0712 13:00:02.746707 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 9.999999788s
  E0712 13:00:03.170171      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:00:03.752502 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.90801506s
  E0712 13:00:04.171013      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:00:04.757405 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.903111936s
  E0712 13:00:05.171894      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:00:05.763533 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.897276641s
  E0712 13:00:06.172075      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:00:06.768535 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.892160891s
  E0712 13:00:07.172834      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:00:07.774266 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.886438654s
  E0712 13:00:08.173430      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:00:08.779895 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.88073239s
  E0712 13:00:09.174356      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:00:09.785164 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.875780677s
  E0712 13:00:10.175429      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:00:10.791081 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.869716936s
  E0712 13:00:11.176424      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:00:11.798518 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 863.729424ms
  E0712 13:00:12.176955      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-1454 @ 07/12/25 13:00:12.799
  I0712 13:00:12.804267 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=statefulset-1454 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0712 13:00:12.887383 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0712 13:00:12.887419 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0712 13:00:12.887430 20 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0712 13:00:12.887472 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=statefulset-1454 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0712 13:00:12.964597 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0712 13:00:12.964634 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0712 13:00:12.964645 20 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0712 13:00:12.964687 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=statefulset-1454 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0712 13:00:13.041581 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0712 13:00:13.041617 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0712 13:00:13.041626 20 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0712 13:00:13.041641 20 rest.go:153] Scaling statefulset ss to 0
  E0712 13:00:13.178015      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:00:14.178305      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:00:15.178818      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:00:16.179659      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:00:17.179858      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:00:18.180430      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:00:19.180511      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:00:20.180647      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:00:21.180716      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:00:22.180831      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 07/12/25 13:00:23.051
  I0712 13:00:23.051148 20 statefulset.go:138] Deleting all statefulset in ns statefulset-1454
  I0712 13:00:23.055190 20 rest.go:153] Scaling statefulset ss to 0
  I0712 13:00:23.061109 20 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0712 13:00:23.063806 20 rest.go:91] Deleting statefulset ss
  I0712 13:00:23.078759 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1454" for this suite. @ 07/12/25 13:00:23.081
• [71.188 seconds]
------------------------------
SSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:108
  STEP: Creating a kubernetes client @ 07/12/25 13:00:23.088
  I0712 13:00:23.088121 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename runtimeclass @ 07/12/25 13:00:23.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:00:23.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:00:23.101
  E0712 13:00:23.181745      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:00:24.181905      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:00:25.130603 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5324" for this suite. @ 07/12/25 13:00:25.134
• [2.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 07/12/25 13:00:25.142
  I0712 13:00:25.142063 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename limitrange @ 07/12/25 13:00:25.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:00:25.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:00:25.157
  STEP: Creating a LimitRange @ 07/12/25 13:00:25.159
  STEP: Setting up watch @ 07/12/25 13:00:25.159
  E0712 13:00:25.182278      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Submitting a LimitRange @ 07/12/25 13:00:25.264
  STEP: Verifying LimitRange creation was observed @ 07/12/25 13:00:25.271
  STEP: Fetching the LimitRange to ensure it has proper values @ 07/12/25 13:00:25.271
  I0712 13:00:25.274462 20 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0712 13:00:25.274489 20 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 07/12/25 13:00:25.274
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 07/12/25 13:00:25.281
  I0712 13:00:25.287649 20 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0712 13:00:25.287678 20 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 07/12/25 13:00:25.287
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 07/12/25 13:00:25.293
  I0712 13:00:25.296403 20 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0712 13:00:25.296428 20 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 07/12/25 13:00:25.296
  STEP: Failing to create a Pod with more than max resources @ 07/12/25 13:00:25.299
  STEP: Updating a LimitRange @ 07/12/25 13:00:25.301
  STEP: Verifying LimitRange updating is effective @ 07/12/25 13:00:25.307
  E0712 13:00:26.182457      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:00:27.182674      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 07/12/25 13:00:27.312
  STEP: Failing to create a Pod with more than max resources @ 07/12/25 13:00:27.317
  STEP: Deleting a LimitRange @ 07/12/25 13:00:27.32
  STEP: Verifying the LimitRange was deleted @ 07/12/25 13:00:27.33
  E0712 13:00:28.182765      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:00:29.182836      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:00:30.182964      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:00:31.183032      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:00:32.183166      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:00:32.335083 20 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 07/12/25 13:00:32.335
  I0712 13:00:32.342061 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-2409" for this suite. @ 07/12/25 13:00:32.345
• [7.213 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 07/12/25 13:00:32.355
  I0712 13:00:32.355404 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename field-validation @ 07/12/25 13:00:32.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:00:32.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:00:32.37
  I0712 13:00:32.371817 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  E0712 13:00:33.183898      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:00:34.183982      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:00:34.903338      20 warnings.go:110] "Warning: unknown field \"alpha\""
  I0712 13:00:34.903359      20 warnings.go:110] "Warning: unknown field \"beta\""
  I0712 13:00:34.903365      20 warnings.go:110] "Warning: unknown field \"delta\""
  I0712 13:00:34.903371      20 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0712 13:00:34.903378      20 warnings.go:110] "Warning: unknown field \"gamma\""
  E0712 13:00:35.184345      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:00:35.437797 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9048" for this suite. @ 07/12/25 13:00:35.44
• [3.090 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:709
  STEP: Creating a kubernetes client @ 07/12/25 13:00:35.445
  I0712 13:00:35.445788 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename webhook @ 07/12/25 13:00:35.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:00:35.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:00:35.464
  STEP: Setting up server cert @ 07/12/25 13:00:35.481
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/12/25 13:00:35.624
  STEP: Deploying the webhook pod @ 07/12/25 13:00:35.631
  STEP: Wait for the deployment to be ready @ 07/12/25 13:00:35.643
  I0712 13:00:35.651446 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0712 13:00:36.185075      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:00:37.185300      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/12/25 13:00:37.722
  STEP: Verifying the service has paired with the endpoint @ 07/12/25 13:00:37.736
  E0712 13:00:38.186287      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:00:38.737320 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 07/12/25 13:00:38.741
  STEP: verifying the validating webhook match conditions @ 07/12/25 13:00:38.749
  STEP: updating the validating webhook match conditions @ 07/12/25 13:00:38.752
  STEP: verifying the validating webhook match conditions @ 07/12/25 13:00:38.762
  I0712 13:00:38.815585 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6247" for this suite. @ 07/12/25 13:00:38.819
  STEP: Destroying namespace "webhook-markers-9964" for this suite. @ 07/12/25 13:00:38.828
• [3.391 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:109
  STEP: Creating a kubernetes client @ 07/12/25 13:00:38.836
  I0712 13:00:38.837008 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename emptydir @ 07/12/25 13:00:38.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:00:38.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:00:38.853
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 07/12/25 13:00:38.856
  E0712 13:00:39.186391      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:00:40.186488      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:00:41.187151      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:00:42.187308      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:00:42.888
  I0712 13:00:42.891719 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-2f211b00-4e53-4b4b-a8e1-4e28e20af989 container test-container: <nil>
  STEP: delete the pod @ 07/12/25 13:00:42.908
  I0712 13:00:42.927071 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7845" for this suite. @ 07/12/25 13:00:42.93
• [4.099 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 07/12/25 13:00:42.936
  I0712 13:00:42.936399 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/12/25 13:00:42.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:00:42.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:00:42.952
  I0712 13:00:42.955071 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  E0712 13:00:43.188318      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:00:44.188453      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:00:45.188608      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:00:46.004068 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-5376" for this suite. @ 07/12/25 13:00:46.009
• [3.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:353
  STEP: Creating a kubernetes client @ 07/12/25 13:00:46.017
  I0712 13:00:46.017553 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename dns @ 07/12/25 13:00:46.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:00:46.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:00:46.029
  STEP: Creating a test externalName service @ 07/12/25 13:00:46.031
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-874.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-874.svc.cluster.local; sleep 1; done
   @ 07/12/25 13:00:46.035
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-874.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-874.svc.cluster.local; sleep 1; done
   @ 07/12/25 13:00:46.035
  STEP: creating a pod to probe DNS @ 07/12/25 13:00:46.035
  STEP: submitting the pod to kubernetes @ 07/12/25 13:00:46.035
  E0712 13:00:46.189330      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:00:47.189360      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/12/25 13:00:48.053
  STEP: looking for the results for each expected name from probers @ 07/12/25 13:00:48.056
  I0712 13:00:48.065778 20 dns_common.go:571] DNS probes using dns-test-c2cc8870-f799-4796-86a3-8bab5aaf0cdc succeeded

  STEP: changing the externalName to bar.example.com @ 07/12/25 13:00:48.065
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-874.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-874.svc.cluster.local; sleep 1; done
   @ 07/12/25 13:00:48.074
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-874.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-874.svc.cluster.local; sleep 1; done
   @ 07/12/25 13:00:48.074
  STEP: creating a second pod to probe DNS @ 07/12/25 13:00:48.074
  STEP: submitting the pod to kubernetes @ 07/12/25 13:00:48.074
  E0712 13:00:48.189745      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:00:49.190474      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:00:50.191263      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:00:51.191407      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:00:52.192391      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:00:53.192585      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/12/25 13:00:54.1
  STEP: looking for the results for each expected name from probers @ 07/12/25 13:00:54.102
  I0712 13:00:54.110746 20 dns_common.go:571] DNS probes using dns-test-70469567-7cbd-4627-9482-f9e4fb9bef50 succeeded

  STEP: changing the service to type=ClusterIP @ 07/12/25 13:00:54.11
  I0712 13:00:54.131059      20 warnings.go:110] "Warning: spec.externalName is ignored when spec.type is not \"ExternalName\""
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-874.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-874.svc.cluster.local; sleep 1; done
   @ 07/12/25 13:00:54.131
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-874.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-874.svc.cluster.local; sleep 1; done
   @ 07/12/25 13:00:54.131
  STEP: creating a third pod to probe DNS @ 07/12/25 13:00:54.131
  STEP: submitting the pod to kubernetes @ 07/12/25 13:00:54.135
  E0712 13:00:54.192919      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:00:55.193143      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/12/25 13:00:56.151
  STEP: looking for the results for each expected name from probers @ 07/12/25 13:00:56.154
  I0712 13:00:56.164725 20 dns_common.go:571] DNS probes using dns-test-6c20c564-34e3-4a0d-9367-b5d4b374633f succeeded

  STEP: deleting the pod @ 07/12/25 13:00:56.164
  STEP: deleting the pod @ 07/12/25 13:00:56.181
  E0712 13:00:56.193766      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 07/12/25 13:00:56.196
  STEP: deleting the test externalName service @ 07/12/25 13:00:56.21
  I0712 13:00:56.229785 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-874" for this suite. @ 07/12/25 13:00:56.233
• [10.221 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 07/12/25 13:00:56.238
  I0712 13:00:56.238780 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename secrets @ 07/12/25 13:00:56.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:00:56.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:00:56.252
  STEP: Creating secret with name secret-test-map-5a196d95-3a22-43d2-a3c9-7b5d322e87f4 @ 07/12/25 13:00:56.255
  STEP: Creating a pod to test consume secrets @ 07/12/25 13:00:56.261
  E0712 13:00:57.194894      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:00:58.194992      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:00:59.195563      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:00.195662      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:01:00.281
  I0712 13:01:00.284006 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-secrets-b071aae6-26c9-4fe6-933a-81c5141b1402 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/12/25 13:01:00.29
  I0712 13:01:00.310393 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1357" for this suite. @ 07/12/25 13:01:00.314
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support ServiceCIDR API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:163
  STEP: Creating a kubernetes client @ 07/12/25 13:01:00.324
  I0712 13:01:00.324705 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename servicecidr @ 07/12/25 13:01:00.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:01:00.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:01:00.339
  STEP: getting @ 07/12/25 13:01:00.341
  STEP: patching @ 07/12/25 13:01:00.345
  STEP: updating @ 07/12/25 13:01:00.35
  STEP: listing @ 07/12/25 13:01:00.38
  STEP: watching @ 07/12/25 13:01:00.383
  I0712 13:01:00.384861 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-2157" for this suite. @ 07/12/25 13:01:00.415
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:826
  STEP: Creating a kubernetes client @ 07/12/25 13:01:00.423
  I0712 13:01:00.423894 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename gc @ 07/12/25 13:01:00.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:01:00.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:01:00.441
  I0712 13:01:00.477917 20 garbage_collector.go:848] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"ebfca4b3-28c0-4767-a518-bad487b7bb2d", Controller:(*bool)(0xc003b5926e), BlockOwnerDeletion:(*bool)(0xc003b5926f)}}
  I0712 13:01:00.484308 20 garbage_collector.go:852] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"8171cdca-a883-43ee-83d5-b801b0a7851c", Controller:(*bool)(0xc003b5940e), BlockOwnerDeletion:(*bool)(0xc003b5940f)}}
  I0712 13:01:00.490645 20 garbage_collector.go:856] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"f4184911-da83-4774-845b-8cbb9f900b8f", Controller:(*bool)(0xc0027509f6), BlockOwnerDeletion:(*bool)(0xc0027509f7)}}
  E0712 13:01:01.196265      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:02.196352      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:03.196467      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:04.196560      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:05.196700      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:01:05.534746 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2626" for this suite. @ 07/12/25 13:01:05.538
• [5.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 07/12/25 13:01:05.547
  I0712 13:01:05.547874 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename pods @ 07/12/25 13:01:05.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:01:05.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:01:05.567
  STEP: creating pod @ 07/12/25 13:01:05.569
  E0712 13:01:06.196834      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:07.196931      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:01:07.617274 20 pods.go:83] Pod pod-hostip-2ba7560b-5749-455f-80c6-4cf11e2b8adf has hostIP: 172.31.39.13
  I0712 13:01:07.617394 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3207" for this suite. @ 07/12/25 13:01:07.62
• [2.080 seconds]
------------------------------
SSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 07/12/25 13:01:07.627
  I0712 13:01:07.627818 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename conformance-tests @ 07/12/25 13:01:07.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:01:07.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:01:07.644
  STEP: Getting node addresses @ 07/12/25 13:01:07.646
  I0712 13:01:07.646578 20 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0712 13:01:07.721935 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-4537" for this suite. @ 07/12/25 13:01:07.725
• [0.106 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:209
  STEP: Creating a kubernetes client @ 07/12/25 13:01:07.733
  I0712 13:01:07.733817 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename emptydir @ 07/12/25 13:01:07.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:01:07.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:01:07.747
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 07/12/25 13:01:07.749
  E0712 13:01:08.197411      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:09.197501      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:10.197912      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:11.198072      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:01:11.774
  I0712 13:01:11.777604 20 output.go:207] Trying to get logs from node ip-172-31-3-36 pod pod-e78dd033-acd3-4273-825d-b928d0b2c845 container test-container: <nil>
  STEP: delete the pod @ 07/12/25 13:01:11.79
  I0712 13:01:11.808778 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3617" for this suite. @ 07/12/25 13:01:11.812
• [4.086 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 07/12/25 13:01:11.82
  I0712 13:01:11.820153 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename configmap @ 07/12/25 13:01:11.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:01:11.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:01:11.845
  STEP: Creating configMap with name configmap-test-volume-98dfd71e-169c-46bd-83c2-8108df6018a8 @ 07/12/25 13:01:11.847
  STEP: Creating a pod to test consume configMaps @ 07/12/25 13:01:11.853
  E0712 13:01:12.198184      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:13.198425      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:14.199428      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:15.199519      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:01:15.876
  I0712 13:01:15.879608 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-configmaps-da74b0ee-4885-4313-9625-c88a29deebd4 container agnhost-container: <nil>
  STEP: delete the pod @ 07/12/25 13:01:15.884
  I0712 13:01:15.900464 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-983" for this suite. @ 07/12/25 13:01:15.903
• [4.089 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 07/12/25 13:01:15.909
  I0712 13:01:15.909868 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename field-validation @ 07/12/25 13:01:15.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:01:15.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:01:15.925
  I0712 13:01:15.927640 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  E0712 13:01:16.200434      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:17.200542      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:18.200652      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:01:18.994271 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9403" for this suite. @ 07/12/25 13:01:18.997
• [3.093 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 07/12/25 13:01:19.003
  I0712 13:01:19.003133 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename projected @ 07/12/25 13:01:19.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:01:19.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:01:19.02
  STEP: Creating a pod to test downward API volume plugin @ 07/12/25 13:01:19.022
  E0712 13:01:19.201029      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:20.201131      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:21.201187      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:22.201411      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:01:23.045
  I0712 13:01:23.048273 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod downwardapi-volume-3c63ea18-18c5-428f-9e96-4c0ac9c2d9ea container client-container: <nil>
  STEP: delete the pod @ 07/12/25 13:01:23.054
  I0712 13:01:23.072410 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4847" for this suite. @ 07/12/25 13:01:23.076
• [4.081 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 07/12/25 13:01:23.084
  I0712 13:01:23.084685 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename secrets @ 07/12/25 13:01:23.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:01:23.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:01:23.097
  I0712 13:01:23.132667 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3315" for this suite. @ 07/12/25 13:01:23.177
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 07/12/25 13:01:23.186
  I0712 13:01:23.186800 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename crd-webhook @ 07/12/25 13:01:23.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:01:23.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:01:23.199
  E0712 13:01:23.201491      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 07/12/25 13:01:23.201
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/12/25 13:01:23.711
  STEP: Deploying the custom resource conversion webhook pod @ 07/12/25 13:01:23.717
  STEP: Wait for the deployment to be ready @ 07/12/25 13:01:23.73
  I0712 13:01:23.737254 20 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0712 13:01:24.202419      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:25.202532      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/12/25 13:01:25.748
  STEP: Verifying the service has paired with the endpoint @ 07/12/25 13:01:25.762
  E0712 13:01:26.202654      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:01:26.763160 20 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0712 13:01:26.768370 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  E0712 13:01:27.202763      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:28.202848      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:29.202948      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 07/12/25 13:01:29.319
  STEP: Create a v2 custom resource @ 07/12/25 13:01:29.337
  STEP: List CRs in v1 @ 07/12/25 13:01:29.363
  STEP: List CRs in v2 @ 07/12/25 13:01:29.366
  I0712 13:01:29.923484 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-8544" for this suite. @ 07/12/25 13:01:29.926
• [6.748 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:105
  STEP: Creating a kubernetes client @ 07/12/25 13:01:29.935
  I0712 13:01:29.935377 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename replication-controller @ 07/12/25 13:01:29.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:01:29.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:01:29.951
  STEP: Given a ReplicationController is created @ 07/12/25 13:01:29.953
  STEP: When the matched label of one of its pods change @ 07/12/25 13:01:29.959
  I0712 13:01:29.963221 20 resource.go:81] Pod name pod-release: Found 0 pods out of 1
  E0712 13:01:30.203599      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:31.203822      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:32.204032      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:33.204157      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:34.204261      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:01:34.967247 20 resource.go:81] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 07/12/25 13:01:34.977
  E0712 13:01:35.204816      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:01:35.987049 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4437" for this suite. @ 07/12/25 13:01:35.99
• [6.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1726
  STEP: Creating a kubernetes client @ 07/12/25 13:01:35.997
  I0712 13:01:35.997291 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename kubectl @ 07/12/25 13:01:35.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:01:36.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:01:36.012
  I0712 13:01:36.014781 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-137 version'
  I0712 13:01:36.054866 20 builder.go:146] stderr: ""
  I0712 13:01:36.054902 20 builder.go:147] stdout: "Client Version: v1.33.2\nKustomize Version: v5.6.0\nServer Version: v1.33.2\n"
  I0712 13:01:36.055142 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-137" for this suite. @ 07/12/25 13:01:36.09
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:754
  STEP: Creating a kubernetes client @ 07/12/25 13:01:36.098
  I0712 13:01:36.098286 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename sched-preemption @ 07/12/25 13:01:36.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:01:36.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:01:36.113
  I0712 13:01:36.129970 20 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0712 13:01:36.205456      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:37.205592      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:38.206038      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:39.206253      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:40.206914      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:41.207419      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:42.208277      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:43.208360      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:44.209146      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:45.210014      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:46.210879      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:47.210985      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:48.211376      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:49.212420      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:50.212647      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:51.212789      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:52.212969      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:53.213150      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:54.213920      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:55.214077      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:56.214974      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:57.215168      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:58.215893      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:01:59.216070      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:00.216898      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:01.217425      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:02.217968      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:03.218149      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:04.219170      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:05.219300      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:06.219586      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:07.220411      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:08.220894      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:09.221423      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:10.221925      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:11.222059      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:12.222839      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:13.223008      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:14.223953      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:15.224111      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:16.224913      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:17.225019      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:18.225297      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:19.225492      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:20.226320      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:21.226421      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:22.227147      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:23.227335      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:24.227355      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:25.227496      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:26.228193      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:27.228336      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:28.228851      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:29.229506      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:30.229956      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:31.230407      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:32.230595      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:33.230681      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:34.230990      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:35.231418      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:02:36.135231 20 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 07/12/25 13:02:36.138
  I0712 13:02:36.138283 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename sched-preemption-path @ 07/12/25 13:02:36.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:02:36.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:02:36.157
  STEP: Finding an available node @ 07/12/25 13:02:36.158
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/12/25 13:02:36.158
  E0712 13:02:36.232113      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:37.232317      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/12/25 13:02:38.175
  I0712 13:02:38.190698 20 preemption.go:717] found a healthy node: ip-172-31-39-13
  STEP: Adding a custom resource @ 07/12/25 13:02:38.193
  E0712 13:02:38.233281      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:39.233444      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:40.234276      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:41.234466      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:42.234450      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:43.234627      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:44.234907      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:02:44.249092 20 preemption.go:836] pods created so far: [1 1 1]
  I0712 13:02:44.249115 20 preemption.go:837] length of pods created so far: 3
  E0712 13:02:45.235745      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:46.235818      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:02:46.259605 20 preemption.go:854] pods created so far: [2 2 1]
  E0712 13:02:47.235941      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:48.236065      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:49.236181      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:50.236294      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:51.236400      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:52.236478      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:53.236618      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 07/12/25 13:02:53.26
  STEP: Removing a custom resource @ 07/12/25 13:02:53.318
  STEP: Removing a custom resource @ 07/12/25 13:02:53.326
  STEP: Removing a custom resource @ 07/12/25 13:02:53.335
  I0712 13:02:53.343822 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-2347" for this suite. @ 07/12/25 13:02:53.347
  I0712 13:02:53.354590 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-856" for this suite. @ 07/12/25 13:02:53.448
• [77.357 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:126
  STEP: Creating a kubernetes client @ 07/12/25 13:02:53.455
  I0712 13:02:53.455920 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename sched-preemption @ 07/12/25 13:02:53.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:02:53.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:02:53.484
  I0712 13:02:53.518171 20 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0712 13:02:54.236776      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:55.236856      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:56.236994      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:57.237115      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:58.237298      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:02:59.237507      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:00.237607      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:01.237665      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:02.237807      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:03.237894      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:04.238827      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:05.238928      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:06.239358      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:07.239532      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:08.239624      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:09.239696      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:10.239805      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:11.239874      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:12.240014      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:13.240415      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:14.240506      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:15.240628      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:16.241098      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:17.241394      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:18.242401      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:19.242586      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:20.242701      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:21.242914      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:22.243416      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:23.243626      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:24.243897      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:25.244006      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:26.244121      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:27.244327      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:28.244371      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:29.244984      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:30.245101      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:31.245309      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:32.245369      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:33.245553      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:34.245663      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:35.245781      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:36.246358      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:37.246544      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:38.246605      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:39.246719      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:40.247109      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:41.247342      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:42.247440      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:43.247630      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:44.248087      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:45.248226      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:46.248378      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:47.248934      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:48.249491      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:49.249609      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:50.250411      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:51.251392      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:52.251501      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:53.251701      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:03:53.523016 20 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 07/12/25 13:03:53.526
  STEP: Adding a custom resource @ 07/12/25 13:03:53.526
  I0712 13:03:53.543393 20 preemption.go:170] Created pod: pod0-0-sched-preemption-low-priority
  I0712 13:03:53.552256 20 preemption.go:170] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 07/12/25 13:03:53.552
  I0712 13:03:53.574112 20 preemption.go:170] Created pod: pod1-0-sched-preemption-medium-priority
  I0712 13:03:53.580529 20 preemption.go:170] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 07/12/25 13:03:53.58
  I0712 13:03:53.598197 20 preemption.go:170] Created pod: pod2-0-sched-preemption-medium-priority
  I0712 13:03:53.603408 20 preemption.go:170] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 07/12/25 13:03:53.603
  E0712 13:03:54.252427      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:55.252562      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 07/12/25 13:03:55.629
  E0712 13:03:56.253425      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:03:57.253640      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 07/12/25 13:03:57.679
  STEP: Removing a custom resource @ 07/12/25 13:03:57.689
  STEP: Removing a custom resource @ 07/12/25 13:03:57.7
  I0712 13:03:57.710488 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3443" for this suite. @ 07/12/25 13:03:57.713
• [64.265 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1533
  STEP: Creating a kubernetes client @ 07/12/25 13:03:57.721
  I0712 13:03:57.721183 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename kubectl @ 07/12/25 13:03:57.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:03:57.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:03:57.733
  STEP: creating Agnhost RC @ 07/12/25 13:03:57.735
  I0712 13:03:57.735357 20 kubectl.go:1540] namespace kubectl-1108
  I0712 13:03:57.735392 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-1108 create -f -'
  I0712 13:03:57.825870 20 builder.go:146] stderr: ""
  I0712 13:03:57.825898 20 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/12/25 13:03:57.825
  E0712 13:03:58.254532      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:03:58.831567 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0712 13:03:58.831597 20 framework.go:733] Found 1 / 1
  I0712 13:03:58.831610 20 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0712 13:03:58.834929 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0712 13:03:58.834952 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0712 13:03:58.834957 20 kubectl.go:1547] wait on agnhost-primary startup in kubectl-1108 
  I0712 13:03:58.834995 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-1108 logs agnhost-primary-pn7tt agnhost-primary'
  I0712 13:03:58.893622 20 builder.go:146] stderr: ""
  I0712 13:03:58.893647 20 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 07/12/25 13:03:58.893
  I0712 13:03:58.893771 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-1108 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0712 13:03:58.955068 20 builder.go:146] stderr: ""
  I0712 13:03:58.955105 20 builder.go:147] stdout: "service/rm2 exposed\n"
  I0712 13:03:58.959557 20 utils.go:1115] Service rm2 in namespace kubectl-1108 found.
  E0712 13:03:59.255018      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:04:00.255135      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: exposing service @ 07/12/25 13:04:00.968
  I0712 13:04:00.968223 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-1108 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0712 13:04:01.033806 20 builder.go:146] stderr: ""
  I0712 13:04:01.033839 20 builder.go:147] stdout: "service/rm3 exposed\n"
  I0712 13:04:01.043276 20 utils.go:1115] Service rm3 in namespace kubectl-1108 found.
  E0712 13:04:01.255707      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:04:02.255967      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:04:03.063699 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1108" for this suite. @ 07/12/25 13:04:03.066
• [5.350 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 07/12/25 13:04:03.071
  I0712 13:04:03.071721 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename container-probe @ 07/12/25 13:04:03.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:04:03.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:04:03.089
  STEP: Creating pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520 @ 07/12/25 13:04:03.093
  E0712 13:04:03.256498      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:04:04.256613      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/12/25 13:04:05.112
  I0712 13:04:05.115390 20 container_probe.go:1748] Initial restart count of pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc is 0
  I0712 13:04:05.118648 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:04:05.256892      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:04:06.257051      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:04:07.123423 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:04:07.257704      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:04:08.257839      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:04:09.128167 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:04:09.258344      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:04:10.258449      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:04:11.132737 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:04:11.258957      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:04:12.259954      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:04:13.136741 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:04:13.260854      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:04:14.260939      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:04:15.140711 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:04:15.261850      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:04:16.261961      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:04:17.145790 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:04:17.262945      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:04:18.263231      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:04:19.149805 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:04:19.264044      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:04:20.264142      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:04:21.154243 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:04:21.264407      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:04:22.264586      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:04:23.157997 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:04:23.265156      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:04:24.265312      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:04:25.162257 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  I0712 13:04:25.162298 20 container_probe.go:1762] Restart count of pod container-probe-7520/liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc is now 1 (20.04688058s elapsed)
  E0712 13:04:25.265397      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:04:26.265500      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:04:27.168029 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:04:27.266168      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:04:28.266341      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:04:29.172065 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:04:29.267252      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:04:30.267372      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:04:31.175553 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:04:31.267727      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:04:32.267932      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:04:33.179173 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:04:33.268385      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:04:34.269422      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:04:35.185139 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:04:35.270299      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:04:36.270375      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:04:37.189282 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:04:37.271420      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:04:38.271494      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:04:39.194806 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:04:39.271969      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:04:40.272044      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:04:41.199432 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:04:41.272563      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:04:42.272749      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:04:43.203956 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:04:43.273109      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:04:44.273244      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:04:45.208093 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  I0712 13:04:45.208131 20 container_probe.go:1762] Restart count of pod container-probe-7520/liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc is now 2 (40.092713345s elapsed)
  E0712 13:04:45.274196      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:04:46.274421      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:04:47.212644 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:04:47.274809      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:04:48.274918      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:04:49.217530 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:04:49.275632      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:04:50.275779      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:04:51.222759 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:04:51.275800      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:04:52.276427      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:04:53.227098 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:04:53.277152      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:04:54.277392      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:04:55.231244 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:04:55.278337      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:04:56.278420      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:04:57.236346 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:04:57.279417      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:04:58.279546      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:04:59.240977 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:04:59.280417      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:05:00.280541      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:05:01.245187 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:05:01.281317      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:05:02.281446      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:05:03.249959 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:05:03.282053      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:05:04.282430      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:05:05.254152 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  I0712 13:05:05.254191 20 container_probe.go:1762] Restart count of pod container-probe-7520/liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc is now 3 (1m0.138773663s elapsed)
  E0712 13:05:05.283271      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:05:06.283358      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:05:07.258054 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:05:07.284260      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:05:08.284420      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:05:09.264163 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:05:09.285217      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:05:10.285389      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:05:11.268954 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:05:11.286029      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:05:12.286233      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:05:13.273037 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:05:13.287153      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:05:14.287351      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:05:15.277162 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:05:15.288281      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:05:16.288392      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:05:17.281438 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:05:17.288440      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:05:18.288662      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:05:19.285435 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:05:19.289523      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:05:20.290429      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:05:21.290493      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:05:21.290559 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:05:22.290620      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:05:23.290698      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:05:23.294929 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:05:24.290830      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:05:25.290924      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:05:25.300508 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  I0712 13:05:25.300540 20 container_probe.go:1762] Restart count of pod container-probe-7520/liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc is now 4 (1m20.185122166s elapsed)
  E0712 13:05:26.291556      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:05:27.291680      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:05:27.304778 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:05:28.292438      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:05:29.292539      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:05:29.309883 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:05:30.292639      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:05:31.292726      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:05:31.314949 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:05:32.292992      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:05:33.293068      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:05:33.320364 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:05:34.293231      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:05:35.293384      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:05:35.325726 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:05:36.293732      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:05:37.293951      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:05:37.330296 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:05:38.294077      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:05:39.294159      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:05:39.336058 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:05:40.294379      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:05:41.294596      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:05:41.340417 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:05:42.294716      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:05:43.294927      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:05:43.345419 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:05:44.295438      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:05:45.295610      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:05:45.349364 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:05:46.295937      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:05:47.295956      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:05:47.353127 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:05:48.295953      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:05:49.296140      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:05:49.357871 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:05:50.296286      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:05:51.296472      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:05:51.362655 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:05:52.297411      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:05:53.298440      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:05:53.368322 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:05:54.299302      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:05:55.299365      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:05:55.372901 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:05:56.300402      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:05:57.301392      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:05:57.377802 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:05:58.301493      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:05:59.301676      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:05:59.382442 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:06:00.302473      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:01.302660      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:06:01.387428 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:06:02.303338      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:03.303437      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:06:03.392282 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:06:04.303555      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:05.303647      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:06:05.397350 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:06:06.304278      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:07.304473      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:06:07.401706 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:06:08.304651      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:09.304849      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:06:09.406141 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:06:10.304978      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:11.305165      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:06:11.410812 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:06:12.305372      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:13.305513      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:06:13.418180 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:06:14.305629      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:15.305742      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:06:15.422882 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:06:16.305824      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:17.306006      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:06:17.427428 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:06:18.306308      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:19.306490      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:06:19.431686 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:06:20.306614      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:21.306804      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:06:21.436461 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:06:22.306916      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:23.307105      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:06:23.441306 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:06:24.307257      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:25.307357      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:06:25.446022 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:06:26.307936      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:27.308126      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:06:27.450414 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:06:28.308278      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:29.309185      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:06:29.456112 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  E0712 13:06:30.309333      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:31.309428      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:06:31.460917 20 container_probe.go:1758] Get pod liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc in namespace container-probe-7520
  I0712 13:06:31.460953 20 container_probe.go:1762] Restart count of pod container-probe-7520/liveness-d8a56667-93a5-4cb3-bb86-665517dd5edc is now 5 (2m26.345535058s elapsed)
  STEP: deleting the pod @ 07/12/25 13:06:31.461
  I0712 13:06:31.475912 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7520" for this suite. @ 07/12/25 13:06:31.481
• [148.416 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 07/12/25 13:06:31.488
  I0712 13:06:31.488246 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename var-expansion @ 07/12/25 13:06:31.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:06:31.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:06:31.503
  STEP: creating the pod with failed condition @ 07/12/25 13:06:31.505
  E0712 13:06:32.310436      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:33.310506      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:34.311421      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:35.311506      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:36.312435      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:37.312529      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:38.312649      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:39.313484      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:40.313622      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:41.313716      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:42.313851      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:43.313940      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:44.314516      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:45.314702      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:46.315780      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:47.315914      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:48.316115      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:49.316496      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:50.316640      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:51.316726      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:52.316869      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:53.316957      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:54.317531      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:55.317639      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:56.317715      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:57.317806      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:58.317952      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:06:59.318541      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:00.318638      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:01.318715      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:02.318857      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:03.319709      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:04.320475      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:05.320551      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:06.320679      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:07.320833      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:08.320867      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:09.321496      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:10.321607      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:11.321670      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:12.321786      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:13.321865      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:14.322500      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:15.322602      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:16.322733      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:17.322805      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:18.323873      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:19.324482      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:20.324628      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:21.324711      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:22.324858      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:23.325093      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:24.325350      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:25.325444      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:26.326435      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:27.326525      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:28.326644      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:29.327586      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:30.327931      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:31.328009      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:32.328678      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:33.328762      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:34.329503      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:35.329605      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:36.329705      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:37.329772      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:38.330432      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:39.331476      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:40.331604      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:41.331691      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:42.331806      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:43.331863      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:44.332292      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:45.332377      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:46.332665      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:47.332749      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:48.333143      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:49.333530      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:50.333633      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:51.334414      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:52.334528      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:53.334722      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:54.335524      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:55.336409      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:56.336522      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:57.336709      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:58.337474      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:07:59.338527      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:00.338564      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:01.338745      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:02.338854      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:03.338953      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:04.339524      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:05.339602      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:06.339730      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:07.339819      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:08.340330      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:09.340471      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:10.341408      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:11.342400      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:12.342782      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:13.343026      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:14.343486      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:15.343673      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:16.344525      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:17.344718      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:18.345024      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:19.345504      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:20.346041      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:21.346263      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:22.346402      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:23.346596      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:24.347491      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:25.347684      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:26.348759      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:27.348863      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:28.349330      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:29.349509      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:30.350072      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:31.350402      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: updating the pod @ 07/12/25 13:08:31.516
  I0712 13:08:32.029555 20 pod_client.go:173] Successfully updated pod "var-expansion-6ac117f8-8756-40c0-986c-bd0d706951ec"
  STEP: waiting for pod running @ 07/12/25 13:08:32.029
  E0712 13:08:32.350508      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:33.351432      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 07/12/25 13:08:34.037
  I0712 13:08:34.038032 20 delete.go:62] Deleting pod "var-expansion-6ac117f8-8756-40c0-986c-bd0d706951ec" in namespace "var-expansion-7042"
  I0712 13:08:34.046316 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-6ac117f8-8756-40c0-986c-bd0d706951ec" to be fully deleted
  E0712 13:08:34.351490      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:35.352434      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:36.353173      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:37.353281      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:38.353376      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:39.353477      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:40.354430      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:41.354518      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:42.354656      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:43.354751      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:44.355305      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:45.355396      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:46.356177      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:47.356404      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:48.357422      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:49.357476      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:50.358259      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:51.358469      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:52.358502      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:53.358624      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:54.359037      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:55.359875      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:56.360426      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:57.361403      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:58.361476      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:08:59.362519      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:00.363353      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:01.363443      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:02.364508      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:03.364608      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:04.364860      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:05.364962      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:09:06.125528 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7042" for this suite. @ 07/12/25 13:09:06.128
• [154.646 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 07/12/25 13:09:06.134
  I0712 13:09:06.134686 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename container-probe @ 07/12/25 13:09:06.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:09:06.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:09:06.156
  STEP: Creating pod liveness-fc0bb529-6e05-45f8-8256-4f938c9ce597 in namespace container-probe-1630 @ 07/12/25 13:09:06.158
  E0712 13:09:06.365455      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:07.365695      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/12/25 13:09:08.177
  I0712 13:09:08.180642 20 container_probe.go:1748] Initial restart count of pod liveness-fc0bb529-6e05-45f8-8256-4f938c9ce597 is 0
  I0712 13:09:08.183365 20 container_probe.go:1758] Get pod liveness-fc0bb529-6e05-45f8-8256-4f938c9ce597 in namespace container-probe-1630
  E0712 13:09:08.366704      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:09.367705      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:09:10.187694 20 container_probe.go:1758] Get pod liveness-fc0bb529-6e05-45f8-8256-4f938c9ce597 in namespace container-probe-1630
  E0712 13:09:10.367913      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:11.368122      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:09:12.192110 20 container_probe.go:1758] Get pod liveness-fc0bb529-6e05-45f8-8256-4f938c9ce597 in namespace container-probe-1630
  E0712 13:09:12.368351      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:13.368448      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:09:14.196081 20 container_probe.go:1758] Get pod liveness-fc0bb529-6e05-45f8-8256-4f938c9ce597 in namespace container-probe-1630
  E0712 13:09:14.369444      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:15.369551      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:09:16.200805 20 container_probe.go:1758] Get pod liveness-fc0bb529-6e05-45f8-8256-4f938c9ce597 in namespace container-probe-1630
  E0712 13:09:16.370105      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:17.370426      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:09:18.205192 20 container_probe.go:1758] Get pod liveness-fc0bb529-6e05-45f8-8256-4f938c9ce597 in namespace container-probe-1630
  E0712 13:09:18.371411      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:19.371452      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:09:20.211098 20 container_probe.go:1758] Get pod liveness-fc0bb529-6e05-45f8-8256-4f938c9ce597 in namespace container-probe-1630
  E0712 13:09:20.372341      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:21.372448      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:09:22.215171 20 container_probe.go:1758] Get pod liveness-fc0bb529-6e05-45f8-8256-4f938c9ce597 in namespace container-probe-1630
  E0712 13:09:22.373454      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:23.373564      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:09:24.219529 20 container_probe.go:1758] Get pod liveness-fc0bb529-6e05-45f8-8256-4f938c9ce597 in namespace container-probe-1630
  E0712 13:09:24.373877      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:25.373946      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:09:26.224464 20 container_probe.go:1758] Get pod liveness-fc0bb529-6e05-45f8-8256-4f938c9ce597 in namespace container-probe-1630
  E0712 13:09:26.374789      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:27.374976      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:09:28.229239 20 container_probe.go:1758] Get pod liveness-fc0bb529-6e05-45f8-8256-4f938c9ce597 in namespace container-probe-1630
  I0712 13:09:28.229292 20 container_probe.go:1762] Restart count of pod container-probe-1630/liveness-fc0bb529-6e05-45f8-8256-4f938c9ce597 is now 1 (20.048620749s elapsed)
  STEP: deleting the pod @ 07/12/25 13:09:28.229
  I0712 13:09:28.244281 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1630" for this suite. @ 07/12/25 13:09:28.247
• [22.122 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 07/12/25 13:09:28.256
  I0712 13:09:28.256503 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename pods @ 07/12/25 13:09:28.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:09:28.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:09:28.266
  STEP: creating the pod @ 07/12/25 13:09:28.269
  STEP: submitting the pod to kubernetes @ 07/12/25 13:09:28.269
  E0712 13:09:28.375970      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:29.376572      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 07/12/25 13:09:30.287
  STEP: updating the pod @ 07/12/25 13:09:30.291
  E0712 13:09:30.377228      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:09:30.803150 20 pod_client.go:173] Successfully updated pod "pod-update-fa02591d-79a0-45dc-9fe7-0e71fe5487f2"
  STEP: verifying the updated pod is in kubernetes @ 07/12/25 13:09:30.806
  I0712 13:09:30.812116 20 pods.go:391] Pod update OK
  I0712 13:09:30.812336 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2000" for this suite. @ 07/12/25 13:09:30.815
• [2.567 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:278
  STEP: Creating a kubernetes client @ 07/12/25 13:09:30.823
  I0712 13:09:30.823849 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/12/25 13:09:30.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:09:30.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:09:30.838
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 07/12/25 13:09:30.841
  I0712 13:09:30.841678 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  E0712 13:09:31.377790      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:09:32.056499 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  E0712 13:09:32.378537      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:33.378958      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:34.379791      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:35.379928      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:36.379996      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:09:36.864404 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4102" for this suite. @ 07/12/25 13:09:36.87
• [6.052 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:71
  STEP: Creating a kubernetes client @ 07/12/25 13:09:36.876
  I0712 13:09:36.876393 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename replication-controller @ 07/12/25 13:09:36.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:09:36.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:09:36.893
  STEP: Creating replication controller my-hostname-basic-edfa6a55-cb66-411f-90af-aaa70a912b87 @ 07/12/25 13:09:36.897
  I0712 13:09:36.906638 20 resource.go:81] Pod name my-hostname-basic-edfa6a55-cb66-411f-90af-aaa70a912b87: Found 0 pods out of 1
  E0712 13:09:37.380241      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:38.381307      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:39.381559      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:40.381704      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:41.381896      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:09:41.986739 20 resource.go:81] Pod name my-hostname-basic-edfa6a55-cb66-411f-90af-aaa70a912b87: Found 1 pods out of 1
  I0712 13:09:41.986778 20 rc.go:509] Ensuring all pods for ReplicationController "my-hostname-basic-edfa6a55-cb66-411f-90af-aaa70a912b87" are running
  I0712 13:09:41.989242 20 rc.go:525] Pod "my-hostname-basic-edfa6a55-cb66-411f-90af-aaa70a912b87-lq4w9" is running and ready(conditions: [{Type:PodReadyToStartContainers ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-12 13:09:38 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-12 13:09:36 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-12 13:09:38 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-12 13:09:38 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-12 13:09:36 +0000 UTC Reason: Message:}])
  I0712 13:09:41.989265 20 rc.go:533] Trying to dial the pod
  STEP: trying to dial each unique pod @ 07/12/25 13:09:41.989
  I0712 13:09:41.998557 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-588" for this suite. @ 07/12/25 13:09:42.002
• [5.134 seconds]
------------------------------
SSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 07/12/25 13:09:42.009
  I0712 13:09:42.009991 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename downward-api @ 07/12/25 13:09:42.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:09:42.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:09:42.025
  STEP: Creating a pod to test downward api env vars @ 07/12/25 13:09:42.028
  E0712 13:09:42.382976      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:43.383267      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:44.384089      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:45.384186      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:09:46.083
  I0712 13:09:46.086754 20 output.go:207] Trying to get logs from node ip-172-31-3-36 pod downward-api-61d715b7-7f43-49c4-ba3a-66b8565cf3d3 container dapi-container: <nil>
  STEP: delete the pod @ 07/12/25 13:09:46.101
  I0712 13:09:46.120444 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7403" for this suite. @ 07/12/25 13:09:46.123
• [4.121 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 07/12/25 13:09:46.131
  I0712 13:09:46.131240 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename endpointslice @ 07/12/25 13:09:46.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:09:46.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:09:46.145
  I0712 13:09:46.153424      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0712 13:09:46.155871 20 endpointslice.go:1045] Endpoints addresses: [172.31.0.19 172.31.82.38] , ports: [6443]
  I0712 13:09:46.155888 20 endpointslice.go:1075] EndpointSlices addresses: [172.31.0.19 172.31.82.38] , ports: [6443]
  I0712 13:09:46.155955 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-685" for this suite. @ 07/12/25 13:09:46.225
• [0.102 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 07/12/25 13:09:46.233
  I0712 13:09:46.233745 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename deployment @ 07/12/25 13:09:46.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:09:46.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:09:46.247
  I0712 13:09:46.248716 20 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0712 13:09:46.259027 20 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0712 13:09:46.384289      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:47.384375      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:48.384467      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:49.385506      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:50.385714      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:09:51.262164 20 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/12/25 13:09:51.262
  I0712 13:09:51.262246 20 deployment.go:769] Creating deployment "test-rolling-update-deployment"
  I0712 13:09:51.273519 20 deployment.go:775] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0712 13:09:51.290955 20 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0712 13:09:51.386226      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:52.386351      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:09:53.299436 20 deployment.go:779] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0712 13:09:53.302079 20 deployment.go:784] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0712 13:09:53.310520 20 deployment.go:632] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8904",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e6a98b83-faaa-4b68-b765-5becf5663d85",
      ResourceVersion: (string) (len=5) "31680",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887922591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887922591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887922592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887922591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887922591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887922592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887922591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0712 13:09:53.314598 20 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8904",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1a67f1d4-3d3a-4300-91c0-74d70cadf8d3",
      ResourceVersion: (string) (len=5) "31670",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887922591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "e6a98b83-faaa-4b68-b765-5becf5663d85",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887922591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 36 61 39 38 62  38 33 2d 66 61 61 61 2d  |\"e6a98b83-faaa-|
              00000120  34 62 36 38 2d 62 37 36  35 2d 35 62 65 63 66 35  |4b68-b765-5becf5|
              00000130  36 36 33 64 38 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |663d85\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887922592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0712 13:09:53.315155 20 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0712 13:09:53.315354 20 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8904",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c412f268-f15c-4850-846f-f184e5aba677",
      ResourceVersion: (string) (len=5) "31679",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887922586,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "e6a98b83-faaa-4b68-b765-5becf5663d85",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887922586,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887922592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 65 36 61 39 38 62 38  |"uid\":\"e6a98b8|
              000000b0  33 2d 66 61 61 61 2d 34  62 36 38 2d 62 37 36 35  |3-faaa-4b68-b765|
              000000c0  2d 35 62 65 63 66 35 36  36 33 64 38 35 5c 22 7d  |-5becf5663d85\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887922592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0712 13:09:53.319650 20 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-7nr7m" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-7nr7m",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=15) "deployment-8904",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0385f30f-f69c-4630-b943-854da32972a0",
      ResourceVersion: (string) (len=5) "31669",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887922591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "1a67f1d4-3d3a-4300-91c0-74d70cadf8d3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887922591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 61  36 37 66 31 64 34 2d 33  |d\":\"1a67f1d4-3|
              00000090  64 33 61 2d 34 33 30 30  2d 39 31 63 30 2d 37 34  |d3a-4300-91c0-74|
              000000a0  64 37 30 63 61 64 66 38  64 33 5c 22 7d 22 3a 7b  |d70cadf8d3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887922592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 33  35 2e 31 34 36 5c 22 7d  |2.168.235.146\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6bh2t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6bh2t",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-39-13",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887922592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887922591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887922592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887922592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887922591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.39.13",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.39.13"
        }
      },
      PodIP: (string) (len=15) "192.168.235.146",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.235.146"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887922591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63887922591,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://4f7d11e24657a1daf79be6d11dc3899fd7eb689416d8cf99aa2ffc6cb3389711",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6bh2t",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:09:53.320876 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8904" for this suite. @ 07/12/25 13:09:53.324
• [7.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 07/12/25 13:09:53.331
  I0712 13:09:53.331933 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename kubelet-test @ 07/12/25 13:09:53.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:09:53.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:09:53.348
  I0712 13:09:53.378155 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0712 13:09:53.387277      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "kubelet-test-6747" for this suite. @ 07/12/25 13:09:53.427
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:750
  STEP: Creating a kubernetes client @ 07/12/25 13:09:53.436
  I0712 13:09:53.436046 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename resourcequota @ 07/12/25 13:09:53.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:09:53.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:09:53.451
  STEP: Creating a ResourceQuota with terminating scope @ 07/12/25 13:09:53.453
  STEP: Ensuring ResourceQuota status is calculated @ 07/12/25 13:09:53.458
  E0712 13:09:54.387681      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:55.387871      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 07/12/25 13:09:55.463
  STEP: Ensuring ResourceQuota status is calculated @ 07/12/25 13:09:55.467
  E0712 13:09:56.388329      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:57.388888      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 07/12/25 13:09:57.472
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 07/12/25 13:09:57.486
  E0712 13:09:58.389414      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:09:59.389574      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 07/12/25 13:09:59.49
  E0712 13:10:00.389620      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:10:01.389680      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/12/25 13:10:01.496
  STEP: Ensuring resource quota status released the pod usage @ 07/12/25 13:10:01.512
  E0712 13:10:02.390655      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:10:03.391140      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 07/12/25 13:10:03.517
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 07/12/25 13:10:03.53
  E0712 13:10:04.391852      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:10:05.392478      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 07/12/25 13:10:05.534
  E0712 13:10:06.392519      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:10:07.392994      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/12/25 13:10:07.539
  STEP: Ensuring resource quota status released the pod usage @ 07/12/25 13:10:07.555
  E0712 13:10:08.393336      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:10:09.393408      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:10:09.559809 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8406" for this suite. @ 07/12/25 13:10:09.564
• [16.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:139
  STEP: Creating a kubernetes client @ 07/12/25 13:10:09.57
  I0712 13:10:09.571001 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename emptydir @ 07/12/25 13:10:09.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:10:09.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:10:09.592
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 07/12/25 13:10:09.595
  E0712 13:10:10.393485      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:10:11.393609      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:10:12.393718      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:10:13.393841      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:10:13.62
  I0712 13:10:13.623778 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-8088f39a-d775-4127-9b46-3082f88102b2 container test-container: <nil>
  STEP: delete the pod @ 07/12/25 13:10:13.64
  I0712 13:10:13.660393 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4918" for this suite. @ 07/12/25 13:10:13.663
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 07/12/25 13:10:13.671
  I0712 13:10:13.671623 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename discovery @ 07/12/25 13:10:13.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:10:13.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:10:13.689
  STEP: Setting up server cert @ 07/12/25 13:10:13.691
  I0712 13:10:14.047067 20 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0712 13:10:14.047926 20 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0712 13:10:14.047949 20 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0712 13:10:14.047956 20 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0712 13:10:14.047963 20 discovery.go:139] Checking APIGroup: apps
  I0712 13:10:14.048585 20 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0712 13:10:14.048596 20 discovery.go:148] Versions found [{apps/v1 v1}]
  I0712 13:10:14.048604 20 discovery.go:154] apps/v1 matches apps/v1
  I0712 13:10:14.048610 20 discovery.go:139] Checking APIGroup: events.k8s.io
  I0712 13:10:14.049193 20 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0712 13:10:14.049224 20 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0712 13:10:14.049230 20 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0712 13:10:14.049236 20 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0712 13:10:14.049852 20 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0712 13:10:14.049864 20 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0712 13:10:14.049870 20 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0712 13:10:14.049876 20 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0712 13:10:14.050394 20 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0712 13:10:14.050405 20 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0712 13:10:14.050413 20 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0712 13:10:14.050432 20 discovery.go:139] Checking APIGroup: autoscaling
  I0712 13:10:14.051007 20 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0712 13:10:14.051018 20 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0712 13:10:14.051025 20 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0712 13:10:14.051030 20 discovery.go:139] Checking APIGroup: batch
  I0712 13:10:14.051726 20 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0712 13:10:14.051748 20 discovery.go:148] Versions found [{batch/v1 v1}]
  I0712 13:10:14.051757 20 discovery.go:154] batch/v1 matches batch/v1
  I0712 13:10:14.051764 20 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0712 13:10:14.052539 20 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0712 13:10:14.052575 20 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0712 13:10:14.052591 20 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0712 13:10:14.052597 20 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0712 13:10:14.053311 20 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0712 13:10:14.053331 20 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0712 13:10:14.053337 20 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0712 13:10:14.053343 20 discovery.go:139] Checking APIGroup: policy
  I0712 13:10:14.053942 20 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0712 13:10:14.053953 20 discovery.go:148] Versions found [{policy/v1 v1}]
  I0712 13:10:14.053978 20 discovery.go:154] policy/v1 matches policy/v1
  I0712 13:10:14.053984 20 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0712 13:10:14.054546 20 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0712 13:10:14.054556 20 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0712 13:10:14.054562 20 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0712 13:10:14.054577 20 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0712 13:10:14.055195 20 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0712 13:10:14.055228 20 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0712 13:10:14.055234 20 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0712 13:10:14.055239 20 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0712 13:10:14.055754 20 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0712 13:10:14.055765 20 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0712 13:10:14.055771 20 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0712 13:10:14.055777 20 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0712 13:10:14.056378 20 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0712 13:10:14.056404 20 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0712 13:10:14.056411 20 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0712 13:10:14.056416 20 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0712 13:10:14.057012 20 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0712 13:10:14.057022 20 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0712 13:10:14.057028 20 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0712 13:10:14.057034 20 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0712 13:10:14.057511 20 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0712 13:10:14.057520 20 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0712 13:10:14.057526 20 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0712 13:10:14.057532 20 discovery.go:139] Checking APIGroup: node.k8s.io
  I0712 13:10:14.058070 20 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0712 13:10:14.058080 20 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0712 13:10:14.058086 20 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0712 13:10:14.058092 20 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0712 13:10:14.058590 20 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0712 13:10:14.058599 20 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0712 13:10:14.058605 20 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0712 13:10:14.058611 20 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0712 13:10:14.059139 20 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0712 13:10:14.059147 20 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0712 13:10:14.059153 20 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0712 13:10:14.059169 20 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0712 13:10:14.059924 20 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0712 13:10:14.059946 20 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0712 13:10:14.059953 20 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0712 13:10:14.060061 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-6985" for this suite. @ 07/12/25 13:10:14.063
• [0.398 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 07/12/25 13:10:14.069
  I0712 13:10:14.069971 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename secrets @ 07/12/25 13:10:14.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:10:14.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:10:14.085
  STEP: Creating projection with secret that has name secret-emptykey-test-409f208a-9b61-4c87-9d1c-0fba1ba79c0e @ 07/12/25 13:10:14.087
  I0712 13:10:14.088452 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5090" for this suite. @ 07/12/25 13:10:14.164
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:308
  STEP: Creating a kubernetes client @ 07/12/25 13:10:14.171
  I0712 13:10:14.171478 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename dns @ 07/12/25 13:10:14.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:10:14.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:10:14.189
  STEP: Creating a test headless service @ 07/12/25 13:10:14.191
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1927.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-1927.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1927.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-1927.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-1927.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-1927.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-1927.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-1927.svc.cluster.local;sleep 1; done
   @ 07/12/25 13:10:14.197
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1927.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-1927.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1927.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-1927.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-1927.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-1927.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-1927.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-1927.svc.cluster.local;sleep 1; done
   @ 07/12/25 13:10:14.197
  STEP: creating a pod to probe DNS @ 07/12/25 13:10:14.197
  STEP: submitting the pod to kubernetes @ 07/12/25 13:10:14.197
  E0712 13:10:14.394519      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:10:15.394616      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/12/25 13:10:16.216
  STEP: looking for the results for each expected name from probers @ 07/12/25 13:10:16.219
  I0712 13:10:16.225915 20 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-1927.svc.cluster.local from pod dns-1927/dns-test-7c74b7f5-7f87-40c1-b63a-c3e5bff1deec: the server could not find the requested resource (get pods dns-test-7c74b7f5-7f87-40c1-b63a-c3e5bff1deec)
  I0712 13:10:16.229857 20 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-1927.svc.cluster.local from pod dns-1927/dns-test-7c74b7f5-7f87-40c1-b63a-c3e5bff1deec: the server could not find the requested resource (get pods dns-test-7c74b7f5-7f87-40c1-b63a-c3e5bff1deec)
  I0712 13:10:16.234004 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-1927.svc.cluster.local from pod dns-1927/dns-test-7c74b7f5-7f87-40c1-b63a-c3e5bff1deec: the server could not find the requested resource (get pods dns-test-7c74b7f5-7f87-40c1-b63a-c3e5bff1deec)
  I0712 13:10:16.238374 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-1927.svc.cluster.local from pod dns-1927/dns-test-7c74b7f5-7f87-40c1-b63a-c3e5bff1deec: the server could not find the requested resource (get pods dns-test-7c74b7f5-7f87-40c1-b63a-c3e5bff1deec)
  I0712 13:10:16.242027 20 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-1927.svc.cluster.local from pod dns-1927/dns-test-7c74b7f5-7f87-40c1-b63a-c3e5bff1deec: the server could not find the requested resource (get pods dns-test-7c74b7f5-7f87-40c1-b63a-c3e5bff1deec)
  I0712 13:10:16.245939 20 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-1927.svc.cluster.local from pod dns-1927/dns-test-7c74b7f5-7f87-40c1-b63a-c3e5bff1deec: the server could not find the requested resource (get pods dns-test-7c74b7f5-7f87-40c1-b63a-c3e5bff1deec)
  I0712 13:10:16.250063 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-1927.svc.cluster.local from pod dns-1927/dns-test-7c74b7f5-7f87-40c1-b63a-c3e5bff1deec: the server could not find the requested resource (get pods dns-test-7c74b7f5-7f87-40c1-b63a-c3e5bff1deec)
  I0712 13:10:16.253786 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-1927.svc.cluster.local from pod dns-1927/dns-test-7c74b7f5-7f87-40c1-b63a-c3e5bff1deec: the server could not find the requested resource (get pods dns-test-7c74b7f5-7f87-40c1-b63a-c3e5bff1deec)
  I0712 13:10:16.253814 20 dns_common.go:506] Lookups using dns-1927/dns-test-7c74b7f5-7f87-40c1-b63a-c3e5bff1deec failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-1927.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-1927.svc.cluster.local agnhost_udp@dns-test-service-2.dns-1927.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-1927.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-1927.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-1927.svc.cluster.local jessie_udp@dns-test-service-2.dns-1927.svc.cluster.local jessie_tcp@dns-test-service-2.dns-1927.svc.cluster.local]

  I0712 13:10:16.260139 20 dns_common.go:514] Pod client logs for webserver: 
  I0712 13:10:16.266539 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0712 13:10:16.272781 20 dns_common.go:514] Pod client logs for jessie-querier: 
  E0712 13:10:16.395083      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:10:17.395227      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:10:18.395447      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:10:19.396514      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:10:20.396654      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:10:21.253883 20 dns_common.go:546] DNS probes using dns-1927/dns-test-7c74b7f5-7f87-40c1-b63a-c3e5bff1deec succeeded

  STEP: deleting the pod @ 07/12/25 13:10:21.253
  STEP: deleting the test headless service @ 07/12/25 13:10:21.275
  I0712 13:10:21.289948 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1927" for this suite. @ 07/12/25 13:10:21.293
• [7.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 07/12/25 13:10:21.299
  I0712 13:10:21.299988 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename projected @ 07/12/25 13:10:21.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:10:21.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:10:21.315
  STEP: Creating projection with secret that has name projected-secret-test-6bf88a5b-5755-4b6b-9a3c-557c2ea968e5 @ 07/12/25 13:10:21.316
  STEP: Creating a pod to test consume secrets @ 07/12/25 13:10:21.32
  E0712 13:10:21.396970      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:10:22.397169      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:10:23.397182      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:10:24.397553      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:10:25.343
  I0712 13:10:25.349775 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-projected-secrets-70142f1a-443d-40f4-901a-5387c13a3c3c container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/12/25 13:10:25.356
  I0712 13:10:25.382376 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9752" for this suite. @ 07/12/25 13:10:25.386
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:155
  E0712 13:10:25.398056      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a kubernetes client @ 07/12/25 13:10:25.398
  I0712 13:10:25.398313 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/12/25 13:10:25.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:10:25.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:10:25.415
  I0712 13:10:25.418641 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  E0712 13:10:26.399138      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/12/25 13:10:26.633
  I0712 13:10:26.633892 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=crd-publish-openapi-4756 --namespace=crd-publish-openapi-4756 create -f -'
  E0712 13:10:27.399963      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:10:28.400042      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:10:28.693303 20 builder.go:146] stderr: ""
  I0712 13:10:28.693350 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-64-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0712 13:10:28.693400 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=crd-publish-openapi-4756 --namespace=crd-publish-openapi-4756 delete e2e-test-crd-publish-openapi-64-crds test-cr'
  I0712 13:10:28.743878 20 builder.go:146] stderr: ""
  I0712 13:10:28.743918 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-64-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0712 13:10:28.744073 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=crd-publish-openapi-4756 --namespace=crd-publish-openapi-4756 apply -f -'
  I0712 13:10:28.795817 20 builder.go:146] stderr: ""
  I0712 13:10:28.795848 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-64-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0712 13:10:28.795956 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=crd-publish-openapi-4756 --namespace=crd-publish-openapi-4756 delete e2e-test-crd-publish-openapi-64-crds test-cr'
  I0712 13:10:28.843317 20 builder.go:146] stderr: ""
  I0712 13:10:28.843346 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-64-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 07/12/25 13:10:28.843
  I0712 13:10:28.843432 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=crd-publish-openapi-4756 explain e2e-test-crd-publish-openapi-64-crds'
  I0712 13:10:28.886231 20 builder.go:146] stderr: ""
  I0712 13:10:28.886267 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-64-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0712 13:10:29.400310      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:10:30.072697 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4756" for this suite. @ 07/12/25 13:10:30.079
• [4.689 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 07/12/25 13:10:30.087
  I0712 13:10:30.087548 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename endpointslice @ 07/12/25 13:10:30.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:10:30.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:10:30.103
  E0712 13:10:30.400440      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:10:31.400536      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 07/12/25 13:10:32.177
  I0712 13:10:32.184899      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: referencing matching pods with named port @ 07/12/25 13:10:32.184
  I0712 13:10:32.192357      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 07/12/25 13:10:32.192
  I0712 13:10:32.198505      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: recreating EndpointSlices after they've been deleted @ 07/12/25 13:10:32.198
  I0712 13:10:32.217412 20 endpointslice.go:938] EndpointSlice for Service endpointslice-3609/example-named-port not found
  E0712 13:10:32.400725      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:10:33.401436      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:10:34.224509      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0712 13:10:34.224746 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3609" for this suite. @ 07/12/25 13:10:34.23
• [4.157 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1387
  STEP: Creating a kubernetes client @ 07/12/25 13:10:34.247
  I0712 13:10:34.247530 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename services @ 07/12/25 13:10:34.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:10:34.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:10:34.269
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-9298 @ 07/12/25 13:10:34.271
  STEP: changing the ExternalName service to type=ClusterIP @ 07/12/25 13:10:34.275
  I0712 13:10:34.307027 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0712 13:10:34.401869      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:10:35.401981      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:10:36.313509 20 resource.go:361] Creating new exec pod
  E0712 13:10:36.402297      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:10:37.402381      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:10:38.338494 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-9298 exec execpod6swt4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0712 13:10:38.402912      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:10:38.426135 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.132) 80 port [tcp/http] succeeded!\n"
  I0712 13:10:38.426165 20 builder.go:147] stdout: ""
  I0712 13:10:39.339452 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-9298 exec execpod6swt4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0712 13:10:39.404098      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:10:39.486854 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.132) 80 port [tcp/http] succeeded!\n"
  I0712 13:10:39.486905 20 builder.go:147] stdout: ""
  I0712 13:10:40.338882 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-9298 exec execpod6swt4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0712 13:10:40.404297      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:10:40.422807 20 builder.go:146] stderr: "+ + nc -v -t -w 2 externalname-service 80\necho hostName\nConnection to externalname-service (10.152.183.132) 80 port [tcp/http] succeeded!\n"
  I0712 13:10:40.422845 20 builder.go:147] stdout: ""
  I0712 13:10:41.338610 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-9298 exec execpod6swt4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0712 13:10:41.405106      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:10:41.422404 20 builder.go:146] stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service (10.152.183.132) 80 port [tcp/http] succeeded!\n"
  I0712 13:10:41.422441 20 builder.go:147] stdout: ""
  I0712 13:10:42.339364 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-9298 exec execpod6swt4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0712 13:10:42.405811      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:10:42.423585 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.132) 80 port [tcp/http] succeeded!\n"
  I0712 13:10:42.423623 20 builder.go:147] stdout: "externalname-service-86c9cccc74-8g5l6"
  I0712 13:10:42.423691 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-9298 exec execpod6swt4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.132 80'
  I0712 13:10:42.504143 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.132 80\nConnection to 10.152.183.132 80 port [tcp/http] succeeded!\n"
  I0712 13:10:42.504183 20 builder.go:147] stdout: "externalname-service-86c9cccc74-8g5l6"
  I0712 13:10:42.504285 20 service.go:1396] Cleaning up the ExternalName to ClusterIP test service
  I0712 13:10:42.522079 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9298" for this suite. @ 07/12/25 13:10:42.525
• [8.286 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 07/12/25 13:10:42.534
  I0712 13:10:42.534060 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename endpointslicemirroring @ 07/12/25 13:10:42.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:10:42.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:10:42.549
  STEP: mirroring a new custom Endpoint @ 07/12/25 13:10:42.569
  I0712 13:10:42.573762      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0712 13:10:42.578171 20 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  E0712 13:10:43.406128      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:10:44.406597      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 07/12/25 13:10:44.582
  I0712 13:10:44.586734      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: mirroring deletion of a custom Endpoint @ 07/12/25 13:10:44.592
  I0712 13:10:44.600011      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0712 13:10:44.605195 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-1825" for this suite. @ 07/12/25 13:10:44.608
• [2.082 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job with successPolicy should succeeded when all indexes succeeded [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 07/12/25 13:10:44.616
  I0712 13:10:44.616332 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename job @ 07/12/25 13:10:44.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:10:44.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:10:44.629
  STEP: Creating an indexed job with successPolicy @ 07/12/25 13:10:44.631
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 07/12/25 13:10:44.638
  E0712 13:10:45.406659      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:10:46.406872      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:10:47.406993      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:10:48.407087      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensure that the job reaches completions @ 07/12/25 13:10:48.651
  STEP: Verifying that the job status to ensure correct final state @ 07/12/25 13:10:48.657
  I0712 13:10:48.661288 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7534" for this suite. @ 07/12/25 13:10:48.665
• [4.055 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 07/12/25 13:10:48.671
  I0712 13:10:48.671795 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename container-probe @ 07/12/25 13:10:48.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:10:48.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:10:48.685
  STEP: Creating pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704 @ 07/12/25 13:10:48.688
  E0712 13:10:49.407373      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:10:50.407466      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/12/25 13:10:50.707
  I0712 13:10:50.711303 20 container_probe.go:1748] Initial restart count of pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 is 0
  I0712 13:10:50.714381 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:10:51.408228      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:10:52.408461      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:10:52.719731 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:10:53.409530      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:10:54.410573      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:10:54.723488 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:10:55.410751      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:10:56.411434      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:10:56.728688 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:10:57.412404      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:10:58.413406      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:10:58.734746 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:10:59.413537      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:11:00.414351      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:11:00.743236 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:11:01.414929      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:11:02.415114      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:11:02.748302 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:11:03.416158      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:11:04.416592      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:11:04.754119 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:11:05.416867      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:11:06.417049      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:11:06.759004 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:11:07.417717      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:11:08.417911      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:11:08.764064 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:11:09.418571      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:11:10.418737      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:11:10.770269 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:11:11.419411      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:11:12.419509      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:11:12.775226 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:11:13.420401      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:11:14.420500      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:11:14.780254 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:11:15.420592      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:11:16.421406      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:11:16.785330 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:11:17.421504      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:11:18.422400      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:11:18.790537 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:11:19.423334      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:11:20.423444      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:11:20.794385 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:11:21.424065      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:11:22.424273      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:11:22.798468 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:11:23.424585      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:11:24.425608      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:11:24.803818 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:11:25.426519      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:11:26.427420      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:11:26.808852 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:11:27.427525      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:11:28.427723      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:11:28.814032 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:11:29.428645      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:11:30.428668      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:11:30.819218 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:11:31.428821      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:11:32.429003      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:11:32.823645 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:11:33.429092      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:11:34.429577      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:11:34.827583 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:11:35.430098      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:11:36.430411      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:11:36.831775 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:11:37.431413      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:11:38.431525      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:11:38.835990 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:11:39.431602      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:11:40.432404      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:11:40.841826 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:11:41.432508      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:11:42.433415      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:11:42.847471 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:11:43.434161      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:11:44.434591      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:11:44.852110 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:11:45.434775      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:11:46.434972      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:11:46.857335 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:11:47.435031      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:11:48.435134      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:11:48.862252 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:11:49.435662      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:11:50.436404      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:11:50.866956 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:11:51.436532      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:11:52.437404      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:11:52.872992 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:11:53.437517      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:11:54.437563      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:11:54.877746 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:11:55.438412      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:11:56.438554      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:11:56.882916 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:11:57.439534      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:11:58.439630      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:11:58.892943 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:11:59.440575      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:12:00.441398      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:12:00.898939 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:12:01.441515      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:12:02.441701      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:12:02.903322 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:12:03.441803      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:12:04.442631      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:12:04.908556 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:12:05.442740      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:12:06.442924      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:12:06.913684 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:12:07.443260      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:12:08.443453      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:12:08.918256 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:12:09.443551      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:12:10.443743      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:12:10.923416 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:12:11.443854      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:12:12.444045      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:12:12.927806 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:12:13.444142      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:12:14.444616      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:12:14.932673 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:12:15.445321      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:12:16.445534      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:12:16.938020 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:12:17.445613      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:12:18.446427      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:12:18.943405 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:12:19.447092      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:12:20.447241      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:12:20.948591 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:12:21.448224      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:12:22.448340      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:12:22.953460 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:12:23.449059      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:12:24.449601      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:12:24.959169 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:12:25.450402      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:12:26.450500      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:12:26.965282 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:12:27.450599      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:12:28.451416      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:12:28.970732 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:12:29.452416      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:12:30.452531      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:12:30.975443 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:12:31.453332      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:12:32.453517      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:12:32.979751 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:12:33.454317      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:12:34.454510      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:12:34.985227 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:12:35.454702      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:12:36.454898      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:12:36.990499 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:12:37.455038      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:12:38.455259      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:12:38.997117 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:12:39.455655      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:12:40.455847      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:12:41.001672 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:12:41.456261      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:12:42.456458      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:12:43.006787 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:12:43.457349      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:12:44.457474      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:12:45.011454 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:12:45.457578      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:12:46.457776      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:12:47.016186 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:12:47.458790      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:12:48.458954      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:12:49.021447 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:12:49.459050      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:12:50.459921      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:12:51.026752 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:12:51.460231      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:12:52.460334      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:12:53.030717 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:12:53.461256      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:12:54.461654      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:12:55.035787 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:12:55.462310      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:12:56.462341      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:12:57.039942 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:12:57.463400      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:12:58.463578      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:12:59.045109 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:12:59.464642      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:13:00.464824      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:13:01.050502 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:13:01.464946      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:13:02.465145      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:13:03.055128 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:13:03.465288      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:13:04.465369      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:13:05.060806 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:13:05.466334      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:13:06.466520      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:13:07.064955 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:13:07.467462      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:13:08.467575      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:13:09.070516 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:13:09.468135      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:13:10.468827      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:13:11.075080 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:13:11.469574      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:13:12.469680      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:13:13.079257 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:13:13.470403      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:13:14.470535      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:13:15.084646 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:13:15.471087      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:13:16.471223      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:13:17.090226 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:13:17.471343      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:13:18.471442      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:13:19.094944 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:13:19.472403      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:13:20.472500      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:13:21.100040 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:13:21.473557      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:13:22.473747      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:13:23.105498 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:13:23.473911      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:13:24.474664      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:13:25.110960 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:13:25.475471      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:13:26.475589      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:13:27.115263 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:13:27.476406      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:13:28.476523      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:13:29.121310 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:13:29.476650      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:13:30.477489      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:13:31.126121 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:13:31.477557      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:13:32.477756      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:13:33.131310 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:13:33.478716      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:13:34.479613      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:13:35.136413 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:13:35.479704      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:13:36.480398      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:13:37.140703 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:13:37.481093      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:13:38.481189      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:13:39.146964 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:13:39.481407      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:13:40.481506      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:13:41.151652 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:13:41.482089      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:13:42.482275      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:13:43.156510 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:13:43.482887      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:13:44.483618      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:13:45.162238 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:13:45.484621      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:13:46.484806      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:13:47.167324 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:13:47.485739      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:13:48.485928      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:13:49.171623 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:13:49.486117      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:13:50.486335      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:13:51.176371 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:13:51.486830      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:13:52.487067      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:13:53.180870 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:13:53.487278      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:13:54.487682      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:13:55.185416 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:13:55.487751      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:13:56.487932      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:13:57.190731 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:13:57.488047      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:13:58.488159      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:13:59.196275 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:13:59.488711      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:14:00.488896      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:14:01.201136 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:14:01.489393      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:14:02.490391      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:14:03.207060 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:14:03.491411      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:14:04.492395      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:14:05.212923 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:14:05.493334      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:14:06.493535      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:14:07.216921 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:14:07.494313      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:14:08.494411      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:14:09.222370 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:14:09.494861      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:14:10.494976      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:14:11.226511 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:14:11.495892      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:14:12.496009      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:14:13.231805 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:14:13.496094      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:14:14.496684      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:14:15.236852 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:14:15.497241      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:14:16.497361      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:14:17.241305 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:14:17.497462      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:14:18.497655      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:14:19.246249 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:14:19.498562      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:14:20.498640      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:14:21.250963 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:14:21.499298      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:14:22.499360      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:14:23.256162 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:14:23.499632      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:14:24.500643      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:14:25.261010 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:14:25.501519      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:14:26.501471      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:14:27.265595 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:14:27.501919      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:14:28.502104      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:14:29.270195 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:14:29.502414      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:14:30.502501      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:14:31.275848 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:14:31.503243      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:14:32.503364      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:14:33.280744 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:14:33.504138      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:14:34.504395      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:14:35.285905 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:14:35.505263      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:14:36.505343      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:14:37.290623 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:14:37.505910      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:14:38.506035      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:14:39.295169 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:14:39.506653      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:14:40.506766      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:14:41.298486 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:14:41.506821      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:14:42.507008      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:14:43.303815 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:14:43.507067      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:14:44.507698      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:14:45.307977 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:14:45.508263      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:14:46.508346      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:14:47.311967 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:14:47.509282      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:14:48.509354      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:14:49.318395 20 container_probe.go:1758] Get pod busybox-a0b2ff5c-9084-49f9-b846-61977c75df59 in namespace container-probe-4704
  E0712 13:14:49.509610      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:14:50.509992      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 07/12/25 13:14:51.319
  I0712 13:14:51.332026 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4704" for this suite. @ 07/12/25 13:14:51.337
• [242.673 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 07/12/25 13:14:51.344
  I0712 13:14:51.344728 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename replicaset @ 07/12/25 13:14:51.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:14:51.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:14:51.359
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 07/12/25 13:14:51.361
  I0712 13:14:51.371179 20 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0712 13:14:51.510404      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:14:52.511403      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:14:53.511528      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:14:54.511591      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:14:55.511727      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:14:56.375066 20 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/12/25 13:14:56.375
  STEP: getting scale subresource @ 07/12/25 13:14:56.375
  STEP: updating a scale subresource @ 07/12/25 13:14:56.377
  STEP: verifying the replicaset Spec.Replicas was modified @ 07/12/25 13:14:56.384
  STEP: Patch a scale subresource @ 07/12/25 13:14:56.389
  I0712 13:14:56.400095 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5890" for this suite. @ 07/12/25 13:14:56.403
• [5.064 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:330
  STEP: Creating a kubernetes client @ 07/12/25 13:14:56.408
  I0712 13:14:56.408662 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename gc @ 07/12/25 13:14:56.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:14:56.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:14:56.429
  STEP: create the rc @ 07/12/25 13:14:56.432
  I0712 13:14:56.436456      20 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0712 13:14:56.512651      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:14:57.512824      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:14:58.513517      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:14:59.513623      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:15:00.513725      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 07/12/25 13:15:01.444
  STEP: wait for all pods to be garbage collected @ 07/12/25 13:15:01.453
  E0712 13:15:01.514568      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:15:02.514670      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:15:03.514808      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:15:04.515668      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:15:05.515768      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/12/25 13:15:06.462
  W0712 13:15:06.467273      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0712 13:15:06.467303 20 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0712 13:15:06.467446 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5131" for this suite. @ 07/12/25 13:15:06.471
• [10.070 seconds]
------------------------------
S
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 07/12/25 13:15:06.478
  I0712 13:15:06.478388 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename events @ 07/12/25 13:15:06.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:15:06.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:15:06.494
  STEP: creating a test event @ 07/12/25 13:15:06.496
  STEP: listing events in all namespaces @ 07/12/25 13:15:06.506
  STEP: listing events in test namespace @ 07/12/25 13:15:06.512
  STEP: listing events with field selection filtering on source @ 07/12/25 13:15:06.515
  E0712 13:15:06.516107      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: listing events with field selection filtering on reportingController @ 07/12/25 13:15:06.518
  STEP: getting the test event @ 07/12/25 13:15:06.521
  STEP: patching the test event @ 07/12/25 13:15:06.524
  STEP: getting the test event @ 07/12/25 13:15:06.532
  STEP: updating the test event @ 07/12/25 13:15:06.535
  STEP: getting the test event @ 07/12/25 13:15:06.544
  STEP: deleting the test event @ 07/12/25 13:15:06.547
  STEP: listing events in all namespaces @ 07/12/25 13:15:06.555
  STEP: listing events in test namespace @ 07/12/25 13:15:06.56
  I0712 13:15:06.564041 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8502" for this suite. @ 07/12/25 13:15:06.572
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 07/12/25 13:15:06.578
  I0712 13:15:06.578822 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename webhook @ 07/12/25 13:15:06.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:15:06.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:15:06.592
  STEP: Setting up server cert @ 07/12/25 13:15:06.61
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/12/25 13:15:06.742
  STEP: Deploying the webhook pod @ 07/12/25 13:15:06.749
  STEP: Wait for the deployment to be ready @ 07/12/25 13:15:06.76
  I0712 13:15:06.768526 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0712 13:15:07.516287      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:15:08.516504      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/12/25 13:15:08.781
  STEP: Verifying the service has paired with the endpoint @ 07/12/25 13:15:08.797
  E0712 13:15:09.517359      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:15:09.798656 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 07/12/25 13:15:09.803
  STEP: create a pod @ 07/12/25 13:15:09.82
  E0712 13:15:10.517401      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:15:11.517651      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 07/12/25 13:15:11.84
  I0712 13:15:11.840868 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=webhook-4732 attach --namespace=webhook-4732 to-be-attached-pod -i -c=container1'
  I0712 13:15:11.898567 20 builder.go:135] rc: 1
  I0712 13:15:11.942402 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4732" for this suite. @ 07/12/25 13:15:11.946
  STEP: Destroying namespace "webhook-markers-8140" for this suite. @ 07/12/25 13:15:11.955
• [5.385 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 07/12/25 13:15:11.963
  I0712 13:15:11.963501 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/12/25 13:15:11.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:15:11.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:15:11.978
  I0712 13:15:11.980983 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  E0712 13:15:12.518292      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:15:13.518495      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:15:14.518807      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:15:15.060686 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1998" for this suite. @ 07/12/25 13:15:15.065
• [3.111 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 07/12/25 13:15:15.074
  I0712 13:15:15.074713 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename configmap @ 07/12/25 13:15:15.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:15:15.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:15:15.089
  STEP: Creating configMap configmap-2869/configmap-test-1fb43f91-d0a3-4dcb-adb6-c106061a0334 @ 07/12/25 13:15:15.092
  STEP: Creating a pod to test consume configMaps @ 07/12/25 13:15:15.097
  E0712 13:15:15.519481      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:15:16.519568      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:15:17.520569      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:15:18.520644      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:15:19.124
  I0712 13:15:19.128690 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-configmaps-41f4becb-9522-4cac-bf55-dfa095e30ee6 container env-test: <nil>
  STEP: delete the pod @ 07/12/25 13:15:19.143
  I0712 13:15:19.159816 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2869" for this suite. @ 07/12/25 13:15:19.164
• [4.099 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 07/12/25 13:15:19.173
  I0712 13:15:19.173984 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename projected @ 07/12/25 13:15:19.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:15:19.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:15:19.188
  STEP: Creating the pod @ 07/12/25 13:15:19.19
  E0712 13:15:19.521434      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:15:20.521520      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:15:21.521645      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:15:21.732734 20 pod_client.go:173] Successfully updated pod "labelsupdatecbd8efc1-8bf0-42fb-933b-91e807e02b52"
  E0712 13:15:22.522331      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:15:23.522481      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:15:24.523294      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:15:25.523503      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:15:25.755697 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7325" for this suite. @ 07/12/25 13:15:25.76
• [6.593 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 07/12/25 13:15:25.767
  I0712 13:15:25.767100 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename downward-api @ 07/12/25 13:15:25.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:15:25.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:15:25.782
  STEP: Creating a pod to test downward API volume plugin @ 07/12/25 13:15:25.784
  E0712 13:15:26.523626      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:15:27.523694      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:15:28.523872      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:15:29.524684      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:15:29.806
  I0712 13:15:29.809158 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod downwardapi-volume-9204ba97-2bf8-455c-839f-cb834f7184d0 container client-container: <nil>
  STEP: delete the pod @ 07/12/25 13:15:29.817
  I0712 13:15:29.835290 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3032" for this suite. @ 07/12/25 13:15:29.838
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 07/12/25 13:15:29.844
  I0712 13:15:29.844762 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename projected @ 07/12/25 13:15:29.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:15:29.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:15:29.861
  STEP: Creating configMap with name projected-configmap-test-volume-map-9b00f1c7-efe6-40ed-b972-6b89f1c5cc96 @ 07/12/25 13:15:29.863
  STEP: Creating a pod to test consume configMaps @ 07/12/25 13:15:29.869
  E0712 13:15:30.524886      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:15:31.524977      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:15:31.884
  I0712 13:15:31.888131 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-projected-configmaps-cc622bb9-e104-4dca-92dd-87d792204252 container agnhost-container: <nil>
  STEP: delete the pod @ 07/12/25 13:15:31.895
  I0712 13:15:31.908705 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3710" for this suite. @ 07/12/25 13:15:31.912
• [2.075 seconds]
------------------------------
SS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 07/12/25 13:15:31.92
  I0712 13:15:31.920321 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename csi-storageclass @ 07/12/25 13:15:31.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:15:31.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:15:31.935
  STEP: Creating a StorageClass @ 07/12/25 13:15:31.937
  STEP: Get StorageClass "e2e-rt5b2" @ 07/12/25 13:15:31.944
  STEP: Patching the StorageClass "e2e-rt5b2" @ 07/12/25 13:15:31.947
  STEP: Delete StorageClass "e2e-rt5b2" @ 07/12/25 13:15:31.971
  STEP: Confirm deletion of StorageClass "e2e-rt5b2" @ 07/12/25 13:15:31.977
  STEP: Create a replacement StorageClass @ 07/12/25 13:15:31.979
  STEP: Updating StorageClass "e2e-v2-l7j6f" @ 07/12/25 13:15:31.984
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-l7j6f=updated" @ 07/12/25 13:15:31.992
  STEP: Deleting StorageClass "e2e-v2-l7j6f" via DeleteCollection @ 07/12/25 13:15:31.995
  STEP: Confirm deletion of StorageClass "e2e-v2-l7j6f" @ 07/12/25 13:15:32.006
  I0712 13:15:32.008957 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-8573" for this suite. @ 07/12/25 13:15:32.013
• [0.102 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:99
  STEP: Creating a kubernetes client @ 07/12/25 13:15:32.022
  I0712 13:15:32.022120 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename aggregator @ 07/12/25 13:15:32.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:15:32.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:15:32.037
  I0712 13:15:32.039613 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Registering the sample API server. @ 07/12/25 13:15:32.04
  E0712 13:15:32.525704      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:15:32.876345 20 helpers.go:184] Found ClusterRoles; assuming RBAC is enabled.
  I0712 13:15:32.902617 20 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0712 13:15:33.525840      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:15:34.526660      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:15:34.950132 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0712 13:15:35.526801      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:15:36.526894      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:15:36.953963 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0712 13:15:37.527676      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:15:38.527902      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:15:38.954174 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0712 13:15:39.528663      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:15:40.528743      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:15:40.956527 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0712 13:15:41.529100      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:15:42.530057      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:15:42.954790 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0712 13:15:43.530364      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:15:44.530495      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:15:44.954660 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0712 13:15:45.531348      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:15:46.531412      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:15:46.955163 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0712 13:15:47.531557      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:15:48.532433      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:15:48.955097 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0712 13:15:49.532531      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:15:50.532659      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:15:50.955938 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0712 13:15:51.533450      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:15:52.533663      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:15:52.956385 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 13, 15, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0712 13:15:53.533778      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:15:54.534722      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:15:55.080980 20 aggregator.go:756] Waited 116.13829ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 07/12/25 13:15:55.12
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 07/12/25 13:15:55.123
  STEP: List APIServices @ 07/12/25 13:15:55.131
  I0712 13:15:55.134687 20 aggregator.go:557] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 07/12/25 13:15:55.134
  I0712 13:15:55.143953 20 aggregator.go:582] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 07/12/25 13:15:55.143
  I0712 13:15:55.155817 20 aggregator.go:608] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.July, 12, 13, 15, 54, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 07/12/25 13:15:55.155
  I0712 13:15:55.159089 20 aggregator.go:626] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-07-12 13:15:54 +0000 UTC Passed all checks passed}
  I0712 13:15:55.159116 20 aggregator.go:622] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0712 13:15:55.159127 20 aggregator.go:632] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 07/12/25 13:15:55.159
  I0712 13:15:55.168807 20 aggregator.go:648] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-384398074" @ 07/12/25 13:15:55.168
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 07/12/25 13:15:55.179
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 07/12/25 13:15:55.186
  STEP: Patch APIService Status @ 07/12/25 13:15:55.19
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 07/12/25 13:15:55.198
  I0712 13:15:55.201273 20 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-07-12 13:15:54 +0000 UTC Passed all checks passed}
  I0712 13:15:55.201303 20 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0712 13:15:55.201316 20 aggregator.go:722] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0712 13:15:55.201328 20 aggregator.go:732] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 07/12/25 13:15:55.201
  STEP: Confirm that the generated APIService has been deleted @ 07/12/25 13:15:55.211
  I0712 13:15:55.211621 20 aggregator.go:793] Requesting list of APIServices to confirm quantity
  I0712 13:15:55.214634 20 aggregator.go:803] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0712 13:15:55.214659 20 aggregator.go:745] APIService v1alpha1.wardle.example.com has been deleted.
  I0712 13:15:55.314736 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-4303" for this suite. @ 07/12/25 13:15:55.318
• [23.304 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 07/12/25 13:15:55.326
  I0712 13:15:55.326135 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename svc-latency @ 07/12/25 13:15:55.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:15:55.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:15:55.341
  I0712 13:15:55.343680 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  I0712 13:15:55.351735 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0712 13:15:55.534970      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:15:56.535104      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:15:57.357112      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0712 13:15:57.358431      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0712 13:15:57.469346 20 service_latency.go:351] Created: latency-svc-h5mcg
  I0712 13:15:57.478501 20 service_latency.go:358] Got endpoints: latency-svc-h5mcg [21.882202ms]
  I0712 13:15:57.492087 20 service_latency.go:351] Created: latency-svc-nj6l7
  I0712 13:15:57.501001 20 service_latency.go:358] Got endpoints: latency-svc-nj6l7 [22.450905ms]
  I0712 13:15:57.508906 20 service_latency.go:351] Created: latency-svc-wvv54
  I0712 13:15:57.511490 20 service_latency.go:351] Created: latency-svc-xls6d
  I0712 13:15:57.514147 20 service_latency.go:358] Got endpoints: latency-svc-wvv54 [35.154823ms]
  I0712 13:15:57.520782 20 service_latency.go:358] Got endpoints: latency-svc-xls6d [41.71515ms]
  I0712 13:15:57.523376 20 service_latency.go:351] Created: latency-svc-tjkvt
  I0712 13:15:57.532544 20 service_latency.go:358] Got endpoints: latency-svc-tjkvt [53.443511ms]
  E0712 13:15:57.535719      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:15:57.541792 20 service_latency.go:351] Created: latency-svc-rxh7k
  I0712 13:15:57.542368 20 service_latency.go:351] Created: latency-svc-kvns7
  I0712 13:15:57.546061 20 service_latency.go:358] Got endpoints: latency-svc-rxh7k [66.898551ms]
  I0712 13:15:57.554938 20 service_latency.go:351] Created: latency-svc-pv2sc
  I0712 13:15:57.554883 20 service_latency.go:358] Got endpoints: latency-svc-kvns7 [75.658969ms]
  I0712 13:15:57.563771 20 service_latency.go:358] Got endpoints: latency-svc-pv2sc [84.499595ms]
  I0712 13:15:57.569777 20 service_latency.go:351] Created: latency-svc-kndhm
  I0712 13:15:57.570305 20 service_latency.go:351] Created: latency-svc-zbmj5
  I0712 13:15:57.575443 20 service_latency.go:358] Got endpoints: latency-svc-kndhm [96.136284ms]
  I0712 13:15:57.581287 20 service_latency.go:358] Got endpoints: latency-svc-zbmj5 [101.95629ms]
  I0712 13:15:57.583276 20 service_latency.go:351] Created: latency-svc-58dwx
  I0712 13:15:57.591562 20 service_latency.go:358] Got endpoints: latency-svc-58dwx [112.190037ms]
  I0712 13:15:57.593489 20 service_latency.go:351] Created: latency-svc-v5ccq
  I0712 13:15:57.599805 20 service_latency.go:358] Got endpoints: latency-svc-v5ccq [120.397792ms]
  I0712 13:15:57.601962 20 service_latency.go:351] Created: latency-svc-2l6d2
  I0712 13:15:57.605955 20 service_latency.go:351] Created: latency-svc-lx2w2
  I0712 13:15:57.610627 20 service_latency.go:358] Got endpoints: latency-svc-2l6d2 [131.18432ms]
  I0712 13:15:57.616662 20 service_latency.go:358] Got endpoints: latency-svc-lx2w2 [137.147092ms]
  I0712 13:15:57.621368 20 service_latency.go:351] Created: latency-svc-ggg5w
  I0712 13:15:57.629283 20 service_latency.go:358] Got endpoints: latency-svc-ggg5w [150.27443ms]
  I0712 13:15:57.632064 20 service_latency.go:351] Created: latency-svc-pr4s9
  I0712 13:15:57.642261 20 service_latency.go:351] Created: latency-svc-4rtdz
  I0712 13:15:57.645844 20 service_latency.go:358] Got endpoints: latency-svc-pr4s9 [166.310808ms]
  I0712 13:15:57.653350 20 service_latency.go:358] Got endpoints: latency-svc-4rtdz [152.321028ms]
  I0712 13:15:57.653380 20 service_latency.go:351] Created: latency-svc-f688j
  I0712 13:15:57.656795 20 service_latency.go:351] Created: latency-svc-zcbtg
  I0712 13:15:57.663834 20 service_latency.go:358] Got endpoints: latency-svc-f688j [149.658075ms]
  I0712 13:15:57.665764 20 service_latency.go:358] Got endpoints: latency-svc-zcbtg [144.953039ms]
  I0712 13:15:57.666276 20 service_latency.go:351] Created: latency-svc-4xf2m
  I0712 13:15:57.675153 20 service_latency.go:358] Got endpoints: latency-svc-4xf2m [142.447242ms]
  I0712 13:15:57.677153 20 service_latency.go:351] Created: latency-svc-gbx5n
  I0712 13:15:57.680953 20 service_latency.go:351] Created: latency-svc-6kncd
  I0712 13:15:57.685384 20 service_latency.go:358] Got endpoints: latency-svc-gbx5n [139.293666ms]
  I0712 13:15:57.690974 20 service_latency.go:358] Got endpoints: latency-svc-6kncd [135.979889ms]
  I0712 13:15:57.695067 20 service_latency.go:351] Created: latency-svc-wzqp7
  I0712 13:15:57.706689 20 service_latency.go:358] Got endpoints: latency-svc-wzqp7 [142.891903ms]
  I0712 13:15:57.708040 20 service_latency.go:351] Created: latency-svc-xx9wp
  I0712 13:15:57.712020 20 service_latency.go:358] Got endpoints: latency-svc-xx9wp [136.548942ms]
  I0712 13:15:57.713571 20 service_latency.go:351] Created: latency-svc-9vfb9
  I0712 13:15:57.725862 20 service_latency.go:358] Got endpoints: latency-svc-9vfb9 [144.548724ms]
  I0712 13:15:57.726148 20 service_latency.go:351] Created: latency-svc-2n5zp
  I0712 13:15:57.737482 20 service_latency.go:358] Got endpoints: latency-svc-2n5zp [145.888723ms]
  I0712 13:15:57.737691 20 service_latency.go:351] Created: latency-svc-6tszc
  I0712 13:15:57.741683 20 service_latency.go:351] Created: latency-svc-ptppx
  I0712 13:15:57.745880 20 service_latency.go:358] Got endpoints: latency-svc-6tszc [146.035924ms]
  I0712 13:15:57.752034 20 service_latency.go:351] Created: latency-svc-vxl7z
  I0712 13:15:57.752751 20 service_latency.go:358] Got endpoints: latency-svc-ptppx [142.097206ms]
  I0712 13:15:57.764366 20 service_latency.go:358] Got endpoints: latency-svc-vxl7z [147.673504ms]
  I0712 13:15:57.764383 20 service_latency.go:351] Created: latency-svc-l826l
  I0712 13:15:57.766928 20 service_latency.go:351] Created: latency-svc-kv2lt
  I0712 13:15:57.770304 20 service_latency.go:358] Got endpoints: latency-svc-l826l [140.965411ms]
  I0712 13:15:57.773871 20 service_latency.go:358] Got endpoints: latency-svc-kv2lt [127.998384ms]
  I0712 13:15:57.780133 20 service_latency.go:351] Created: latency-svc-gkv7b
  I0712 13:15:57.786364 20 service_latency.go:358] Got endpoints: latency-svc-gkv7b [132.985121ms]
  I0712 13:15:57.788073 20 service_latency.go:351] Created: latency-svc-bwlmn
  I0712 13:15:57.794834 20 service_latency.go:351] Created: latency-svc-w8stg
  I0712 13:15:57.795188 20 service_latency.go:358] Got endpoints: latency-svc-bwlmn [131.303268ms]
  I0712 13:15:57.801996 20 service_latency.go:358] Got endpoints: latency-svc-w8stg [136.200133ms]
  I0712 13:15:57.807132 20 service_latency.go:351] Created: latency-svc-mjjgd
  I0712 13:15:57.816906 20 service_latency.go:358] Got endpoints: latency-svc-mjjgd [141.709346ms]
  I0712 13:15:57.819189 20 service_latency.go:351] Created: latency-svc-klchl
  I0712 13:15:57.824680 20 service_latency.go:351] Created: latency-svc-xl7z8
  I0712 13:15:57.825412 20 service_latency.go:358] Got endpoints: latency-svc-klchl [139.998732ms]
  I0712 13:15:57.833522 20 service_latency.go:358] Got endpoints: latency-svc-xl7z8 [142.508649ms]
  I0712 13:15:57.835747 20 service_latency.go:351] Created: latency-svc-rfqt2
  I0712 13:15:57.841808 20 service_latency.go:351] Created: latency-svc-tl6g7
  I0712 13:15:57.847824 20 service_latency.go:351] Created: latency-svc-9hdgd
  I0712 13:15:57.856613 20 service_latency.go:351] Created: latency-svc-xlkw2
  I0712 13:15:57.863628 20 service_latency.go:351] Created: latency-svc-bpkrs
  I0712 13:15:57.867004 20 service_latency.go:351] Created: latency-svc-8m475
  I0712 13:15:57.876871 20 service_latency.go:351] Created: latency-svc-lf4cf
  I0712 13:15:57.880183 20 service_latency.go:358] Got endpoints: latency-svc-rfqt2 [173.467535ms]
  I0712 13:15:57.886625 20 service_latency.go:351] Created: latency-svc-46hxk
  I0712 13:15:57.890125 20 service_latency.go:351] Created: latency-svc-n6zsv
  I0712 13:15:57.901128 20 service_latency.go:351] Created: latency-svc-rpkcj
  I0712 13:15:57.905371 20 service_latency.go:351] Created: latency-svc-c8srn
  I0712 13:15:57.911378 20 service_latency.go:351] Created: latency-svc-pgrpq
  I0712 13:15:57.919671 20 service_latency.go:351] Created: latency-svc-p4brw
  I0712 13:15:57.928953 20 service_latency.go:358] Got endpoints: latency-svc-tl6g7 [216.848276ms]
  I0712 13:15:57.929054 20 service_latency.go:351] Created: latency-svc-htskh
  I0712 13:15:57.931228 20 service_latency.go:351] Created: latency-svc-mhmfh
  I0712 13:15:57.939450 20 service_latency.go:351] Created: latency-svc-b45lx
  I0712 13:15:57.944342 20 service_latency.go:351] Created: latency-svc-5bcf4
  I0712 13:15:57.978634 20 service_latency.go:358] Got endpoints: latency-svc-9hdgd [252.743949ms]
  I0712 13:15:57.990536 20 service_latency.go:351] Created: latency-svc-f4m89
  I0712 13:15:58.028659 20 service_latency.go:358] Got endpoints: latency-svc-xlkw2 [291.145276ms]
  I0712 13:15:58.042779 20 service_latency.go:351] Created: latency-svc-44tsx
  I0712 13:15:58.076775 20 service_latency.go:358] Got endpoints: latency-svc-bpkrs [330.84014ms]
  I0712 13:15:58.088962 20 service_latency.go:351] Created: latency-svc-447vp
  I0712 13:15:58.127821 20 service_latency.go:358] Got endpoints: latency-svc-8m475 [375.044606ms]
  I0712 13:15:58.142554 20 service_latency.go:351] Created: latency-svc-44cj6
  I0712 13:15:58.178187 20 service_latency.go:358] Got endpoints: latency-svc-lf4cf [413.792607ms]
  I0712 13:15:58.194062 20 service_latency.go:351] Created: latency-svc-jt7xm
  I0712 13:15:58.228112 20 service_latency.go:358] Got endpoints: latency-svc-46hxk [457.772442ms]
  I0712 13:15:58.241793 20 service_latency.go:351] Created: latency-svc-8n9jw
  I0712 13:15:58.277604 20 service_latency.go:358] Got endpoints: latency-svc-n6zsv [503.704287ms]
  I0712 13:15:58.291628 20 service_latency.go:351] Created: latency-svc-zw2nx
  I0712 13:15:58.328382 20 service_latency.go:358] Got endpoints: latency-svc-rpkcj [541.978395ms]
  I0712 13:15:58.343018 20 service_latency.go:351] Created: latency-svc-ndnpp
  I0712 13:15:58.379602 20 service_latency.go:358] Got endpoints: latency-svc-c8srn [584.364243ms]
  I0712 13:15:58.394225 20 service_latency.go:351] Created: latency-svc-qb2tm
  I0712 13:15:58.428387 20 service_latency.go:358] Got endpoints: latency-svc-pgrpq [626.309034ms]
  I0712 13:15:58.442125 20 service_latency.go:351] Created: latency-svc-wtnw8
  I0712 13:15:58.478031 20 service_latency.go:358] Got endpoints: latency-svc-p4brw [661.090667ms]
  I0712 13:15:58.493313 20 service_latency.go:351] Created: latency-svc-dzpkr
  I0712 13:15:58.524665 20 service_latency.go:358] Got endpoints: latency-svc-htskh [699.210171ms]
  E0712 13:15:58.536032      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:15:58.538811 20 service_latency.go:351] Created: latency-svc-krg8c
  I0712 13:15:58.576947 20 service_latency.go:358] Got endpoints: latency-svc-mhmfh [743.396414ms]
  I0712 13:15:58.591807 20 service_latency.go:351] Created: latency-svc-9fdkg
  I0712 13:15:58.627413 20 service_latency.go:358] Got endpoints: latency-svc-b45lx [747.187943ms]
  I0712 13:15:58.642080 20 service_latency.go:351] Created: latency-svc-92bfk
  I0712 13:15:58.675867 20 service_latency.go:358] Got endpoints: latency-svc-5bcf4 [746.873828ms]
  I0712 13:15:58.691770 20 service_latency.go:351] Created: latency-svc-2r9q9
  I0712 13:15:58.727444 20 service_latency.go:358] Got endpoints: latency-svc-f4m89 [748.771025ms]
  I0712 13:15:58.741394 20 service_latency.go:351] Created: latency-svc-2sm47
  I0712 13:15:58.778266 20 service_latency.go:358] Got endpoints: latency-svc-44tsx [749.580488ms]
  I0712 13:15:58.791933 20 service_latency.go:351] Created: latency-svc-mq6t7
  I0712 13:15:58.827379 20 service_latency.go:358] Got endpoints: latency-svc-447vp [750.571224ms]
  I0712 13:15:58.840688 20 service_latency.go:351] Created: latency-svc-7gwnb
  I0712 13:15:58.878409 20 service_latency.go:358] Got endpoints: latency-svc-44cj6 [750.558703ms]
  I0712 13:15:58.893043 20 service_latency.go:351] Created: latency-svc-kkpww
  I0712 13:15:58.928467 20 service_latency.go:358] Got endpoints: latency-svc-jt7xm [750.193482ms]
  I0712 13:15:58.944388 20 service_latency.go:351] Created: latency-svc-8k5l7
  I0712 13:15:58.977404 20 service_latency.go:358] Got endpoints: latency-svc-8n9jw [749.26255ms]
  I0712 13:15:58.989744 20 service_latency.go:351] Created: latency-svc-7x7ks
  I0712 13:15:59.028864 20 service_latency.go:358] Got endpoints: latency-svc-zw2nx [751.208858ms]
  I0712 13:15:59.041399 20 service_latency.go:351] Created: latency-svc-l2xhs
  I0712 13:15:59.076413 20 service_latency.go:358] Got endpoints: latency-svc-ndnpp [748.000187ms]
  I0712 13:15:59.090986 20 service_latency.go:351] Created: latency-svc-j58p7
  I0712 13:15:59.128137 20 service_latency.go:358] Got endpoints: latency-svc-qb2tm [748.504902ms]
  I0712 13:15:59.143321 20 service_latency.go:351] Created: latency-svc-r8gbd
  I0712 13:15:59.177508 20 service_latency.go:358] Got endpoints: latency-svc-wtnw8 [749.053466ms]
  I0712 13:15:59.192349 20 service_latency.go:351] Created: latency-svc-5dzg6
  I0712 13:15:59.228713 20 service_latency.go:358] Got endpoints: latency-svc-dzpkr [750.651511ms]
  I0712 13:15:59.242263 20 service_latency.go:351] Created: latency-svc-ztjsr
  I0712 13:15:59.278028 20 service_latency.go:358] Got endpoints: latency-svc-krg8c [753.332705ms]
  I0712 13:15:59.292488 20 service_latency.go:351] Created: latency-svc-mxtwq
  I0712 13:15:59.330235 20 service_latency.go:358] Got endpoints: latency-svc-9fdkg [753.230314ms]
  I0712 13:15:59.343606 20 service_latency.go:351] Created: latency-svc-dbgzf
  I0712 13:15:59.376444 20 service_latency.go:358] Got endpoints: latency-svc-92bfk [749.006669ms]
  I0712 13:15:59.390334 20 service_latency.go:351] Created: latency-svc-6rh58
  I0712 13:15:59.428362 20 service_latency.go:358] Got endpoints: latency-svc-2r9q9 [752.46023ms]
  I0712 13:15:59.443461 20 service_latency.go:351] Created: latency-svc-8tfmz
  I0712 13:15:59.476015 20 service_latency.go:358] Got endpoints: latency-svc-2sm47 [748.252312ms]
  I0712 13:15:59.487682 20 service_latency.go:351] Created: latency-svc-45kp2
  I0712 13:15:59.527524 20 service_latency.go:358] Got endpoints: latency-svc-mq6t7 [749.227477ms]
  E0712 13:15:59.536830      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:15:59.541290 20 service_latency.go:351] Created: latency-svc-sjrbg
  I0712 13:15:59.580456 20 service_latency.go:358] Got endpoints: latency-svc-7gwnb [753.044353ms]
  I0712 13:15:59.593940 20 service_latency.go:351] Created: latency-svc-nw5kd
  I0712 13:15:59.627907 20 service_latency.go:358] Got endpoints: latency-svc-kkpww [749.462873ms]
  I0712 13:15:59.639223 20 service_latency.go:351] Created: latency-svc-bkmkx
  I0712 13:15:59.677722 20 service_latency.go:358] Got endpoints: latency-svc-8k5l7 [749.223719ms]
  I0712 13:15:59.692617 20 service_latency.go:351] Created: latency-svc-95txv
  I0712 13:15:59.727305 20 service_latency.go:358] Got endpoints: latency-svc-7x7ks [749.861623ms]
  I0712 13:15:59.744170 20 service_latency.go:351] Created: latency-svc-xgm9c
  I0712 13:15:59.778383 20 service_latency.go:358] Got endpoints: latency-svc-l2xhs [749.491834ms]
  I0712 13:15:59.791164 20 service_latency.go:351] Created: latency-svc-xps72
  I0712 13:15:59.827351 20 service_latency.go:358] Got endpoints: latency-svc-j58p7 [750.902606ms]
  I0712 13:15:59.842595 20 service_latency.go:351] Created: latency-svc-v8zrx
  I0712 13:15:59.877884 20 service_latency.go:358] Got endpoints: latency-svc-r8gbd [749.712717ms]
  I0712 13:15:59.891069 20 service_latency.go:351] Created: latency-svc-gx68b
  I0712 13:15:59.928002 20 service_latency.go:358] Got endpoints: latency-svc-5dzg6 [750.398835ms]
  I0712 13:15:59.941141 20 service_latency.go:351] Created: latency-svc-wkz75
  I0712 13:15:59.978490 20 service_latency.go:358] Got endpoints: latency-svc-ztjsr [749.732641ms]
  I0712 13:15:59.991341 20 service_latency.go:351] Created: latency-svc-87gx4
  I0712 13:16:00.028445 20 service_latency.go:358] Got endpoints: latency-svc-mxtwq [750.373771ms]
  I0712 13:16:00.041045 20 service_latency.go:351] Created: latency-svc-h9jlk
  I0712 13:16:00.077619 20 service_latency.go:358] Got endpoints: latency-svc-dbgzf [747.294474ms]
  I0712 13:16:00.092082 20 service_latency.go:351] Created: latency-svc-x4r7h
  I0712 13:16:00.127721 20 service_latency.go:358] Got endpoints: latency-svc-6rh58 [751.24523ms]
  I0712 13:16:00.143237 20 service_latency.go:351] Created: latency-svc-6pp7b
  I0712 13:16:00.177299 20 service_latency.go:358] Got endpoints: latency-svc-8tfmz [748.904496ms]
  I0712 13:16:00.192477 20 service_latency.go:351] Created: latency-svc-x6lcf
  I0712 13:16:00.227264 20 service_latency.go:358] Got endpoints: latency-svc-45kp2 [751.214395ms]
  I0712 13:16:00.241083 20 service_latency.go:351] Created: latency-svc-fp8cl
  I0712 13:16:00.277513 20 service_latency.go:358] Got endpoints: latency-svc-sjrbg [749.959073ms]
  I0712 13:16:00.294829 20 service_latency.go:351] Created: latency-svc-8jcqq
  I0712 13:16:00.328075 20 service_latency.go:358] Got endpoints: latency-svc-nw5kd [747.563347ms]
  I0712 13:16:00.343657 20 service_latency.go:351] Created: latency-svc-nkxd8
  I0712 13:16:00.378222 20 service_latency.go:358] Got endpoints: latency-svc-bkmkx [750.260148ms]
  I0712 13:16:00.392945 20 service_latency.go:351] Created: latency-svc-lkbsb
  I0712 13:16:00.429071 20 service_latency.go:358] Got endpoints: latency-svc-95txv [751.320033ms]
  I0712 13:16:00.444939 20 service_latency.go:351] Created: latency-svc-l6qrc
  I0712 13:16:00.477434 20 service_latency.go:358] Got endpoints: latency-svc-xgm9c [750.09459ms]
  I0712 13:16:00.491741 20 service_latency.go:351] Created: latency-svc-q5hgl
  I0712 13:16:00.527039 20 service_latency.go:358] Got endpoints: latency-svc-xps72 [748.626425ms]
  E0712 13:16:00.537275      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:16:00.542950 20 service_latency.go:351] Created: latency-svc-dt8h6
  I0712 13:16:00.578964 20 service_latency.go:358] Got endpoints: latency-svc-v8zrx [751.583074ms]
  I0712 13:16:00.592698 20 service_latency.go:351] Created: latency-svc-ql2sq
  I0712 13:16:00.627328 20 service_latency.go:358] Got endpoints: latency-svc-gx68b [749.411718ms]
  I0712 13:16:00.643110 20 service_latency.go:351] Created: latency-svc-9p4mq
  I0712 13:16:00.678376 20 service_latency.go:358] Got endpoints: latency-svc-wkz75 [750.344189ms]
  I0712 13:16:00.692381 20 service_latency.go:351] Created: latency-svc-llc6v
  I0712 13:16:00.727127 20 service_latency.go:358] Got endpoints: latency-svc-87gx4 [748.567965ms]
  I0712 13:16:00.740282 20 service_latency.go:351] Created: latency-svc-pbmlr
  I0712 13:16:00.778589 20 service_latency.go:358] Got endpoints: latency-svc-h9jlk [750.103935ms]
  I0712 13:16:00.793807 20 service_latency.go:351] Created: latency-svc-qt2xw
  I0712 13:16:00.828993 20 service_latency.go:358] Got endpoints: latency-svc-x4r7h [751.314063ms]
  I0712 13:16:00.842090 20 service_latency.go:351] Created: latency-svc-jgbcs
  I0712 13:16:00.880334 20 service_latency.go:358] Got endpoints: latency-svc-6pp7b [752.560106ms]
  I0712 13:16:00.896036 20 service_latency.go:351] Created: latency-svc-zt4sl
  I0712 13:16:00.927490 20 service_latency.go:358] Got endpoints: latency-svc-x6lcf [750.163817ms]
  I0712 13:16:00.942314 20 service_latency.go:351] Created: latency-svc-xc98r
  I0712 13:16:00.978577 20 service_latency.go:358] Got endpoints: latency-svc-fp8cl [751.280349ms]
  I0712 13:16:00.990738 20 service_latency.go:351] Created: latency-svc-vn6tx
  I0712 13:16:01.028052 20 service_latency.go:358] Got endpoints: latency-svc-8jcqq [750.50454ms]
  I0712 13:16:01.043651 20 service_latency.go:351] Created: latency-svc-r7hsr
  I0712 13:16:01.077527 20 service_latency.go:358] Got endpoints: latency-svc-nkxd8 [749.379099ms]
  I0712 13:16:01.095736 20 service_latency.go:351] Created: latency-svc-8bx95
  I0712 13:16:01.128534 20 service_latency.go:358] Got endpoints: latency-svc-lkbsb [750.283231ms]
  I0712 13:16:01.141375 20 service_latency.go:351] Created: latency-svc-sn524
  I0712 13:16:01.175086 20 service_latency.go:358] Got endpoints: latency-svc-l6qrc [745.757086ms]
  I0712 13:16:01.192275 20 service_latency.go:351] Created: latency-svc-qr98f
  I0712 13:16:01.228140 20 service_latency.go:358] Got endpoints: latency-svc-q5hgl [750.620699ms]
  I0712 13:16:01.242883 20 service_latency.go:351] Created: latency-svc-fgnwn
  I0712 13:16:01.277652 20 service_latency.go:358] Got endpoints: latency-svc-dt8h6 [750.5543ms]
  I0712 13:16:01.292987 20 service_latency.go:351] Created: latency-svc-qzkk5
  I0712 13:16:01.325186 20 service_latency.go:358] Got endpoints: latency-svc-ql2sq [746.190124ms]
  I0712 13:16:01.340640 20 service_latency.go:351] Created: latency-svc-scmpx
  I0712 13:16:01.377873 20 service_latency.go:358] Got endpoints: latency-svc-9p4mq [750.509337ms]
  I0712 13:16:01.397252 20 service_latency.go:351] Created: latency-svc-826xf
  I0712 13:16:01.428012 20 service_latency.go:358] Got endpoints: latency-svc-llc6v [749.603396ms]
  I0712 13:16:01.448073 20 service_latency.go:351] Created: latency-svc-nw7mq
  I0712 13:16:01.476976 20 service_latency.go:358] Got endpoints: latency-svc-pbmlr [749.817275ms]
  I0712 13:16:01.491581 20 service_latency.go:351] Created: latency-svc-484ww
  I0712 13:16:01.528271 20 service_latency.go:358] Got endpoints: latency-svc-qt2xw [749.530748ms]
  E0712 13:16:01.537696      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:16:01.545124 20 service_latency.go:351] Created: latency-svc-lntg2
  I0712 13:16:01.578416 20 service_latency.go:358] Got endpoints: latency-svc-jgbcs [749.351613ms]
  I0712 13:16:01.591337 20 service_latency.go:351] Created: latency-svc-grj4g
  I0712 13:16:01.626982 20 service_latency.go:358] Got endpoints: latency-svc-zt4sl [746.611026ms]
  I0712 13:16:01.640777 20 service_latency.go:351] Created: latency-svc-6pn9c
  I0712 13:16:01.678876 20 service_latency.go:358] Got endpoints: latency-svc-xc98r [751.351645ms]
  I0712 13:16:01.694689 20 service_latency.go:351] Created: latency-svc-vjwfw
  I0712 13:16:01.727947 20 service_latency.go:358] Got endpoints: latency-svc-vn6tx [749.317079ms]
  I0712 13:16:01.742074 20 service_latency.go:351] Created: latency-svc-t5cjq
  I0712 13:16:01.776991 20 service_latency.go:358] Got endpoints: latency-svc-r7hsr [748.740758ms]
  I0712 13:16:01.791422 20 service_latency.go:351] Created: latency-svc-wh9h5
  I0712 13:16:01.828069 20 service_latency.go:358] Got endpoints: latency-svc-8bx95 [750.322056ms]
  I0712 13:16:01.842954 20 service_latency.go:351] Created: latency-svc-r2l9g
  I0712 13:16:01.877363 20 service_latency.go:358] Got endpoints: latency-svc-sn524 [748.769179ms]
  I0712 13:16:01.889304 20 service_latency.go:351] Created: latency-svc-hqshz
  I0712 13:16:01.927729 20 service_latency.go:358] Got endpoints: latency-svc-qr98f [752.582753ms]
  I0712 13:16:01.942382 20 service_latency.go:351] Created: latency-svc-5ddst
  I0712 13:16:01.978133 20 service_latency.go:358] Got endpoints: latency-svc-fgnwn [749.943696ms]
  I0712 13:16:01.992078 20 service_latency.go:351] Created: latency-svc-nkzvl
  I0712 13:16:02.028252 20 service_latency.go:358] Got endpoints: latency-svc-qzkk5 [750.555163ms]
  I0712 13:16:02.040505 20 service_latency.go:351] Created: latency-svc-sslvc
  I0712 13:16:02.079372 20 service_latency.go:358] Got endpoints: latency-svc-scmpx [754.013179ms]
  I0712 13:16:02.094633 20 service_latency.go:351] Created: latency-svc-4gx7s
  I0712 13:16:02.127284 20 service_latency.go:358] Got endpoints: latency-svc-826xf [749.370143ms]
  I0712 13:16:02.143569 20 service_latency.go:351] Created: latency-svc-nvzvv
  I0712 13:16:02.178562 20 service_latency.go:358] Got endpoints: latency-svc-nw7mq [750.514095ms]
  I0712 13:16:02.193279 20 service_latency.go:351] Created: latency-svc-9c2wb
  I0712 13:16:02.226897 20 service_latency.go:358] Got endpoints: latency-svc-484ww [749.884754ms]
  I0712 13:16:02.243217 20 service_latency.go:351] Created: latency-svc-gdjjj
  I0712 13:16:02.280867 20 service_latency.go:358] Got endpoints: latency-svc-lntg2 [752.551707ms]
  I0712 13:16:02.298824 20 service_latency.go:351] Created: latency-svc-cxgts
  I0712 13:16:02.327341 20 service_latency.go:358] Got endpoints: latency-svc-grj4g [748.88479ms]
  I0712 13:16:02.341286 20 service_latency.go:351] Created: latency-svc-bqc76
  I0712 13:16:02.377676 20 service_latency.go:358] Got endpoints: latency-svc-6pn9c [750.664843ms]
  I0712 13:16:02.391917 20 service_latency.go:351] Created: latency-svc-6fpz5
  I0712 13:16:02.427968 20 service_latency.go:358] Got endpoints: latency-svc-vjwfw [749.034166ms]
  I0712 13:16:02.444403 20 service_latency.go:351] Created: latency-svc-sqgg2
  I0712 13:16:02.480557 20 service_latency.go:358] Got endpoints: latency-svc-t5cjq [752.571874ms]
  I0712 13:16:02.494997 20 service_latency.go:351] Created: latency-svc-xw4gc
  I0712 13:16:02.530269 20 service_latency.go:358] Got endpoints: latency-svc-wh9h5 [753.241819ms]
  E0712 13:16:02.538444      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:16:02.545923 20 service_latency.go:351] Created: latency-svc-87lc4
  I0712 13:16:02.579956 20 service_latency.go:358] Got endpoints: latency-svc-r2l9g [751.808015ms]
  I0712 13:16:02.596672 20 service_latency.go:351] Created: latency-svc-l689c
  I0712 13:16:02.626263 20 service_latency.go:358] Got endpoints: latency-svc-hqshz [748.837028ms]
  I0712 13:16:02.640434 20 service_latency.go:351] Created: latency-svc-p59n7
  I0712 13:16:02.676947 20 service_latency.go:358] Got endpoints: latency-svc-5ddst [749.067055ms]
  I0712 13:16:02.693863 20 service_latency.go:351] Created: latency-svc-9bmr4
  I0712 13:16:02.726274 20 service_latency.go:358] Got endpoints: latency-svc-nkzvl [748.095955ms]
  I0712 13:16:02.745190 20 service_latency.go:351] Created: latency-svc-jnnrm
  I0712 13:16:02.777926 20 service_latency.go:358] Got endpoints: latency-svc-sslvc [749.625699ms]
  I0712 13:16:02.791355 20 service_latency.go:351] Created: latency-svc-kn7zt
  I0712 13:16:02.826019 20 service_latency.go:358] Got endpoints: latency-svc-4gx7s [746.527831ms]
  I0712 13:16:02.839934 20 service_latency.go:351] Created: latency-svc-6gdjc
  I0712 13:16:02.877232 20 service_latency.go:358] Got endpoints: latency-svc-nvzvv [749.904034ms]
  I0712 13:16:02.892025 20 service_latency.go:351] Created: latency-svc-gwgbh
  I0712 13:16:02.927972 20 service_latency.go:358] Got endpoints: latency-svc-9c2wb [749.377224ms]
  I0712 13:16:02.941560 20 service_latency.go:351] Created: latency-svc-jt9jj
  I0712 13:16:02.978917 20 service_latency.go:358] Got endpoints: latency-svc-gdjjj [751.989622ms]
  I0712 13:16:02.995312 20 service_latency.go:351] Created: latency-svc-kcwqg
  I0712 13:16:03.027383 20 service_latency.go:358] Got endpoints: latency-svc-cxgts [746.481435ms]
  I0712 13:16:03.042876 20 service_latency.go:351] Created: latency-svc-7zl6z
  I0712 13:16:03.078188 20 service_latency.go:358] Got endpoints: latency-svc-bqc76 [750.745972ms]
  I0712 13:16:03.089584 20 service_latency.go:351] Created: latency-svc-wf6pn
  I0712 13:16:03.127631 20 service_latency.go:358] Got endpoints: latency-svc-6fpz5 [749.921233ms]
  I0712 13:16:03.142454 20 service_latency.go:351] Created: latency-svc-jh2nw
  I0712 13:16:03.177758 20 service_latency.go:358] Got endpoints: latency-svc-sqgg2 [749.739853ms]
  I0712 13:16:03.195027 20 service_latency.go:351] Created: latency-svc-c4dw7
  I0712 13:16:03.227923 20 service_latency.go:358] Got endpoints: latency-svc-xw4gc [747.319253ms]
  I0712 13:16:03.240575 20 service_latency.go:351] Created: latency-svc-lmzb2
  I0712 13:16:03.276420 20 service_latency.go:358] Got endpoints: latency-svc-87lc4 [746.084975ms]
  I0712 13:16:03.289986 20 service_latency.go:351] Created: latency-svc-lpm5p
  I0712 13:16:03.327122 20 service_latency.go:358] Got endpoints: latency-svc-l689c [747.126808ms]
  I0712 13:16:03.342493 20 service_latency.go:351] Created: latency-svc-w6s6j
  I0712 13:16:03.376957 20 service_latency.go:358] Got endpoints: latency-svc-p59n7 [750.662122ms]
  I0712 13:16:03.389754 20 service_latency.go:351] Created: latency-svc-pjbbr
  I0712 13:16:03.427582 20 service_latency.go:358] Got endpoints: latency-svc-9bmr4 [750.54374ms]
  I0712 13:16:03.442807 20 service_latency.go:351] Created: latency-svc-zclsv
  I0712 13:16:03.478837 20 service_latency.go:358] Got endpoints: latency-svc-jnnrm [752.535166ms]
  I0712 13:16:03.491331 20 service_latency.go:351] Created: latency-svc-5rgvv
  I0712 13:16:03.528352 20 service_latency.go:358] Got endpoints: latency-svc-kn7zt [750.32841ms]
  E0712 13:16:03.538728      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:16:03.543220 20 service_latency.go:351] Created: latency-svc-k42m7
  I0712 13:16:03.578046 20 service_latency.go:358] Got endpoints: latency-svc-6gdjc [751.997108ms]
  I0712 13:16:03.590793 20 service_latency.go:351] Created: latency-svc-bnrhq
  I0712 13:16:03.628347 20 service_latency.go:358] Got endpoints: latency-svc-gwgbh [751.072044ms]
  I0712 13:16:03.643300 20 service_latency.go:351] Created: latency-svc-2szcl
  I0712 13:16:03.677696 20 service_latency.go:358] Got endpoints: latency-svc-jt9jj [749.31795ms]
  I0712 13:16:03.689468 20 service_latency.go:351] Created: latency-svc-nvhj9
  I0712 13:16:03.727677 20 service_latency.go:358] Got endpoints: latency-svc-kcwqg [748.724803ms]
  I0712 13:16:03.742282 20 service_latency.go:351] Created: latency-svc-xglpb
  I0712 13:16:03.775961 20 service_latency.go:358] Got endpoints: latency-svc-7zl6z [748.539438ms]
  I0712 13:16:03.790514 20 service_latency.go:351] Created: latency-svc-p7lr2
  I0712 13:16:03.827259 20 service_latency.go:358] Got endpoints: latency-svc-wf6pn [749.020574ms]
  I0712 13:16:03.844412 20 service_latency.go:351] Created: latency-svc-sllcg
  I0712 13:16:03.875883 20 service_latency.go:358] Got endpoints: latency-svc-jh2nw [748.218206ms]
  I0712 13:16:03.891065 20 service_latency.go:351] Created: latency-svc-r4mb8
  I0712 13:16:03.926734 20 service_latency.go:358] Got endpoints: latency-svc-c4dw7 [748.939361ms]
  I0712 13:16:03.943121 20 service_latency.go:351] Created: latency-svc-g5hjc
  I0712 13:16:03.975632 20 service_latency.go:358] Got endpoints: latency-svc-lmzb2 [747.680272ms]
  I0712 13:16:03.990899 20 service_latency.go:351] Created: latency-svc-2lrjs
  I0712 13:16:04.026481 20 service_latency.go:358] Got endpoints: latency-svc-lpm5p [750.029946ms]
  I0712 13:16:04.043507 20 service_latency.go:351] Created: latency-svc-sp8bx
  I0712 13:16:04.075543 20 service_latency.go:358] Got endpoints: latency-svc-w6s6j [748.391199ms]
  I0712 13:16:04.092350 20 service_latency.go:351] Created: latency-svc-lx8jk
  I0712 13:16:04.126008 20 service_latency.go:358] Got endpoints: latency-svc-pjbbr [749.018091ms]
  I0712 13:16:04.142710 20 service_latency.go:351] Created: latency-svc-zjh49
  I0712 13:16:04.175704 20 service_latency.go:358] Got endpoints: latency-svc-zclsv [748.0845ms]
  I0712 13:16:04.190925 20 service_latency.go:351] Created: latency-svc-8jwpk
  I0712 13:16:04.226132 20 service_latency.go:358] Got endpoints: latency-svc-5rgvv [747.256243ms]
  I0712 13:16:04.243296 20 service_latency.go:351] Created: latency-svc-5cdbn
  I0712 13:16:04.276485 20 service_latency.go:358] Got endpoints: latency-svc-k42m7 [748.104625ms]
  I0712 13:16:04.290707 20 service_latency.go:351] Created: latency-svc-fvqwk
  I0712 13:16:04.326054 20 service_latency.go:358] Got endpoints: latency-svc-bnrhq [747.976733ms]
  I0712 13:16:04.341495 20 service_latency.go:351] Created: latency-svc-g2scd
  I0712 13:16:04.376017 20 service_latency.go:358] Got endpoints: latency-svc-2szcl [747.635602ms]
  I0712 13:16:04.391545 20 service_latency.go:351] Created: latency-svc-4rvd6
  I0712 13:16:04.425540 20 service_latency.go:358] Got endpoints: latency-svc-nvhj9 [747.813091ms]
  I0712 13:16:04.439934 20 service_latency.go:351] Created: latency-svc-6xz2c
  I0712 13:16:04.477078 20 service_latency.go:358] Got endpoints: latency-svc-xglpb [749.365237ms]
  I0712 13:16:04.493120 20 service_latency.go:351] Created: latency-svc-g8x6f
  I0712 13:16:04.527020 20 service_latency.go:358] Got endpoints: latency-svc-p7lr2 [751.027507ms]
  E0712 13:16:04.539406      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:16:04.543770 20 service_latency.go:351] Created: latency-svc-wtsxj
  I0712 13:16:04.576137 20 service_latency.go:358] Got endpoints: latency-svc-sllcg [748.846141ms]
  I0712 13:16:04.590078 20 service_latency.go:351] Created: latency-svc-gf7fc
  I0712 13:16:04.625305 20 service_latency.go:358] Got endpoints: latency-svc-r4mb8 [749.3932ms]
  I0712 13:16:04.642855 20 service_latency.go:351] Created: latency-svc-gqwcm
  I0712 13:16:04.676991 20 service_latency.go:358] Got endpoints: latency-svc-g5hjc [750.2235ms]
  I0712 13:16:04.692012 20 service_latency.go:351] Created: latency-svc-vvctw
  I0712 13:16:04.726347 20 service_latency.go:358] Got endpoints: latency-svc-2lrjs [750.67868ms]
  I0712 13:16:04.741010 20 service_latency.go:351] Created: latency-svc-5tmvf
  I0712 13:16:04.777608 20 service_latency.go:358] Got endpoints: latency-svc-sp8bx [751.092552ms]
  I0712 13:16:04.791783 20 service_latency.go:351] Created: latency-svc-mm9qm
  I0712 13:16:04.828391 20 service_latency.go:358] Got endpoints: latency-svc-lx8jk [752.612309ms]
  I0712 13:16:04.843072 20 service_latency.go:351] Created: latency-svc-wmdw6
  I0712 13:16:04.879304 20 service_latency.go:358] Got endpoints: latency-svc-zjh49 [753.262186ms]
  I0712 13:16:04.892547 20 service_latency.go:351] Created: latency-svc-wtlxc
  I0712 13:16:04.926941 20 service_latency.go:358] Got endpoints: latency-svc-8jwpk [751.208054ms]
  I0712 13:16:04.940226 20 service_latency.go:351] Created: latency-svc-6kxxs
  I0712 13:16:04.977830 20 service_latency.go:358] Got endpoints: latency-svc-5cdbn [751.667881ms]
  I0712 13:16:04.993062 20 service_latency.go:351] Created: latency-svc-tx466
  I0712 13:16:05.030190 20 service_latency.go:358] Got endpoints: latency-svc-fvqwk [753.517995ms]
  I0712 13:16:05.044014 20 service_latency.go:351] Created: latency-svc-mwz8t
  I0712 13:16:05.079645 20 service_latency.go:358] Got endpoints: latency-svc-g2scd [753.56053ms]
  I0712 13:16:05.096427 20 service_latency.go:351] Created: latency-svc-dfmfj
  I0712 13:16:05.127328 20 service_latency.go:358] Got endpoints: latency-svc-4rvd6 [751.267531ms]
  I0712 13:16:05.142541 20 service_latency.go:351] Created: latency-svc-nvthr
  I0712 13:16:05.176757 20 service_latency.go:358] Got endpoints: latency-svc-6xz2c [751.17994ms]
  I0712 13:16:05.191974 20 service_latency.go:351] Created: latency-svc-7hrgr
  I0712 13:16:05.227352 20 service_latency.go:358] Got endpoints: latency-svc-g8x6f [750.223428ms]
  I0712 13:16:05.243386 20 service_latency.go:351] Created: latency-svc-nw9f5
  I0712 13:16:05.277363 20 service_latency.go:358] Got endpoints: latency-svc-wtsxj [750.26436ms]
  I0712 13:16:05.292968 20 service_latency.go:351] Created: latency-svc-zjw8b
  I0712 13:16:05.327800 20 service_latency.go:358] Got endpoints: latency-svc-gf7fc [751.623403ms]
  I0712 13:16:05.377881 20 service_latency.go:358] Got endpoints: latency-svc-gqwcm [752.541025ms]
  I0712 13:16:05.428819 20 service_latency.go:358] Got endpoints: latency-svc-vvctw [751.798371ms]
  I0712 13:16:05.477085 20 service_latency.go:358] Got endpoints: latency-svc-5tmvf [750.707553ms]
  I0712 13:16:05.528989 20 service_latency.go:358] Got endpoints: latency-svc-mm9qm [751.224497ms]
  E0712 13:16:05.540217      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:16:05.580005 20 service_latency.go:358] Got endpoints: latency-svc-wmdw6 [751.581151ms]
  I0712 13:16:05.626521 20 service_latency.go:358] Got endpoints: latency-svc-wtlxc [747.18154ms]
  I0712 13:16:05.678484 20 service_latency.go:358] Got endpoints: latency-svc-6kxxs [751.446976ms]
  I0712 13:16:05.729665 20 service_latency.go:358] Got endpoints: latency-svc-tx466 [751.768685ms]
  I0712 13:16:05.778350 20 service_latency.go:358] Got endpoints: latency-svc-mwz8t [748.087077ms]
  I0712 13:16:05.828114 20 service_latency.go:358] Got endpoints: latency-svc-dfmfj [748.419451ms]
  I0712 13:16:05.877720 20 service_latency.go:358] Got endpoints: latency-svc-nvthr [750.219851ms]
  I0712 13:16:05.927596 20 service_latency.go:358] Got endpoints: latency-svc-7hrgr [750.811096ms]
  I0712 13:16:05.978015 20 service_latency.go:358] Got endpoints: latency-svc-nw9f5 [750.633005ms]
  I0712 13:16:06.030112 20 service_latency.go:358] Got endpoints: latency-svc-zjw8b [752.719211ms]
  I0712 13:16:06.030236 20 service_latency.go:114] Latencies: [22.450905ms 35.154823ms 41.71515ms 53.443511ms 66.898551ms 75.658969ms 84.499595ms 96.136284ms 101.95629ms 112.190037ms 120.397792ms 127.998384ms 131.18432ms 131.303268ms 132.985121ms 135.979889ms 136.200133ms 136.548942ms 137.147092ms 139.293666ms 139.998732ms 140.965411ms 141.709346ms 142.097206ms 142.447242ms 142.508649ms 142.891903ms 144.548724ms 144.953039ms 145.888723ms 146.035924ms 147.673504ms 149.658075ms 150.27443ms 152.321028ms 166.310808ms 173.467535ms 216.848276ms 252.743949ms 291.145276ms 330.84014ms 375.044606ms 413.792607ms 457.772442ms 503.704287ms 541.978395ms 584.364243ms 626.309034ms 661.090667ms 699.210171ms 743.396414ms 745.757086ms 746.084975ms 746.190124ms 746.481435ms 746.527831ms 746.611026ms 746.873828ms 747.126808ms 747.18154ms 747.187943ms 747.256243ms 747.294474ms 747.319253ms 747.563347ms 747.635602ms 747.680272ms 747.813091ms 747.976733ms 748.000187ms 748.0845ms 748.087077ms 748.095955ms 748.104625ms 748.218206ms 748.252312ms 748.391199ms 748.419451ms 748.504902ms 748.539438ms 748.567965ms 748.626425ms 748.724803ms 748.740758ms 748.769179ms 748.771025ms 748.837028ms 748.846141ms 748.88479ms 748.904496ms 748.939361ms 749.006669ms 749.018091ms 749.020574ms 749.034166ms 749.053466ms 749.067055ms 749.223719ms 749.227477ms 749.26255ms 749.317079ms 749.31795ms 749.351613ms 749.365237ms 749.370143ms 749.377224ms 749.379099ms 749.3932ms 749.411718ms 749.462873ms 749.491834ms 749.530748ms 749.580488ms 749.603396ms 749.625699ms 749.712717ms 749.732641ms 749.739853ms 749.817275ms 749.861623ms 749.884754ms 749.904034ms 749.921233ms 749.943696ms 749.959073ms 750.029946ms 750.09459ms 750.103935ms 750.163817ms 750.193482ms 750.219851ms 750.223428ms 750.2235ms 750.260148ms 750.26436ms 750.283231ms 750.322056ms 750.32841ms 750.344189ms 750.373771ms 750.398835ms 750.50454ms 750.509337ms 750.514095ms 750.54374ms 750.5543ms 750.555163ms 750.558703ms 750.571224ms 750.620699ms 750.633005ms 750.651511ms 750.662122ms 750.664843ms 750.67868ms 750.707553ms 750.745972ms 750.811096ms 750.902606ms 751.027507ms 751.072044ms 751.092552ms 751.17994ms 751.208054ms 751.208858ms 751.214395ms 751.224497ms 751.24523ms 751.267531ms 751.280349ms 751.314063ms 751.320033ms 751.351645ms 751.446976ms 751.581151ms 751.583074ms 751.623403ms 751.667881ms 751.768685ms 751.798371ms 751.808015ms 751.989622ms 751.997108ms 752.46023ms 752.535166ms 752.541025ms 752.551707ms 752.560106ms 752.571874ms 752.582753ms 752.612309ms 752.719211ms 753.044353ms 753.230314ms 753.241819ms 753.262186ms 753.332705ms 753.517995ms 753.56053ms 754.013179ms]
  I0712 13:16:06.030251 20 service_latency.go:118] 50 %ile: 749.317079ms
  I0712 13:16:06.030258 20 service_latency.go:119] 90 %ile: 751.808015ms
  I0712 13:16:06.030264 20 service_latency.go:120] 99 %ile: 753.56053ms
  I0712 13:16:06.030270 20 service_latency.go:121] Total sample count: 200
  I0712 13:16:06.030369 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-7440" for this suite. @ 07/12/25 13:16:06.034
• [10.717 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:219
  STEP: Creating a kubernetes client @ 07/12/25 13:16:06.043
  I0712 13:16:06.043297 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename emptydir @ 07/12/25 13:16:06.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:16:06.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:16:06.056
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 07/12/25 13:16:06.059
  E0712 13:16:06.540809      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:07.540939      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:08.541017      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:09.541722      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:16:10.082
  I0712 13:16:10.085780 20 output.go:207] Trying to get logs from node ip-172-31-3-36 pod pod-2d4197cf-92d6-4030-8b24-5713f7ac21dc container test-container: <nil>
  STEP: delete the pod @ 07/12/25 13:16:10.1
  I0712 13:16:10.116092 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3082" for this suite. @ 07/12/25 13:16:10.12
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 07/12/25 13:16:10.129
  I0712 13:16:10.129225 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename prestop @ 07/12/25 13:16:10.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:16:10.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:16:10.141
  STEP: Creating server pod server in namespace prestop-8348 @ 07/12/25 13:16:10.143
  STEP: Waiting for pods to come up. @ 07/12/25 13:16:10.151
  E0712 13:16:10.542331      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:11.542359      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-8348 @ 07/12/25 13:16:12.159
  E0712 13:16:12.543424      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:13.543375      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 07/12/25 13:16:14.174
  E0712 13:16:14.543485      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:15.543571      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:16.543697      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:17.543792      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:18.543952      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:16:19.191686 20 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 07/12/25 13:16:19.191
  I0712 13:16:19.204772 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-8348" for this suite. @ 07/12/25 13:16:19.209
• [9.088 seconds]
------------------------------
SSS
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 07/12/25 13:16:19.217
  I0712 13:16:19.217378 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename downward-api @ 07/12/25 13:16:19.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:16:19.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:16:19.23
  STEP: Creating a pod to test downward api env vars @ 07/12/25 13:16:19.233
  E0712 13:16:19.544007      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:20.544102      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:21.544235      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:22.544361      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:16:23.257
  I0712 13:16:23.261019 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod downward-api-c8f669d7-44c3-4d40-9c9a-86a66cc4ab72 container dapi-container: <nil>
  STEP: delete the pod @ 07/12/25 13:16:23.269
  I0712 13:16:23.284002 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2330" for this suite. @ 07/12/25 13:16:23.288
• [4.077 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 07/12/25 13:16:23.294
  I0712 13:16:23.294549 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename subpath @ 07/12/25 13:16:23.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:16:23.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:16:23.308
  STEP: Setting up data @ 07/12/25 13:16:23.311
  STEP: Creating pod pod-subpath-test-projected-mz8q @ 07/12/25 13:16:23.318
  STEP: Creating a pod to test atomic-volume-subpath @ 07/12/25 13:16:23.318
  E0712 13:16:23.544814      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:24.545742      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:25.546475      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:26.546593      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:27.546655      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:28.546882      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:29.547661      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:30.547750      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:31.548168      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:32.548364      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:33.549447      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:34.549711      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:35.549578      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:36.550411      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:37.551097      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:38.551398      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:39.552298      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:40.552487      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:41.553554      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:42.554438      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:43.555486      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:44.555613      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:45.555971      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:46.556082      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:16:47.388
  I0712 13:16:47.392888 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-subpath-test-projected-mz8q container test-container-subpath-projected-mz8q: <nil>
  STEP: delete the pod @ 07/12/25 13:16:47.4
  STEP: Deleting pod pod-subpath-test-projected-mz8q @ 07/12/25 13:16:47.417
  I0712 13:16:47.417655 20 delete.go:62] Deleting pod "pod-subpath-test-projected-mz8q" in namespace "subpath-6067"
  I0712 13:16:47.421490 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6067" for this suite. @ 07/12/25 13:16:47.426
• [24.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 07/12/25 13:16:47.436
  I0712 13:16:47.436017 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename daemonsets @ 07/12/25 13:16:47.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:16:47.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:16:47.45
  I0712 13:16:47.537551 20 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 07/12/25 13:16:47.542
  I0712 13:16:47.545913 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0712 13:16:47.545933 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 07/12/25 13:16:47.545
  E0712 13:16:47.557109      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:16:47.646698 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0712 13:16:47.646744 20 fixtures.go:131] Node ip-172-31-23-206 is running 0 daemon pod, expected 1
  E0712 13:16:48.557301      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:16:48.645269 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0712 13:16:48.645305 20 fixtures.go:131] Node ip-172-31-23-206 is running 0 daemon pod, expected 1
  E0712 13:16:49.557816      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:16:49.646344 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0712 13:16:49.646374 20 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 07/12/25 13:16:49.65
  I0712 13:16:49.664978 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0712 13:16:49.664997 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0712 13:16:50.558007      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:16:50.666602 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0712 13:16:50.666635 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 07/12/25 13:16:50.666
  I0712 13:16:50.676311 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0712 13:16:50.676330 20 fixtures.go:131] Node ip-172-31-23-206 is running 0 daemon pod, expected 1
  E0712 13:16:51.558116      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:16:51.676557 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0712 13:16:51.676599 20 fixtures.go:131] Node ip-172-31-23-206 is running 0 daemon pod, expected 1
  E0712 13:16:52.559050      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:16:52.677592 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0712 13:16:52.677630 20 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/12/25 13:16:52.684
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8108, will wait for the garbage collector to delete the pods @ 07/12/25 13:16:52.684
  I0712 13:16:52.744506 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.259626ms
  I0712 13:16:52.844622 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.087262ms
  E0712 13:16:53.559702      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:16:53.748711 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0712 13:16:53.748745 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0712 13:16:53.752727 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"36171"},"items":null}

  I0712 13:16:53.756951 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"36171"},"items":null}

  I0712 13:16:53.778617 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8108" for this suite. @ 07/12/25 13:16:53.862
• [6.434 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 07/12/25 13:16:53.87
  I0712 13:16:53.870562 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename subpath @ 07/12/25 13:16:53.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:16:53.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:16:53.885
  STEP: Setting up data @ 07/12/25 13:16:53.888
  STEP: Creating pod pod-subpath-test-downwardapi-q4tp @ 07/12/25 13:16:53.899
  STEP: Creating a pod to test atomic-volume-subpath @ 07/12/25 13:16:53.899
  E0712 13:16:54.560737      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:55.560817      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:56.561430      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:57.561510      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:58.562439      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:16:59.562961      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:00.563391      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:01.563507      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:02.564360      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:03.564545      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:04.565355      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:05.566427      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:06.566513      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:07.566610      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:08.566748      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:09.567726      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:10.567882      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:11.568095      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:12.568954      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:13.570004      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:14.570431      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:15.570506      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:16.571068      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:17.571160      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:17:17.976
  I0712 13:17:17.979769 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-subpath-test-downwardapi-q4tp container test-container-subpath-downwardapi-q4tp: <nil>
  STEP: delete the pod @ 07/12/25 13:17:17.986
  STEP: Deleting pod pod-subpath-test-downwardapi-q4tp @ 07/12/25 13:17:18.001
  I0712 13:17:18.001612 20 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-q4tp" in namespace "subpath-4"
  I0712 13:17:18.004592 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4" for this suite. @ 07/12/25 13:17:18.008
• [24.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 07/12/25 13:17:18.015
  I0712 13:17:18.015190 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename projected @ 07/12/25 13:17:18.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:17:18.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:17:18.034
  STEP: Creating projection with secret that has name projected-secret-test-cc0c1306-675d-4e2a-ad01-55d3feca2bde @ 07/12/25 13:17:18.036
  STEP: Creating a pod to test consume secrets @ 07/12/25 13:17:18.04
  E0712 13:17:18.571377      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:19.571980      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:17:20.055
  I0712 13:17:20.059022 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-projected-secrets-3b7827c5-b015-41d1-a940-8d4dc5514e0a container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/12/25 13:17:20.065
  I0712 13:17:20.083454 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9632" for this suite. @ 07/12/25 13:17:20.087
• [2.078 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:877
  STEP: Creating a kubernetes client @ 07/12/25 13:17:20.093
  I0712 13:17:20.093842 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename svcaccounts @ 07/12/25 13:17:20.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:17:20.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:17:20.109
  STEP: Creating a Serviceaccount "e2e-sa-nm6sf" in namespace "svcaccounts-7563" @ 07/12/25 13:17:20.112
  STEP: Creating a ServiceaccountToken "e2e-sa-nm6sf" in namespace "svcaccounts-7563" @ 07/12/25 13:17:20.116
  STEP: Creating a TokenReview for "e2e-sa-nm6sf" in namespace "svcaccounts-7563" @ 07/12/25 13:17:20.12
  I0712 13:17:20.121962 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7563" for this suite. @ 07/12/25 13:17:20.188
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should terminate job execution when the number of failed indexes exceeds maxFailedIndexes [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:643
  STEP: Creating a kubernetes client @ 07/12/25 13:17:20.199
  I0712 13:17:20.199247 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename job @ 07/12/25 13:17:20.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:17:20.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:17:20.213
  STEP: Creating an indexed job with backoffLimit per index and maxFailedIndexes @ 07/12/25 13:17:20.216
  STEP: Awaiting for the job to fail as the number of max failed indexes is exceeded @ 07/12/25 13:17:20.221
  E0712 13:17:20.572103      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:21.572188      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:22.573128      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:23.573275      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure early termination of the job @ 07/12/25 13:17:24.234
  I0712 13:17:24.238579 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7343" for this suite. @ 07/12/25 13:17:24.243
• [4.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:445
  STEP: Creating a kubernetes client @ 07/12/25 13:17:24.251
  I0712 13:17:24.251408 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename sched-pred @ 07/12/25 13:17:24.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:17:24.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:17:24.267
  I0712 13:17:24.270167 20 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0712 13:17:24.347479 20 util.go:390] Waiting for terminating namespaces to be deleted...
  I0712 13:17:24.352364 20 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-23-206 before test
  I0712 13:17:24.357312 20 predicates.go:958] nginx-ingress-controller-kubernetes-worker-p7kz8 from ingress-nginx-kubernetes-worker started at 2025-07-12 12:00:11 +0000 UTC (1 container statuses recorded)
  I0712 13:17:24.357329 20 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0712 13:17:24.357336 20 predicates.go:958] calico-node-54plq from kube-system started at 2025-07-12 12:17:03 +0000 UTC (1 container statuses recorded)
  I0712 13:17:24.357341 20 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0712 13:17:24.357347 20 predicates.go:958] coredns-5d946bb58-r22cc from kube-system started at 2025-07-12 12:00:11 +0000 UTC (1 container statuses recorded)
  I0712 13:17:24.357353 20 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0712 13:17:24.357386 20 predicates.go:958] kube-state-metrics-b84f44f45-pv9bk from kube-system started at 2025-07-12 12:00:10 +0000 UTC (1 container statuses recorded)
  I0712 13:17:24.357391 20 predicates.go:960] 	Container kube-state-metrics ready: true, restart count 0
  I0712 13:17:24.357398 20 predicates.go:958] metrics-server-v0.7.2-7d878b47f8-n56rt from kube-system started at 2025-07-12 12:00:11 +0000 UTC (2 container statuses recorded)
  I0712 13:17:24.357411 20 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0712 13:17:24.357417 20 predicates.go:960] 	Container metrics-server-nanny ready: true, restart count 0
  I0712 13:17:24.357422 20 predicates.go:958] dashboard-metrics-scraper-5cf87bc988-lp8pr from kubernetes-dashboard started at 2025-07-12 12:00:11 +0000 UTC (1 container statuses recorded)
  I0712 13:17:24.357427 20 predicates.go:960] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0712 13:17:24.357433 20 predicates.go:958] kubernetes-dashboard-6858576c98-27582 from kubernetes-dashboard started at 2025-07-12 12:00:11 +0000 UTC (1 container statuses recorded)
  I0712 13:17:24.357438 20 predicates.go:960] 	Container kubernetes-dashboard ready: true, restart count 5
  I0712 13:17:24.357443 20 predicates.go:958] sonobuoy-systemd-logs-daemon-set-e4f977ec76064d15-wlvd7 from sonobuoy started at 2025-07-12 12:20:11 +0000 UTC (2 container statuses recorded)
  I0712 13:17:24.357450 20 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0712 13:17:24.357456 20 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0712 13:17:24.357461 20 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-3-36 before test
  I0712 13:17:24.361300 20 predicates.go:958] nginx-ingress-controller-kubernetes-worker-l54zn from ingress-nginx-kubernetes-worker started at 2025-07-12 12:16:01 +0000 UTC (1 container statuses recorded)
  I0712 13:17:24.361316 20 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0712 13:17:24.361323 20 predicates.go:958] calico-node-w9rj4 from kube-system started at 2025-07-12 12:16:49 +0000 UTC (1 container statuses recorded)
  I0712 13:17:24.361329 20 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0712 13:17:24.361335 20 predicates.go:958] sonobuoy-e2e-job-ff92fb6baa0d42bd from sonobuoy started at 2025-07-12 12:20:11 +0000 UTC (2 container statuses recorded)
  I0712 13:17:24.361340 20 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0712 13:17:24.361346 20 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0712 13:17:24.361352 20 predicates.go:958] sonobuoy-systemd-logs-daemon-set-e4f977ec76064d15-82lg9 from sonobuoy started at 2025-07-12 12:20:11 +0000 UTC (2 container statuses recorded)
  I0712 13:17:24.361361 20 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0712 13:17:24.361366 20 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0712 13:17:24.361372 20 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-39-13 before test
  I0712 13:17:24.363990 20 predicates.go:958] nginx-ingress-controller-kubernetes-worker-dgps6 from ingress-nginx-kubernetes-worker started at 2025-07-12 12:14:14 +0000 UTC (1 container statuses recorded)
  I0712 13:17:24.364005 20 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0712 13:17:24.364011 20 predicates.go:958] with-max-failed-indexes-0-gndrt from job-7343 started at 2025-07-12 13:17:20 +0000 UTC (1 container statuses recorded)
  I0712 13:17:24.364017 20 predicates.go:960] 	Container c ready: false, restart count 0
  I0712 13:17:24.364073 20 predicates.go:958] calico-node-r8w6x from kube-system started at 2025-07-12 12:17:33 +0000 UTC (1 container statuses recorded)
  I0712 13:17:24.364082 20 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0712 13:17:24.364088 20 predicates.go:958] sonobuoy from sonobuoy started at 2025-07-12 12:20:10 +0000 UTC (1 container statuses recorded)
  I0712 13:17:24.364093 20 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0712 13:17:24.364098 20 predicates.go:958] sonobuoy-systemd-logs-daemon-set-e4f977ec76064d15-wz4t4 from sonobuoy started at 2025-07-12 12:20:11 +0000 UTC (2 container statuses recorded)
  I0712 13:17:24.364103 20 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0712 13:17:24.364107 20 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 07/12/25 13:17:24.364
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.1851836f5f39f096], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 07/12/25 13:17:24.391
  E0712 13:17:24.573687      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:17:25.389552 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6350" for this suite. @ 07/12/25 13:17:25.394
• [1.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 07/12/25 13:17:25.4
  I0712 13:17:25.400380 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename projected @ 07/12/25 13:17:25.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:17:25.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:17:25.413
  STEP: Creating configMap with name projected-configmap-test-volume-8fdd0c7c-077e-4a97-9aa0-0d9946469173 @ 07/12/25 13:17:25.416
  STEP: Creating a pod to test consume configMaps @ 07/12/25 13:17:25.422
  E0712 13:17:25.573802      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:26.573878      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:27.574825      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:28.575041      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:17:29.444
  I0712 13:17:29.447589 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-projected-configmaps-ff899e0d-af3f-4c97-b799-f1052147220d container agnhost-container: <nil>
  STEP: delete the pod @ 07/12/25 13:17:29.454
  I0712 13:17:29.466940 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5371" for this suite. @ 07/12/25 13:17:29.47
• [4.077 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:216
  STEP: Creating a kubernetes client @ 07/12/25 13:17:29.478
  I0712 13:17:29.478021 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename sched-preemption @ 07/12/25 13:17:29.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:17:29.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:17:29.491
  I0712 13:17:29.505568 20 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0712 13:17:29.575761      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:30.576015      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:31.576269      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:32.576380      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:33.576774      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:34.577752      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:35.578427      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:36.578515      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:37.578770      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:38.578873      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:39.579136      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:40.580019      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:41.580590      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:42.580657      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:43.580771      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:44.580896      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:45.581330      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:46.581522      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:47.582411      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:48.582591      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:49.583027      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:50.583154      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:51.583403      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:52.583591      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:53.584626      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:54.584687      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:55.585363      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:56.585505      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:57.586121      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:58.586292      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:17:59.586886      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:00.587062      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:01.587098      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:02.587309      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:03.588053      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:04.588811      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:05.589264      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:06.589343      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:07.589796      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:08.589915      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:09.590466      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:10.591464      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:11.591838      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:12.591971      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:13.592843      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:14.593718      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:15.593791      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:16.593978      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:17.594720      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:18.594859      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:19.594882      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:20.595064      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:21.595435      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:22.595633      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:23.595955      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:24.596770      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:25.597735      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:26.597930      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:27.598789      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:28.598913      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:18:29.511927 20 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 07/12/25 13:18:29.515
  STEP: Adding a custom resource @ 07/12/25 13:18:29.515
  I0712 13:18:29.531755 20 preemption.go:257] Created pod: pod0-0-sched-preemption-low-priority
  I0712 13:18:29.538770 20 preemption.go:257] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 07/12/25 13:18:29.538
  I0712 13:18:29.555296 20 preemption.go:257] Created pod: pod1-0-sched-preemption-medium-priority
  I0712 13:18:29.564322 20 preemption.go:257] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 07/12/25 13:18:29.564
  I0712 13:18:29.584966 20 preemption.go:257] Created pod: pod2-0-sched-preemption-medium-priority
  I0712 13:18:29.590098 20 preemption.go:257] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 07/12/25 13:18:29.59
  E0712 13:18:29.599185      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:30.599359      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:31.599442      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 07/12/25 13:18:31.617
  E0712 13:18:32.599591      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:33.599731      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 07/12/25 13:18:33.691
  STEP: Removing a custom resource @ 07/12/25 13:18:33.701
  STEP: Removing a custom resource @ 07/12/25 13:18:33.712
  I0712 13:18:33.722972 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5903" for this suite. @ 07/12/25 13:18:33.725
• [64.255 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 07/12/25 13:18:33.733
  I0712 13:18:33.733194 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename webhook @ 07/12/25 13:18:33.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:18:33.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:18:33.748
  STEP: Setting up server cert @ 07/12/25 13:18:33.766
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/12/25 13:18:34.213
  STEP: Deploying the webhook pod @ 07/12/25 13:18:34.221
  STEP: Wait for the deployment to be ready @ 07/12/25 13:18:34.235
  I0712 13:18:34.240940 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0712 13:18:34.600430      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:35.600493      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/12/25 13:18:36.255
  STEP: Verifying the service has paired with the endpoint @ 07/12/25 13:18:36.268
  E0712 13:18:36.600950      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:18:37.268584 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0712 13:18:37.273488 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  E0712 13:18:37.601007      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 07/12/25 13:18:37.781
  STEP: Creating a custom resource that should be denied by the webhook @ 07/12/25 13:18:37.797
  E0712 13:18:38.601109      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:39.601702      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 07/12/25 13:18:39.813
  STEP: Updating the custom resource with disallowed data should be denied @ 07/12/25 13:18:39.823
  STEP: Deleting the custom resource should be denied @ 07/12/25 13:18:39.832
  STEP: Remove the offending key and value from the custom resource data @ 07/12/25 13:18:39.839
  STEP: Deleting the updated custom resource should be successful @ 07/12/25 13:18:39.849
  I0712 13:18:40.419338 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1433" for this suite. @ 07/12/25 13:18:40.426
  STEP: Destroying namespace "webhook-markers-3765" for this suite. @ 07/12/25 13:18:40.434
• [6.708 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 07/12/25 13:18:40.441
  I0712 13:18:40.441383 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename projected @ 07/12/25 13:18:40.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:18:40.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:18:40.459
  STEP: Creating a pod to test downward API volume plugin @ 07/12/25 13:18:40.461
  E0712 13:18:40.601959      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:41.602067      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:42.602439      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:43.603435      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:18:44.482
  I0712 13:18:44.484798 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod downwardapi-volume-13c299de-bd6d-4d0d-ae66-24555cc2ebdd container client-container: <nil>
  STEP: delete the pod @ 07/12/25 13:18:44.491
  I0712 13:18:44.510344 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9614" for this suite. @ 07/12/25 13:18:44.514
• [4.079 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 07/12/25 13:18:44.52
  I0712 13:18:44.520551 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename hostport @ 07/12/25 13:18:44.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:18:44.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:18:44.535
  E0712 13:18:44.603447      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 07/12/25 13:18:44.615
  E0712 13:18:45.603583      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:46.603682      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.23.206 on the node which pod1 resides and expect scheduled @ 07/12/25 13:18:46.635
  E0712 13:18:47.603807      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:48.603889      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.23.206 but use UDP protocol on the node which pod2 resides @ 07/12/25 13:18:48.65
  E0712 13:18:49.604770      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:50.604849      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:51.605006      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:52.605099      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 07/12/25 13:18:52.682
  I0712 13:18:52.683030 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.23.206 http://127.0.0.1:54323/hostname] Namespace:hostport-6341 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0712 13:18:52.683046 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0712 13:18:52.683081 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/hostport-6341/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.23.206+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  I0712 13:18:52.723660 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.23.206, port: 54323 @ 07/12/25 13:18:52.723
  I0712 13:18:52.723742 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.23.206:54323/hostname] Namespace:hostport-6341 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0712 13:18:52.723749 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0712 13:18:52.723791 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/hostport-6341/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.23.206%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  I0712 13:18:52.755945 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.23.206, port: 54323 UDP @ 07/12/25 13:18:52.755
  I0712 13:18:52.756010 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.23.206 54323] Namespace:hostport-6341 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0712 13:18:52.756020 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0712 13:18:52.756057 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/hostport-6341/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.23.206+54323&container=e2e-host-exec&stderr=true&stdout=true)
  E0712 13:18:53.605413      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:54.606186      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:55.606424      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:56.608258      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:18:57.606684      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:18:57.795782 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0712 13:18:57.796006 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-6341" for this suite. @ 07/12/25 13:18:57.801
• [13.288 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 07/12/25 13:18:57.808
  I0712 13:18:57.808725 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename daemonsets @ 07/12/25 13:18:57.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:18:57.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:18:57.823
  I0712 13:18:57.913266 20 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/12/25 13:18:57.917
  I0712 13:18:58.003557 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 13:18:58.003603 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 13:18:58.007858 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0712 13:18:58.007878 20 fixtures.go:131] Node ip-172-31-23-206 is running 0 daemon pod, expected 1
  E0712 13:18:58.607519      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:18:58.923788 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 13:18:58.923840 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 13:18:58.928542 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0712 13:18:58.928561 20 fixtures.go:131] Node ip-172-31-3-36 is running 0 daemon pod, expected 1
  E0712 13:18:59.608425      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:18:59.923636 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 13:18:59.923684 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 13:18:59.928365 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0712 13:18:59.928384 20 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 07/12/25 13:18:59.941
  STEP: Check that daemon pods images are updated. @ 07/12/25 13:19:00.024
  I0712 13:19:00.028779 20 daemon_set.go:1193] Wrong image for pod: daemon-set-rfdc6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0712 13:19:00.028804 20 daemon_set.go:1193] Wrong image for pod: daemon-set-rh9qk. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0712 13:19:00.031849 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 13:19:00.031883 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0712 13:19:00.609422      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:19:01.028579 20 daemon_set.go:1193] Wrong image for pod: daemon-set-rfdc6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0712 13:19:01.032155 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 13:19:01.032234 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0712 13:19:01.609555      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:19:02.030506 20 daemon_set.go:1198] Pod daemon-set-q2ngb is not available
  I0712 13:19:02.030542 20 daemon_set.go:1193] Wrong image for pod: daemon-set-rfdc6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0712 13:19:02.035254 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 13:19:02.035296 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0712 13:19:02.609632      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:19:03.028685 20 daemon_set.go:1198] Pod daemon-set-ttswf is not available
  I0712 13:19:03.031993 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 13:19:03.032028 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 07/12/25 13:19:03.032
  I0712 13:19:03.035183 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 13:19:03.035233 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 13:19:03.038289 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0712 13:19:03.038309 20 fixtures.go:131] Node ip-172-31-39-13 is running 0 daemon pod, expected 1
  E0712 13:19:03.610516      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:19:04.038250 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 13:19:04.038295 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 13:19:04.041932 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0712 13:19:04.041948 20 fixtures.go:131] Node ip-172-31-39-13 is running 0 daemon pod, expected 1
  E0712 13:19:04.610533      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:19:05.038009 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 13:19:05.038062 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 13:19:05.041559 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0712 13:19:05.041742 20 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/12/25 13:19:05.059
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2484, will wait for the garbage collector to delete the pods @ 07/12/25 13:19:05.059
  I0712 13:19:05.121609 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.595293ms
  I0712 13:19:05.222071 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.457536ms
  E0712 13:19:05.611636      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:19:06.426994 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0712 13:19:06.427027 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0712 13:19:06.430877 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"37176"},"items":null}

  I0712 13:19:06.434474 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"37176"},"items":null}

  I0712 13:19:06.448081 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2484" for this suite. @ 07/12/25 13:19:06.451
• [8.649 seconds]
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 07/12/25 13:19:06.457
  I0712 13:19:06.457436 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename deployment @ 07/12/25 13:19:06.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:19:06.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:19:06.471
  I0712 13:19:06.474459 20 deployment.go:1215] Creating deployment "webserver-deployment"
  I0712 13:19:06.481593 20 deployment.go:1219] Waiting for observed generation 1
  E0712 13:19:06.611652      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:07.611738      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:19:08.489752 20 deployment.go:1224] Waiting for all required pods to come up
  I0712 13:19:08.494901 20 resource.go:81] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 07/12/25 13:19:08.494
  I0712 13:19:08.494974 20 deployment.go:1228] Waiting for deployment "webserver-deployment" to complete
  I0712 13:19:08.502386 20 deployment.go:1237] Updating deployment "webserver-deployment" with a non-existent image
  I0712 13:19:08.512049 20 deployment.go:314] Updating deployment webserver-deployment
  I0712 13:19:08.512069 20 deployment.go:1243] Waiting for observed generation 2
  E0712 13:19:08.612402      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:09.612488      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:19:10.518934 20 deployment.go:1253] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0712 13:19:10.523165 20 deployment.go:1258] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0712 13:19:10.526757 20 deployment.go:1263] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0712 13:19:10.537164 20 deployment.go:1277] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0712 13:19:10.537192 20 deployment.go:1282] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0712 13:19:10.540306 20 deployment.go:1287] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0712 13:19:10.546364 20 deployment.go:1294] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0712 13:19:10.546383 20 deployment.go:1302] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0712 13:19:10.554483 20 deployment.go:314] Updating deployment webserver-deployment
  I0712 13:19:10.554507 20 deployment.go:1308] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0712 13:19:10.562740 20 deployment.go:1316] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0712 13:19:10.570233 20 deployment.go:1322] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0712 13:19:10.576166 20 deployment.go:632] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "485607fb-940c-4ff7-9f13-bf432ae173e4",
      ResourceVersion: (string) (len=5) "37460",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923146,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  E0712 13:19:10.613051      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:19:10.638379 20 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ae05a345-390e-4a9a-8d03-12ca4f8980a3",
      ResourceVersion: (string) (len=5) "37463",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923148,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "485607fb-940c-4ff7-9f13-bf432ae173e4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 38 35 36 30 37  66 62 2d 39 34 30 63 2d  |\"485607fb-940c-|
              00000120  34 66 66 37 2d 39 66 31  33 2d 62 66 34 33 32 61  |4ff7-9f13-bf432a|
              00000130  65 31 37 33 65 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e173e4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0712 13:19:10.638859 20 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0712 13:19:10.639053 20 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0694c07c-a0d1-4604-8fca-bc013574b4b4",
      ResourceVersion: (string) (len=5) "37461",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923146,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "485607fb-940c-4ff7-9f13-bf432ae173e4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 38 35 36 30 37  66 62 2d 39 34 30 63 2d  |\"485607fb-940c-|
              00000120  34 66 66 37 2d 39 66 31  33 2d 62 66 34 33 32 61  |4ff7-9f13-bf432a|
              00000130  65 31 37 33 65 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e173e4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0712 13:19:10.654176 20 deployment.go:68] Pod "webserver-deployment-685b768f58-2d728" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-2d728",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "46971566-51dd-46fa-b07d-eaffb29822be",
      ResourceVersion: (string) (len=5) "37316",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923146,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0694c07c-a0d1-4604-8fca-bc013574b4b4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  39 34 63 30 37 63 2d 61  |d\":\"0694c07c-a|
              00000090  30 64 31 2d 34 36 30 34  2d 38 66 63 61 2d 62 63  |0d1-4604-8fca-bc|
              000000a0  30 31 33 35 37 34 62 34  62 34 5c 22 7d 22 3a 7b  |013574b4b4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  34 2e 31 34 36 5c 22 7d  |2.168.214.146\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xstfd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xstfd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-23-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.23.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.23.206"
        }
      },
      PodIP: (string) (len=15) "192.168.214.146",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.214.146"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923146,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63887923147,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0018841533c30efb6f9edaa32f08bde9d53525efbf7db7754fc3ccabc78fcacd",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xstfd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:19:10.656193 20 deployment.go:68] Pod "webserver-deployment-685b768f58-44h6g" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-44h6g",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7cefaa0a-b00e-4e14-90cb-9b2571e06d96",
      ResourceVersion: (string) (len=5) "37491",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923150,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0694c07c-a0d1-4604-8fca-bc013574b4b4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  39 34 63 30 37 63 2d 61  |d\":\"0694c07c-a|
              00000090  30 64 31 2d 34 36 30 34  2d 38 66 63 61 2d 62 63  |0d1-4604-8fca-bc|
              000000a0  30 31 33 35 37 34 62 34  62 34 5c 22 7d 22 3a 7b  |013574b4b4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rqmfw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rqmfw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-39-13",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:19:10.657715 20 deployment.go:68] Pod "webserver-deployment-685b768f58-6p6vx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-6p6vx",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "923cfc0c-fdc8-4389-b80c-ca7965275331",
      ResourceVersion: (string) (len=5) "37506",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923150,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0694c07c-a0d1-4604-8fca-bc013574b4b4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  39 34 63 30 37 63 2d 61  |d\":\"0694c07c-a|
              00000090  30 64 31 2d 34 36 30 34  2d 38 66 63 61 2d 62 63  |0d1-4604-8fca-bc|
              000000a0  30 31 33 35 37 34 62 34  62 34 5c 22 7d 22 3a 7b  |013574b4b4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6dkv5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6dkv5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:19:10.658583 20 deployment.go:68] Pod "webserver-deployment-685b768f58-8bvdc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-8bvdc",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4ad3efbf-c522-42b1-8096-4f8a8333eaa7",
      ResourceVersion: (string) (len=5) "37477",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923150,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0694c07c-a0d1-4604-8fca-bc013574b4b4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  39 34 63 30 37 63 2d 61  |d\":\"0694c07c-a|
              00000090  30 64 31 2d 34 36 30 34  2d 38 66 63 61 2d 62 63  |0d1-4604-8fca-bc|
              000000a0  30 31 33 35 37 34 62 34  62 34 5c 22 7d 22 3a 7b  |013574b4b4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mprhx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mprhx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-39-13",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.39.13",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.39.13"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923150,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mprhx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:19:10.660081 20 deployment.go:68] Pod "webserver-deployment-685b768f58-8dxlj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-8dxlj",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e6981169-d5c2-4e1d-9b1e-cd3d53aa1d46",
      ResourceVersion: (string) (len=5) "37319",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923146,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0694c07c-a0d1-4604-8fca-bc013574b4b4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  39 34 63 30 37 63 2d 61  |d\":\"0694c07c-a|
              00000090  30 64 31 2d 34 36 30 34  2d 38 66 63 61 2d 62 63  |0d1-4604-8fca-bc|
              000000a0  30 31 33 35 37 34 62 34  62 34 5c 22 7d 22 3a 7b  |013574b4b4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  34 2e 31 38 30 5c 22 7d  |2.168.214.180\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bdgtx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bdgtx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-23-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.23.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.23.206"
        }
      },
      PodIP: (string) (len=15) "192.168.214.180",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.214.180"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923146,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63887923147,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1bf84349de78214bb232cd663d0789e3f305e632cffceb0a4275fb618b0bbc76",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bdgtx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:19:10.661419 20 deployment.go:68] Pod "webserver-deployment-685b768f58-9tml2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-9tml2",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "17c1c7ab-6990-4198-b8c2-f2dce680818d",
      ResourceVersion: (string) (len=5) "37331",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923146,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0694c07c-a0d1-4604-8fca-bc013574b4b4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  39 34 63 30 37 63 2d 61  |d\":\"0694c07c-a|
              00000090  30 64 31 2d 34 36 30 34  2d 38 66 63 61 2d 62 63  |0d1-4604-8fca-bc|
              000000a0  30 31 33 35 37 34 62 34  62 34 5c 22 7d 22 3a 7b  |013574b4b4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 33  35 2e 31 36 36 5c 22 7d  |2.168.235.166\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9fh8f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9fh8f",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-39-13",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.39.13",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.39.13"
        }
      },
      PodIP: (string) (len=15) "192.168.235.166",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.235.166"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923146,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63887923147,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d57aec774a177b218f6c448f9129a87b70c690354e17c503a6ca434f5e6db6ed",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9fh8f",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:19:10.663274 20 deployment.go:68] Pod "webserver-deployment-685b768f58-bp96v" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-bp96v",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "121f4f2e-1ee8-4768-9e02-6763d42eb6d8",
      ResourceVersion: (string) (len=5) "37495",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923150,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0694c07c-a0d1-4604-8fca-bc013574b4b4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  39 34 63 30 37 63 2d 61  |d\":\"0694c07c-a|
              00000090  30 64 31 2d 34 36 30 34  2d 38 66 63 61 2d 62 63  |0d1-4604-8fca-bc|
              000000a0  30 31 33 35 37 34 62 34  62 34 5c 22 7d 22 3a 7b  |013574b4b4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gr6vt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gr6vt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-3-36",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.3.36",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.3.36"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923150,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gr6vt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:19:10.664838 20 deployment.go:68] Pod "webserver-deployment-685b768f58-f88np" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-f88np",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7591defd-357c-4aff-9a0d-9c7cc31ff504",
      ResourceVersion: (string) (len=5) "37494",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923150,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0694c07c-a0d1-4604-8fca-bc013574b4b4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  39 34 63 30 37 63 2d 61  |d\":\"0694c07c-a|
              00000090  30 64 31 2d 34 36 30 34  2d 38 66 63 61 2d 62 63  |0d1-4604-8fca-bc|
              000000a0  30 31 33 35 37 34 62 34  62 34 5c 22 7d 22 3a 7b  |013574b4b4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qr9j2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qr9j2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-23-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:19:10.666290 20 deployment.go:68] Pod "webserver-deployment-685b768f58-f99db" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-f99db",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dcd68266-132f-4483-9a14-ddf420c7c9a1",
      ResourceVersion: (string) (len=5) "37305",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923146,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0694c07c-a0d1-4604-8fca-bc013574b4b4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  39 34 63 30 37 63 2d 61  |d\":\"0694c07c-a|
              00000090  30 64 31 2d 34 36 30 34  2d 38 66 63 61 2d 62 63  |0d1-4604-8fca-bc|
              000000a0  30 31 33 35 37 34 62 34  62 34 5c 22 7d 22 3a 7b  |013574b4b4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 34  36 2e 31 33 36 5c 22 7d  |2.168.246.136\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8hqqg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8hqqg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-3-36",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.3.36",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.3.36"
        }
      },
      PodIP: (string) (len=15) "192.168.246.136",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.246.136"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923146,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63887923147,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://51608e8a9be3bef805b2ad48828b1df8670fb8486915397d8ec7c0236444fe3e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8hqqg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:19:10.667604 20 deployment.go:68] Pod "webserver-deployment-685b768f58-lbtnt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-lbtnt",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "95762e1a-103b-4453-bc75-eeb0b23798aa",
      ResourceVersion: (string) (len=5) "37498",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923150,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0694c07c-a0d1-4604-8fca-bc013574b4b4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  39 34 63 30 37 63 2d 61  |d\":\"0694c07c-a|
              00000090  30 64 31 2d 34 36 30 34  2d 38 66 63 61 2d 62 63  |0d1-4604-8fca-bc|
              000000a0  30 31 33 35 37 34 62 34  62 34 5c 22 7d 22 3a 7b  |013574b4b4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dpxxc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dpxxc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-23-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:19:10.668494 20 deployment.go:68] Pod "webserver-deployment-685b768f58-lxw5d" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-lxw5d",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9a77de74-7496-4d79-ae11-ff4f6f5af191",
      ResourceVersion: (string) (len=5) "37298",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923146,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0694c07c-a0d1-4604-8fca-bc013574b4b4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  39 34 63 30 37 63 2d 61  |d\":\"0694c07c-a|
              00000090  30 64 31 2d 34 36 30 34  2d 38 66 63 61 2d 62 63  |0d1-4604-8fca-bc|
              000000a0  30 31 33 35 37 34 62 34  62 34 5c 22 7d 22 3a 7b  |013574b4b4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 34  36 2e 31 37 36 5c 22 7d  |2.168.246.176\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nmqpp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nmqpp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-3-36",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.3.36",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.3.36"
        }
      },
      PodIP: (string) (len=15) "192.168.246.176",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.246.176"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923146,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63887923147,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6638db1fcfa7b28cc4bbd28d639feab2fd5bf428518835aa81d5c7dcb4db07a0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nmqpp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:19:10.671580 20 deployment.go:68] Pod "webserver-deployment-685b768f58-m46m6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-m46m6",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c7a2ca2c-2074-4a07-9bda-092665079d78",
      ResourceVersion: (string) (len=5) "37510",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923150,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0694c07c-a0d1-4604-8fca-bc013574b4b4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  39 34 63 30 37 63 2d 61  |d\":\"0694c07c-a|
              00000090  30 64 31 2d 34 36 30 34  2d 38 66 63 61 2d 62 63  |0d1-4604-8fca-bc|
              000000a0  30 31 33 35 37 34 62 34  62 34 5c 22 7d 22 3a 7b  |013574b4b4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tkpcg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tkpcg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-39-13",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:19:10.673421 20 deployment.go:68] Pod "webserver-deployment-685b768f58-m65tx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-m65tx",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6de6a69a-eb17-47dc-a25f-d50f8a0cd326",
      ResourceVersion: (string) (len=5) "37310",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923146,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0694c07c-a0d1-4604-8fca-bc013574b4b4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  39 34 63 30 37 63 2d 61  |d\":\"0694c07c-a|
              00000090  30 64 31 2d 34 36 30 34  2d 38 66 63 61 2d 62 63  |0d1-4604-8fca-bc|
              000000a0  30 31 33 35 37 34 62 34  62 34 5c 22 7d 22 3a 7b  |013574b4b4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 34  36 2e 31 37 34 5c 22 7d  |2.168.246.174\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5k9pg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5k9pg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-3-36",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.3.36",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.3.36"
        }
      },
      PodIP: (string) (len=15) "192.168.246.174",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.246.174"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923146,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63887923147,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://704badeec9e9d7c063bbc8088d02051e90aeab3f59f351b71f3ad840615cd34f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5k9pg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:19:10.679166 20 deployment.go:68] Pod "webserver-deployment-685b768f58-m8k98" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-m8k98",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "16f0e5ac-30ea-4110-b59d-5f84a58abdc7",
      ResourceVersion: (string) (len=5) "37490",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923150,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0694c07c-a0d1-4604-8fca-bc013574b4b4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  39 34 63 30 37 63 2d 61  |d\":\"0694c07c-a|
              00000090  30 64 31 2d 34 36 30 34  2d 38 66 63 61 2d 62 63  |0d1-4604-8fca-bc|
              000000a0  30 31 33 35 37 34 62 34  62 34 5c 22 7d 22 3a 7b  |013574b4b4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jjh6s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jjh6s",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-39-13",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.39.13",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.39.13"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923150,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jjh6s",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:19:10.683997 20 deployment.go:68] Pod "webserver-deployment-685b768f58-nwj9t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-nwj9t",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4dc23056-3c99-495a-bd12-39d3728ede6e",
      ResourceVersion: (string) (len=5) "37500",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923150,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0694c07c-a0d1-4604-8fca-bc013574b4b4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  39 34 63 30 37 63 2d 61  |d\":\"0694c07c-a|
              00000090  30 64 31 2d 34 36 30 34  2d 38 66 63 61 2d 62 63  |0d1-4604-8fca-bc|
              000000a0  30 31 33 35 37 34 62 34  62 34 5c 22 7d 22 3a 7b  |013574b4b4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5cf5s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5cf5s",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-3-36",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:19:10.686714 20 deployment.go:68] Pod "webserver-deployment-685b768f58-r64kn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-r64kn",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f3b29761-b758-4907-9b1a-e45b98659847",
      ResourceVersion: (string) (len=5) "37328",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923146,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0694c07c-a0d1-4604-8fca-bc013574b4b4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  39 34 63 30 37 63 2d 61  |d\":\"0694c07c-a|
              00000090  30 64 31 2d 34 36 30 34  2d 38 66 63 61 2d 62 63  |0d1-4604-8fca-bc|
              000000a0  30 31 33 35 37 34 62 34  62 34 5c 22 7d 22 3a 7b  |013574b4b4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 33  35 2e 31 33 35 5c 22 7d  |2.168.235.135\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kjsf6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kjsf6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-39-13",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.39.13",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.39.13"
        }
      },
      PodIP: (string) (len=15) "192.168.235.135",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.235.135"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923146,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63887923147,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0608c78a3d0a030748a9a2e311ae7758d37be1d75e6887e46b6365dc0272c7d9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kjsf6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:19:10.690814 20 deployment.go:68] Pod "webserver-deployment-685b768f58-rr2zv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-rr2zv",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "46d00fbe-bcdf-47d4-ad10-1e308a3e250d",
      ResourceVersion: (string) (len=5) "37508",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923150,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0694c07c-a0d1-4604-8fca-bc013574b4b4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  39 34 63 30 37 63 2d 61  |d\":\"0694c07c-a|
              00000090  30 64 31 2d 34 36 30 34  2d 38 66 63 61 2d 62 63  |0d1-4604-8fca-bc|
              000000a0  30 31 33 35 37 34 62 34  62 34 5c 22 7d 22 3a 7b  |013574b4b4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nxxmc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nxxmc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:19:10.691429 20 deployment.go:68] Pod "webserver-deployment-685b768f58-slzkz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-slzkz",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "61440d34-24ac-4d5c-85cc-82b36bcbf3e8",
      ResourceVersion: (string) (len=5) "37511",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923150,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0694c07c-a0d1-4604-8fca-bc013574b4b4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  39 34 63 30 37 63 2d 61  |d\":\"0694c07c-a|
              00000090  30 64 31 2d 34 36 30 34  2d 38 66 63 61 2d 62 63  |0d1-4604-8fca-bc|
              000000a0  30 31 33 35 37 34 62 34  62 34 5c 22 7d 22 3a 7b  |013574b4b4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x6nvs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x6nvs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-3-36",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:19:10.692345 20 deployment.go:68] Pod "webserver-deployment-685b768f58-sr475" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-sr475",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1ca8391b-40cd-429d-b1e8-6e40d3e428cb",
      ResourceVersion: (string) (len=5) "37322",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923146,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0694c07c-a0d1-4604-8fca-bc013574b4b4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  39 34 63 30 37 63 2d 61  |d\":\"0694c07c-a|
              00000090  30 64 31 2d 34 36 30 34  2d 38 66 63 61 2d 62 63  |0d1-4604-8fca-bc|
              000000a0  30 31 33 35 37 34 62 34  62 34 5c 22 7d 22 3a 7b  |013574b4b4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  34 2e 31 35 31 5c 22 7d  |2.168.214.151\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pxl9r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pxl9r",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-23-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.23.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.23.206"
        }
      },
      PodIP: (string) (len=15) "192.168.214.151",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.214.151"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923146,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63887923147,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://efa0be6bf8d01de35d0db5dbccbea320c70854d49f7d48ed1adb812b691133e1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pxl9r",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:19:10.695403 20 deployment.go:68] Pod "webserver-deployment-685b768f58-w4s5c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-w4s5c",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "02210b51-6ebb-4586-8f63-f2f2fc658b6a",
      ResourceVersion: (string) (len=5) "37507",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923150,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0694c07c-a0d1-4604-8fca-bc013574b4b4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  39 34 63 30 37 63 2d 61  |d\":\"0694c07c-a|
              00000090  30 64 31 2d 34 36 30 34  2d 38 66 63 61 2d 62 63  |0d1-4604-8fca-bc|
              000000a0  30 31 33 35 37 34 62 34  62 34 5c 22 7d 22 3a 7b  |013574b4b4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-glxcr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-glxcr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:19:10.696446 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-2bnn5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-2bnn5",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "21bca4fe-3bf1-4d1f-9357-7d77c3ef5a5d",
      ResourceVersion: (string) (len=5) "37454",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923148,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "ae05a345-390e-4a9a-8d03-12ca4f8980a3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 65  30 35 61 33 34 35 2d 33  |d\":\"ae05a345-3|
              00000090  39 30 65 2d 34 61 39 61  2d 38 64 30 33 2d 31 32  |90e-4a9a-8d03-12|
              000000a0  63 61 34 66 38 39 38 30  61 33 5c 22 7d 22 3a 7b  |ca4f8980a3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 33 35 2e 31  38 32 5c 22 7d 22 3a 7b  |68.235.182\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5j8pk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5j8pk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-39-13",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.39.13",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.39.13"
        }
      },
      PodIP: (string) (len=15) "192.168.235.182",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.235.182"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923148,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5j8pk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:19:10.701480 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-54wlj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-54wlj",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "032ad2ea-a1ac-42c3-9140-79f09c810e5e",
      ResourceVersion: (string) (len=5) "37448",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923148,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "ae05a345-390e-4a9a-8d03-12ca4f8980a3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 65  30 35 61 33 34 35 2d 33  |d\":\"ae05a345-3|
              00000090  39 30 65 2d 34 61 39 61  2d 38 64 30 33 2d 31 32  |90e-4a9a-8d03-12|
              000000a0  63 61 34 66 38 39 38 30  61 33 5c 22 7d 22 3a 7b  |ca4f8980a3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 34 36 2e 31  37 37 5c 22 7d 22 3a 7b  |68.246.177\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8csqv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8csqv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-3-36",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.3.36",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.3.36"
        }
      },
      PodIP: (string) (len=15) "192.168.246.177",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.246.177"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923148,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8csqv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:19:10.704546 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-cjxfn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-cjxfn",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "44754dc2-c665-4a9a-b53c-8b6b503f48be",
      ResourceVersion: (string) (len=5) "37504",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923150,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "ae05a345-390e-4a9a-8d03-12ca4f8980a3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 65  30 35 61 33 34 35 2d 33  |d\":\"ae05a345-3|
              00000090  39 30 65 2d 34 61 39 61  2d 38 64 30 33 2d 31 32  |90e-4a9a-8d03-12|
              000000a0  63 61 34 66 38 39 38 30  61 33 5c 22 7d 22 3a 7b  |ca4f8980a3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zdwrn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zdwrn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:19:10.705416 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-d8s4w" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-d8s4w",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "63fe7aed-41a6-4787-ae17-1ded6fb7bb88",
      ResourceVersion: (string) (len=5) "37502",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923150,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "ae05a345-390e-4a9a-8d03-12ca4f8980a3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 65  30 35 61 33 34 35 2d 33  |d\":\"ae05a345-3|
              00000090  39 30 65 2d 34 61 39 61  2d 38 64 30 33 2d 31 32  |90e-4a9a-8d03-12|
              000000a0  63 61 34 66 38 39 38 30  61 33 5c 22 7d 22 3a 7b  |ca4f8980a3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-85lnr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-85lnr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:19:10.708473 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-f84g5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-f84g5",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d2d6a133-3cd3-4fbe-83b7-00080ea2e114",
      ResourceVersion: (string) (len=5) "37443",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923148,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "ae05a345-390e-4a9a-8d03-12ca4f8980a3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 65  30 35 61 33 34 35 2d 33  |d\":\"ae05a345-3|
              00000090  39 30 65 2d 34 61 39 61  2d 38 64 30 33 2d 31 32  |90e-4a9a-8d03-12|
              000000a0  63 61 34 66 38 39 38 30  61 33 5c 22 7d 22 3a 7b  |ca4f8980a3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 34 36 2e 31  33 35 5c 22 7d 22 3a 7b  |68.246.135\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xrkkx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xrkkx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-3-36",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.3.36",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.3.36"
        }
      },
      PodIP: (string) (len=15) "192.168.246.135",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.246.135"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923148,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xrkkx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:19:10.710157 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-h5qgk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-h5qgk",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "14c5e10c-895f-4e6d-b133-5b0e1e01c657",
      ResourceVersion: (string) (len=5) "37515",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923150,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "ae05a345-390e-4a9a-8d03-12ca4f8980a3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 65  30 35 61 33 34 35 2d 33  |d\":\"ae05a345-3|
              00000090  39 30 65 2d 34 61 39 61  2d 38 64 30 33 2d 31 32  |90e-4a9a-8d03-12|
              000000a0  63 61 34 66 38 39 38 30  61 33 5c 22 7d 22 3a 7b  |ca4f8980a3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hk98m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hk98m",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-23-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:19:10.711258 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-km87j" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-km87j",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3c196b95-45bb-41a6-b79a-ef2c89b67f4c",
      ResourceVersion: (string) (len=5) "37458",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923148,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "ae05a345-390e-4a9a-8d03-12ca4f8980a3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 65  30 35 61 33 34 35 2d 33  |d\":\"ae05a345-3|
              00000090  39 30 65 2d 34 61 39 61  2d 38 64 30 33 2d 31 32  |90e-4a9a-8d03-12|
              000000a0  63 61 34 66 38 39 38 30  61 33 5c 22 7d 22 3a 7b  |ca4f8980a3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 33 35 2e 31  33 37 5c 22 7d 22 3a 7b  |68.235.137\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wkt2x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wkt2x",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-39-13",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.39.13",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.39.13"
        }
      },
      PodIP: (string) (len=15) "192.168.235.137",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.235.137"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923148,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wkt2x",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:19:10.712540 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-kt7bd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-kt7bd",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8e77f003-c08d-48ac-8464-0b60a6757b36",
      ResourceVersion: (string) (len=5) "37503",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923150,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "ae05a345-390e-4a9a-8d03-12ca4f8980a3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 65  30 35 61 33 34 35 2d 33  |d\":\"ae05a345-3|
              00000090  39 30 65 2d 34 61 39 61  2d 38 64 30 33 2d 31 32  |90e-4a9a-8d03-12|
              000000a0  63 61 34 66 38 39 38 30  61 33 5c 22 7d 22 3a 7b  |ca4f8980a3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wdxbf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wdxbf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:19:10.713385 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-kt8sc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-kt8sc",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a17bdd45-a009-43b1-b9df-5574e4441c0e",
      ResourceVersion: (string) (len=5) "37451",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923148,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "ae05a345-390e-4a9a-8d03-12ca4f8980a3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 65  30 35 61 33 34 35 2d 33  |d\":\"ae05a345-3|
              00000090  39 30 65 2d 34 61 39 61  2d 38 64 30 33 2d 31 32  |90e-4a9a-8d03-12|
              000000a0  63 61 34 66 38 39 38 30  61 33 5c 22 7d 22 3a 7b  |ca4f8980a3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 31 34 2e 31  36 30 5c 22 7d 22 3a 7b  |68.214.160\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hn9mp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hn9mp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-23-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.23.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.23.206"
        }
      },
      PodIP: (string) (len=15) "192.168.214.160",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.214.160"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923148,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hn9mp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:19:10.714585 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-skqvr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-skqvr",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "da9eacb2-3a5d-416e-9e06-6257b95f3fa0",
      ResourceVersion: (string) (len=5) "37513",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923150,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "ae05a345-390e-4a9a-8d03-12ca4f8980a3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 65  30 35 61 33 34 35 2d 33  |d\":\"ae05a345-3|
              00000090  39 30 65 2d 34 61 39 61  2d 38 64 30 33 2d 31 32  |90e-4a9a-8d03-12|
              000000a0  63 61 34 66 38 39 38 30  61 33 5c 22 7d 22 3a 7b  |ca4f8980a3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cxsjz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cxsjz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-39-13",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.39.13",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.39.13"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923150,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cxsjz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:19:10.715857 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-vn2vc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-vn2vc",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b3af16e5-f472-4c4c-b840-4aab14590366",
      ResourceVersion: (string) (len=5) "37493",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923150,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "ae05a345-390e-4a9a-8d03-12ca4f8980a3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 65  30 35 61 33 34 35 2d 33  |d\":\"ae05a345-3|
              00000090  39 30 65 2d 34 61 39 61  2d 38 64 30 33 2d 31 32  |90e-4a9a-8d03-12|
              000000a0  63 61 34 66 38 39 38 30  61 33 5c 22 7d 22 3a 7b  |ca4f8980a3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hqdpr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hqdpr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-23-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.23.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.23.206"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923150,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hqdpr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:19:10.717108 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-w9r6t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-w9r6t",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9d85d92a-e1f1-4e91-952f-1845b080a8bf",
      ResourceVersion: (string) (len=5) "37489",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923150,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "ae05a345-390e-4a9a-8d03-12ca4f8980a3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 65  30 35 61 33 34 35 2d 33  |d\":\"ae05a345-3|
              00000090  39 30 65 2d 34 61 39 61  2d 38 64 30 33 2d 31 32  |90e-4a9a-8d03-12|
              000000a0  63 61 34 66 38 39 38 30  61 33 5c 22 7d 22 3a 7b  |ca4f8980a3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j6bhs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j6bhs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-3-36",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:19:10.717840 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8817" for this suite. @ 07/12/25 13:19:10.722
• [4.276 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 07/12/25 13:19:10.733
  I0712 13:19:10.733230 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename webhook @ 07/12/25 13:19:10.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:19:10.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:19:10.75
  STEP: Setting up server cert @ 07/12/25 13:19:10.768
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/12/25 13:19:10.847
  STEP: Deploying the webhook pod @ 07/12/25 13:19:10.853
  STEP: Wait for the deployment to be ready @ 07/12/25 13:19:10.864
  I0712 13:19:10.871966 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0712 13:19:11.613678      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:12.613911      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/12/25 13:19:12.882
  STEP: Verifying the service has paired with the endpoint @ 07/12/25 13:19:12.897
  E0712 13:19:13.614439      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:19:13.898750 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 07/12/25 13:19:13.905
  STEP: create a pod that should be denied by the webhook @ 07/12/25 13:19:13.919
  STEP: create a pod that causes the webhook to hang @ 07/12/25 13:19:13.933
  E0712 13:19:14.614548      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:15.614667      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:16.614774      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:17.614862      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:18.615011      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:19.615815      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:20.615907      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:21.616073      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:22.616301      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:23.616399      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 07/12/25 13:19:23.94
  STEP: create a configmap that should be admitted by the webhook @ 07/12/25 13:19:23.97
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 07/12/25 13:19:23.981
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 07/12/25 13:19:23.99
  STEP: create a namespace that bypass the webhook @ 07/12/25 13:19:23.995
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 07/12/25 13:19:24.009
  I0712 13:19:24.066436 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4919" for this suite. @ 07/12/25 13:19:24.07
  STEP: Destroying namespace "webhook-markers-3320" for this suite. @ 07/12/25 13:19:24.077
  STEP: Destroying namespace "exempted-namespace-1144" for this suite. @ 07/12/25 13:19:24.082
• [13.355 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 07/12/25 13:19:24.088
  I0712 13:19:24.088214 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename var-expansion @ 07/12/25 13:19:24.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:19:24.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:19:24.102
  STEP: creating the pod @ 07/12/25 13:19:24.104
  STEP: waiting for pod running @ 07/12/25 13:19:24.114
  E0712 13:19:24.617403      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:25.617507      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 07/12/25 13:19:26.122
  I0712 13:19:26.126829 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-3293 PodName:var-expansion-c5a539bc-cc2a-4254-9a98-0b980c072153 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0712 13:19:26.126853 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0712 13:19:26.126893 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/var-expansion-3293/pods/var-expansion-c5a539bc-cc2a-4254-9a98-0b980c072153/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I0712 13:19:26.168422 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: test for file in mounted path @ 07/12/25 13:19:26.168
  I0712 13:19:26.172610 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-3293 PodName:var-expansion-c5a539bc-cc2a-4254-9a98-0b980c072153 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0712 13:19:26.172628 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0712 13:19:26.172663 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/var-expansion-3293/pods/var-expansion-c5a539bc-cc2a-4254-9a98-0b980c072153/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I0712 13:19:26.208304 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: updating the annotation value @ 07/12/25 13:19:26.208
  E0712 13:19:26.617745      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:19:26.721532 20 pod_client.go:173] Successfully updated pod "var-expansion-c5a539bc-cc2a-4254-9a98-0b980c072153"
  STEP: waiting for annotated pod running @ 07/12/25 13:19:26.721
  STEP: deleting the pod gracefully @ 07/12/25 13:19:26.725
  I0712 13:19:26.725812 20 delete.go:62] Deleting pod "var-expansion-c5a539bc-cc2a-4254-9a98-0b980c072153" in namespace "var-expansion-3293"
  I0712 13:19:26.734029 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-c5a539bc-cc2a-4254-9a98-0b980c072153" to be fully deleted
  E0712 13:19:27.617855      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:28.617952      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:29.618805      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:30.618917      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:31.619365      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:32.619433      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:33.619572      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:34.620457      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:35.620516      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:36.620608      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:37.621421      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:38.621534      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:39.622152      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:40.622279      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:41.622410      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:42.623461      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:43.623542      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:44.623685      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:45.623772      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:46.623865      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:47.623977      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:48.624089      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:49.624222      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:50.624382      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:51.624628      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:52.624836      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:53.625036      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:54.625848      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:55.626796      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:56.627454      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:57.627588      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:19:58.627844      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:19:58.822912 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3293" for this suite. @ 07/12/25 13:19:58.827
• [34.745 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:275
  STEP: Creating a kubernetes client @ 07/12/25 13:19:58.833
  I0712 13:19:58.833863 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename namespaces @ 07/12/25 13:19:58.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:19:58.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:19:58.858
  STEP: creating a Namespace @ 07/12/25 13:19:58.861
  STEP: patching the Namespace @ 07/12/25 13:19:58.873
  STEP: get the Namespace and ensuring it has the label @ 07/12/25 13:19:58.881
  I0712 13:19:58.886288 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4569" for this suite. @ 07/12/25 13:19:58.928
  STEP: Destroying namespace "nspatchtest-0aaadb2b-97f4-440b-87b1-1fc1f78454a9-176" for this suite. @ 07/12/25 13:19:58.935
• [0.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:83
  STEP: Creating a kubernetes client @ 07/12/25 13:19:58.944
  I0712 13:19:58.944496 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename resourcequota @ 07/12/25 13:19:58.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:19:58.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:19:58.957
  STEP: Counting existing ResourceQuota @ 07/12/25 13:19:58.959
  E0712 13:19:59.628680      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:00.629726      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:01.630419      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:02.630510      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:03.630860      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/12/25 13:20:03.963
  STEP: Ensuring resource quota status is calculated @ 07/12/25 13:20:03.967
  E0712 13:20:04.631257      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:05.631468      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:20:05.973081 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4494" for this suite. @ 07/12/25 13:20:05.978
• [7.041 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1368
  STEP: Creating a kubernetes client @ 07/12/25 13:20:05.985
  I0712 13:20:05.985522 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename kubectl @ 07/12/25 13:20:05.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:20:05.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:20:06.001
  STEP: validating cluster-info @ 07/12/25 13:20:06.004
  I0712 13:20:06.004294 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-5431 cluster-info'
  I0712 13:20:06.047687 20 builder.go:146] stderr: ""
  I0712 13:20:06.047730 20 builder.go:147] stdout: "Kubernetes control plane is running at https://10.152.183.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0712 13:20:06.047812 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5431" for this suite. @ 07/12/25 13:20:06.079
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 07/12/25 13:20:06.086
  I0712 13:20:06.086923 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/12/25 13:20:06.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:20:06.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:20:06.1
  I0712 13:20:06.103305 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  E0712 13:20:06.631491      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:20:07.133452 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6646" for this suite. @ 07/12/25 13:20:07.138
• [1.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:693
  STEP: Creating a kubernetes client @ 07/12/25 13:20:07.145
  I0712 13:20:07.145695 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename security-context-test @ 07/12/25 13:20:07.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:20:07.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:20:07.167
  E0712 13:20:07.631628      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:08.631722      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:09.632194      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:10.632421      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:20:11.198495 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3043" for this suite. @ 07/12/25 13:20:11.202
• [4.062 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 07/12/25 13:20:11.208
  I0712 13:20:11.208263 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename secrets @ 07/12/25 13:20:11.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:20:11.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:20:11.224
  STEP: Creating secret with name secret-test-map-f1dfc8d2-d50a-40b9-b2a0-6cea2aeaba39 @ 07/12/25 13:20:11.226
  STEP: Creating a pod to test consume secrets @ 07/12/25 13:20:11.23
  E0712 13:20:11.633038      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:12.633259      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:13.633997      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:14.634427      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:20:15.254
  I0712 13:20:15.257779 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-secrets-da3cda96-014d-4c4f-907b-693e07ab1a28 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/12/25 13:20:15.265
  I0712 13:20:15.283319 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4" for this suite. @ 07/12/25 13:20:15.29
• [4.094 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:108
  STEP: Creating a kubernetes client @ 07/12/25 13:20:15.302
  I0712 13:20:15.302637 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename resourcequota @ 07/12/25 13:20:15.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:20:15.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:20:15.321
  STEP: Counting existing ResourceQuota @ 07/12/25 13:20:15.333
  E0712 13:20:15.635333      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:16.636357      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:17.637297      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:18.638277      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:19.638822      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/12/25 13:20:20.338
  STEP: Ensuring resource quota status is calculated @ 07/12/25 13:20:20.344
  E0712 13:20:20.639352      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:21.639436      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 07/12/25 13:20:22.349
  STEP: Creating a NodePort Service @ 07/12/25 13:20:22.376
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 07/12/25 13:20:22.4
  STEP: Ensuring resource quota status captures service creation @ 07/12/25 13:20:22.428
  E0712 13:20:22.640438      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:23.640504      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 07/12/25 13:20:24.432
  STEP: Ensuring resource quota status released usage @ 07/12/25 13:20:24.48
  E0712 13:20:24.641240      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:25.641370      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:20:26.486119 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1151" for this suite. @ 07/12/25 13:20:26.49
• [11.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 07/12/25 13:20:26.5
  I0712 13:20:26.500390 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename field-validation @ 07/12/25 13:20:26.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:20:26.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:20:26.512
  I0712 13:20:26.514979 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  E0712 13:20:26.642277      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:27.643223      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:28.643381      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:20:29.046441      20 warnings.go:110] "Warning: unknown field \"alpha\""
  I0712 13:20:29.046462      20 warnings.go:110] "Warning: unknown field \"beta\""
  I0712 13:20:29.046469      20 warnings.go:110] "Warning: unknown field \"delta\""
  I0712 13:20:29.046476      20 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0712 13:20:29.046481      20 warnings.go:110] "Warning: unknown field \"gamma\""
  I0712 13:20:29.590500 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-138" for this suite. @ 07/12/25 13:20:29.593
• [3.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:838
  STEP: Creating a kubernetes client @ 07/12/25 13:20:29.601
  I0712 13:20:29.601545 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename svcaccounts @ 07/12/25 13:20:29.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:20:29.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:20:29.617
  STEP: Creating ServiceAccount "e2e-sa-hlt49"  @ 07/12/25 13:20:29.62
  I0712 13:20:29.625749 20 service_accounts.go:853] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-hlt49"  @ 07/12/25 13:20:29.625
  I0712 13:20:29.633748 20 service_accounts.go:867] AutomountServiceAccountToken: true
  I0712 13:20:29.633828 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1309" for this suite. @ 07/12/25 13:20:29.636
• [0.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 07/12/25 13:20:29.643
  I0712 13:20:29.643128 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  E0712 13:20:29.643570      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename pv @ 07/12/25 13:20:29.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:20:29.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:20:29.656
  STEP: Creating initial PV and PVC @ 07/12/25 13:20:29.658
  I0712 13:20:29.658442 20 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-7881" @ 07/12/25 13:20:29.671
  STEP: Listing PVCs in namespace "pv-7881" @ 07/12/25 13:20:29.677
  STEP: Patching the PV "pv-7881-t2d9v" @ 07/12/25 13:20:29.68
  STEP: Patching the PVC "pvc-mgnbk" @ 07/12/25 13:20:29.693
  STEP: Getting PV "pv-7881-t2d9v" @ 07/12/25 13:20:29.704
  STEP: Getting PVC "pvc-mgnbk" @ 07/12/25 13:20:29.707
  STEP: Deleting PVC "pvc-mgnbk" @ 07/12/25 13:20:29.709
  STEP: Confirm deletion of PVC "pvc-mgnbk" @ 07/12/25 13:20:29.716
  E0712 13:20:30.644153      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:31.644372      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-7881-t2d9v" @ 07/12/25 13:20:31.725
  STEP: Confirm deletion of PV "pv-7881-t2d9v" @ 07/12/25 13:20:31.733
  E0712 13:20:32.644462      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:33.644536      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 07/12/25 13:20:33.742
  I0712 13:20:33.742387 20 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-7881-dkbbg" @ 07/12/25 13:20:33.755
  STEP: Updating the PVC "pvc-d9wrk" @ 07/12/25 13:20:33.763
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-d9wrk=updated" @ 07/12/25 13:20:33.772
  STEP: Deleting PVC "pvc-d9wrk" via DeleteCollection @ 07/12/25 13:20:33.776
  STEP: Confirm deletion of PVC "pvc-d9wrk" @ 07/12/25 13:20:33.788
  E0712 13:20:34.645574      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:35.645649      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-7881-dkbbg" via DeleteCollection @ 07/12/25 13:20:35.798
  STEP: Confirm deletion of PV "pv-7881-dkbbg" @ 07/12/25 13:20:35.811
  E0712 13:20:36.645781      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:37.645852      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:20:37.819042 20 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0712 13:20:37.819075 20 pv.go:205] Deleting PersistentVolumeClaim "pvc-d9wrk"
  I0712 13:20:37.821501 20 pv.go:193] Deleting PersistentVolume "pv-7881-dkbbg"
  I0712 13:20:37.826088 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-7881" for this suite. @ 07/12/25 13:20:37.83
• [8.194 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:547
  STEP: Creating a kubernetes client @ 07/12/25 13:20:37.837
  I0712 13:20:37.837320 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename gc @ 07/12/25 13:20:37.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:20:37.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:20:37.852
  STEP: create the deployment @ 07/12/25 13:20:37.854
  I0712 13:20:37.858929      20 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 07/12/25 13:20:37.858
  STEP: delete the deployment @ 07/12/25 13:20:37.97
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 07/12/25 13:20:37.977
  STEP: Gathering metrics @ 07/12/25 13:20:38.494
  W0712 13:20:38.498302      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0712 13:20:38.498328 20 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0712 13:20:38.498494 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4801" for this suite. @ 07/12/25 13:20:38.501
• [0.672 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 07/12/25 13:20:38.509
  I0712 13:20:38.509655 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename replicaset @ 07/12/25 13:20:38.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:20:38.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:20:38.523
  STEP: Create a ReplicaSet @ 07/12/25 13:20:38.527
  STEP: Verify that the required pods have come up @ 07/12/25 13:20:38.534
  I0712 13:20:38.542161 20 resource.go:81] Pod name sample-pod: Found 0 pods out of 3
  E0712 13:20:38.646474      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:39.646589      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:40.646719      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:41.646859      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:42.646945      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:20:43.548035 20 resource.go:81] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 07/12/25 13:20:43.548
  I0712 13:20:43.551434 20 replica_set.go:588] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 TerminatingReplicas:<nil> ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 07/12/25 13:20:43.551
  STEP: DeleteCollection of the ReplicaSets @ 07/12/25 13:20:43.554
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 07/12/25 13:20:43.565
  I0712 13:20:43.568549 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1107" for this suite. @ 07/12/25 13:20:43.578
• [5.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 07/12/25 13:20:43.589
  I0712 13:20:43.589642 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename projected @ 07/12/25 13:20:43.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:20:43.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:20:43.604
  STEP: Creating a pod to test downward API volume plugin @ 07/12/25 13:20:43.607
  E0712 13:20:43.648166      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:44.648884      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:20:45.636
  I0712 13:20:45.640508 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod downwardapi-volume-47011033-0850-4205-9d22-09b90bf28c1a container client-container: <nil>
  E0712 13:20:45.649654      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod @ 07/12/25 13:20:45.652
  I0712 13:20:45.667165 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1939" for this suite. @ 07/12/25 13:20:45.671
• [2.089 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 07/12/25 13:20:45.678
  I0712 13:20:45.678647 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename container-probe @ 07/12/25 13:20:45.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:20:45.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:20:45.693
  STEP: Creating pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871 @ 07/12/25 13:20:45.695
  E0712 13:20:46.650419      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:47.651430      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/12/25 13:20:47.714
  I0712 13:20:47.718764 20 container_probe.go:1748] Initial restart count of pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc is 0
  I0712 13:20:47.721782 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:20:48.652424      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:49.652542      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:20:49.727397 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:20:50.653418      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:51.653497      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:20:51.732263 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:20:52.654252      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:53.654372      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:20:53.736328 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:20:54.654907      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:55.654970      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:20:55.741631 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:20:56.655125      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:57.655365      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:20:57.745976 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:20:58.656509      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:20:59.656553      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:20:59.751030 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:21:00.657430      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:21:01.657641      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:21:01.756171 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:21:02.657752      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:21:03.657829      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:21:03.760325 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:21:04.658892      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:21:05.658977      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:21:05.764925 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:21:06.659679      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:21:07.659891      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:21:07.771527 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:21:08.660376      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:21:09.660451      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:21:09.776849 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:21:10.661419      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:21:11.661497      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:21:11.782141 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:21:12.661624      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:21:13.661701      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:21:13.786740 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:21:14.662799      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:21:15.662895      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:21:15.791375 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:21:16.663024      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:21:17.663132      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:21:17.796812 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:21:18.663735      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:21:19.663785      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:21:19.801145 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:21:20.664744      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:21:21.665435      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:21:21.806467 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:21:22.665771      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:21:23.665917      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:21:23.812381 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:21:24.666454      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:21:25.667423      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:21:25.816499 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:21:26.668457      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:21:27.668670      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:21:27.821742 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:21:28.669428      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:21:29.670425      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:21:29.827701 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:21:30.670523      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:21:31.671430      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:21:31.832903 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:21:32.671745      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:21:33.671808      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:21:33.838884 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:21:34.672817      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:21:35.672881      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:21:35.843455 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:21:36.673014      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:21:37.673069      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:21:37.849184 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:21:38.673430      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:21:39.673514      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:21:39.853959 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:21:40.673601      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:21:41.674436      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:21:41.859274 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:21:42.675420      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:21:43.675496      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:21:43.863399 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:21:44.676441      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:21:45.676523      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:21:45.868266 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:21:46.676635      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:21:47.676702      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:21:47.873038 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:21:48.676820      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:21:49.677804      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:21:49.877643 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:21:50.678366      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:21:51.678435      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:21:51.883483 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:21:52.679348      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:21:53.679422      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:21:53.887371 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:21:54.679901      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:21:55.679977      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:21:55.892965 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:21:56.680412      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:21:57.680483      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:21:57.898509 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:21:58.681313      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:21:59.682214      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:21:59.902877 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:22:00.682346      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:22:01.683423      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:22:01.909279 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:22:02.684129      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:22:03.684309      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:22:03.915445 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:22:04.684384      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:22:05.685410      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:22:05.919824 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:22:06.685528      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:22:07.685709      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:22:07.924578 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:22:08.685833      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:22:09.686864      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:22:09.929752 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:22:10.687523      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:22:11.687711      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:22:11.934022 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:22:12.687764      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:22:13.687949      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:22:13.938944 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:22:14.688854      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:22:15.689805      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:22:15.943318 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:22:16.690104      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:22:17.690406      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:22:17.948378 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:22:18.691178      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:22:19.691873      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:22:19.953879 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:22:20.692396      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:22:21.692495      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:22:21.959672 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:22:22.693567      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:22:23.693663      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:22:23.964237 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:22:24.693796      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:22:25.693979      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:22:25.970001 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:22:26.694398      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:22:27.694488      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:22:27.974457 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:22:28.694582      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:22:29.694714      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:22:29.980332 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:22:30.694791      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:22:31.694978      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:22:31.985135 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:22:32.696018      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:22:33.696095      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:22:33.988775 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:22:34.696436      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:22:35.696519      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:22:35.994472 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:22:36.696716      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:22:37.696686      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:22:37.999078 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:22:38.696796      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:22:39.696808      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:22:40.005340 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:22:40.697016      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:22:41.697409      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:22:42.009815 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:22:42.697552      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:22:43.698395      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:22:44.015132 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:22:44.698522      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:22:45.698618      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:22:46.021151 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:22:46.698712      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:22:47.698809      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:22:48.026905 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:22:48.699655      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:22:49.699758      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:22:50.031359 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:22:50.700029      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:22:51.700394      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:22:52.036606 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:22:52.701393      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:22:53.701574      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:22:54.040610 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:22:54.702447      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:22:55.702559      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:22:56.045880 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:22:56.703412      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:22:57.703525      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:22:58.051689 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:22:58.704421      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:22:59.704534      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:23:00.056790 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:23:00.705590      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:23:01.706430      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:23:02.061934 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:23:02.706525      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:23:03.706720      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:23:04.067455 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:23:04.707283      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:23:05.707472      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:23:06.072435 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:23:06.707807      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:23:07.707967      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:23:08.076855 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:23:08.708063      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:23:09.708877      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:23:10.081048 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:23:10.709800      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:23:11.710421      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:23:12.086308 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:23:12.710552      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:23:13.710648      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:23:14.090676 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:23:14.711429      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:23:15.712404      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:23:16.095446 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:23:16.713139      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:23:17.713350      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:23:18.099908 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:23:18.713580      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:23:19.713697      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:23:20.104074 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:23:20.713788      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:23:21.713972      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:23:22.109159 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:23:22.714851      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:23:23.714965      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:23:24.113933 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:23:24.715401      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:23:25.715517      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:23:26.120103 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:23:26.715651      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:23:27.715861      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:23:28.125340 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:23:28.715913      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:23:29.716899      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:23:30.130876 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:23:30.717015      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:23:31.717398      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:23:32.137415 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:23:32.717949      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:23:33.719031      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:23:34.142908 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:23:34.719875      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:23:35.719973      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:23:36.147943 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:23:36.720330      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:23:37.720530      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:23:38.154448 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:23:38.720559      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:23:39.720659      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:23:40.160029 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:23:40.721389      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:23:41.721499      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:23:42.164886 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:23:42.722415      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:23:43.722610      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:23:44.168276 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:23:44.722736      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:23:45.722947      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:23:46.173952 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:23:46.723766      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:23:47.723958      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:23:48.178481 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:23:48.724073      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:23:49.724891      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:23:50.183324 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:23:50.724927      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:23:51.725114      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:23:52.188130 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:23:52.725334      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:23:53.725428      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:23:54.193129 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:23:54.725787      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:23:55.725986      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:23:56.198418 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:23:56.726034      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:23:57.726245      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:23:58.203450 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:23:58.727185      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:23:59.727448      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:24:00.208322 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:24:00.727564      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:24:01.727748      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:24:02.214106 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:24:02.728794      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:24:03.728912      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:24:04.219363 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:24:04.728993      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:24:05.729677      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:24:06.225441 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:24:06.729772      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:24:07.730403      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:24:08.230524 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:24:08.731129      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:24:09.731856      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:24:10.236059 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:24:10.732643      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:24:11.732827      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:24:12.241464 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:24:12.732949      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:24:13.733148      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:24:14.246443 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:24:14.734221      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:24:15.734334      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:24:16.251821 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:24:16.735404      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:24:17.735519      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:24:18.256901 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:24:18.736522      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:24:19.736628      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:24:20.261607 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:24:20.736771      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:24:21.736957      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:24:22.266603 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:24:22.737063      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:24:23.737296      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:24:24.272092 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:24:24.737391      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:24:25.738402      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:24:26.276539 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:24:26.739096      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:24:27.739232      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:24:28.280470 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:24:28.739991      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:24:29.740877      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:24:30.285915 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:24:30.741331      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:24:31.741445      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:24:32.290123 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:24:32.742396      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:24:33.742585      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:24:34.296264 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:24:34.742815      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:24:35.742999      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:24:36.300048 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:24:36.743554      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:24:37.743742      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:24:38.303890 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:24:38.744451      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:24:39.744568      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:24:40.308427 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:24:40.744954      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:24:41.745118      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:24:42.313063 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:24:42.745499      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:24:43.745686      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:24:44.318066 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:24:44.746682      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:24:45.746872      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:24:46.323360 20 container_probe.go:1758] Get pod test-webserver-3f97c890-593f-40d5-92aa-dc5c189fbdcc in namespace container-probe-8871
  E0712 13:24:46.747893      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:24:47.748004      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 07/12/25 13:24:48.323
  I0712 13:24:48.339832 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8871" for this suite. @ 07/12/25 13:24:48.342
• [242.670 seconds]
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 07/12/25 13:24:48.348
  I0712 13:24:48.348354 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename kubelet-test @ 07/12/25 13:24:48.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:24:48.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:24:48.363
  E0712 13:24:48.748895      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:24:49.749706      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:24:50.399971 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7656" for this suite. @ 07/12/25 13:24:50.404
• [2.063 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:402
  STEP: Creating a kubernetes client @ 07/12/25 13:24:50.411
  I0712 13:24:50.411126 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename resourcequota @ 07/12/25 13:24:50.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:24:50.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:24:50.426
  STEP: Counting existing ResourceQuota @ 07/12/25 13:24:50.428
  E0712 13:24:50.750409      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:24:51.750502      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:24:52.750999      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:24:53.751418      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:24:54.752269      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/12/25 13:24:55.434
  STEP: Ensuring resource quota status is calculated @ 07/12/25 13:24:55.441
  E0712 13:24:55.752366      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:24:56.752633      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 07/12/25 13:24:57.446
  STEP: Ensuring resource quota status captures replication controller creation @ 07/12/25 13:24:57.458
  E0712 13:24:57.753358      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:24:58.753466      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 07/12/25 13:24:59.463
  STEP: Ensuring resource quota status released usage @ 07/12/25 13:24:59.469
  E0712 13:24:59.754158      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:00.754399      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:25:01.475374 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2029" for this suite. @ 07/12/25 13:25:01.48
• [11.075 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:477
  STEP: Creating a kubernetes client @ 07/12/25 13:25:01.486
  I0712 13:25:01.486749 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename sched-preemption @ 07/12/25 13:25:01.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:25:01.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:25:01.5
  I0712 13:25:01.517494 20 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0712 13:25:01.755105      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:02.755252      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:03.755716      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:04.755849      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:05.756918      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:06.757054      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:07.757173      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:08.757302      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:09.758103      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:10.758337      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:11.758433      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:12.758654      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:13.758777      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:14.758876      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:15.758996      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:16.759062      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:17.759225      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:18.759688      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:19.759779      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:20.759849      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:21.760413      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:22.760501      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:23.760890      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:24.761887      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:25.762009      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:26.762091      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:27.762413      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:28.762620      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:29.763082      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:30.763181      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:31.763269      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:32.763449      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:33.764118      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:34.764929      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:35.765971      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:36.766068      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:37.766194      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:38.766558      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:39.767317      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:40.767427      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:41.767553      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:42.767762      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:43.768236      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:44.768902      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:45.768995      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:46.769095      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:47.769192      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:48.769347      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:49.769429      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:50.770399      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:51.771168      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:52.771337      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:53.771765      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:54.771848      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:55.772400      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:56.772508      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:57.773393      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:58.773581      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:25:59.774093      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:00.774300      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:26:01.522497 20 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 07/12/25 13:26:01.526
  STEP: Adding a custom resource @ 07/12/25 13:26:01.526
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 07/12/25 13:26:01.535
  I0712 13:26:01.544348 20 preemption.go:511] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 07/12/25 13:26:01.544
  E0712 13:26:01.774373      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:02.774460      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 07/12/25 13:26:03.552
  I0712 13:26:03.557844 20 preemption.go:529] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 07/12/25 13:26:03.557
  E0712 13:26:03.774595      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:04.774724      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 07/12/25 13:26:05.566
  I0712 13:26:05.570406 20 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  E0712 13:26:05.775749      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:26:06.084654 20 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 07/12/25 13:26:06.102
  STEP: Removing a custom resource @ 07/12/25 13:26:06.112
  STEP: Removing a custom resource @ 07/12/25 13:26:06.135
  I0712 13:26:06.143473 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5402" for this suite. @ 07/12/25 13:26:06.146
• [64.668 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 07/12/25 13:26:06.154
  I0712 13:26:06.154427 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename proxy @ 07/12/25 13:26:06.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:26:06.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:26:06.169
  STEP: starting an echo server on multiple ports @ 07/12/25 13:26:06.185
  I0712 13:26:06.195449 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0712 13:26:06.776081      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:07.776980      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:26:08.212791      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0712 13:26:08.212854 20 proxy.go:273] setup took 2.04079757s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 07/12/25 13:26:08.212
  I0712 13:26:08.219231 20 proxy.go:601] (0) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 6.129992ms)
  I0712 13:26:08.219361 20 proxy.go:601] (0) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/rewriteme"... (200; 6.343159ms)
  I0712 13:26:08.219812 20 proxy.go:601] (0) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 6.441586ms)
  I0712 13:26:08.219822 20 proxy.go:601] (0) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/rewri... (200; 6.380949ms)
  I0712 13:26:08.219985 20 proxy.go:601] (0) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/... (200; 6.633317ms)
  I0712 13:26:08.220080 20 proxy.go:601] (0) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 6.779889ms)
  I0712 13:26:08.220093 20 proxy.go:601] (0) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 6.670022ms)
  I0712 13:26:08.221783 20 proxy.go:601] (0) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname1/proxy/: foo (200; 8.518421ms)
  I0712 13:26:08.221859 20 proxy.go:601] (0) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname1/proxy/: foo (200; 8.706628ms)
  I0712 13:26:08.221884 20 proxy.go:601] (0) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname2/proxy/: bar (200; 8.497363ms)
  I0712 13:26:08.221901 20 proxy.go:601] (0) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname2/proxy/: bar (200; 8.495727ms)
  I0712 13:26:08.224018 20 proxy.go:601] (0) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:460/proxy/: tls baz (200; 10.842821ms)
  I0712 13:26:08.224121 20 proxy.go:601] (0) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname1/proxy/: tls baz (200; 10.793017ms)
  I0712 13:26:08.224379 20 proxy.go:601] (0) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/... (200; 11.270674ms)
  I0712 13:26:08.225166 20 proxy.go:601] (0) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname2/proxy/: tls qux (200; 12.245334ms)
  I0712 13:26:08.225182 20 proxy.go:601] (0) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:462/proxy/: tls qux (200; 11.963515ms)
  I0712 13:26:08.228820 20 proxy.go:601] (1) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 3.59255ms)
  I0712 13:26:08.229417 20 proxy.go:601] (1) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 3.963557ms)
  I0712 13:26:08.229969 20 proxy.go:601] (1) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/rewri... (200; 4.689176ms)
  I0712 13:26:08.230141 20 proxy.go:601] (1) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:460/proxy/: tls baz (200; 4.836478ms)
  I0712 13:26:08.230141 20 proxy.go:601] (1) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:462/proxy/: tls qux (200; 4.723726ms)
  I0712 13:26:08.230283 20 proxy.go:601] (1) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/... (200; 4.785034ms)
  I0712 13:26:08.230626 20 proxy.go:601] (1) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 5.110771ms)
  I0712 13:26:08.231094 20 proxy.go:601] (1) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/rewriteme"... (200; 5.747089ms)
  I0712 13:26:08.231581 20 proxy.go:601] (1) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 6.214751ms)
  I0712 13:26:08.231750 20 proxy.go:601] (1) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/... (200; 6.365943ms)
  I0712 13:26:08.231765 20 proxy.go:601] (1) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname2/proxy/: bar (200; 6.508523ms)
  I0712 13:26:08.231765 20 proxy.go:601] (1) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname1/proxy/: tls baz (200; 6.295112ms)
  I0712 13:26:08.231776 20 proxy.go:601] (1) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname2/proxy/: tls qux (200; 6.451062ms)
  I0712 13:26:08.232256 20 proxy.go:601] (1) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname2/proxy/: bar (200; 7.028765ms)
  I0712 13:26:08.232579 20 proxy.go:601] (1) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname1/proxy/: foo (200; 7.143666ms)
  I0712 13:26:08.232581 20 proxy.go:601] (1) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname1/proxy/: foo (200; 7.180275ms)
  I0712 13:26:08.237010 20 proxy.go:601] (2) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/rewri... (200; 4.400452ms)
  I0712 13:26:08.237010 20 proxy.go:601] (2) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 4.254451ms)
  I0712 13:26:08.237045 20 proxy.go:601] (2) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/rewriteme"... (200; 4.405499ms)
  I0712 13:26:08.237126 20 proxy.go:601] (2) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:460/proxy/: tls baz (200; 4.456784ms)
  I0712 13:26:08.237696 20 proxy.go:601] (2) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/... (200; 4.829837ms)
  I0712 13:26:08.237977 20 proxy.go:601] (2) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 5.124167ms)
  I0712 13:26:08.237988 20 proxy.go:601] (2) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 5.178233ms)
  I0712 13:26:08.238083 20 proxy.go:601] (2) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:462/proxy/: tls qux (200; 5.39337ms)
  I0712 13:26:08.238326 20 proxy.go:601] (2) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/... (200; 5.590671ms)
  I0712 13:26:08.238472 20 proxy.go:601] (2) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 5.570646ms)
  I0712 13:26:08.238517 20 proxy.go:601] (2) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname2/proxy/: tls qux (200; 5.727319ms)
  I0712 13:26:08.239000 20 proxy.go:601] (2) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname2/proxy/: bar (200; 6.082816ms)
  I0712 13:26:08.239254 20 proxy.go:601] (2) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname1/proxy/: tls baz (200; 6.53964ms)
  I0712 13:26:08.239555 20 proxy.go:601] (2) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname1/proxy/: foo (200; 6.722723ms)
  I0712 13:26:08.239734 20 proxy.go:601] (2) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname2/proxy/: bar (200; 6.962713ms)
  I0712 13:26:08.239819 20 proxy.go:601] (2) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname1/proxy/: foo (200; 6.936578ms)
  I0712 13:26:08.243667 20 proxy.go:601] (3) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 3.722869ms)
  I0712 13:26:08.244133 20 proxy.go:601] (3) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:462/proxy/: tls qux (200; 4.075788ms)
  I0712 13:26:08.244741 20 proxy.go:601] (3) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/... (200; 4.566816ms)
  I0712 13:26:08.244749 20 proxy.go:601] (3) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname1/proxy/: foo (200; 4.896254ms)
  I0712 13:26:08.244835 20 proxy.go:601] (3) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:460/proxy/: tls baz (200; 4.831093ms)
  I0712 13:26:08.245092 20 proxy.go:601] (3) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/rewri... (200; 5.106394ms)
  I0712 13:26:08.245135 20 proxy.go:601] (3) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 5.212813ms)
  I0712 13:26:08.245523 20 proxy.go:601] (3) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 5.368607ms)
  I0712 13:26:08.245868 20 proxy.go:601] (3) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 5.67634ms)
  I0712 13:26:08.246566 20 proxy.go:601] (3) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname1/proxy/: tls baz (200; 6.489396ms)
  I0712 13:26:08.246596 20 proxy.go:601] (3) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/... (200; 6.483004ms)
  I0712 13:26:08.246635 20 proxy.go:601] (3) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/rewriteme"... (200; 6.502799ms)
  I0712 13:26:08.247010 20 proxy.go:601] (3) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname2/proxy/: bar (200; 6.982462ms)
  I0712 13:26:08.247073 20 proxy.go:601] (3) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname1/proxy/: foo (200; 7.235644ms)
  I0712 13:26:08.247155 20 proxy.go:601] (3) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname2/proxy/: bar (200; 7.187451ms)
  I0712 13:26:08.249319 20 proxy.go:601] (3) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname2/proxy/: tls qux (200; 9.205177ms)
  I0712 13:26:08.253910 20 proxy.go:601] (4) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 4.555589ms)
  I0712 13:26:08.254704 20 proxy.go:601] (4) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/rewri... (200; 5.178857ms)
  I0712 13:26:08.255488 20 proxy.go:601] (4) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/rewriteme"... (200; 5.984782ms)
  I0712 13:26:08.255541 20 proxy.go:601] (4) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname2/proxy/: bar (200; 6.113382ms)
  I0712 13:26:08.255951 20 proxy.go:601] (4) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/... (200; 6.382964ms)
  I0712 13:26:08.255971 20 proxy.go:601] (4) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname1/proxy/: foo (200; 6.387313ms)
  I0712 13:26:08.256043 20 proxy.go:601] (4) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 6.425002ms)
  I0712 13:26:08.256296 20 proxy.go:601] (4) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/... (200; 6.606364ms)
  I0712 13:26:08.256340 20 proxy.go:601] (4) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:462/proxy/: tls qux (200; 6.667701ms)
  I0712 13:26:08.256663 20 proxy.go:601] (4) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:460/proxy/: tls baz (200; 7.008113ms)
  I0712 13:26:08.256676 20 proxy.go:601] (4) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname2/proxy/: bar (200; 7.215196ms)
  I0712 13:26:08.256868 20 proxy.go:601] (4) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname1/proxy/: foo (200; 7.265803ms)
  I0712 13:26:08.257015 20 proxy.go:601] (4) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 7.463994ms)
  I0712 13:26:08.257255 20 proxy.go:601] (4) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname2/proxy/: tls qux (200; 7.785957ms)
  I0712 13:26:08.257391 20 proxy.go:601] (4) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname1/proxy/: tls baz (200; 7.754008ms)
  I0712 13:26:08.258140 20 proxy.go:601] (4) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 8.427183ms)
  I0712 13:26:08.261942 20 proxy.go:601] (5) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/... (200; 3.750707ms)
  I0712 13:26:08.262325 20 proxy.go:601] (5) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:462/proxy/: tls qux (200; 4.163478ms)
  I0712 13:26:08.262442 20 proxy.go:601] (5) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/... (200; 4.187554ms)
  I0712 13:26:08.263713 20 proxy.go:601] (5) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:460/proxy/: tls baz (200; 5.240463ms)
  I0712 13:26:08.263906 20 proxy.go:601] (5) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 5.540311ms)
  I0712 13:26:08.263924 20 proxy.go:601] (5) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 5.65237ms)
  I0712 13:26:08.264049 20 proxy.go:601] (5) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname1/proxy/: tls baz (200; 5.815352ms)
  I0712 13:26:08.264061 20 proxy.go:601] (5) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 5.605972ms)
  I0712 13:26:08.264067 20 proxy.go:601] (5) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/rewri... (200; 5.645785ms)
  I0712 13:26:08.264170 20 proxy.go:601] (5) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/rewriteme"... (200; 5.845235ms)
  I0712 13:26:08.264728 20 proxy.go:601] (5) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 6.382167ms)
  I0712 13:26:08.265099 20 proxy.go:601] (5) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname2/proxy/: tls qux (200; 6.791587ms)
  I0712 13:26:08.265137 20 proxy.go:601] (5) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname1/proxy/: foo (200; 6.699805ms)
  I0712 13:26:08.265277 20 proxy.go:601] (5) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname2/proxy/: bar (200; 6.897041ms)
  I0712 13:26:08.265284 20 proxy.go:601] (5) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname2/proxy/: bar (200; 6.995653ms)
  I0712 13:26:08.266832 20 proxy.go:601] (5) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname1/proxy/: foo (200; 8.426009ms)
  I0712 13:26:08.270985 20 proxy.go:601] (6) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 4.097831ms)
  I0712 13:26:08.270996 20 proxy.go:601] (6) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 4.141887ms)
  I0712 13:26:08.271652 20 proxy.go:601] (6) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/rewriteme"... (200; 4.622974ms)
  I0712 13:26:08.271921 20 proxy.go:601] (6) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname2/proxy/: bar (200; 5.007496ms)
  I0712 13:26:08.272180 20 proxy.go:601] (6) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 5.040071ms)
  I0712 13:26:08.272626 20 proxy.go:601] (6) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/... (200; 5.529193ms)
  I0712 13:26:08.273442 20 proxy.go:601] (6) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 6.471572ms)
  I0712 13:26:08.275547 20 proxy.go:601] (6) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:460/proxy/: tls baz (200; 8.500559ms)
  I0712 13:26:08.275556 20 proxy.go:601] (6) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/... (200; 8.432581ms)
  I0712 13:26:08.276995 20 proxy.go:601] (6) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname2/proxy/: bar (200; 10.000359ms)
  I0712 13:26:08.280046 20 proxy.go:601] (6) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname1/proxy/: tls baz (200; 12.964089ms)
  I0712 13:26:08.280078 20 proxy.go:601] (6) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:462/proxy/: tls qux (200; 13.018329ms)
  I0712 13:26:08.280083 20 proxy.go:601] (6) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname2/proxy/: tls qux (200; 13.1307ms)
  I0712 13:26:08.280540 20 proxy.go:601] (6) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname1/proxy/: foo (200; 13.380761ms)
  I0712 13:26:08.281610 20 proxy.go:601] (6) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/rewri... (200; 14.595881ms)
  I0712 13:26:08.283058 20 proxy.go:601] (6) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname1/proxy/: foo (200; 15.882363ms)
  I0712 13:26:08.294051 20 proxy.go:601] (7) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/rewri... (200; 10.816255ms)
  I0712 13:26:08.294059 20 proxy.go:601] (7) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 10.837627ms)
  I0712 13:26:08.294568 20 proxy.go:601] (7) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:460/proxy/: tls baz (200; 11.116485ms)
  I0712 13:26:08.296048 20 proxy.go:601] (7) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 12.625301ms)
  I0712 13:26:08.296058 20 proxy.go:601] (7) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 12.52867ms)
  I0712 13:26:08.296067 20 proxy.go:601] (7) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/rewriteme"... (200; 12.962945ms)
  I0712 13:26:08.296636 20 proxy.go:601] (7) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname1/proxy/: foo (200; 13.28168ms)
  I0712 13:26:08.297939 20 proxy.go:601] (7) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/... (200; 14.631274ms)
  I0712 13:26:08.299224 20 proxy.go:601] (7) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:462/proxy/: tls qux (200; 15.711842ms)
  I0712 13:26:08.300906 20 proxy.go:601] (7) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname1/proxy/: foo (200; 17.516559ms)
  I0712 13:26:08.300906 20 proxy.go:601] (7) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname2/proxy/: tls qux (200; 17.308532ms)
  I0712 13:26:08.301078 20 proxy.go:601] (7) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname1/proxy/: tls baz (200; 17.530004ms)
  I0712 13:26:08.301297 20 proxy.go:601] (7) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 17.827109ms)
  I0712 13:26:08.301652 20 proxy.go:601] (7) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/... (200; 18.071376ms)
  I0712 13:26:08.303255 20 proxy.go:601] (7) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname2/proxy/: bar (200; 19.691048ms)
  I0712 13:26:08.303274 20 proxy.go:601] (7) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname2/proxy/: bar (200; 19.787659ms)
  I0712 13:26:08.312316 20 proxy.go:601] (8) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/rewriteme"... (200; 9.022242ms)
  I0712 13:26:08.316642 20 proxy.go:601] (8) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname2/proxy/: bar (200; 13.159297ms)
  I0712 13:26:08.316681 20 proxy.go:601] (8) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/... (200; 13.234161ms)
  I0712 13:26:08.319008 20 proxy.go:601] (8) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname1/proxy/: foo (200; 15.431897ms)
  I0712 13:26:08.319051 20 proxy.go:601] (8) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/... (200; 15.494395ms)
  I0712 13:26:08.319067 20 proxy.go:601] (8) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:460/proxy/: tls baz (200; 15.699479ms)
  I0712 13:26:08.320089 20 proxy.go:601] (8) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 16.472267ms)
  I0712 13:26:08.320423 20 proxy.go:601] (8) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 16.956633ms)
  I0712 13:26:08.320809 20 proxy.go:601] (8) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:462/proxy/: tls qux (200; 17.400247ms)
  I0712 13:26:08.320962 20 proxy.go:601] (8) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname1/proxy/: foo (200; 17.444113ms)
  I0712 13:26:08.321706 20 proxy.go:601] (8) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 18.110632ms)
  I0712 13:26:08.323008 20 proxy.go:601] (8) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname2/proxy/: tls qux (200; 19.510802ms)
  I0712 13:26:08.323015 20 proxy.go:601] (8) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 19.479828ms)
  I0712 13:26:08.323224 20 proxy.go:601] (8) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname1/proxy/: tls baz (200; 19.796911ms)
  I0712 13:26:08.323224 20 proxy.go:601] (8) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/rewri... (200; 19.882619ms)
  I0712 13:26:08.323655 20 proxy.go:601] (8) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname2/proxy/: bar (200; 20.013087ms)
  I0712 13:26:08.331280 20 proxy.go:601] (9) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/rewriteme"... (200; 7.494633ms)
  I0712 13:26:08.332684 20 proxy.go:601] (9) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/rewri... (200; 8.834913ms)
  I0712 13:26:08.332684 20 proxy.go:601] (9) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 9.003045ms)
  I0712 13:26:08.332711 20 proxy.go:601] (9) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 8.901302ms)
  I0712 13:26:08.334623 20 proxy.go:601] (9) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/... (200; 10.74021ms)
  I0712 13:26:08.334660 20 proxy.go:601] (9) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:462/proxy/: tls qux (200; 10.762252ms)
  I0712 13:26:08.338118 20 proxy.go:601] (9) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname1/proxy/: foo (200; 14.11846ms)
  I0712 13:26:08.338514 20 proxy.go:601] (9) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/... (200; 14.583172ms)
  I0712 13:26:08.339521 20 proxy.go:601] (9) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:460/proxy/: tls baz (200; 15.653971ms)
  I0712 13:26:08.339521 20 proxy.go:601] (9) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname2/proxy/: tls qux (200; 15.765368ms)
  I0712 13:26:08.339644 20 proxy.go:601] (9) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname1/proxy/: foo (200; 15.676092ms)
  I0712 13:26:08.339979 20 proxy.go:601] (9) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname2/proxy/: bar (200; 16.237565ms)
  I0712 13:26:08.340176 20 proxy.go:601] (9) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 16.195804ms)
  I0712 13:26:08.340339 20 proxy.go:601] (9) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 16.391217ms)
  I0712 13:26:08.341095 20 proxy.go:601] (9) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname1/proxy/: tls baz (200; 17.182193ms)
  I0712 13:26:08.341562 20 proxy.go:601] (9) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname2/proxy/: bar (200; 17.734545ms)
  I0712 13:26:08.353538 20 proxy.go:601] (10) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:462/proxy/: tls qux (200; 11.950751ms)
  I0712 13:26:08.363725 20 proxy.go:601] (10) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 21.993303ms)
  I0712 13:26:08.363771 20 proxy.go:601] (10) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 21.876703ms)
  I0712 13:26:08.363773 20 proxy.go:601] (10) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/... (200; 22.105709ms)
  I0712 13:26:08.363786 20 proxy.go:601] (10) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/rewri... (200; 21.873597ms)
  I0712 13:26:08.363792 20 proxy.go:601] (10) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/... (200; 22.084114ms)
  I0712 13:26:08.363802 20 proxy.go:601] (10) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname2/proxy/: tls qux (200; 22.012575ms)
  I0712 13:26:08.363802 20 proxy.go:601] (10) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:460/proxy/: tls baz (200; 21.87388ms)
  I0712 13:26:08.363814 20 proxy.go:601] (10) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname1/proxy/: tls baz (200; 22.147967ms)
  I0712 13:26:08.363817 20 proxy.go:601] (10) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname2/proxy/: bar (200; 22.069575ms)
  I0712 13:26:08.363825 20 proxy.go:601] (10) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname1/proxy/: foo (200; 22.018126ms)
  I0712 13:26:08.363830 20 proxy.go:601] (10) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname1/proxy/: foo (200; 22.06408ms)
  I0712 13:26:08.364390 20 proxy.go:601] (10) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/rewriteme"... (200; 22.562055ms)
  I0712 13:26:08.365636 20 proxy.go:601] (10) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 23.774712ms)
  I0712 13:26:08.365647 20 proxy.go:601] (10) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 23.801473ms)
  I0712 13:26:08.366585 20 proxy.go:601] (10) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname2/proxy/: bar (200; 24.704476ms)
  I0712 13:26:08.374649 20 proxy.go:601] (11) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/... (200; 8.028151ms)
  I0712 13:26:08.375639 20 proxy.go:601] (11) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/... (200; 8.838374ms)
  I0712 13:26:08.375652 20 proxy.go:601] (11) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/rewriteme"... (200; 8.78165ms)
  I0712 13:26:08.376274 20 proxy.go:601] (11) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 9.38811ms)
  I0712 13:26:08.378241 20 proxy.go:601] (11) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 11.424286ms)
  I0712 13:26:08.378317 20 proxy.go:601] (11) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 11.412864ms)
  I0712 13:26:08.378341 20 proxy.go:601] (11) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/rewri... (200; 11.361611ms)
  I0712 13:26:08.378354 20 proxy.go:601] (11) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 11.395464ms)
  I0712 13:26:08.378895 20 proxy.go:601] (11) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:462/proxy/: tls qux (200; 12.137212ms)
  I0712 13:26:08.378895 20 proxy.go:601] (11) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname1/proxy/: foo (200; 12.175189ms)
  I0712 13:26:08.379773 20 proxy.go:601] (11) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname1/proxy/: foo (200; 12.844897ms)
  I0712 13:26:08.380354 20 proxy.go:601] (11) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname2/proxy/: bar (200; 13.408881ms)
  I0712 13:26:08.380566 20 proxy.go:601] (11) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname1/proxy/: tls baz (200; 13.800681ms)
  I0712 13:26:08.380576 20 proxy.go:601] (11) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname2/proxy/: tls qux (200; 13.724416ms)
  I0712 13:26:08.380587 20 proxy.go:601] (11) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname2/proxy/: bar (200; 13.753113ms)
  I0712 13:26:08.380764 20 proxy.go:601] (11) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:460/proxy/: tls baz (200; 13.769761ms)
  I0712 13:26:08.385549 20 proxy.go:601] (12) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/rewriteme"... (200; 4.71181ms)
  I0712 13:26:08.385580 20 proxy.go:601] (12) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 4.718464ms)
  I0712 13:26:08.386175 20 proxy.go:601] (12) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:460/proxy/: tls baz (200; 5.238443ms)
  I0712 13:26:08.386177 20 proxy.go:601] (12) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/... (200; 5.290999ms)
  I0712 13:26:08.386411 20 proxy.go:601] (12) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 5.613435ms)
  I0712 13:26:08.386419 20 proxy.go:601] (12) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/rewri... (200; 5.498735ms)
  I0712 13:26:08.386718 20 proxy.go:601] (12) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname2/proxy/: bar (200; 5.816673ms)
  I0712 13:26:08.386733 20 proxy.go:601] (12) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:462/proxy/: tls qux (200; 5.780111ms)
  I0712 13:26:08.386905 20 proxy.go:601] (12) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/... (200; 5.910031ms)
  I0712 13:26:08.387635 20 proxy.go:601] (12) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 6.608638ms)
  I0712 13:26:08.387662 20 proxy.go:601] (12) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname2/proxy/: tls qux (200; 6.864788ms)
  I0712 13:26:08.387677 20 proxy.go:601] (12) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 6.591891ms)
  I0712 13:26:08.387833 20 proxy.go:601] (12) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname1/proxy/: foo (200; 6.771001ms)
  I0712 13:26:08.388701 20 proxy.go:601] (12) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname1/proxy/: foo (200; 7.69065ms)
  I0712 13:26:08.389189 20 proxy.go:601] (12) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname2/proxy/: bar (200; 8.145052ms)
  I0712 13:26:08.389384 20 proxy.go:601] (12) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname1/proxy/: tls baz (200; 8.407448ms)
  I0712 13:26:08.393444 20 proxy.go:601] (13) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 4.028513ms)
  I0712 13:26:08.394117 20 proxy.go:601] (13) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/rewriteme"... (200; 4.550752ms)
  I0712 13:26:08.394302 20 proxy.go:601] (13) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:462/proxy/: tls qux (200; 4.501499ms)
  I0712 13:26:08.394525 20 proxy.go:601] (13) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 4.914459ms)
  I0712 13:26:08.394699 20 proxy.go:601] (13) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 5.269159ms)
  I0712 13:26:08.394789 20 proxy.go:601] (13) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/... (200; 5.099571ms)
  I0712 13:26:08.394982 20 proxy.go:601] (13) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/... (200; 5.199795ms)
  I0712 13:26:08.395052 20 proxy.go:601] (13) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/rewri... (200; 5.39451ms)
  I0712 13:26:08.395332 20 proxy.go:601] (13) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 5.817774ms)
  I0712 13:26:08.395565 20 proxy.go:601] (13) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname1/proxy/: tls baz (200; 5.797139ms)
  I0712 13:26:08.395609 20 proxy.go:601] (13) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:460/proxy/: tls baz (200; 5.902214ms)
  I0712 13:26:08.396024 20 proxy.go:601] (13) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname2/proxy/: bar (200; 6.562672ms)
  I0712 13:26:08.396501 20 proxy.go:601] (13) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname1/proxy/: foo (200; 6.754512ms)
  I0712 13:26:08.396638 20 proxy.go:601] (13) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname1/proxy/: foo (200; 6.914419ms)
  I0712 13:26:08.396823 20 proxy.go:601] (13) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname2/proxy/: bar (200; 7.183288ms)
  I0712 13:26:08.396845 20 proxy.go:601] (13) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname2/proxy/: tls qux (200; 7.364489ms)
  I0712 13:26:08.401712 20 proxy.go:601] (14) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:462/proxy/: tls qux (200; 4.640548ms)
  I0712 13:26:08.401895 20 proxy.go:601] (14) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/rewriteme"... (200; 4.91068ms)
  I0712 13:26:08.401895 20 proxy.go:601] (14) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 5.02783ms)
  I0712 13:26:08.401923 20 proxy.go:601] (14) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/... (200; 4.900913ms)
  I0712 13:26:08.402018 20 proxy.go:601] (14) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname1/proxy/: foo (200; 4.979235ms)
  I0712 13:26:08.402156 20 proxy.go:601] (14) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 5.070444ms)
  I0712 13:26:08.402174 20 proxy.go:601] (14) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/... (200; 5.069232ms)
  I0712 13:26:08.402320 20 proxy.go:601] (14) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/rewri... (200; 5.385219ms)
  I0712 13:26:08.402658 20 proxy.go:601] (14) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:460/proxy/: tls baz (200; 5.711654ms)
  I0712 13:26:08.402826 20 proxy.go:601] (14) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname2/proxy/: bar (200; 5.928892ms)
  I0712 13:26:08.403250 20 proxy.go:601] (14) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 6.109927ms)
  I0712 13:26:08.403339 20 proxy.go:601] (14) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 6.334529ms)
  I0712 13:26:08.403607 20 proxy.go:601] (14) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname2/proxy/: bar (200; 6.747841ms)
  I0712 13:26:08.403623 20 proxy.go:601] (14) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname2/proxy/: tls qux (200; 6.658984ms)
  I0712 13:26:08.403773 20 proxy.go:601] (14) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname1/proxy/: foo (200; 6.719117ms)
  I0712 13:26:08.404155 20 proxy.go:601] (14) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname1/proxy/: tls baz (200; 7.032977ms)
  I0712 13:26:08.407648 20 proxy.go:601] (15) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 3.407793ms)
  I0712 13:26:08.407776 20 proxy.go:601] (15) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/rewriteme"... (200; 3.600156ms)
  I0712 13:26:08.408569 20 proxy.go:601] (15) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 4.249447ms)
  I0712 13:26:08.408584 20 proxy.go:601] (15) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:462/proxy/: tls qux (200; 4.197441ms)
  I0712 13:26:08.408768 20 proxy.go:601] (15) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:460/proxy/: tls baz (200; 4.397109ms)
  I0712 13:26:08.409039 20 proxy.go:601] (15) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/... (200; 4.792717ms)
  I0712 13:26:08.409262 20 proxy.go:601] (15) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 4.855963ms)
  I0712 13:26:08.409513 20 proxy.go:601] (15) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname1/proxy/: foo (200; 5.231377ms)
  I0712 13:26:08.409582 20 proxy.go:601] (15) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/rewri... (200; 5.408736ms)
  I0712 13:26:08.409970 20 proxy.go:601] (15) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 5.669552ms)
  I0712 13:26:08.410247 20 proxy.go:601] (15) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/... (200; 5.893869ms)
  I0712 13:26:08.410985 20 proxy.go:601] (15) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname1/proxy/: foo (200; 6.720801ms)
  I0712 13:26:08.411297 20 proxy.go:601] (15) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname2/proxy/: bar (200; 6.852278ms)
  I0712 13:26:08.411441 20 proxy.go:601] (15) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname2/proxy/: bar (200; 7.105466ms)
  I0712 13:26:08.411836 20 proxy.go:601] (15) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname1/proxy/: tls baz (200; 7.40884ms)
  I0712 13:26:08.411847 20 proxy.go:601] (15) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname2/proxy/: tls qux (200; 7.388589ms)
  I0712 13:26:08.416409 20 proxy.go:601] (16) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 4.435158ms)
  I0712 13:26:08.416603 20 proxy.go:601] (16) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 4.437871ms)
  I0712 13:26:08.416619 20 proxy.go:601] (16) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname1/proxy/: foo (200; 4.755727ms)
  I0712 13:26:08.416785 20 proxy.go:601] (16) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/rewri... (200; 4.747078ms)
  I0712 13:26:08.417238 20 proxy.go:601] (16) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/... (200; 5.164444ms)
  I0712 13:26:08.417575 20 proxy.go:601] (16) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 5.583535ms)
  I0712 13:26:08.417986 20 proxy.go:601] (16) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/rewriteme"... (200; 5.838553ms)
  I0712 13:26:08.418005 20 proxy.go:601] (16) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname1/proxy/: tls baz (200; 6.094342ms)
  I0712 13:26:08.418022 20 proxy.go:601] (16) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:460/proxy/: tls baz (200; 5.961575ms)
  I0712 13:26:08.418339 20 proxy.go:601] (16) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:462/proxy/: tls qux (200; 6.152562ms)
  I0712 13:26:08.418352 20 proxy.go:601] (16) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname2/proxy/: bar (200; 6.242455ms)
  I0712 13:26:08.418759 20 proxy.go:601] (16) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname1/proxy/: foo (200; 6.817009ms)
  I0712 13:26:08.418758 20 proxy.go:601] (16) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/... (200; 6.536375ms)
  I0712 13:26:08.418806 20 proxy.go:601] (16) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 6.714459ms)
  I0712 13:26:08.419599 20 proxy.go:601] (16) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname2/proxy/: bar (200; 7.579173ms)
  I0712 13:26:08.420009 20 proxy.go:601] (16) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname2/proxy/: tls qux (200; 7.877931ms)
  I0712 13:26:08.424243 20 proxy.go:601] (17) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/rewri... (200; 4.067049ms)
  I0712 13:26:08.424688 20 proxy.go:601] (17) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 4.603538ms)
  I0712 13:26:08.424853 20 proxy.go:601] (17) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:462/proxy/: tls qux (200; 4.552027ms)
  I0712 13:26:08.425331 20 proxy.go:601] (17) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 5.061327ms)
  I0712 13:26:08.425356 20 proxy.go:601] (17) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/rewriteme"... (200; 5.105258ms)
  I0712 13:26:08.425762 20 proxy.go:601] (17) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 5.375081ms)
  I0712 13:26:08.426021 20 proxy.go:601] (17) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname2/proxy/: bar (200; 5.982654ms)
  I0712 13:26:08.426319 20 proxy.go:601] (17) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/... (200; 5.949656ms)
  I0712 13:26:08.426334 20 proxy.go:601] (17) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 5.982196ms)
  I0712 13:26:08.426621 20 proxy.go:601] (17) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:460/proxy/: tls baz (200; 6.428122ms)
  I0712 13:26:08.426792 20 proxy.go:601] (17) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/... (200; 6.505383ms)
  I0712 13:26:08.427135 20 proxy.go:601] (17) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname2/proxy/: tls qux (200; 6.90672ms)
  I0712 13:26:08.427263 20 proxy.go:601] (17) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname2/proxy/: bar (200; 7.129719ms)
  I0712 13:26:08.427640 20 proxy.go:601] (17) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname1/proxy/: foo (200; 7.304298ms)
  I0712 13:26:08.427728 20 proxy.go:601] (17) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname1/proxy/: tls baz (200; 7.326029ms)
  I0712 13:26:08.427816 20 proxy.go:601] (17) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname1/proxy/: foo (200; 7.498279ms)
  I0712 13:26:08.431861 20 proxy.go:601] (18) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:462/proxy/: tls qux (200; 3.992117ms)
  I0712 13:26:08.432784 20 proxy.go:601] (18) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/... (200; 4.817035ms)
  I0712 13:26:08.432787 20 proxy.go:601] (18) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 4.569942ms)
  I0712 13:26:08.433019 20 proxy.go:601] (18) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 4.94237ms)
  I0712 13:26:08.433081 20 proxy.go:601] (18) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/... (200; 5.237904ms)
  I0712 13:26:08.433366 20 proxy.go:601] (18) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 5.349043ms)
  I0712 13:26:08.433601 20 proxy.go:601] (18) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 5.542816ms)
  I0712 13:26:08.433728 20 proxy.go:601] (18) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:460/proxy/: tls baz (200; 5.602933ms)
  I0712 13:26:08.433871 20 proxy.go:601] (18) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname1/proxy/: foo (200; 5.877555ms)
  I0712 13:26:08.434187 20 proxy.go:601] (18) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/rewri... (200; 6.07891ms)
  I0712 13:26:08.434420 20 proxy.go:601] (18) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname2/proxy/: tls qux (200; 6.277283ms)
  I0712 13:26:08.434813 20 proxy.go:601] (18) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname1/proxy/: foo (200; 6.771267ms)
  I0712 13:26:08.434813 20 proxy.go:601] (18) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/rewriteme"... (200; 6.632984ms)
  I0712 13:26:08.435001 20 proxy.go:601] (18) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname2/proxy/: bar (200; 6.909015ms)
  I0712 13:26:08.435002 20 proxy.go:601] (18) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname1/proxy/: tls baz (200; 7.064017ms)
  I0712 13:26:08.435847 20 proxy.go:601] (18) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname2/proxy/: bar (200; 7.684251ms)
  I0712 13:26:08.439459 20 proxy.go:601] (19) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:443/proxy/... (200; 3.587701ms)
  I0712 13:26:08.440243 20 proxy.go:601] (19) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 3.998457ms)
  I0712 13:26:08.440373 20 proxy.go:601] (19) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/... (200; 4.408284ms)
  I0712 13:26:08.440485 20 proxy.go:601] (19) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:162/proxy/: bar (200; 4.406059ms)
  I0712 13:26:08.440490 20 proxy.go:601] (19) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:462/proxy/: tls qux (200; 4.592727ms)
  I0712 13:26:08.440967 20 proxy.go:601] (19) /api/v1/namespaces/proxy-6396/pods/https:proxy-service-fn2qf-594778bcb8-dq6km:460/proxy/: tls baz (200; 4.802625ms)
  I0712 13:26:08.441580 20 proxy.go:601] (19) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 5.521908ms)
  I0712 13:26:08.441753 20 proxy.go:601] (19) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km:1080/proxy/rewri... (200; 5.607798ms)
  I0712 13:26:08.441810 20 proxy.go:601] (19) /api/v1/namespaces/proxy-6396/pods/http:proxy-service-fn2qf-594778bcb8-dq6km:160/proxy/: foo (200; 5.827742ms)
  I0712 13:26:08.442101 20 proxy.go:601] (19) /api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/: <a href="/api/v1/namespaces/proxy-6396/pods/proxy-service-fn2qf-594778bcb8-dq6km/proxy/rewriteme"... (200; 6.058965ms)
  I0712 13:26:08.442307 20 proxy.go:601] (19) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname2/proxy/: bar (200; 6.302204ms)
  I0712 13:26:08.442532 20 proxy.go:601] (19) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname2/proxy/: tls qux (200; 6.510093ms)
  I0712 13:26:08.442817 20 proxy.go:601] (19) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname1/proxy/: foo (200; 6.596172ms)
  I0712 13:26:08.443015 20 proxy.go:601] (19) /api/v1/namespaces/proxy-6396/services/https:proxy-service-fn2qf:tlsportname1/proxy/: tls baz (200; 7.073168ms)
  I0712 13:26:08.443320 20 proxy.go:601] (19) /api/v1/namespaces/proxy-6396/services/http:proxy-service-fn2qf:portname2/proxy/: bar (200; 7.213758ms)
  I0712 13:26:08.443333 20 proxy.go:601] (19) /api/v1/namespaces/proxy-6396/services/proxy-service-fn2qf:portname1/proxy/: foo (200; 7.147328ms)
  I0712 13:26:08.452279 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6396" for this suite. @ 07/12/25 13:26:08.455
• [2.307 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 07/12/25 13:26:08.462
  I0712 13:26:08.462080 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename downward-api @ 07/12/25 13:26:08.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:26:08.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:26:08.477
  STEP: Creating a pod to test downward API volume plugin @ 07/12/25 13:26:08.48
  E0712 13:26:08.777404      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:09.777516      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:10.777638      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:11.777826      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:26:12.502
  I0712 13:26:12.506473 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod downwardapi-volume-960da70c-2a95-41f0-8fad-2fb23c575e8f container client-container: <nil>
  STEP: delete the pod @ 07/12/25 13:26:12.517
  I0712 13:26:12.531411 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7138" for this suite. @ 07/12/25 13:26:12.535
• [4.080 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:566
  STEP: Creating a kubernetes client @ 07/12/25 13:26:12.542
  I0712 13:26:12.542743 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename webhook @ 07/12/25 13:26:12.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:26:12.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:26:12.558
  STEP: Setting up server cert @ 07/12/25 13:26:12.579
  E0712 13:26:12.778052      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/12/25 13:26:12.857
  STEP: Deploying the webhook pod @ 07/12/25 13:26:12.864
  STEP: Wait for the deployment to be ready @ 07/12/25 13:26:12.877
  I0712 13:26:12.888432 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0712 13:26:13.778184      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:14.778975      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/12/25 13:26:14.901
  STEP: Verifying the service has paired with the endpoint @ 07/12/25 13:26:14.916
  E0712 13:26:15.779385      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:26:15.917478 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 07/12/25 13:26:15.991
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/12/25 13:26:16.021
  STEP: Deleting the collection of validation webhooks @ 07/12/25 13:26:16.046
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/12/25 13:26:16.097
  I0712 13:26:16.146712 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-220" for this suite. @ 07/12/25 13:26:16.15
  STEP: Destroying namespace "webhook-markers-4350" for this suite. @ 07/12/25 13:26:16.156
• [3.621 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 07/12/25 13:26:16.163
  I0712 13:26:16.163690 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename downward-api @ 07/12/25 13:26:16.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:26:16.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:26:16.175
  STEP: Creating a pod to test downward api env vars @ 07/12/25 13:26:16.177
  E0712 13:26:16.779444      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:17.779539      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:18.779632      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:19.779698      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:26:20.198
  I0712 13:26:20.201793 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod downward-api-45c1af4b-bcd1-4b73-a1a8-a432d4192a64 container dapi-container: <nil>
  STEP: delete the pod @ 07/12/25 13:26:20.21
  I0712 13:26:20.227508 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4971" for this suite. @ 07/12/25 13:26:20.231
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1504
  STEP: Creating a kubernetes client @ 07/12/25 13:26:20.239
  I0712 13:26:20.239445 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename services @ 07/12/25 13:26:20.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:26:20.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:26:20.253
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-4656 @ 07/12/25 13:26:20.255
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 07/12/25 13:26:20.275
  STEP: creating service externalsvc in namespace services-4656 @ 07/12/25 13:26:20.275
  I0712 13:26:20.305007 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0712 13:26:20.781231      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:21.781475      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the NodePort service to type=ExternalName @ 07/12/25 13:26:22.32
  I0712 13:26:22.349341 20 resource.go:361] Creating new exec pod
  E0712 13:26:22.782373      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:23.782462      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:26:24.365683 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-4656 exec execpodwmwg6 -- /bin/sh -x -c nslookup nodeport-service.services-4656.svc.cluster.local'
  I0712 13:26:24.488887 20 builder.go:146] stderr: "+ nslookup nodeport-service.services-4656.svc.cluster.local\n"
  I0712 13:26:24.488934 20 builder.go:147] stdout: "Server:\t\t10.152.183.248\nAddress:\t10.152.183.248#53\n\nnodeport-service.services-4656.svc.cluster.local\tcanonical name = externalsvc.services-4656.svc.cluster.local.\nName:\texternalsvc.services-4656.svc.cluster.local\nAddress: 10.152.183.181\n\n"
  I0712 13:26:24.517578 20 service.go:1515] Cleaning up the NodePort to ExternalName test service
  I0712 13:26:24.537254 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4656" for this suite. @ 07/12/25 13:26:24.542
• [4.309 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 07/12/25 13:26:24.549
  I0712 13:26:24.549280 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename taint-single-pod @ 07/12/25 13:26:24.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:26:24.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:26:24.564
  I0712 13:26:24.567103 20 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0712 13:26:24.782562      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:25.782660      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:26.783007      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:27.783115      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:28.783238      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:29.783628      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:30.784571      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:31.784762      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:32.785545      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:33.785630      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:34.786408      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:35.786598      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:36.787648      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:37.788492      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:38.789557      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:39.790395      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:40.791393      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:41.791625      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:42.792406      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:43.793410      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:44.794301      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:45.794483      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:46.795325      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:47.795519      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:48.795665      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:49.795784      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:50.796314      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:51.796429      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:52.796531      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:53.796718      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:54.796924      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:55.797107      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:56.797328      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:57.797438      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:58.798405      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:26:59.798511      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:00.799387      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:01.799878      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:02.800922      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:03.801112      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:04.801699      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:05.802424      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:06.802565      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:07.802759      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:08.803797      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:09.803898      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:10.804861      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:11.805054      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:12.805639      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:13.805831      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:14.806882      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:15.806998      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:16.807144      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:17.807795      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:18.807952      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:19.808946      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:20.809619      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:21.810404      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:22.810578      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:23.811473      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:27:24.568046 20 util.go:390] Waiting for terminating namespaces to be deleted...
  I0712 13:27:24.572860 20 taints.go:144] Starting informer...
  STEP: Starting pod... @ 07/12/25 13:27:24.572
  I0712 13:27:24.787716 20 taints.go:294] Pod is running on ip-172-31-39-13. Tainting Node
  STEP: Trying to apply a taint on the Node @ 07/12/25 13:27:24.787
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/12/25 13:27:24.798
  STEP: Waiting short time to make sure Pod is queued for deletion @ 07/12/25 13:27:24.801
  I0712 13:27:24.801405 20 taints.go:313] Pod wasn't evicted. Proceeding
  I0712 13:27:24.801416 20 taints.go:320] Removing taint from Node
  E0712 13:27:24.811594      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/12/25 13:27:24.812
  STEP: Waiting some time to make sure that toleration time passed. @ 07/12/25 13:27:24.815
  E0712 13:27:25.811763      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:26.812366      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:27.812443      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:28.812587      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:29.812653      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:30.812783      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:31.812861      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:32.812997      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:33.813074      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:34.813972      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:35.814060      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:36.814278      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:37.814456      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:38.814640      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:39.814742      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:40.814924      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:41.815120      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:42.815324      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:43.816395      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:44.817407      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:45.817602      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:46.817790      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:47.817914      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:48.818966      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:49.819960      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:50.820056      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:51.820402      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:52.821403      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:53.822416      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:54.822532      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:55.822726      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:56.823402      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:57.823609      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:58.823809      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:27:59.823919      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:00.824107      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:01.824318      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:02.824502      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:03.824694      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:04.824815      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:05.825001      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:06.825185      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:07.825327      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:08.825519      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:09.825665      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:10.825863      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:11.826059      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:12.826276      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:13.826362      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:14.826453      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:15.826559      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:16.826752      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:17.826948      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:18.827151      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:19.827985      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:20.828166      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:21.828374      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:22.829195      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:23.829366      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:24.830097      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:25.830428      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:26.830499      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:27.830612      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:28.830804      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:29.830903      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:30.830990      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:31.831101      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:32.831189      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:33.831367      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:34.831473      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:35.831549      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:36.831635      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:37.831821      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:38.832410      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:28:39.815159 20 taints.go:329] Pod wasn't evicted. Test successful
  I0712 13:28:39.815350 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-9169" for this suite. @ 07/12/25 13:28:39.82
• [135.278 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 07/12/25 13:28:39.827
  I0712 13:28:39.827474 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename deployment @ 07/12/25 13:28:39.828
  E0712 13:28:39.833336      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:28:39.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:28:39.843
  STEP: creating a Deployment @ 07/12/25 13:28:39.848
  STEP: waiting for Deployment to be created @ 07/12/25 13:28:39.856
  STEP: waiting for all Replicas to be Ready @ 07/12/25 13:28:39.857
  I0712 13:28:39.858346 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0712 13:28:39.858362 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0712 13:28:39.868154 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0712 13:28:39.868176 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0712 13:28:39.886055 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0712 13:28:39.886074 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0712 13:28:39.909779 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0712 13:28:39.909804 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0712 13:28:40.833842      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:28:41.007646 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0712 13:28:41.007681 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0712 13:28:41.271972 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 07/12/25 13:28:41.272
  I0712 13:28:41.281723 20 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 07/12/25 13:28:41.281
  I0712 13:28:41.283287 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 0
  I0712 13:28:41.283307 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 0
  I0712 13:28:41.283318 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 0
  I0712 13:28:41.283326 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 0
  I0712 13:28:41.283337 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 0
  I0712 13:28:41.283343 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 0
  I0712 13:28:41.283410 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 0
  I0712 13:28:41.283418 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 0
  I0712 13:28:41.283426 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 1
  I0712 13:28:41.283433 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 1
  I0712 13:28:41.283554 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 2
  I0712 13:28:41.283566 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 2
  I0712 13:28:41.283576 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 2
  I0712 13:28:41.283582 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 2
  I0712 13:28:41.298734 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 2
  I0712 13:28:41.298767 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 2
  I0712 13:28:41.332243 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 2
  I0712 13:28:41.332275 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 2
  I0712 13:28:41.345538 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 1
  I0712 13:28:41.345564 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 1
  I0712 13:28:41.354405 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 1
  I0712 13:28:41.354428 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 1
  E0712 13:28:41.834000      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:28:42.283537 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 2
  I0712 13:28:42.283580 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 2
  I0712 13:28:42.305121 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 1
  STEP: listing Deployments @ 07/12/25 13:28:42.305
  I0712 13:28:42.308956 20 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 07/12/25 13:28:42.308
  I0712 13:28:42.324625 20 deployment.go:360] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 07/12/25 13:28:42.324
  I0712 13:28:42.331386 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0712 13:28:42.338249 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0712 13:28:42.361293 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0712 13:28:42.383379 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0712 13:28:42.385517 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0712 13:28:42.834799      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:28:43.013369 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0712 13:28:43.281786 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0712 13:28:43.311840 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0712 13:28:43.321045 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0712 13:28:43.835757      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:28:44.027146 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 07/12/25 13:28:44.049
  STEP: fetching the DeploymentStatus @ 07/12/25 13:28:44.057
  I0712 13:28:44.064522 20 deployment.go:448] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 1
  I0712 13:28:44.064588 20 deployment.go:448] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 1
  I0712 13:28:44.064600 20 deployment.go:448] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 1
  I0712 13:28:44.064671 20 deployment.go:448] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 1
  I0712 13:28:44.064690 20 deployment.go:448] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 1
  I0712 13:28:44.064708 20 deployment.go:448] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 2
  I0712 13:28:44.064821 20 deployment.go:448] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 3
  I0712 13:28:44.064829 20 deployment.go:448] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 2
  I0712 13:28:44.064924 20 deployment.go:448] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 2
  I0712 13:28:44.064934 20 deployment.go:448] observed Deployment test-deployment in namespace deployment-7810 with ReadyReplicas 3
  STEP: deleting the Deployment @ 07/12/25 13:28:44.065
  I0712 13:28:44.075270 20 deployment.go:474] observed event type MODIFIED
  I0712 13:28:44.075311 20 deployment.go:474] observed event type MODIFIED
  I0712 13:28:44.075321 20 deployment.go:474] observed event type MODIFIED
  I0712 13:28:44.075413 20 deployment.go:474] observed event type MODIFIED
  I0712 13:28:44.075424 20 deployment.go:474] observed event type MODIFIED
  I0712 13:28:44.075433 20 deployment.go:474] observed event type MODIFIED
  I0712 13:28:44.075537 20 deployment.go:474] observed event type MODIFIED
  I0712 13:28:44.075547 20 deployment.go:474] observed event type MODIFIED
  I0712 13:28:44.075649 20 deployment.go:474] observed event type MODIFIED
  I0712 13:28:44.075662 20 deployment.go:474] observed event type MODIFIED
  I0712 13:28:44.075744 20 deployment.go:474] observed event type MODIFIED
  I0712 13:28:44.075754 20 deployment.go:474] observed event type MODIFIED
  I0712 13:28:44.075898 20 deployment.go:474] observed event type MODIFIED
  I0712 13:28:44.078231 20 deployment.go:649] Log out all the ReplicaSets if there is no deployment created
  I0712 13:28:44.081530 20 deployment.go:656] ReplicaSet "test-deployment-564597bcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-564597bcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7810",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "15b78c57-6206-4c9f-b8cf-1420df46acc5",
      ResourceVersion: (string) (len=5) "40331",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923719,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "a6405aaa-462a-4e70-b480-3cae066de80e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923722,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 61 36 34 30  35 61 61 61 2d 34 36 32  |":\"a6405aaa-462|
              00000130  61 2d 34 65 37 30 2d 62  34 38 30 2d 33 63 61 65  |a-4e70-b480-3cae|
              00000140  30 36 36 64 65 38 30 65  5c 22 7d 22 3a 7b 7d 7d  |066de80e\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923722,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0712 13:28:44.086522 20 deployment.go:656] ReplicaSet "test-deployment-79899bcfcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-79899bcfcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7810",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "710e502a-9d58-47cb-88e5-e2f747ac1b53",
      ResourceVersion: (string) (len=5) "40417",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923722,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "a6405aaa-462a-4e70-b480-3cae066de80e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923723,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 61 36 34 30  35 61 61 61 2d 34 36 32  |":\"a6405aaa-462|
              00000130  61 2d 34 65 37 30 2d 62  34 38 30 2d 33 63 61 65  |a-4e70-b480-3cae|
              00000140  30 36 36 64 65 38 30 65  5c 22 7d 22 3a 7b 7d 7d  |066de80e\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923724,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0712 13:28:44.089940 20 deployment.go:668] pod: "test-deployment-79899bcfcc-4gzb8":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-4gzb8",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-7810",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "606d6f62-530e-42bf-b1c5-7540c70ff989",
      ResourceVersion: (string) (len=5) "40381",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923722,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "710e502a-9d58-47cb-88e5-e2f747ac1b53",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923722,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  37 31 30 65 35 30 32 61  |uid\":\"710e502a|
              000000a0  2d 39 64 35 38 2d 34 37  63 62 2d 38 38 65 35 2d  |-9d58-47cb-88e5-|
              000000b0  65 32 66 37 34 37 61 63  31 62 35 33 5c 22 7d 22  |e2f747ac1b53\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923723,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 34  36 2e 31 34 36 5c 22 7d  |2.168.246.146\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-78fp6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-78fp6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-3-36",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923723,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923722,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923723,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923723,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923722,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.3.36",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.3.36"
        }
      },
      PodIP: (string) (len=15) "192.168.246.146",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.246.146"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923722,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63887923722,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2b40d374bb01e72cf5057d524493c11c3fb63d158e3f6018f42774600a28ad53",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-78fp6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0712 13:28:44.092196 20 deployment.go:668] pod: "test-deployment-79899bcfcc-z6bnd":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-z6bnd",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-7810",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c63b6d2b-31a4-46e5-ba15-40b658a2176e",
      ResourceVersion: (string) (len=5) "40416",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923723,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "710e502a-9d58-47cb-88e5-e2f747ac1b53",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923723,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  37 31 30 65 35 30 32 61  |uid\":\"710e502a|
              000000a0  2d 39 64 35 38 2d 34 37  63 62 2d 38 38 65 35 2d  |-9d58-47cb-88e5-|
              000000b0  65 32 66 37 34 37 61 63  31 62 35 33 5c 22 7d 22  |e2f747ac1b53\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923723,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 33  35 2e 31 39 31 5c 22 7d  |2.168.235.191\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2z488",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2z488",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-39-13",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923723,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923723,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923723,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923723,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923723,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.39.13",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.39.13"
        }
      },
      PodIP: (string) (len=15) "192.168.235.191",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.235.191"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923723,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63887923723,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e97137c2eb532202fc33bba0d68fe4d1f63ad81900080cb338def80aeb0acd56",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2z488",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0712 13:28:44.093974 20 deployment.go:656] ReplicaSet "test-deployment-f78d658f9":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-f78d658f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7810",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "31ba1087-7e69-4913-ba7e-a5acb87ecc05",
      ResourceVersion: (string) (len=5) "40425",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923721,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "a6405aaa-462a-4e70-b480-3cae066de80e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923724,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 61 36 34 30  35 61 61 61 2d 34 36 32  |":\"a6405aaa-462|
              00000130  61 2d 34 65 37 30 2d 62  34 38 30 2d 33 63 61 65  |a-4e70-b480-3cae|
              00000140  30 36 36 64 65 38 30 65  5c 22 7d 22 3a 7b 7d 7d  |066de80e\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923724,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0712 13:28:44.098098 20 deployment.go:668] pod: "test-deployment-f78d658f9-k7pfc":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-f78d658f9-k7pfc",
      GenerateName: (string) (len=26) "test-deployment-f78d658f9-",
      Namespace: (string) (len=15) "deployment-7810",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d12478d3-8991-467d-8dcf-d8d30a3f54bd",
      ResourceVersion: (string) (len=5) "40421",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923722,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923726,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-f78d658f9",
          UID: (types.UID) (len=36) "31ba1087-7e69-4913-ba7e-a5acb87ecc05",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923722,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  33 31 62 61 31 30 38 37  |uid\":\"31ba1087|
              000000a0  2d 37 65 36 39 2d 34 39  31 33 2d 62 61 37 65 2d  |-7e69-4913-ba7e-|
              000000b0  61 35 61 63 62 38 37 65  63 63 30 35 5c 22 7d 22  |a5acb87ecc05\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923722,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 33  35 2e 31 33 31 5c 22 7d  |2.168.235.131\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nwlxk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nwlxk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-39-13",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923722,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923722,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923722,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923722,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923722,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.39.13",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.39.13"
        }
      },
      PodIP: (string) (len=15) "192.168.235.131",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.235.131"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923722,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63887923722,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://9ad411de04a7a72a236f9be5f0881f4374183c8d2605c1a158308bb454315b61",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nwlxk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0712 13:28:44.100465 20 deployment.go:668] pod: "test-deployment-f78d658f9-pmlk7":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-f78d658f9-pmlk7",
      GenerateName: (string) (len=26) "test-deployment-f78d658f9-",
      Namespace: (string) (len=15) "deployment-7810",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5c322364-af94-4682-89d8-6287baaf65a7",
      ResourceVersion: (string) (len=5) "40409",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923721,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923725,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-f78d658f9",
          UID: (types.UID) (len=36) "31ba1087-7e69-4913-ba7e-a5acb87ecc05",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923721,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  33 31 62 61 31 30 38 37  |uid\":\"31ba1087|
              000000a0  2d 37 65 36 39 2d 34 39  31 33 2d 62 61 37 65 2d  |-7e69-4913-ba7e-|
              000000b0  61 35 61 63 62 38 37 65  63 63 30 35 5c 22 7d 22  |a5acb87ecc05\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923723,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=706) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 72 65 61 73 6f 6e  |me":{},"f:reason|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000090  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000000a0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 49  |"k:{\"type\":\"I|
              000000b0  6e 69 74 69 61 6c 69 7a  65 64 5c 22 7d 22 3a 7b  |nitialized\"}":{|
              000000c0  22 2e 22 3a 7b 7d 2c 22  66 3a 6c 61 73 74 50 72  |".":{},"f:lastPr|
              000000d0  6f 62 65 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |obeTime":{},"f:l|
              000000e0  61 73 74 54 72 61 6e 73  69 74 69 6f 6e 54 69 6d  |astTransitionTim|
              000000f0  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000100  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000110  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              00000120  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 50 6f  |k:{\"type\":\"Po|
              00000130  64 52 65 61 64 79 54 6f  53 74 61 72 74 43 6f 6e  |dReadyToStartCon|
              00000140  74 61 69 6e 65 72 73 5c  22 7d 22 3a 7b 22 2e 22  |tainers\"}":{"."|
              00000150  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000160  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000170  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000180  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000190  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 2c 22 6b  |,"f:type":{}},"k|
              000001a0  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 52 65 61  |:{\"type\":\"Rea|
              000001b0  64 79 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |dy\"}":{".":{},"|
              000001c0  66 3a 6c 61 73 74 50 72  6f 62 65 54 69 6d 65 22  |f:lastProbeTime"|
              000001d0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 54 72 61 6e 73  |:{},"f:lastTrans|
              000001e0  69 74 69 6f 6e 54 69 6d  65 22 3a 7b 7d 2c 22 66  |itionTime":{},"f|
              000001f0  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000200  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000210  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000220  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000230  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000240  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000250  3a 70 68 61 73 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |:phase":{},"f:po|
              00000260  64 49 50 22 3a 7b 7d 2c  22 66 3a 70 6f 64 49 50  |dIP":{},"f:podIP|
              00000270  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000280  22 69 70 5c 22 3a 5c 22  31 39 32 2e 31 36 38 2e  |"ip\":\"192.168.|
              00000290  32 34 36 2e 31 34 37 5c  22 7d 22 3a 7b 22 2e 22  |246.147\"}":{"."|
              000002a0  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              000002b0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000002c0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n2wl6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n2wl6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-3-36",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=9) "Succeeded",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923723,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923721,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923723,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923723,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887923721,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.3.36",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.3.36"
        }
      },
      PodIP: (string) (len=15) "192.168.246.147",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.246.147"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887923721,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)({
              ExitCode: (int32) 0,
              Signal: (int32) 0,
              Reason: (string) (len=9) "Completed",
              Message: (string) "",
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63887923721,
                  loc: (*time.Location)(<already shown>)
                }
              },
              FinishedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63887923723,
                  loc: (*time.Location)(<already shown>)
                }
              },
              ContainerID: (string) (len=77) "containerd://c7210ae8bf5e6b3ce47f3050af0a86ae27aa217f3407b389727ada56a9042a7a"
            })
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://c7210ae8bf5e6b3ce47f3050af0a86ae27aa217f3407b389727ada56a9042a7a",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-n2wl6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0712 13:28:44.101674 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7810" for this suite. @ 07/12/25 13:28:44.105
• [4.288 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:921
  STEP: Creating a kubernetes client @ 07/12/25 13:28:44.115
  I0712 13:28:44.115638 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename job @ 07/12/25 13:28:44.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:28:44.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:28:44.13
  STEP: Creating a job @ 07/12/25 13:28:44.132
  STEP: Ensuring active pods == parallelism @ 07/12/25 13:28:44.136
  E0712 13:28:44.835872      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:45.835954      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 07/12/25 13:28:46.15
  I0712 13:28:46.665318 20 pod_client.go:173] Successfully updated pod "adopt-release-d2mlq"
  STEP: Checking that the Job readopts the Pod @ 07/12/25 13:28:46.665
  E0712 13:28:46.836039      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:47.836150      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 07/12/25 13:28:48.672
  E0712 13:28:48.836988      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:28:49.184758 20 pod_client.go:173] Successfully updated pod "adopt-release-d2mlq"
  STEP: Checking that the Job releases the Pod @ 07/12/25 13:28:49.184
  E0712 13:28:49.838039      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:50.838119      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:28:51.194109 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4462" for this suite. @ 07/12/25 13:28:51.198
• [7.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:394
  STEP: Creating a kubernetes client @ 07/12/25 13:28:51.205
  I0712 13:28:51.205386 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename kubectl @ 07/12/25 13:28:51.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:28:51.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:28:51.269
  STEP: creating all guestbook components @ 07/12/25 13:28:51.271
  I0712 13:28:51.271974 20 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0712 13:28:51.272063 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-4192 create -f -'
  I0712 13:28:51.372172 20 builder.go:146] stderr: ""
  I0712 13:28:51.372242 20 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0712 13:28:51.372302 20 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0712 13:28:51.372366 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-4192 create -f -'
  I0712 13:28:51.474645 20 builder.go:146] stderr: ""
  I0712 13:28:51.474686 20 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0712 13:28:51.474734 20 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0712 13:28:51.474815 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-4192 create -f -'
  I0712 13:28:51.569194 20 builder.go:146] stderr: ""
  I0712 13:28:51.569252 20 builder.go:147] stdout: "service/frontend created\n"
  I0712 13:28:51.569340 20 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0712 13:28:51.569426 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-4192 create -f -'
  I0712 13:28:51.632527 20 builder.go:146] stderr: ""
  I0712 13:28:51.632565 20 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0712 13:28:51.632684 20 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0712 13:28:51.632762 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-4192 create -f -'
  I0712 13:28:51.702119 20 builder.go:146] stderr: ""
  I0712 13:28:51.702167 20 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0712 13:28:51.702272 20 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0712 13:28:51.702363 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-4192 create -f -'
  I0712 13:28:51.764983 20 builder.go:146] stderr: ""
  I0712 13:28:51.765020 20 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 07/12/25 13:28:51.765
  I0712 13:28:51.765062 20 kubectl.go:2275] Waiting for all frontend pods to be Running.
  E0712 13:28:51.839121      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:52.839361      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:53.839471      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:54.840414      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:55.841405      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:28:56.816350 20 kubectl.go:2279] Waiting for frontend to serve content.
  I0712 13:28:56.829736 20 kubectl.go:2284] Trying to add a new entry to the guestbook.
  E0712 13:28:56.841949      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:28:56.843337 20 kubectl.go:2289] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 07/12/25 13:28:56.853
  I0712 13:28:56.853746 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-4192 delete --grace-period=0 --force -f -'
  I0712 13:28:56.923787 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0712 13:28:56.923833 20 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 07/12/25 13:28:56.923
  I0712 13:28:56.923934 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-4192 delete --grace-period=0 --force -f -'
  I0712 13:28:56.986081 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0712 13:28:56.986120 20 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 07/12/25 13:28:56.986
  I0712 13:28:56.986302 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-4192 delete --grace-period=0 --force -f -'
  I0712 13:28:57.054614 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0712 13:28:57.054651 20 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 07/12/25 13:28:57.054
  I0712 13:28:57.054896 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-4192 delete --grace-period=0 --force -f -'
  I0712 13:28:57.101905 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0712 13:28:57.101941 20 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 07/12/25 13:28:57.102
  I0712 13:28:57.102059 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-4192 delete --grace-period=0 --force -f -'
  I0712 13:28:57.162227 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0712 13:28:57.162270 20 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 07/12/25 13:28:57.162
  I0712 13:28:57.162416 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-4192 delete --grace-period=0 --force -f -'
  I0712 13:28:57.228304 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0712 13:28:57.228355 20 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0712 13:28:57.228470 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4192" for this suite. @ 07/12/25 13:28:57.231
• [6.035 seconds]
------------------------------
SS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 07/12/25 13:28:57.24
  I0712 13:28:57.240860 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename downward-api @ 07/12/25 13:28:57.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:28:57.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:28:57.259
  STEP: Creating a pod to test downward api env vars @ 07/12/25 13:28:57.263
  E0712 13:28:57.842795      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:58.842912      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:28:59.842987      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:00.843237      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:29:01.285
  I0712 13:29:01.288592 20 output.go:207] Trying to get logs from node ip-172-31-3-36 pod downward-api-5dcbaab3-1703-4874-b794-ab64a8b8bcf0 container dapi-container: <nil>
  STEP: delete the pod @ 07/12/25 13:29:01.303
  I0712 13:29:01.317818 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4342" for this suite. @ 07/12/25 13:29:01.322
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 07/12/25 13:29:01.329
  I0712 13:29:01.329788 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename secrets @ 07/12/25 13:29:01.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:29:01.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:29:01.343
  STEP: Creating secret with name s-test-opt-del-edb37ed7-261d-4a42-bcbb-edf8ee069f16 @ 07/12/25 13:29:01.424
  STEP: Creating secret with name s-test-opt-upd-af352a5a-da59-4166-a16d-2a5e088a1728 @ 07/12/25 13:29:01.43
  STEP: Creating the pod @ 07/12/25 13:29:01.434
  E0712 13:29:01.843318      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:02.843528      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-edb37ed7-261d-4a42-bcbb-edf8ee069f16 @ 07/12/25 13:29:03.482
  STEP: Updating secret s-test-opt-upd-af352a5a-da59-4166-a16d-2a5e088a1728 @ 07/12/25 13:29:03.489
  STEP: Creating secret with name s-test-opt-create-851b4cdd-700a-495b-82a7-ddacd1ebb016 @ 07/12/25 13:29:03.495
  STEP: waiting to observe update in volume @ 07/12/25 13:29:03.499
  E0712 13:29:03.844595      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:04.844658      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:05.845514      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:06.845597      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:29:07.535973 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1287" for this suite. @ 07/12/25 13:29:07.539
• [6.217 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3714
  STEP: Creating a kubernetes client @ 07/12/25 13:29:07.546
  I0712 13:29:07.546654 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename services @ 07/12/25 13:29:07.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:29:07.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:29:07.558
  STEP: creating service multiprotocol-test in namespace services-3504 @ 07/12/25 13:29:07.56
  STEP: creating pod pod1 in namespace services-3504 @ 07/12/25 13:29:07.578
  STEP: Creating pod pod1 in namespace services-3504 @ 07/12/25 13:29:07.578
  E0712 13:29:07.845647      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:08.845710      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-3504 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 07/12/25 13:29:09.6
  I0712 13:29:09.606214      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0712 13:29:09.610301 20 service.go:4729] successfully validated that service multiprotocol-test in namespace services-3504 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 07/12/25 13:29:09.61
  I0712 13:29:09.610345 20 resource.go:361] Creating new exec pod
  E0712 13:29:09.845982      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:10.846435      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:29:11.625889 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-3504 exec execpod2fhwp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.155 80'
  I0712 13:29:11.707937 20 builder.go:146] stderr: "+ nc -v -t -w 2 10.152.183.155 80\nConnection to 10.152.183.155 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  I0712 13:29:11.708022 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0712 13:29:11.708086 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-3504 exec execpod2fhwp -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.155 80'
  E0712 13:29:11.847172      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:12.847361      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:29:13.782306 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.155 80\n"
  I0712 13:29:13.782343 20 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 07/12/25 13:29:13.782
  I0712 13:29:13.791454 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-3504 exec execpod2fhwp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.155 80'
  E0712 13:29:13.847821      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:29:13.877226 20 builder.go:146] stderr: "+ + ncecho -v hostName -t\n -w 2 10.152.183.155 80\nConnection to 10.152.183.155 80 port [tcp/http] succeeded!\n"
  I0712 13:29:13.877341 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0712 13:29:13.877430 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-3504 exec execpod2fhwp -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.155 80'
  E0712 13:29:14.848405      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:15.848525      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:29:15.959980 20 builder.go:146] stderr: "+ + nc -v -u -w 2 10.152.183.155 80\necho hostName\n"
  I0712 13:29:15.960027 20 builder.go:147] stdout: ""
  I0712 13:29:15.960087 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-3504 exec execpod2fhwp -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.155 80'
  E0712 13:29:16.848818      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:17.848810      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:29:18.045282 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.155 80\n"
  I0712 13:29:18.045335 20 builder.go:147] stdout: ""
  I0712 13:29:18.045394 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-3504 exec execpod2fhwp -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.155 80'
  E0712 13:29:18.849079      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:19.849817      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:29:20.130814 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.155 80\n"
  I0712 13:29:20.130866 20 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 07/12/25 13:29:20.131
  I0712 13:29:20.141955 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-3504 exec execpod2fhwp -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.155 80'
  E0712 13:29:20.850432      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:21.850519      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:29:22.229364 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.155 80\n"
  I0712 13:29:22.229405 20 builder.go:147] stdout: "pod1"
  I0712 13:29:22.229505 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-3504 exec execpod2fhwp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.155 80'
  E0712 13:29:22.851432      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:23.851535      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:29:24.313403 20 builder.go:135] rc: 1
  I0712 13:29:24.313478 20 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-3504 exec execpod2fhwp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.155 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.155 80
  nc: connect to 10.152.183.155 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0712 13:29:24.313546 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-3504 exec execpod2fhwp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.155 80'
  E0712 13:29:24.852357      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:25.853428      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:29:26.393100 20 builder.go:135] rc: 1
  I0712 13:29:26.393164 20 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-3504 exec execpod2fhwp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.155 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.155 80
  + echo hostName
  nc: connect to 10.152.183.155 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0712 13:29:26.393292 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-3504 exec execpod2fhwp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.155 80'
  E0712 13:29:26.854352      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:27.854437      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:29:28.472085 20 builder.go:135] rc: 1
  I0712 13:29:28.472148 20 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-3504 exec execpod2fhwp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.155 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.155 80
  + echo hostName
  nc: connect to 10.152.183.155 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0712 13:29:28.472308 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3504" for this suite. @ 07/12/25 13:29:28.476
• [20.939 seconds]
------------------------------
S
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 07/12/25 13:29:28.486
  I0712 13:29:28.486093 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename csiinlinevolumes @ 07/12/25 13:29:28.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:29:28.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:29:28.501
  STEP: Creating two CSIDrivers @ 07/12/25 13:29:28.503
  STEP: Getting "inline-driver-8514a08a-2aa8-4873-81c1-73c4982f8ab9" & "inline-driver-421d78a2-f8df-4ca1-84c1-23543245c54d" @ 07/12/25 13:29:28.517
  STEP: Patching the CSIDriver "inline-driver-421d78a2-f8df-4ca1-84c1-23543245c54d" @ 07/12/25 13:29:28.523
  STEP: Updating the CSIDriver "inline-driver-421d78a2-f8df-4ca1-84c1-23543245c54d" @ 07/12/25 13:29:28.53
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-1773" @ 07/12/25 13:29:28.538
  STEP: Deleting CSIDriver "inline-driver-8514a08a-2aa8-4873-81c1-73c4982f8ab9" @ 07/12/25 13:29:28.54
  STEP: Confirm deletion of CSIDriver "inline-driver-8514a08a-2aa8-4873-81c1-73c4982f8ab9" @ 07/12/25 13:29:28.548
  STEP: Deleting CSIDriver "inline-driver-421d78a2-f8df-4ca1-84c1-23543245c54d" via DeleteCollection @ 07/12/25 13:29:28.55
  STEP: Confirm deletion of CSIDriver "inline-driver-421d78a2-f8df-4ca1-84c1-23543245c54d" @ 07/12/25 13:29:28.56
  I0712 13:29:28.562693 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-1773" for this suite. @ 07/12/25 13:29:28.577
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:866
  STEP: Creating a kubernetes client @ 07/12/25 13:29:28.585
  I0712 13:29:28.585648 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename webhook @ 07/12/25 13:29:28.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:29:28.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:29:28.602
  STEP: Setting up server cert @ 07/12/25 13:29:28.62
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/12/25 13:29:28.814
  STEP: Deploying the webhook pod @ 07/12/25 13:29:28.82
  STEP: Wait for the deployment to be ready @ 07/12/25 13:29:28.833
  I0712 13:29:28.841065 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0712 13:29:28.855177      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:29.856011      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/12/25 13:29:30.852
  E0712 13:29:30.856425      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the service has paired with the endpoint @ 07/12/25 13:29:30.869
  E0712 13:29:31.857114      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:29:31.869076 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 07/12/25 13:29:31.873
  STEP: create the configmap with a random name @ 07/12/25 13:29:31.895
  STEP: verify the configmap is mutated @ 07/12/25 13:29:31.908
  STEP: create the configmap with 'skip-me' name @ 07/12/25 13:29:31.908
  I0712 13:29:31.961766 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-343" for this suite. @ 07/12/25 13:29:31.967
  STEP: Destroying namespace "webhook-markers-2210" for this suite. @ 07/12/25 13:29:31.976
• [3.395 seconds]
------------------------------
S
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:423
  STEP: Creating a kubernetes client @ 07/12/25 13:29:31.981
  I0712 13:29:31.981014 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename proxy @ 07/12/25 13:29:31.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:29:31.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:29:31.994
  I0712 13:29:31.997089 20 proxy.go:430] Creating pod...
  E0712 13:29:32.857246      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:33.857462      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:29:34.016996 20 proxy.go:454] Creating service...
  I0712 13:29:34.031278 20 proxy.go:491] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6718/pods/agnhost/proxy?method=DELETE
  I0712 13:29:34.036902 20 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0712 13:29:34.036930 20 proxy.go:491] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6718/pods/agnhost/proxy?method=OPTIONS
  I0712 13:29:34.044760 20 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0712 13:29:34.044785 20 proxy.go:491] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6718/pods/agnhost/proxy?method=PATCH
  I0712 13:29:34.048586 20 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0712 13:29:34.048627 20 proxy.go:491] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6718/pods/agnhost/proxy?method=POST
  I0712 13:29:34.052363 20 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0712 13:29:34.052389 20 proxy.go:491] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6718/pods/agnhost/proxy?method=PUT
  I0712 13:29:34.057429 20 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0712 13:29:34.057447 20 proxy.go:502] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6718/services/e2e-proxy-test-service/proxy?method=DELETE
  I0712 13:29:34.062775 20 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0712 13:29:34.062800 20 proxy.go:502] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6718/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0712 13:29:34.068346 20 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0712 13:29:34.068369 20 proxy.go:502] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6718/services/e2e-proxy-test-service/proxy?method=PATCH
  I0712 13:29:34.074345 20 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0712 13:29:34.074370 20 proxy.go:502] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6718/services/e2e-proxy-test-service/proxy?method=POST
  I0712 13:29:34.079424 20 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0712 13:29:34.079452 20 proxy.go:502] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6718/services/e2e-proxy-test-service/proxy?method=PUT
  I0712 13:29:34.084606 20 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0712 13:29:34.084641 20 proxy.go:522] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6718/pods/agnhost/proxy?method=GET
  I0712 13:29:34.088299 20 proxy.go:530] http.Client request:GET StatusCode:301
  I0712 13:29:34.088336 20 proxy.go:522] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6718/services/e2e-proxy-test-service/proxy?method=GET
  I0712 13:29:34.093089 20 proxy.go:530] http.Client request:GET StatusCode:301
  I0712 13:29:34.093110 20 proxy.go:522] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6718/pods/agnhost/proxy?method=HEAD
  I0712 13:29:34.095485 20 proxy.go:530] http.Client request:HEAD StatusCode:301
  I0712 13:29:34.095509 20 proxy.go:522] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6718/services/e2e-proxy-test-service/proxy?method=HEAD
  I0712 13:29:34.100298 20 proxy.go:530] http.Client request:HEAD StatusCode:301
  I0712 13:29:34.100395 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6718" for this suite. @ 07/12/25 13:29:34.103
• [2.129 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:920
  STEP: Creating a kubernetes client @ 07/12/25 13:29:34.109
  I0712 13:29:34.109652 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename statefulset @ 07/12/25 13:29:34.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:29:34.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:29:34.12
  STEP: Creating service test in namespace statefulset-8893 @ 07/12/25 13:29:34.123
  STEP: Creating statefulset ss in namespace statefulset-8893 @ 07/12/25 13:29:34.127
  I0712 13:29:34.137394 20 wait.go:44] Found 0 stateful pods, waiting for 1
  E0712 13:29:34.858418      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:35.858504      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:36.858621      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:37.858711      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:38.858910      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:39.859595      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:40.859714      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:41.859772      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:42.859882      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:43.859960      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:29:44.140683 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 07/12/25 13:29:44.148
  STEP: updating a scale subresource @ 07/12/25 13:29:44.151
  STEP: verifying the statefulset Spec.Replicas was modified @ 07/12/25 13:29:44.157
  STEP: Patch a scale subresource @ 07/12/25 13:29:44.161
  STEP: verifying the statefulset Spec.Replicas was modified @ 07/12/25 13:29:44.168
  I0712 13:29:44.172554 20 statefulset.go:138] Deleting all statefulset in ns statefulset-8893
  I0712 13:29:44.180178 20 rest.go:153] Scaling statefulset ss to 0
  E0712 13:29:44.860059      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:45.860139      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:46.860370      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:47.860440      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:48.860557      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:49.860645      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:50.861402      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:51.861525      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:52.861612      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:53.861725      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:29:54.194151 20 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0712 13:29:54.198330 20 rest.go:91] Deleting statefulset ss
  I0712 13:29:54.212280 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8893" for this suite. @ 07/12/25 13:29:54.215
• [20.111 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 07/12/25 13:29:54.221
  I0712 13:29:54.221332 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename taint-multiple-pods @ 07/12/25 13:29:54.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:29:54.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:29:54.238
  I0712 13:29:54.241172 20 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0712 13:29:54.861854      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:55.862060      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:56.862733      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:57.862940      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:58.863470      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:29:59.863554      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:00.863691      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:01.863777      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:02.863919      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:03.864002      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:04.864944      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:05.865116      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:06.865951      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:07.866123      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:08.866279      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:09.866570      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:10.867358      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:11.867417      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:12.867845      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:13.867905      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:14.868019      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:15.868086      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:16.868896      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:17.869939      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:18.870410      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:19.871404      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:20.871539      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:21.871702      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:22.872439      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:23.872562      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:24.872678      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:25.872778      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:26.872908      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:27.873007      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:28.873193      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:29.873270      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:30.873425      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:31.873701      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:32.874660      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:33.874770      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:34.874900      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:35.875856      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:36.876727      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:37.876912      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:38.877393      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:39.877524      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:40.878399      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:41.878988      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:42.879987      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:43.880402      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:44.881167      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:45.881297      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:46.882294      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:47.882380      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:48.882508      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:49.883002      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:50.883042      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:51.883251      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:52.884022      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:53.884222      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:30:54.241338 20 util.go:390] Waiting for terminating namespaces to be deleted...
  I0712 13:30:54.247222 20 taints.go:144] Starting informer...
  STEP: Starting pods... @ 07/12/25 13:30:54.247
  I0712 13:30:54.466843 20 taints.go:463] Pod1 is running on ip-172-31-39-13. Tainting Node
  E0712 13:30:54.884421      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:55.884557      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:30:56.684536 20 taints.go:471] Pod2 is running on ip-172-31-39-13. Tainting Node
  STEP: Trying to apply a taint on the Node @ 07/12/25 13:30:56.684
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/12/25 13:30:56.694
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 07/12/25 13:30:56.697
  E0712 13:30:56.885092      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:57.885182      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:58.885318      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:30:59.886114      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:00.886335      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:01.887076      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:31:02.244706 20 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  E0712 13:31:02.887480      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:03.887688      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:04.887830      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:05.887917      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:06.888038      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:07.888108      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:08.888248      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:09.889099      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:10.890126      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:11.890256      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:12.890335      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:13.891391      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:14.891495      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:15.891701      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:16.892413      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:17.892608      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:18.892789      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:19.892902      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:20.892989      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:21.893173      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:31:22.279703 20 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/12/25 13:31:22.289
  I0712 13:31:22.293181 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-8572" for this suite. @ 07/12/25 13:31:22.296
• [88.082 seconds]
------------------------------
SSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 07/12/25 13:31:22.303
  I0712 13:31:22.303900 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename events @ 07/12/25 13:31:22.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:31:22.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:31:22.324
  STEP: Create set of events @ 07/12/25 13:31:22.326
  I0712 13:31:22.330892 20 core_events.go:198] created test-event-1
  I0712 13:31:22.336741 20 core_events.go:198] created test-event-2
  I0712 13:31:22.341400 20 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 07/12/25 13:31:22.341
  STEP: delete collection of events @ 07/12/25 13:31:22.344
  I0712 13:31:22.344113 20 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 07/12/25 13:31:22.363
  I0712 13:31:22.363351 20 core_events.go:230] requesting list of events to confirm quantity
  I0712 13:31:22.366077 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4721" for this suite. @ 07/12/25 13:31:22.369
• [0.070 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:129
  STEP: Creating a kubernetes client @ 07/12/25 13:31:22.374
  I0712 13:31:22.374027 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename emptydir @ 07/12/25 13:31:22.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:31:22.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:31:22.388
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 07/12/25 13:31:22.391
  E0712 13:31:22.893420      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:23.893519      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:24.894461      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:25.894672      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:31:26.412
  I0712 13:31:26.416769 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-e4bcd728-8ffa-4ce3-90fa-75c4464e4dab container test-container: <nil>
  STEP: delete the pod @ 07/12/25 13:31:26.435
  I0712 13:31:26.450892 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7363" for this suite. @ 07/12/25 13:31:26.454
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:99
  STEP: Creating a kubernetes client @ 07/12/25 13:31:26.462
  I0712 13:31:26.462170 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename emptydir @ 07/12/25 13:31:26.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:31:26.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:31:26.476
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 07/12/25 13:31:26.479
  E0712 13:31:26.894784      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:27.894861      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:31:28.497
  I0712 13:31:28.501141 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-88106465-2978-4e84-a9d9-93ac4ef15d25 container test-container: <nil>
  STEP: delete the pod @ 07/12/25 13:31:28.509
  I0712 13:31:28.522281 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8705" for this suite. @ 07/12/25 13:31:28.528
• [2.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 07/12/25 13:31:28.537
  I0712 13:31:28.537928 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/12/25 13:31:28.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:31:28.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:31:28.556
  I0712 13:31:28.565735 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-4595" for this suite. @ 07/12/25 13:31:28.63
• [0.101 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 07/12/25 13:31:28.639
  I0712 13:31:28.639093 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename daemonsets @ 07/12/25 13:31:28.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:31:28.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:31:28.65
  STEP: Creating simple DaemonSet "daemon-set" @ 07/12/25 13:31:28.739
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/12/25 13:31:28.744
  I0712 13:31:28.830363 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 13:31:28.830405 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 13:31:28.835728 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0712 13:31:28.835751 20 fixtures.go:131] Node ip-172-31-23-206 is running 0 daemon pod, expected 1
  E0712 13:31:28.895828      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:31:29.750189 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 13:31:29.750255 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 13:31:29.753380 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0712 13:31:29.753399 20 fixtures.go:131] Node ip-172-31-23-206 is running 0 daemon pod, expected 1
  E0712 13:31:29.896600      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:31:30.750671 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 13:31:30.750726 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 13:31:30.753701 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0712 13:31:30.753722 20 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 07/12/25 13:31:30.757
  STEP: DeleteCollection of the DaemonSets @ 07/12/25 13:31:30.759
  STEP: Verify that ReplicaSets have been deleted @ 07/12/25 13:31:30.77
  I0712 13:31:30.779053 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"41836"},"items":null}

  I0712 13:31:30.783236 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"41836"},"items":[{"metadata":{"name":"daemon-set-q5gxl","generateName":"daemon-set-","namespace":"daemonsets-6929","uid":"a6c0961d-9891-4a20-9752-23541ef42d95","resourceVersion":"41826","generation":1,"creationTimestamp":"2025-07-12T13:31:28Z","labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"d36d0b4f-3231-42bf-9806-dba152e549dc","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-07-12T13:31:28Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d36d0b4f-3231-42bf-9806-dba152e549dc\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-07-12T13:31:29Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.246.156\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-m9qpd","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-m9qpd","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-3-36","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-3-36"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-12T13:31:29Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-12T13:31:28Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-12T13:31:29Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-12T13:31:29Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-12T13:31:28Z"}],"hostIP":"172.31.3.36","hostIPs":[{"ip":"172.31.3.36"}],"podIP":"192.168.246.156","podIPs":[{"ip":"192.168.246.156"}],"startTime":"2025-07-12T13:31:28Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-07-12T13:31:29Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://2a9994c461d66826ec3b31648b7e80ade1fc3023098ba27cb03cfb32fb929a6c","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-m9qpd","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-qbs52","generateName":"daemon-set-","namespace":"daemonsets-6929","uid":"761eab55-bcc1-4d45-bc56-62e3413567ec","resourceVersion":"41834","generation":1,"creationTimestamp":"2025-07-12T13:31:28Z","labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"d36d0b4f-3231-42bf-9806-dba152e549dc","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-07-12T13:31:28Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d36d0b4f-3231-42bf-9806-dba152e549dc\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-07-12T13:31:30Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.235.181\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-rz9kc","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-rz9kc","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-39-13","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-39-13"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-12T13:31:30Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-12T13:31:28Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-12T13:31:30Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-12T13:31:30Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-12T13:31:28Z"}],"hostIP":"172.31.39.13","hostIPs":[{"ip":"172.31.39.13"}],"podIP":"192.168.235.181","podIPs":[{"ip":"192.168.235.181"}],"startTime":"2025-07-12T13:31:28Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-07-12T13:31:29Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://cbe53cef6306822e43a6d60f18c4ef5a2c3dc98b01781c3c1fb27b5b9de3b5e9","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-rz9kc","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-sxgkr","generateName":"daemon-set-","namespace":"daemonsets-6929","uid":"0f346dc1-f4a0-4c03-8830-5596a5ac5102","resourceVersion":"41832","generation":1,"creationTimestamp":"2025-07-12T13:31:28Z","labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"d36d0b4f-3231-42bf-9806-dba152e549dc","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-07-12T13:31:28Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d36d0b4f-3231-42bf-9806-dba152e549dc\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-07-12T13:31:30Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.214.153\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-s9w6z","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-s9w6z","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-23-206","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-23-206"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-12T13:31:30Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-12T13:31:28Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-12T13:31:30Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-12T13:31:30Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-12T13:31:28Z"}],"hostIP":"172.31.23.206","hostIPs":[{"ip":"172.31.23.206"}],"podIP":"192.168.214.153","podIPs":[{"ip":"192.168.214.153"}],"startTime":"2025-07-12T13:31:28Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-07-12T13:31:29Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://334b8de902e9edbb1202a5277ab5bb2ad8cca32b119baf0f59b8fb8156d8d4ae","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-s9w6z","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0712 13:31:30.860989 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6929" for this suite. @ 07/12/25 13:31:30.863
• [2.230 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1251
  STEP: Creating a kubernetes client @ 07/12/25 13:31:30.869
  I0712 13:31:30.869078 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename services @ 07/12/25 13:31:30.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:31:30.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:31:30.885
  STEP: creating service nodeport-test with type=NodePort in namespace services-5997 @ 07/12/25 13:31:30.892
  E0712 13:31:30.896590      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:31:30.923153 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0712 13:31:31.896745      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:32.896871      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:31:32.928377 20 resource.go:361] Creating new exec pod
  E0712 13:31:33.897007      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:34.897015      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:31:34.953871 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-5997 exec execpodfx5sx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0712 13:31:35.041284 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.152.183.113) 80 port [tcp/http] succeeded!\n"
  I0712 13:31:35.041320 20 builder.go:147] stdout: "nodeport-test-5566f6f6cd-2pj8n"
  I0712 13:31:35.041418 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-5997 exec execpodfx5sx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.113 80'
  I0712 13:31:35.121086 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.113 80\nConnection to 10.152.183.113 80 port [tcp/http] succeeded!\n"
  I0712 13:31:35.121113 20 builder.go:147] stdout: "nodeport-test-5566f6f6cd-2pj8n"
  I0712 13:31:35.121192 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-5997 exec execpodfx5sx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.36 31994'
  I0712 13:31:35.199897 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.3.36 31994\nConnection to 172.31.3.36 31994 port [tcp/*] succeeded!\n"
  I0712 13:31:35.199927 20 builder.go:147] stdout: "nodeport-test-5566f6f6cd-2pj8n"
  I0712 13:31:35.200026 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-5997 exec execpodfx5sx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.39.13 31994'
  I0712 13:31:35.279421 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.39.13 31994\nConnection to 172.31.39.13 31994 port [tcp/*] succeeded!\n"
  I0712 13:31:35.279448 20 builder.go:147] stdout: "nodeport-test-5566f6f6cd-2pj8n"
  I0712 13:31:35.279609 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5997" for this suite. @ 07/12/25 13:31:35.284
• [4.421 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:79
  STEP: Creating a kubernetes client @ 07/12/25 13:31:35.29
  I0712 13:31:35.290569 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename svcaccounts @ 07/12/25 13:31:35.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:31:35.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:31:35.306
  E0712 13:31:35.897072      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:36.897302      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 07/12/25 13:31:37.331
  I0712 13:31:37.331814 20 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5481 pod-service-account-e9831b55-f30a-4d73-aa35-c8dd154de7bc -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 07/12/25 13:31:37.41
  I0712 13:31:37.410885 20 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5481 pod-service-account-e9831b55-f30a-4d73-aa35-c8dd154de7bc -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 07/12/25 13:31:37.482
  I0712 13:31:37.482767 20 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5481 pod-service-account-e9831b55-f30a-4d73-aa35-c8dd154de7bc -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0712 13:31:37.557374 20 service_accounts.go:119] Got root ca configmap in namespace "svcaccounts-5481"
  I0712 13:31:37.559394 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5481" for this suite. @ 07/12/25 13:31:37.563
• [2.280 seconds]
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 07/12/25 13:31:37.57
  I0712 13:31:37.570438 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename field-validation @ 07/12/25 13:31:37.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:31:37.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:31:37.585
  I0712 13:31:37.587503 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  W0712 13:31:37.587969      20 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc005881160 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0712 13:31:37.898281      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:38.898434      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:39.898985      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:31:40.118480      20 warnings.go:110] "Warning: unknown field \"alpha\""
  I0712 13:31:40.118499      20 warnings.go:110] "Warning: unknown field \"beta\""
  I0712 13:31:40.118505      20 warnings.go:110] "Warning: unknown field \"delta\""
  I0712 13:31:40.118512      20 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0712 13:31:40.118518      20 warnings.go:110] "Warning: unknown field \"gamma\""
  I0712 13:31:40.655658 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8423" for this suite. @ 07/12/25 13:31:40.659
• [3.094 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 07/12/25 13:31:40.664
  I0712 13:31:40.664591 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename pods @ 07/12/25 13:31:40.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:31:40.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:31:40.677
  E0712 13:31:40.899794      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:41.899893      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:42.900718      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:43.900791      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:44.901774      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:45.901879      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:31:46.735
  I0712 13:31:46.738700 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod client-envvars-09421716-eeff-4260-bc68-bc4cfb39c0ce container env3cont: <nil>
  STEP: delete the pod @ 07/12/25 13:31:46.745
  I0712 13:31:46.759214 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-383" for this suite. @ 07/12/25 13:31:46.763
• [6.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 07/12/25 13:31:46.77
  I0712 13:31:46.770332 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/12/25 13:31:46.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:31:46.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:31:46.784
  STEP: fetching the /apis discovery document @ 07/12/25 13:31:46.787
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 07/12/25 13:31:46.788
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 07/12/25 13:31:46.788
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 07/12/25 13:31:46.788
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 07/12/25 13:31:46.789
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 07/12/25 13:31:46.789
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 07/12/25 13:31:46.79
  I0712 13:31:46.790283 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2244" for this suite. @ 07/12/25 13:31:46.864
• [0.101 seconds]
------------------------------
SSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 07/12/25 13:31:46.871
  I0712 13:31:46.871815 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename init-container @ 07/12/25 13:31:46.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:31:46.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:31:46.885
  STEP: creating the pod @ 07/12/25 13:31:46.888
  I0712 13:31:46.888322 20 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E0712 13:31:46.902725      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:47.903714      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:48.903946      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:31:49.731697 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6427" for this suite. @ 07/12/25 13:31:49.735
• [2.872 seconds]
------------------------------
S
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 07/12/25 13:31:49.743
  I0712 13:31:49.743762 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename containers @ 07/12/25 13:31:49.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:31:49.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:31:49.759
  STEP: Creating a pod to test override arguments @ 07/12/25 13:31:49.762
  E0712 13:31:49.904518      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:50.904625      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:51.905495      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:52.905600      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:31:53.786
  I0712 13:31:53.790034 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod client-containers-4814dcb3-dd69-4554-b364-09cfd4238856 container agnhost-container: <nil>
  STEP: delete the pod @ 07/12/25 13:31:53.795
  I0712 13:31:53.810700 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7418" for this suite. @ 07/12/25 13:31:53.815
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 07/12/25 13:31:53.821
  I0712 13:31:53.821343 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename crd-webhook @ 07/12/25 13:31:53.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:31:53.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:31:53.842
  STEP: Setting up server cert @ 07/12/25 13:31:53.844
  E0712 13:31:53.906441      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/12/25 13:31:54.076
  STEP: Deploying the custom resource conversion webhook pod @ 07/12/25 13:31:54.081
  STEP: Wait for the deployment to be ready @ 07/12/25 13:31:54.094
  I0712 13:31:54.100757 20 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0712 13:31:54.906628      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:55.906705      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/12/25 13:31:56.112
  STEP: Verifying the service has paired with the endpoint @ 07/12/25 13:31:56.125
  E0712 13:31:56.906855      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:31:57.126072 20 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0712 13:31:57.130485 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  E0712 13:31:57.907759      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:31:58.907985      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 07/12/25 13:31:59.677
  STEP: v2 custom resource should be converted @ 07/12/25 13:31:59.682
  E0712 13:31:59.908428      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:32:00.246943 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-3023" for this suite. @ 07/12/25 13:32:00.251
• [6.438 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 07/12/25 13:32:00.259
  I0712 13:32:00.259256 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename lease-test @ 07/12/25 13:32:00.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:32:00.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:32:00.278
  I0712 13:32:00.336975 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-8233" for this suite. @ 07/12/25 13:32:00.351
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 07/12/25 13:32:00.36
  I0712 13:32:00.360291 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 07/12/25 13:32:00.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:32:00.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:32:00.374
  STEP: Setting up the test @ 07/12/25 13:32:00.376
  STEP: Creating hostNetwork=false pod @ 07/12/25 13:32:00.376
  E0712 13:32:00.909424      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:01.909520      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 07/12/25 13:32:02.398
  E0712 13:32:02.909615      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:03.910663      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Running the test @ 07/12/25 13:32:04.414
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 07/12/25 13:32:04.414
  I0712 13:32:04.414602 20 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-148 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0712 13:32:04.414619 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0712 13:32:04.414662 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-148/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0712 13:32:04.455162 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0712 13:32:04.455187 20 exec_util.go:112] Exec stderr: ""
  I0712 13:32:04.455228 20 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-148 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0712 13:32:04.455236 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0712 13:32:04.455288 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-148/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0712 13:32:04.488940 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0712 13:32:04.488962 20 exec_util.go:112] Exec stderr: ""
  I0712 13:32:04.488977 20 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-148 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0712 13:32:04.488989 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0712 13:32:04.489025 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-148/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0712 13:32:04.521459 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0712 13:32:04.521490 20 exec_util.go:112] Exec stderr: ""
  I0712 13:32:04.521504 20 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-148 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0712 13:32:04.521510 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0712 13:32:04.521546 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-148/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0712 13:32:04.562514 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0712 13:32:04.562538 20 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 07/12/25 13:32:04.562
  I0712 13:32:04.562580 20 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-148 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0712 13:32:04.562587 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0712 13:32:04.562672 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-148/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0712 13:32:04.599183 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0712 13:32:04.599234 20 exec_util.go:112] Exec stderr: ""
  I0712 13:32:04.599247 20 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-148 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0712 13:32:04.599254 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0712 13:32:04.599298 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-148/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0712 13:32:04.634159 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0712 13:32:04.634181 20 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 07/12/25 13:32:04.634
  I0712 13:32:04.634245 20 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-148 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0712 13:32:04.634253 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0712 13:32:04.634296 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-148/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0712 13:32:04.669298 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0712 13:32:04.669329 20 exec_util.go:112] Exec stderr: ""
  I0712 13:32:04.669341 20 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-148 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0712 13:32:04.669347 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0712 13:32:04.669415 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-148/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0712 13:32:04.705061 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0712 13:32:04.705089 20 exec_util.go:112] Exec stderr: ""
  I0712 13:32:04.705099 20 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-148 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0712 13:32:04.705104 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0712 13:32:04.705142 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-148/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0712 13:32:04.746403 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0712 13:32:04.746436 20 exec_util.go:112] Exec stderr: ""
  I0712 13:32:04.746450 20 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-148 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0712 13:32:04.746457 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0712 13:32:04.746496 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-148/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0712 13:32:04.777482 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0712 13:32:04.777508 20 exec_util.go:112] Exec stderr: ""
  I0712 13:32:04.777599 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-148" for this suite. @ 07/12/25 13:32:04.781
• [4.431 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 07/12/25 13:32:04.791
  I0712 13:32:04.791057 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename controllerrevisions @ 07/12/25 13:32:04.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:32:04.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:32:04.805
  STEP: Creating DaemonSet "e2e-mqs22-daemon-set" @ 07/12/25 13:32:04.892
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/12/25 13:32:04.898
  E0712 13:32:04.910788      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:32:04.982513 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 13:32:04.982555 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 13:32:04.985086 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-mqs22-daemon-set: 0
  I0712 13:32:04.985108 20 fixtures.go:131] Node ip-172-31-23-206 is running 0 daemon pod, expected 1
  I0712 13:32:05.902514 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 13:32:05.902555 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 13:32:05.906083 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-mqs22-daemon-set: 1
  I0712 13:32:05.906102 20 fixtures.go:131] Node ip-172-31-23-206 is running 0 daemon pod, expected 1
  E0712 13:32:05.911138      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:32:06.905127 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 13:32:06.905169 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 13:32:06.908281 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-mqs22-daemon-set: 3
  I0712 13:32:06.908309 20 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-mqs22-daemon-set
  E0712 13:32:06.911368      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Confirm DaemonSet "e2e-mqs22-daemon-set" successfully created with "daemonset-name=e2e-mqs22-daemon-set" label @ 07/12/25 13:32:06.912
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-mqs22-daemon-set" @ 07/12/25 13:32:06.918
  I0712 13:32:06.921731 20 controller_revision.go:162] Located ControllerRevision: "e2e-mqs22-daemon-set-7b6f7bcc65"
  STEP: Patching ControllerRevision "e2e-mqs22-daemon-set-7b6f7bcc65" @ 07/12/25 13:32:06.925
  I0712 13:32:06.931354 20 controller_revision.go:173] e2e-mqs22-daemon-set-7b6f7bcc65 has been patched
  STEP: Create a new ControllerRevision @ 07/12/25 13:32:06.931
  I0712 13:32:06.936864 20 controller_revision.go:191] Created ControllerRevision: e2e-mqs22-daemon-set-b59cdd7d9
  STEP: Confirm that there are two ControllerRevisions @ 07/12/25 13:32:06.936
  I0712 13:32:06.936908 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0712 13:32:06.940410 20 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-mqs22-daemon-set-7b6f7bcc65" @ 07/12/25 13:32:06.94
  STEP: Confirm that there is only one ControllerRevision @ 07/12/25 13:32:06.947
  I0712 13:32:06.947070 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0712 13:32:06.950492 20 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-mqs22-daemon-set-b59cdd7d9" @ 07/12/25 13:32:06.953
  I0712 13:32:06.961283 20 controller_revision.go:220] e2e-mqs22-daemon-set-b59cdd7d9 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 07/12/25 13:32:06.961
  I0712 13:32:06.969237      20 warnings.go:110] "Warning: unknown field \"updateStrategy\""
  STEP: Confirm that there are two ControllerRevisions @ 07/12/25 13:32:06.969
  I0712 13:32:06.969308 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0712 13:32:06.994329 20 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-mqs22-daemon-set-b59cdd7d9=updated" @ 07/12/25 13:32:06.994
  STEP: Confirm that there is only one ControllerRevision @ 07/12/25 13:32:07.004
  I0712 13:32:07.004750 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0712 13:32:07.022287 20 controller_revision.go:265] Found 1 ControllerRevisions
  I0712 13:32:07.026672 20 controller_revision.go:246] ControllerRevision "e2e-mqs22-daemon-set-5d59445f96" has revision 3
  STEP: Deleting DaemonSet "e2e-mqs22-daemon-set" @ 07/12/25 13:32:07.03
  STEP: deleting DaemonSet.extensions e2e-mqs22-daemon-set in namespace controllerrevisions-5857, will wait for the garbage collector to delete the pods @ 07/12/25 13:32:07.03
  I0712 13:32:07.091336 20 resources.go:139] Deleting DaemonSet.extensions e2e-mqs22-daemon-set took: 7.368586ms
  I0712 13:32:07.191847 20 resources.go:163] Terminating DaemonSet.extensions e2e-mqs22-daemon-set pods took: 100.525533ms
  E0712 13:32:07.911475      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:32:08.496845 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-mqs22-daemon-set: 0
  I0712 13:32:08.496880 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-mqs22-daemon-set
  I0712 13:32:08.500744 20 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"42539"},"items":null}

  I0712 13:32:08.504243 20 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"42539"},"items":null}

  I0712 13:32:08.517507 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-5857" for this suite. @ 07/12/25 13:32:08.52
• [3.735 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 07/12/25 13:32:08.527
  I0712 13:32:08.527073 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename fake-node @ 07/12/25 13:32:08.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:32:08.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:32:08.541
  STEP: Create "e2e-fake-node-ghwcf" @ 07/12/25 13:32:08.544
  STEP: Getting "e2e-fake-node-ghwcf" @ 07/12/25 13:32:08.549
  STEP: Patching "e2e-fake-node-ghwcf" @ 07/12/25 13:32:08.552
  STEP: Listing nodes with LabelSelector "e2e-fake-node-ghwcf=patched" @ 07/12/25 13:32:08.561
  STEP: Updating "e2e-fake-node-ghwcf" @ 07/12/25 13:32:08.565
  STEP: Delete "e2e-fake-node-ghwcf" @ 07/12/25 13:32:08.572
  STEP: Confirm deletion of "e2e-fake-node-ghwcf" @ 07/12/25 13:32:08.579
  I0712 13:32:08.582079 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-3651" for this suite. @ 07/12/25 13:32:08.584
• [0.063 seconds]
------------------------------
S
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3404
  STEP: Creating a kubernetes client @ 07/12/25 13:32:08.59
  I0712 13:32:08.590334 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename services @ 07/12/25 13:32:08.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:32:08.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:32:08.604
  STEP: creating a Service @ 07/12/25 13:32:08.609
  STEP: watching for the Service to be added @ 07/12/25 13:32:08.628
  I0712 13:32:08.630392 20 service.go:3456] Found Service test-service-t6n44 in namespace services-2163 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32765}]
  I0712 13:32:08.630416 20 service.go:3463] Service test-service-t6n44 created
  STEP: Getting /status @ 07/12/25 13:32:08.63
  I0712 13:32:08.634232 20 service.go:3474] Service test-service-t6n44 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 07/12/25 13:32:08.634
  STEP: watching for the Service to be patched @ 07/12/25 13:32:08.638
  I0712 13:32:08.639520 20 service.go:3497] observed Service test-service-t6n44 in namespace services-2163 with annotations: map[] & LoadBalancer: {[]}
  I0712 13:32:08.639544 20 service.go:3500] Found Service test-service-t6n44 in namespace services-2163 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc005532160 []}]}
  I0712 13:32:08.639554 20 service.go:3507] Service test-service-t6n44 has service status patched
  STEP: updating the ServiceStatus @ 07/12/25 13:32:08.639
  I0712 13:32:08.650229 20 service.go:3527] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 07/12/25 13:32:08.65
  I0712 13:32:08.651819 20 service.go:3538] Observed Service test-service-t6n44 in namespace services-2163 with annotations: map[] & Conditions: []
  I0712 13:32:08.651843 20 service.go:3549] Observed Service test-service-t6n44 in namespace services-2163 with annotations: map[patchedstatus:true] & Conditions: []
  I0712 13:32:08.651865 20 service.go:3545] Found Service test-service-t6n44 in namespace services-2163 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0712 13:32:08.651907 20 service.go:3556] Service test-service-t6n44 has service status updated
  STEP: patching the service @ 07/12/25 13:32:08.651
  STEP: watching for the Service to be patched @ 07/12/25 13:32:08.658
  I0712 13:32:08.660129 20 service.go:3579] observed Service test-service-t6n44 in namespace services-2163 with labels: map[test-service-static:true]
  I0712 13:32:08.660285 20 service.go:3579] observed Service test-service-t6n44 in namespace services-2163 with labels: map[test-service-static:true]
  I0712 13:32:08.660298 20 service.go:3579] observed Service test-service-t6n44 in namespace services-2163 with labels: map[test-service-static:true]
  I0712 13:32:08.660309 20 service.go:3582] Found Service test-service-t6n44 in namespace services-2163 with labels: map[test-service:patched test-service-static:true]
  I0712 13:32:08.660318 20 service.go:3589] Service test-service-t6n44 patched
  STEP: deleting the service @ 07/12/25 13:32:08.66
  STEP: watching for the Service to be deleted @ 07/12/25 13:32:08.682
  I0712 13:32:08.683974 20 service.go:3613] Observed event: ADDED
  I0712 13:32:08.683991 20 service.go:3613] Observed event: MODIFIED
  I0712 13:32:08.683998 20 service.go:3613] Observed event: MODIFIED
  I0712 13:32:08.684116 20 service.go:3613] Observed event: MODIFIED
  I0712 13:32:08.684137 20 service.go:3609] Found Service test-service-t6n44 in namespace services-2163 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0712 13:32:08.684146 20 service.go:3618] Service test-service-t6n44 deleted
  I0712 13:32:08.684284 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2163" for this suite. @ 07/12/25 13:32:08.688
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 07/12/25 13:32:08.694
  I0712 13:32:08.694422 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename disruption @ 07/12/25 13:32:08.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:32:08.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:32:08.707
  STEP: Waiting for the pdb to be processed @ 07/12/25 13:32:08.714
  E0712 13:32:08.911540      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:09.911675      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 07/12/25 13:32:10.741
  I0712 13:32:10.744482 20 disruption.go:691] running pods: 0 < 3
  E0712 13:32:10.911685      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:11.912414      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:32:12.750079 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6761" for this suite. @ 07/12/25 13:32:12.754
• [4.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 07/12/25 13:32:12.761
  I0712 13:32:12.761020 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename pods @ 07/12/25 13:32:12.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:32:12.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:32:12.775
  STEP: creating the pod @ 07/12/25 13:32:12.777
  STEP: setting up watch @ 07/12/25 13:32:12.778
  E0712 13:32:12.913427      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: submitting the pod to kubernetes @ 07/12/25 13:32:12.947
  STEP: verifying the pod is in kubernetes @ 07/12/25 13:32:12.959
  STEP: verifying pod creation was observed @ 07/12/25 13:32:12.962
  E0712 13:32:13.914248      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:14.915086      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 07/12/25 13:32:14.972
  STEP: verifying pod deletion was observed @ 07/12/25 13:32:14.979
  I0712 13:32:15.660454 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2738" for this suite. @ 07/12/25 13:32:15.664
• [2.911 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:149
  STEP: Creating a kubernetes client @ 07/12/25 13:32:15.672
  I0712 13:32:15.672587 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename emptydir @ 07/12/25 13:32:15.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:32:15.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:32:15.686
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 07/12/25 13:32:15.689
  E0712 13:32:15.915485      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:16.915588      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:17.917468      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:18.915769      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:32:19.708
  I0712 13:32:19.711374 20 output.go:207] Trying to get logs from node ip-172-31-3-36 pod pod-8aa5909c-5e6b-45b2-865f-2db51ee75bd1 container test-container: <nil>
  STEP: delete the pod @ 07/12/25 13:32:19.722
  I0712 13:32:19.737051 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7846" for this suite. @ 07/12/25 13:32:19.74
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 07/12/25 13:32:19.748
  I0712 13:32:19.748787 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/12/25 13:32:19.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:32:19.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:32:19.762
  STEP: create the container to handle the HTTPGet hook request. @ 07/12/25 13:32:19.841
  E0712 13:32:19.916675      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:20.916799      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/12/25 13:32:21.862
  E0712 13:32:21.917796      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:22.917933      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 07/12/25 13:32:23.884
  E0712 13:32:23.918293      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:24.918427      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:25.918995      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:26.919169      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 07/12/25 13:32:27.907
  E0712 13:32:27.919551      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:32:27.923281 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7736" for this suite. @ 07/12/25 13:32:27.927
• [8.186 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:246
  STEP: Creating a kubernetes client @ 07/12/25 13:32:27.935
  I0712 13:32:27.935300 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename namespaces @ 07/12/25 13:32:27.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:32:27.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:32:27.949
  STEP: Creating a test namespace @ 07/12/25 13:32:27.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:32:27.96
  STEP: Creating a pod in the namespace @ 07/12/25 13:32:27.962
  STEP: Waiting for the pod to have running status @ 07/12/25 13:32:27.968
  E0712 13:32:28.920422      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:29.921378      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 07/12/25 13:32:29.979
  STEP: Waiting for the namespace to be removed. @ 07/12/25 13:32:29.988
  E0712 13:32:30.921484      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:31.921596      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:32.921711      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:33.921820      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:34.922433      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:35.923100      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:36.923242      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:37.923310      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:38.923358      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:39.924018      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:40.924128      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 07/12/25 13:32:40.993
  STEP: Verifying there are no pods in the namespace @ 07/12/25 13:32:41.005
  I0712 13:32:41.008870 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1660" for this suite. @ 07/12/25 13:32:41.013
  STEP: Destroying namespace "nsdeletetest-2314" for this suite. @ 07/12/25 13:32:41.019
  I0712 13:32:41.022901 20 framework.go:370] Namespace nsdeletetest-2314 was already deleted
  STEP: Destroying namespace "nsdeletetest-3618" for this suite. @ 07/12/25 13:32:41.022
• [13.095 seconds]
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 07/12/25 13:32:41.03
  I0712 13:32:41.030077 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename pod-network-test @ 07/12/25 13:32:41.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:32:41.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:32:41.047
  STEP: Performing setup for networking test in namespace pod-network-test-9412 @ 07/12/25 13:32:41.05
  STEP: creating a selector @ 07/12/25 13:32:41.05
  STEP: Creating the service pods in kubernetes @ 07/12/25 13:32:41.05
  I0712 13:32:41.050155 20 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0712 13:32:41.924652      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:42.924793      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:43.925858      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:44.925967      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:45.926090      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:46.926181      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:47.926893      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:48.927085      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:49.927235      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:50.927324      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:51.928187      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:52.928356      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:53.929280      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:54.930092      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 07/12/25 13:32:55.193
  E0712 13:32:55.930423      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:56.931419      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:32:57.226340 20 utils.go:802] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0712 13:32:57.226373 20 utils.go:495] Going to poll 192.168.214.191 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0712 13:32:57.229249 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.214.191:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9412 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0712 13:32:57.229268 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0712 13:32:57.229306 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9412/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.214.191%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0712 13:32:57.273500 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0712 13:32:57.273543 20 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I0712 13:32:57.273556 20 utils.go:495] Going to poll 192.168.246.158 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0712 13:32:57.277717 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.246.158:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9412 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0712 13:32:57.277738 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0712 13:32:57.277777 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9412/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.246.158%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0712 13:32:57.315847 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0712 13:32:57.315871 20 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I0712 13:32:57.315884 20 utils.go:495] Going to poll 192.168.235.156 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0712 13:32:57.319583 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.235.156:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9412 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0712 13:32:57.319595 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0712 13:32:57.319631 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9412/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.235.156%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0712 13:32:57.363991 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0712 13:32:57.364014 20 utils.go:512] Found all 1 expected endpoints: [netserver-2]
  I0712 13:32:57.364161 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9412" for this suite. @ 07/12/25 13:32:57.368
• [16.345 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 07/12/25 13:32:57.374
  I0712 13:32:57.374832 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename cronjob @ 07/12/25 13:32:57.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:32:57.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:32:57.39
  STEP: Creating a cronjob @ 07/12/25 13:32:57.392
  STEP: Ensuring more than one job is running at a time @ 07/12/25 13:32:57.4
  E0712 13:32:57.931515      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:58.931604      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:32:59.932430      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:00.932503      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:01.933591      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:02.933684      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:03.934425      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:04.935422      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:05.935689      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:06.935777      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:07.936259      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:08.936407      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:09.936603      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:10.936764      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:11.937545      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:12.937636      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:13.938640      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:14.938728      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:15.939689      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:16.940423      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:17.941212      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:18.941355      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:19.941429      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:20.941641      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:21.941742      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:22.941815      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:23.942314      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:24.942378      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:25.942489      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:26.942561      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:27.942736      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:28.942807      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:29.942961      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:30.943050      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:31.943194      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:32.943322      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:33.943405      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:34.943507      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:35.944276      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:36.944350      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:37.945054      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:38.945150      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:39.946226      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:40.946349      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:41.947351      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:42.947435      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:43.948509      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:44.948642      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:45.949429      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:46.949501      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:47.950336      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:48.950358      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:49.950455      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:50.950522      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:51.950639      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:52.950717      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:53.951009      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:54.951048      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:55.951430      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:56.951492      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:57.952011      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:58.952226      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:33:59.953366      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:00.953580      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 07/12/25 13:34:01.406
  STEP: Removing cronjob @ 07/12/25 13:34:01.411
  I0712 13:34:01.417030 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-246" for this suite. @ 07/12/25 13:34:01.421
• [64.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 07/12/25 13:34:01.428
  I0712 13:34:01.428302 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename configmap @ 07/12/25 13:34:01.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:34:01.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:34:01.445
  STEP: creating a ConfigMap @ 07/12/25 13:34:01.447
  STEP: fetching the ConfigMap @ 07/12/25 13:34:01.453
  STEP: patching the ConfigMap @ 07/12/25 13:34:01.456
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 07/12/25 13:34:01.461
  STEP: deleting the ConfigMap by collection with a label selector @ 07/12/25 13:34:01.464
  STEP: listing all ConfigMaps in test namespace @ 07/12/25 13:34:01.473
  I0712 13:34:01.476677 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3425" for this suite. @ 07/12/25 13:34:01.521
• [0.103 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:706
  STEP: Creating a kubernetes client @ 07/12/25 13:34:01.531
  I0712 13:34:01.531396 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename sched-pred @ 07/12/25 13:34:01.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:34:01.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:34:01.546
  I0712 13:34:01.549100 20 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0712 13:34:01.625891 20 util.go:390] Waiting for terminating namespaces to be deleted...
  I0712 13:34:01.630866 20 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-23-206 before test
  I0712 13:34:01.634130 20 predicates.go:958] nginx-ingress-controller-kubernetes-worker-p7kz8 from ingress-nginx-kubernetes-worker started at 2025-07-12 12:00:11 +0000 UTC (1 container statuses recorded)
  I0712 13:34:01.634145 20 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0712 13:34:01.634151 20 predicates.go:958] calico-node-54plq from kube-system started at 2025-07-12 12:17:03 +0000 UTC (1 container statuses recorded)
  I0712 13:34:01.634156 20 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0712 13:34:01.634161 20 predicates.go:958] coredns-5d946bb58-r22cc from kube-system started at 2025-07-12 12:00:11 +0000 UTC (1 container statuses recorded)
  I0712 13:34:01.634166 20 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0712 13:34:01.634171 20 predicates.go:958] kube-state-metrics-b84f44f45-pv9bk from kube-system started at 2025-07-12 12:00:10 +0000 UTC (1 container statuses recorded)
  I0712 13:34:01.634176 20 predicates.go:960] 	Container kube-state-metrics ready: true, restart count 0
  I0712 13:34:01.634181 20 predicates.go:958] metrics-server-v0.7.2-7d878b47f8-n56rt from kube-system started at 2025-07-12 12:00:11 +0000 UTC (2 container statuses recorded)
  I0712 13:34:01.634185 20 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0712 13:34:01.634189 20 predicates.go:960] 	Container metrics-server-nanny ready: true, restart count 0
  I0712 13:34:01.634195 20 predicates.go:958] dashboard-metrics-scraper-5cf87bc988-lp8pr from kubernetes-dashboard started at 2025-07-12 12:00:11 +0000 UTC (1 container statuses recorded)
  I0712 13:34:01.634216 20 predicates.go:960] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0712 13:34:01.634222 20 predicates.go:958] kubernetes-dashboard-6858576c98-27582 from kubernetes-dashboard started at 2025-07-12 12:00:11 +0000 UTC (1 container statuses recorded)
  I0712 13:34:01.634226 20 predicates.go:960] 	Container kubernetes-dashboard ready: true, restart count 5
  I0712 13:34:01.634237 20 predicates.go:958] sonobuoy-systemd-logs-daemon-set-e4f977ec76064d15-wlvd7 from sonobuoy started at 2025-07-12 12:20:11 +0000 UTC (2 container statuses recorded)
  I0712 13:34:01.634242 20 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0712 13:34:01.634246 20 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0712 13:34:01.634251 20 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-3-36 before test
  I0712 13:34:01.638260 20 predicates.go:958] concurrent-29205453-j7q94 from cronjob-246 started at 2025-07-12 13:33:00 +0000 UTC (1 container statuses recorded)
  I0712 13:34:01.638275 20 predicates.go:960] 	Container c ready: true, restart count 0
  I0712 13:34:01.638283 20 predicates.go:958] nginx-ingress-controller-kubernetes-worker-l54zn from ingress-nginx-kubernetes-worker started at 2025-07-12 12:16:01 +0000 UTC (1 container statuses recorded)
  I0712 13:34:01.638289 20 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0712 13:34:01.638308 20 predicates.go:958] calico-node-w9rj4 from kube-system started at 2025-07-12 12:16:49 +0000 UTC (1 container statuses recorded)
  I0712 13:34:01.638313 20 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0712 13:34:01.638319 20 predicates.go:958] sonobuoy-e2e-job-ff92fb6baa0d42bd from sonobuoy started at 2025-07-12 12:20:11 +0000 UTC (2 container statuses recorded)
  I0712 13:34:01.638329 20 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0712 13:34:01.638333 20 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0712 13:34:01.638338 20 predicates.go:958] sonobuoy-systemd-logs-daemon-set-e4f977ec76064d15-82lg9 from sonobuoy started at 2025-07-12 12:20:11 +0000 UTC (2 container statuses recorded)
  I0712 13:34:01.638343 20 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0712 13:34:01.638348 20 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0712 13:34:01.638353 20 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-39-13 before test
  I0712 13:34:01.641630 20 predicates.go:958] concurrent-29205454-jzfrc from cronjob-246 started at 2025-07-12 13:34:00 +0000 UTC (1 container statuses recorded)
  I0712 13:34:01.641645 20 predicates.go:960] 	Container c ready: true, restart count 0
  I0712 13:34:01.641652 20 predicates.go:958] nginx-ingress-controller-kubernetes-worker-h45h7 from ingress-nginx-kubernetes-worker started at 2025-07-12 13:31:22 +0000 UTC (1 container statuses recorded)
  I0712 13:34:01.641657 20 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0712 13:34:01.641662 20 predicates.go:958] calico-node-r8w6x from kube-system started at 2025-07-12 12:17:33 +0000 UTC (1 container statuses recorded)
  I0712 13:34:01.641667 20 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0712 13:34:01.641672 20 predicates.go:958] sonobuoy from sonobuoy started at 2025-07-12 12:20:10 +0000 UTC (1 container statuses recorded)
  I0712 13:34:01.641676 20 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0712 13:34:01.641683 20 predicates.go:958] sonobuoy-systemd-logs-daemon-set-e4f977ec76064d15-wz4t4 from sonobuoy started at 2025-07-12 12:20:11 +0000 UTC (2 container statuses recorded)
  I0712 13:34:01.641687 20 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0712 13:34:01.641693 20 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/12/25 13:34:01.641
  E0712 13:34:01.954297      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:02.954398      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/12/25 13:34:03.664
  STEP: Trying to apply a random label on the found node. @ 07/12/25 13:34:03.682
  STEP: verifying the node has the label kubernetes.io/e2e-7459e586-7cbb-4927-a53d-17af0fc48315 95 @ 07/12/25 13:34:03.697
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 07/12/25 13:34:03.7
  E0712 13:34:03.954864      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:04.955158      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.39.13 on the node which pod4 resides and expect not scheduled @ 07/12/25 13:34:05.718
  E0712 13:34:05.955440      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:06.955699      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:07.956362      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:08.956445      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:09.956636      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:10.956729      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:11.957722      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:12.957801      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:13.957899      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:14.958003      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:15.958797      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:16.959009      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:17.959498      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:18.959577      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:19.959903      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:20.959981      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:21.961011      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:22.961113      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:23.961394      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:24.961503      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:25.962068      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:26.962311      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:27.962354      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:28.962446      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:29.962995      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:30.963096      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:31.964091      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:32.964170      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:33.964871      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:34.965094      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:35.965676      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:36.965774      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:37.966429      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:38.966598      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:39.966644      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:40.966847      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:41.967249      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:42.967441      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:43.967994      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:44.968087      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:45.969117      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:46.969196      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:47.970177      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:48.970336      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:49.971380      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:50.972402      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:51.973348      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:52.973450      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:53.973515      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:54.973625      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:55.974016      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:56.974137      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:57.974647      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:58.974818      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:34:59.975286      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:00.975489      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:01.976162      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:02.976274      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:03.976583      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:04.976776      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:05.977426      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:06.977526      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:07.978433      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:08.978562      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:09.978920      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:10.979949      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:11.980918      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:12.980994      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:13.981537      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:14.981632      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:15.981911      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:16.982103      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:17.982125      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:18.982255      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:19.982468      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:20.982660      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:21.983172      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:22.983334      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:23.983355      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:24.983461      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:25.983518      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:26.983636      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:27.984349      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:28.984458      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:29.985358      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:30.985572      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:31.986562      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:32.986876      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:33.987214      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:34.988174      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:35.989186      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:36.989360      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:37.989595      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:38.990415      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:39.990613      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:40.991407      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:41.992305      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:42.992442      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:43.993196      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:44.994165      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:45.994475      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:46.994874      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:47.995596      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:48.995795      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:49.996238      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:50.996392      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:51.997022      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:52.997246      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:53.997437      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:54.997622      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:55.997625      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:56.998371      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:57.998412      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:35:58.999360      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:00.000404      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:01.000525      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:02.000584      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:03.000705      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:04.001702      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:05.001983      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:06.002476      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:07.003028      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:08.003253      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:09.003336      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:10.003461      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:11.003560      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:12.003758      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:13.003871      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:14.004067      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:15.004100      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:16.004307      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:17.004371      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:18.005396      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:19.005636      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:20.005819      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:21.005930      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:22.006038      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:23.006090      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:24.006400      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:25.007395      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:26.008399      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:27.008498      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:28.009413      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:29.009545      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:30.010396      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:31.010496      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:32.011457      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:33.011550      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:34.012423      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:35.013277      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:36.013460      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:37.013583      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:38.013775      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:39.014688      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:40.014801      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:41.014920      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:42.015007      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:43.015117      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:44.015326      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:45.016255      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:46.016447      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:47.016550      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:48.016734      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:49.016850      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:50.016971      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:51.017036      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:52.017408      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:53.017753      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:54.017940      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:55.018110      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:56.018233      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:57.018283      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:58.018467      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:36:59.018845      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:00.019026      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:01.020030      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:02.020116      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:03.020341      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:04.021404      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:05.022399      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:06.022583      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:07.023330      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:08.023443      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:09.023542      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:10.023659      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:11.023780      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:12.024405      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:13.024522      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:14.024719      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:15.024837      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:16.025026      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:17.025142      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:18.025359      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:19.025935      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:20.026048      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:21.026108      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:22.026312      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:23.026492      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:24.027418      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:25.027723      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:26.028505      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:27.028607      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:28.029566      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:29.030398      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:30.031404      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:31.031501      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:32.031685      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:33.032415      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:34.033410      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:35.033528      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:36.033722      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:37.034758      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:38.034938      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:39.035360      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:40.035462      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:41.035586      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:42.036427      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:43.036583      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:44.036777      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:45.037091      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:46.037316      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:47.038329      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:48.038449      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:49.039318      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:50.039348      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:51.040401      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:52.040487      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:53.041397      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:54.042416      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:55.042531      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:56.042718      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:57.042969      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:58.043422      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:37:59.043542      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:00.043664      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:01.043726      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:02.043920      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:03.044596      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:04.044785      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:05.045240      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:06.045405      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:07.045399      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:08.045583      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:09.045696      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:10.045795      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:11.046853      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:12.046969      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:13.047405      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:14.047586      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:15.047735      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:16.047847      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:17.047955      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:18.048138      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:19.048995      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:20.049093      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:21.050165      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:22.050327      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:23.051035      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:24.051414      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:25.052422      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:26.052521      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:27.052632      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:28.052827      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:29.052948      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:30.053050      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:31.053341      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:32.053423      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:33.053545      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:34.054320      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:35.055318      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:36.055510      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:37.056569      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:38.056670      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:39.057639      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:40.057799      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:41.057846      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:42.058090      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:43.059081      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:44.059314      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:45.060183      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:46.060341      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:47.061328      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:48.062424      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:49.062524      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:50.062638      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:51.062731      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:52.062917      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:53.063056      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:54.063148      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:55.063939      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:56.064012      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:57.064814      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:58.064910      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:38:59.065030      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:00.065138      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:01.065311      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:02.065524      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:03.066118      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:04.066356      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:05.066486      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-7459e586-7cbb-4927-a53d-17af0fc48315 off the node ip-172-31-39-13 @ 07/12/25 13:39:05.727
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-7459e586-7cbb-4927-a53d-17af0fc48315 @ 07/12/25 13:39:05.74
  I0712 13:39:05.743480 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6026" for this suite. @ 07/12/25 13:39:05.747
• [304.222 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:191
  STEP: Creating a kubernetes client @ 07/12/25 13:39:05.753
  I0712 13:39:05.753674 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename svcaccounts @ 07/12/25 13:39:05.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:39:05.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:39:05.766
  I0712 13:39:05.787400 20 service_accounts.go:281] created pod pod-service-account-defaultsa
  I0712 13:39:05.787418 20 service_accounts.go:295] pod pod-service-account-defaultsa service account token volume mount: true
  I0712 13:39:05.792105 20 service_accounts.go:281] created pod pod-service-account-mountsa
  I0712 13:39:05.792122 20 service_accounts.go:295] pod pod-service-account-mountsa service account token volume mount: true
  I0712 13:39:05.797718 20 service_accounts.go:281] created pod pod-service-account-nomountsa
  I0712 13:39:05.797736 20 service_accounts.go:295] pod pod-service-account-nomountsa service account token volume mount: false
  I0712 13:39:05.807794 20 service_accounts.go:281] created pod pod-service-account-defaultsa-mountspec
  I0712 13:39:05.807812 20 service_accounts.go:295] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0712 13:39:05.813195 20 service_accounts.go:281] created pod pod-service-account-mountsa-mountspec
  I0712 13:39:05.813239 20 service_accounts.go:295] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0712 13:39:05.822092 20 service_accounts.go:281] created pod pod-service-account-nomountsa-mountspec
  I0712 13:39:05.822115 20 service_accounts.go:295] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0712 13:39:05.828868 20 service_accounts.go:281] created pod pod-service-account-defaultsa-nomountspec
  I0712 13:39:05.828889 20 service_accounts.go:295] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0712 13:39:05.838528 20 service_accounts.go:281] created pod pod-service-account-mountsa-nomountspec
  I0712 13:39:05.838549 20 service_accounts.go:295] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0712 13:39:05.848795 20 service_accounts.go:281] created pod pod-service-account-nomountsa-nomountspec
  I0712 13:39:05.849027 20 service_accounts.go:295] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0712 13:39:05.849312 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4810" for this suite. @ 07/12/25 13:39:05.856
• [0.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 07/12/25 13:39:05.863
  I0712 13:39:05.863270 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename deployment @ 07/12/25 13:39:05.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:39:05.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:39:05.886
  I0712 13:39:05.897237 20 resource.go:81] Pod name rollover-pod: Found 0 pods out of 1
  E0712 13:39:06.066854      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:07.067245      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:08.067390      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:09.067609      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:10.067731      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:39:10.904507 20 resource.go:81] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/12/25 13:39:10.904
  I0712 13:39:10.904578 20 deployment.go:930] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0712 13:39:11.067787      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:12.067902      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:39:12.910139 20 deployment.go:940] Creating deployment "test-rollover-deployment"
  I0712 13:39:12.919305 20 deployment.go:953] Make sure deployment "test-rollover-deployment" performs scaling operations
  E0712 13:39:13.068834      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:14.068908      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:39:14.927676 20 deployment.go:958] Check revision of new replica set for deployment "test-rollover-deployment"
  I0712 13:39:14.935388 20 deployment.go:962] Ensure that both replica sets have 1 created replica
  I0712 13:39:14.941866 20 deployment.go:971] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0712 13:39:14.952891 20 deployment.go:314] Updating deployment test-rollover-deployment
  I0712 13:39:14.952914 20 deployment.go:980] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0712 13:39:15.069372      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:16.069370      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:39:16.961032 20 deployment.go:985] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0712 13:39:16.969332 20 deployment.go:989] Make sure deployment "test-rollover-deployment" is complete
  I0712 13:39:16.976366 20 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0712 13:39:16.976444 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 12, 13, 39, 12, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 13, 39, 12, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 12, 13, 39, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 13, 39, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0712 13:39:17.070403      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:18.070500      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:39:18.985166 20 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0712 13:39:18.985244 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 12, 13, 39, 12, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 13, 39, 12, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 12, 13, 39, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 13, 39, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0712 13:39:19.071296      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:20.072300      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:39:20.986454 20 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0712 13:39:20.986513 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 12, 13, 39, 12, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 13, 39, 12, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 12, 13, 39, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 13, 39, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0712 13:39:21.072591      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:22.072693      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:39:22.984842 20 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0712 13:39:22.984899 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 12, 13, 39, 12, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 13, 39, 12, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 12, 13, 39, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 13, 39, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0712 13:39:23.072959      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:24.073081      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:39:24.985009 20 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0712 13:39:24.985073 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 12, 13, 39, 12, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 13, 39, 12, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 12, 13, 39, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 13, 39, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0712 13:39:25.074071      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:26.074193      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:39:26.985838 20 deployment.go:95] 
  I0712 13:39:26.985878 20 deployment.go:993] Ensure that both old replica sets have no replicas
  I0712 13:39:26.996227 20 deployment.go:632] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4f81abc7-e695-48ac-bc3a-c246747f7166",
      ResourceVersion: (string) (len=5) "44314",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887924352,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887924354,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887924366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887924352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887924352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887924366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887924352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0712 13:39:27.000667 20 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "78d70fc4-fd1a-4d44-bc6f-f5a6adcb5baa",
      ResourceVersion: (string) (len=5) "44304",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887924354,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "4f81abc7-e695-48ac-bc3a-c246747f7166",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887924354,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 66 38 31 61 62  63 37 2d 65 36 39 35 2d  |\"4f81abc7-e695-|
              00000120  34 38 61 63 2d 62 63 33  61 2d 63 32 34 36 37 34  |48ac-bc3a-c24674|
              00000130  37 66 37 31 36 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |7f7166\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887924366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0712 13:39:27.001240 20 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0712 13:39:27.001521 20 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a6d38e82-f490-40f3-a37c-5bc20b3b5611",
      ResourceVersion: (string) (len=5) "44313",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887924345,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "4f81abc7-e695-48ac-bc3a-c246747f7166",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887924345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887924366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  34 66 38 31 61 62 63 37  2d 65 36 39 35 2d 34 38  |4f81abc7-e695-48|
              000000c0  61 63 2d 62 63 33 61 2d  63 32 34 36 37 34 37 66  |ac-bc3a-c246747f|
              000000d0  37 31 36 36 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |7166\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887924366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0712 13:39:27.002663 20 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "68937702-939e-4a84-8ab5-a6cb66513bbd",
      ResourceVersion: (string) (len=5) "44233",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887924352,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "4f81abc7-e695-48ac-bc3a-c246747f7166",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887924354,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 66 38 31 61 62  63 37 2d 65 36 39 35 2d  |\"4f81abc7-e695-|
              00000120  34 38 61 63 2d 62 63 33  61 2d 63 32 34 36 37 34  |48ac-bc3a-c24674|
              00000130  37 66 37 31 36 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |7f7166\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887924355,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0712 13:39:27.006997 20 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-gqd7g" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-gqd7g",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-4358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "56c18317-9139-4bed-ae69-10813ae1d1a5",
      ResourceVersion: (string) (len=5) "44273",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887924354,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "78d70fc4-fd1a-4d44-bc6f-f5a6adcb5baa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887924354,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 38  64 37 30 66 63 34 2d 66  |d\":\"78d70fc4-f|
              00000090  64 31 61 2d 34 64 34 34  2d 62 63 36 66 2d 66 35  |d1a-4d44-bc6f-f5|
              000000a0  61 36 61 64 63 62 35 62  61 61 5c 22 7d 22 3a 7b  |a6adcb5baa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887924356,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 33  35 2e 31 33 39 5c 22 7d  |2.168.235.139\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wl8hh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wl8hh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-39-13",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887924356,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887924355,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887924356,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887924356,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887924354,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.39.13",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.39.13"
        }
      },
      PodIP: (string) (len=15) "192.168.235.139",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.235.139"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887924355,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63887924355,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://a6c2e1ba6951db6564775ce39ec28420fdf4531197ab18ccf96de5b9bd1d5296",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wl8hh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:39:27.008277 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4358" for this suite. @ 07/12/25 13:39:27.012
• [21.156 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 07/12/25 13:39:27.019
  I0712 13:39:27.019309 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename projected @ 07/12/25 13:39:27.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:39:27.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:39:27.034
  STEP: Creating projection with secret that has name projected-secret-test-af9cc79a-2a44-4fb9-a458-0c379eb1be35 @ 07/12/25 13:39:27.037
  STEP: Creating a pod to test consume secrets @ 07/12/25 13:39:27.042
  E0712 13:39:27.074523      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:28.074756      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:29.075712      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:30.075812      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:39:31.067
  I0712 13:39:31.071247 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-projected-secrets-8df07a4e-4dc4-418a-b5a9-4a60c62a39e8 container projected-secret-volume-test: <nil>
  E0712 13:39:31.076378      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod @ 07/12/25 13:39:31.087
  I0712 13:39:31.102919 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1876" for this suite. @ 07/12/25 13:39:31.107
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 07/12/25 13:39:31.119
  I0712 13:39:31.119821 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename secrets @ 07/12/25 13:39:31.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:39:31.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:39:31.137
  STEP: Creating secret with name secret-test-d568acd4-c25d-4234-8f42-3753cbc46c52 @ 07/12/25 13:39:31.139
  STEP: Creating a pod to test consume secrets @ 07/12/25 13:39:31.144
  E0712 13:39:32.077457      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:33.077574      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:34.077659      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:35.077780      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:39:35.166
  I0712 13:39:35.171041 20 output.go:207] Trying to get logs from node ip-172-31-3-36 pod pod-secrets-4fb1c124-1678-49a6-8db4-433dcd3aa0fe container secret-volume-test: <nil>
  STEP: delete the pod @ 07/12/25 13:39:35.186
  I0712 13:39:35.200247 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1575" for this suite. @ 07/12/25 13:39:35.203
• [4.092 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 07/12/25 13:39:35.212
  I0712 13:39:35.212257 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename configmap @ 07/12/25 13:39:35.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:39:35.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:39:35.227
  STEP: Creating configMap with name configmap-test-upd-4f840046-3885-44bc-89d8-b2dc24e8fa61 @ 07/12/25 13:39:35.304
  STEP: Creating the pod @ 07/12/25 13:39:35.309
  E0712 13:39:36.078744      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:37.078813      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-4f840046-3885-44bc-89d8-b2dc24e8fa61 @ 07/12/25 13:39:37.34
  STEP: waiting to observe update in volume @ 07/12/25 13:39:37.345
  E0712 13:39:38.079380      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:39.079462      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:40.079496      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:41.079580      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:42.080404      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:43.080519      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:44.081456      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:45.081529      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:46.081603      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:47.081746      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:48.081867      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:49.081956      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:50.082438      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:51.082665      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:52.082763      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:53.083448      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:54.084066      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:55.084250      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:56.085139      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:57.085446      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:58.085565      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:39:59.085646      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:00.085806      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:01.085890      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:02.086770      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:03.086855      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:04.087000      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:05.087343      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:06.087270      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:07.087450      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:08.087567      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:09.087752      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:10.088391      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:11.088580      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:12.089677      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:13.090406      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:14.091221      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:15.092303      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:16.092336      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:17.092550      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:18.092664      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:19.092918      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:20.093400      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:21.093595      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:22.093702      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:23.093905      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:24.094420      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:25.094505      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:26.095344      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:27.095522      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:28.096325      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:29.096446      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:30.097295      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:31.097388      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:32.097655      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:33.097878      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:34.098012      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:35.099033      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:36.099494      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:37.099993      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:38.100254      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:39.100355      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:40.101406      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:41.101506      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:42.102392      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:43.102579      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:44.102686      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:45.102810      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:46.103397      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:47.103577      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:48.104409      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:49.104601      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:50.105297      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:51.105478      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:52.105792      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:53.105879      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:54.106520      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:55.106621      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:56.107190      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:57.107422      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:40:57.696844 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8458" for this suite. @ 07/12/25 13:40:57.703
• [82.499 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 07/12/25 13:40:57.711
  I0712 13:40:57.711076 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename disruption @ 07/12/25 13:40:57.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:40:57.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:40:57.725
  STEP: Creating a pdb that targets all three pods in a test replica set @ 07/12/25 13:40:57.727
  STEP: Waiting for the pdb to be processed @ 07/12/25 13:40:57.731
  E0712 13:40:58.108270      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:40:59.108348      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 07/12/25 13:40:59.742
  STEP: Waiting for all pods to be running @ 07/12/25 13:40:59.742
  I0712 13:40:59.746102 20 disruption.go:680] pods: 0 < 3
  E0712 13:41:00.109523      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:41:01.109891      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 07/12/25 13:41:01.746
  STEP: Updating the pdb to allow a pod to be evicted @ 07/12/25 13:41:01.757
  STEP: Waiting for the pdb to be processed @ 07/12/25 13:41:01.765
  E0712 13:41:02.110430      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:41:03.110498      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 07/12/25 13:41:03.771
  STEP: Waiting for all pods to be running @ 07/12/25 13:41:03.771
  STEP: Waiting for the pdb to observed all healthy pods @ 07/12/25 13:41:03.774
  STEP: Patching the pdb to disallow a pod to be evicted @ 07/12/25 13:41:03.801
  STEP: Waiting for the pdb to be processed @ 07/12/25 13:41:03.814
  E0712 13:41:04.110617      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:41:05.111405      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 07/12/25 13:41:05.819
  STEP: locating a running pod @ 07/12/25 13:41:05.824
  STEP: Deleting the pdb to allow a pod to be evicted @ 07/12/25 13:41:05.834
  STEP: Waiting for the pdb to be deleted @ 07/12/25 13:41:05.841
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 07/12/25 13:41:05.844
  STEP: Waiting for all pods to be running @ 07/12/25 13:41:05.844
  I0712 13:41:05.947850 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8028" for this suite. @ 07/12/25 13:41:05.951
• [8.247 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3220
  STEP: Creating a kubernetes client @ 07/12/25 13:41:05.958
  I0712 13:41:05.958362 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename services @ 07/12/25 13:41:05.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:41:05.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:41:05.97
  I0712 13:41:05.976581      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating an Endpoint @ 07/12/25 13:41:05.976
  I0712 13:41:05.983282      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for available Endpoint @ 07/12/25 13:41:05.983
  I0712 13:41:05.984498      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: listing all Endpoints @ 07/12/25 13:41:05.984
  I0712 13:41:06.077554      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: updating the Endpoint @ 07/12/25 13:41:06.077
  I0712 13:41:06.083432      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0712 13:41:06.084616      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 07/12/25 13:41:06.084
  I0712 13:41:06.087485      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: patching the Endpoint @ 07/12/25 13:41:06.087
  I0712 13:41:06.093764      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0712 13:41:06.095119      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 07/12/25 13:41:06.095
  I0712 13:41:06.098185      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: deleting the Endpoint by Collection @ 07/12/25 13:41:06.098
  I0712 13:41:06.106786      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for Endpoint deletion @ 07/12/25 13:41:06.106
  I0712 13:41:06.107920      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 07/12/25 13:41:06.107
  I0712 13:41:06.111608      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  E0712 13:41:06.111650      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:41:06.111764 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5977" for this suite. @ 07/12/25 13:41:06.116
• [0.166 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 07/12/25 13:41:06.124
  I0712 13:41:06.124057 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename projected @ 07/12/25 13:41:06.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:41:06.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:41:06.136
  STEP: Creating configMap with name projected-configmap-test-volume-map-d4a3e727-564c-4f31-a88b-1f6db75f1095 @ 07/12/25 13:41:06.139
  STEP: Creating a pod to test consume configMaps @ 07/12/25 13:41:06.145
  E0712 13:41:07.111773      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:41:08.111902      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:41:09.112366      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:41:10.112487      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:41:10.169
  I0712 13:41:10.173370 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-projected-configmaps-b811b652-f14f-484a-9bd8-17397e9bf7c0 container agnhost-container: <nil>
  STEP: delete the pod @ 07/12/25 13:41:10.178
  I0712 13:41:10.194217 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7444" for this suite. @ 07/12/25 13:41:10.199
• [4.082 seconds]
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 07/12/25 13:41:10.206
  I0712 13:41:10.206593 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename downward-api @ 07/12/25 13:41:10.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:41:10.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:41:10.22
  STEP: Creating a pod to test downward API volume plugin @ 07/12/25 13:41:10.223
  E0712 13:41:11.112926      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:41:12.113134      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:41:13.113284      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:41:14.113344      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:41:14.243
  I0712 13:41:14.247152 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod downwardapi-volume-dd954e45-7f06-4b29-80e7-c349407d1612 container client-container: <nil>
  STEP: delete the pod @ 07/12/25 13:41:14.253
  I0712 13:41:14.267695 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3347" for this suite. @ 07/12/25 13:41:14.271
• [4.071 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 07/12/25 13:41:14.278
  I0712 13:41:14.278050 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename projected @ 07/12/25 13:41:14.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:41:14.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:41:14.289
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-30caf6ba-d500-4fc0-8450-a5c136543fd3 @ 07/12/25 13:41:14.372
  STEP: Creating the pod @ 07/12/25 13:41:14.377
  E0712 13:41:15.114367      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:41:16.114458      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-30caf6ba-d500-4fc0-8450-a5c136543fd3 @ 07/12/25 13:41:16.404
  STEP: waiting to observe update in volume @ 07/12/25 13:41:16.41
  E0712 13:41:17.114563      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:41:18.114706      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:41:19.114793      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:41:20.114884      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:41:20.433112 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-162" for this suite. @ 07/12/25 13:41:20.437
• [6.168 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 07/12/25 13:41:20.445
  I0712 13:41:20.445990 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename var-expansion @ 07/12/25 13:41:20.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:41:20.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:41:20.46
  STEP: Creating a pod to test substitution in container's command @ 07/12/25 13:41:20.463
  E0712 13:41:21.115913      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:41:22.115999      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:41:22.478
  I0712 13:41:22.483165 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod var-expansion-0b2571e4-5ce3-4902-a2cb-3bb5e751eb1f container dapi-container: <nil>
  STEP: delete the pod @ 07/12/25 13:41:22.491
  I0712 13:41:22.505159 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7326" for this suite. @ 07/12/25 13:41:22.509
• [2.070 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 07/12/25 13:41:22.515
  I0712 13:41:22.515825 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename webhook @ 07/12/25 13:41:22.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:41:22.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:41:22.53
  STEP: Setting up server cert @ 07/12/25 13:41:22.544
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/12/25 13:41:22.798
  STEP: Deploying the webhook pod @ 07/12/25 13:41:22.805
  STEP: Wait for the deployment to be ready @ 07/12/25 13:41:22.819
  I0712 13:41:22.826425 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0712 13:41:23.116783      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:41:24.116890      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/12/25 13:41:24.837
  STEP: Verifying the service has paired with the endpoint @ 07/12/25 13:41:24.851
  E0712 13:41:25.117435      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:41:25.852100 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0712 13:41:25.855880 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  E0712 13:41:26.118436      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4723-crds.webhook.example.com via the AdmissionRegistration API @ 07/12/25 13:41:26.366
  STEP: Creating a custom resource that should be mutated by the webhook @ 07/12/25 13:41:26.379
  E0712 13:41:27.118572      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:41:28.118626      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:41:28.959872 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4228" for this suite. @ 07/12/25 13:41:28.964
  STEP: Destroying namespace "webhook-markers-6510" for this suite. @ 07/12/25 13:41:28.969
• [6.462 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 07/12/25 13:41:28.978
  I0712 13:41:28.978246 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename projected @ 07/12/25 13:41:28.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:41:28.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:41:28.992
  STEP: Creating projection with secret that has name projected-secret-test-map-fc6a31da-3d0a-4902-ab2c-bf62a72c66e1 @ 07/12/25 13:41:28.995
  STEP: Creating a pod to test consume secrets @ 07/12/25 13:41:29
  E0712 13:41:29.118744      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:41:30.118873      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:41:31.119560      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:41:32.120539      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:41:33.021
  I0712 13:41:33.025285 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-projected-secrets-ab8f8995-9a54-45ec-b05d-629f79844b05 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/12/25 13:41:33.032
  I0712 13:41:33.047572 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3723" for this suite. @ 07/12/25 13:41:33.052
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 07/12/25 13:41:33.06
  I0712 13:41:33.060183 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename subjectreview @ 07/12/25 13:41:33.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:41:33.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:41:33.074
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-6061" @ 07/12/25 13:41:33.077
  I0712 13:41:33.081749 20 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-6061:e2e"
  I0712 13:41:33.081810 20 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-6061"}
  I0712 13:41:33.081832 20 subjectreviews.go:71] saUID: "a60b3d65-6e38-4728-95a2-20a5b7bece4a"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-6061:e2e" @ 07/12/25 13:41:33.081
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-6061:e2e" @ 07/12/25 13:41:33.082
  I0712 13:41:33.083659 20 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-6061:e2e" api 'list' configmaps in "subjectreview-6061" namespace @ 07/12/25 13:41:33.083
  I0712 13:41:33.084947 20 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-6061:e2e" @ 07/12/25 13:41:33.084
  I0712 13:41:33.086569 20 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0712 13:41:33.086586 20 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0712 13:41:33.086664 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0712 13:41:33.120708      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "subjectreview-6061" for this suite. @ 07/12/25 13:41:33.153
• [0.100 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 07/12/25 13:41:33.16
  I0712 13:41:33.160137 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename daemonsets @ 07/12/25 13:41:33.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:41:33.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:41:33.177
  STEP: Creating simple DaemonSet "daemon-set" @ 07/12/25 13:41:33.267
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/12/25 13:41:33.272
  I0712 13:41:33.353718 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 13:41:33.353764 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 13:41:33.357025 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0712 13:41:33.357047 20 fixtures.go:131] Node ip-172-31-23-206 is running 0 daemon pod, expected 1
  E0712 13:41:34.121412      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:41:34.277517 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 13:41:34.277568 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 13:41:34.282581 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0712 13:41:34.282601 20 fixtures.go:131] Node ip-172-31-3-36 is running 0 daemon pod, expected 1
  E0712 13:41:35.122418      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:41:35.278543 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-0-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 13:41:35.278599 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-82-38 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0712 13:41:35.282156 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0712 13:41:35.282175 20 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 07/12/25 13:41:35.285
  I0712 13:41:35.289262 20 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 07/12/25 13:41:35.289
  I0712 13:41:35.300530 20 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 07/12/25 13:41:35.3
  I0712 13:41:35.302112 20 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0712 13:41:35.302186 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0712 13:41:35.302279 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0712 13:41:35.302451 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0712 13:41:35.302548 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0712 13:41:35.302635 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0712 13:41:35.302710 20 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-5792 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0712 13:41:35.302732 20 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 07/12/25 13:41:35.302
  STEP: watching for the daemon set status to be patched @ 07/12/25 13:41:35.307
  I0712 13:41:35.309151 20 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0712 13:41:35.309246 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0712 13:41:35.309316 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0712 13:41:35.309503 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0712 13:41:35.309598 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0712 13:41:35.309669 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0712 13:41:35.309685 20 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-5792 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0712 13:41:35.309771 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0712 13:41:35.309787 20 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-5792 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0712 13:41:35.309797 20 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 07/12/25 13:41:35.316
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5792, will wait for the garbage collector to delete the pods @ 07/12/25 13:41:35.316
  I0712 13:41:35.376071 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.019233ms
  I0712 13:41:35.476781 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.70265ms
  E0712 13:41:36.122824      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:41:36.581159 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0712 13:41:36.581217 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0712 13:41:36.585125 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"45242"},"items":null}

  I0712 13:41:36.589761 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"45242"},"items":null}

  I0712 13:41:36.603494 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5792" for this suite. @ 07/12/25 13:41:36.606
• [3.454 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 07/12/25 13:41:36.614
  I0712 13:41:36.614611 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename downward-api @ 07/12/25 13:41:36.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:41:36.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:41:36.628
  STEP: Creating a pod to test downward API volume plugin @ 07/12/25 13:41:36.63
  E0712 13:41:37.122978      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:41:38.123065      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:41:39.123430      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:41:40.123524      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:41:40.652
  I0712 13:41:40.656929 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod downwardapi-volume-9c531f09-b7c5-4d9b-98b5-c7a3107e97ab container client-container: <nil>
  STEP: delete the pod @ 07/12/25 13:41:40.663
  I0712 13:41:40.678049 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5870" for this suite. @ 07/12/25 13:41:40.681
• [4.074 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support IPAddress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:223
  STEP: Creating a kubernetes client @ 07/12/25 13:41:40.688
  I0712 13:41:40.688797 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename servicecidr @ 07/12/25 13:41:40.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:41:40.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:41:40.702
  STEP: creating @ 07/12/25 13:41:40.705
  STEP: patching @ 07/12/25 13:41:40.714
  STEP: updating @ 07/12/25 13:41:40.721
  STEP: getting @ 07/12/25 13:41:40.728
  STEP: listing @ 07/12/25 13:41:40.731
  STEP: watching @ 07/12/25 13:41:40.734
  STEP: deleting @ 07/12/25 13:41:40.735
  STEP: deleting a collection @ 07/12/25 13:41:40.743
  I0712 13:41:40.754596 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-1834" for this suite. @ 07/12/25 13:41:40.782
• [0.099 seconds]
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:159
  STEP: Creating a kubernetes client @ 07/12/25 13:41:40.788
  I0712 13:41:40.788180 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename emptydir @ 07/12/25 13:41:40.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:41:40.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:41:40.801
  STEP: Creating a pod to test emptydir volume type on node default medium @ 07/12/25 13:41:40.803
  E0712 13:41:41.124129      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:41:42.124234      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:41:43.124828      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:41:44.125069      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:41:44.826
  I0712 13:41:44.830408 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-08d10ff7-dc2d-4a71-89fe-64dc910def9b container test-container: <nil>
  STEP: delete the pod @ 07/12/25 13:41:44.838
  I0712 13:41:44.852629 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5986" for this suite. @ 07/12/25 13:41:44.856
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy succeededCount rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:567
  STEP: Creating a kubernetes client @ 07/12/25 13:41:44.864
  I0712 13:41:44.864967 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename job @ 07/12/25 13:41:44.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:41:44.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:41:44.88
  STEP: Creating an indexed job with successPolicy succeededCount rule @ 07/12/25 13:41:44.883
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet condition with SuccessPolicy reason @ 07/12/25 13:41:44.888
  E0712 13:41:45.125743      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:41:46.125859      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:41:47.125995      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:41:48.126226      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensure that the job reaches completions @ 07/12/25 13:41:48.9
  STEP: Verifying that the job status to ensure correct final state @ 07/12/25 13:41:48.906
  I0712 13:41:48.909869 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4735" for this suite. @ 07/12/25 13:41:48.914
• [4.056 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:160
  STEP: Creating a kubernetes client @ 07/12/25 13:41:48.92
  I0712 13:41:48.920626 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename runtimeclass @ 07/12/25 13:41:48.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:41:48.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:41:48.936
  STEP: Deleting RuntimeClass runtimeclass-8937-delete-me @ 07/12/25 13:41:48.942
  STEP: Waiting for the RuntimeClass to disappear @ 07/12/25 13:41:48.95
  I0712 13:41:48.959838 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8937" for this suite. @ 07/12/25 13:41:49.015
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 07/12/25 13:41:49.022
  I0712 13:41:49.022588 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename projected @ 07/12/25 13:41:49.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:41:49.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:41:49.039
  STEP: Creating configMap with name projected-configmap-test-volume-375e88a3-1683-4776-ab18-8d62ee7fca07 @ 07/12/25 13:41:49.042
  STEP: Creating a pod to test consume configMaps @ 07/12/25 13:41:49.046
  E0712 13:41:49.126968      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:41:50.127103      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:41:51.127371      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:41:52.127614      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:41:53.075
  I0712 13:41:53.078741 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-projected-configmaps-dd7d8cdf-bb44-4103-880f-6dc3877285d8 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 07/12/25 13:41:53.086
  I0712 13:41:53.100419 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8396" for this suite. @ 07/12/25 13:41:53.104
• [4.088 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 07/12/25 13:41:53.11
  I0712 13:41:53.110260 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename webhook @ 07/12/25 13:41:53.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:41:53.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:41:53.125
  E0712 13:41:53.128224      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 07/12/25 13:41:53.143
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/12/25 13:41:53.7
  STEP: Deploying the webhook pod @ 07/12/25 13:41:53.707
  STEP: Wait for the deployment to be ready @ 07/12/25 13:41:53.719
  I0712 13:41:53.728551 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0712 13:41:54.129015      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:41:55.129155      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/12/25 13:41:55.741
  STEP: Verifying the service has paired with the endpoint @ 07/12/25 13:41:55.753
  E0712 13:41:56.129947      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:41:56.754515 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0712 13:41:56.760021 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  E0712 13:41:57.130386      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7390-crds.webhook.example.com via the AdmissionRegistration API @ 07/12/25 13:41:57.269
  STEP: Creating a custom resource while v1 is storage version @ 07/12/25 13:41:57.285
  E0712 13:41:58.130460      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:41:59.130521      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 07/12/25 13:41:59.314
  STEP: Patching the custom resource while v2 is storage version @ 07/12/25 13:41:59.327
  I0712 13:41:59.914364 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3676" for this suite. @ 07/12/25 13:41:59.918
  STEP: Destroying namespace "webhook-markers-5586" for this suite. @ 07/12/25 13:41:59.926
• [6.826 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 07/12/25 13:41:59.936
  I0712 13:41:59.936924 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename containers @ 07/12/25 13:41:59.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:41:59.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:41:59.951
  STEP: Creating a pod to test override command @ 07/12/25 13:41:59.957
  E0712 13:42:00.131423      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:01.131518      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:02.131903      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:03.132012      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:42:03.979
  I0712 13:42:03.982702 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod client-containers-31786d68-03ed-4075-b51b-329edcbcd8a9 container agnhost-container: <nil>
  STEP: delete the pod @ 07/12/25 13:42:03.989
  I0712 13:42:04.006771 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8633" for this suite. @ 07/12/25 13:42:04.011
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 07/12/25 13:42:04.02
  I0712 13:42:04.020818 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename configmap @ 07/12/25 13:42:04.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:42:04.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:42:04.036
  STEP: Creating configMap with name configmap-test-volume-68dc974a-a7cd-4735-8ea6-ad271aea447a @ 07/12/25 13:42:04.038
  STEP: Creating a pod to test consume configMaps @ 07/12/25 13:42:04.043
  E0712 13:42:04.132037      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:05.132398      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:06.132361      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:07.132450      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:42:08.064
  I0712 13:42:08.068429 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-configmaps-10eec9ef-fe05-486b-88d5-6afb8211c950 container configmap-volume-test: <nil>
  STEP: delete the pod @ 07/12/25 13:42:08.074
  I0712 13:42:08.089768 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4833" for this suite. @ 07/12/25 13:42:08.094
• [4.081 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:677
  STEP: Creating a kubernetes client @ 07/12/25 13:42:08.101
  I0712 13:42:08.101682 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename svcaccounts @ 07/12/25 13:42:08.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:42:08.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:42:08.117
  STEP: creating a ServiceAccount @ 07/12/25 13:42:08.119
  STEP: watching for the ServiceAccount to be added @ 07/12/25 13:42:08.129
  STEP: patching the ServiceAccount @ 07/12/25 13:42:08.13
  E0712 13:42:08.132762      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 07/12/25 13:42:08.135
  STEP: deleting the ServiceAccount @ 07/12/25 13:42:08.138
  I0712 13:42:08.153656 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2707" for this suite. @ 07/12/25 13:42:08.195
• [0.102 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 07/12/25 13:42:08.203
  I0712 13:42:08.203235 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename var-expansion @ 07/12/25 13:42:08.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:42:08.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:42:08.218
  E0712 13:42:09.132953      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:10.133077      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:42:10.242278 20 delete.go:62] Deleting pod "var-expansion-1a0b3c85-006d-45d0-a9f1-a32c59133b3c" in namespace "var-expansion-4701"
  I0712 13:42:10.250470 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-1a0b3c85-006d-45d0-a9f1-a32c59133b3c" to be fully deleted
  E0712 13:42:11.133373      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:12.133553      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:42:12.259741 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4701" for this suite. @ 07/12/25 13:42:12.264
• [4.067 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 07/12/25 13:42:12.27
  I0712 13:42:12.270222 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename kubelet-test @ 07/12/25 13:42:12.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:42:12.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:42:12.283
  E0712 13:42:13.134577      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:14.134693      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:15.134786      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:16.134922      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:42:16.304406 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8600" for this suite. @ 07/12/25 13:42:16.307
• [4.045 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 07/12/25 13:42:16.314
  I0712 13:42:16.314898 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename csiinlinevolumes @ 07/12/25 13:42:16.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:42:16.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:42:16.329
  STEP: creating @ 07/12/25 13:42:16.332
  STEP: getting @ 07/12/25 13:42:16.351
  STEP: listing in namespace @ 07/12/25 13:42:16.355
  STEP: patching @ 07/12/25 13:42:16.357
  STEP: deleting @ 07/12/25 13:42:16.365
  I0712 13:42:16.380412 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-9316" for this suite. @ 07/12/25 13:42:16.408
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 07/12/25 13:42:16.415
  I0712 13:42:16.415691 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename secrets @ 07/12/25 13:42:16.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:42:16.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:42:16.43
  STEP: creating secret secrets-951/secret-test-ecb5c1a3-8c09-4a77-a0d4-b3172d456a1a @ 07/12/25 13:42:16.432
  STEP: Creating a pod to test consume secrets @ 07/12/25 13:42:16.438
  E0712 13:42:17.135035      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:18.135150      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:19.135368      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:20.135513      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:42:20.46
  I0712 13:42:20.464251 20 output.go:207] Trying to get logs from node ip-172-31-3-36 pod pod-configmaps-d5cdb9c8-b479-4f15-bd47-7308d8d89253 container env-test: <nil>
  STEP: delete the pod @ 07/12/25 13:42:20.476
  I0712 13:42:20.490889 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-951" for this suite. @ 07/12/25 13:42:20.493
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1070
  STEP: Creating a kubernetes client @ 07/12/25 13:42:20.502
  I0712 13:42:20.502261 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename resourcequota @ 07/12/25 13:42:20.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:42:20.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:42:20.517
  STEP: Creating resourceQuota "e2e-rq-status-kz8nv" @ 07/12/25 13:42:20.522
  I0712 13:42:20.530924 20 resource_quota.go:1106] Resource quota "e2e-rq-status-kz8nv" reports spec: hard cpu limit of 500m
  I0712 13:42:20.530944 20 resource_quota.go:1108] Resource quota "e2e-rq-status-kz8nv" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-kz8nv" /status @ 07/12/25 13:42:20.53
  STEP: Confirm /status for "e2e-rq-status-kz8nv" resourceQuota via watch @ 07/12/25 13:42:20.538
  I0712 13:42:20.539775 20 resource_quota.go:1135] observed resourceQuota "e2e-rq-status-kz8nv" in namespace "resourcequota-69" with hard status: v1.ResourceList(nil)
  I0712 13:42:20.539816 20 resource_quota.go:1138] Found resourceQuota "e2e-rq-status-kz8nv" in namespace "resourcequota-69" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0712 13:42:20.539831 20 resource_quota.go:1145] ResourceQuota "e2e-rq-status-kz8nv" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 07/12/25 13:42:20.544
  I0712 13:42:20.551308 20 resource_quota.go:1156] Resource quota "e2e-rq-status-kz8nv" reports spec: hard cpu limit of 1
  I0712 13:42:20.551328 20 resource_quota.go:1157] Resource quota "e2e-rq-status-kz8nv" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-kz8nv" /status @ 07/12/25 13:42:20.551
  STEP: Confirm /status for "e2e-rq-status-kz8nv" resourceQuota via watch @ 07/12/25 13:42:20.556
  I0712 13:42:20.557834 20 resource_quota.go:1179] observed resourceQuota "e2e-rq-status-kz8nv" in namespace "resourcequota-69" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0712 13:42:20.557864 20 resource_quota.go:1182] Found resourceQuota "e2e-rq-status-kz8nv" in namespace "resourcequota-69" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0712 13:42:20.557948 20 resource_quota.go:1189] ResourceQuota "e2e-rq-status-kz8nv" /status was patched
  STEP: Get "e2e-rq-status-kz8nv" /status @ 07/12/25 13:42:20.557
  I0712 13:42:20.560949 20 resource_quota.go:1200] Resourcequota "e2e-rq-status-kz8nv" reports status: hard cpu of 1
  I0712 13:42:20.560967 20 resource_quota.go:1202] Resourcequota "e2e-rq-status-kz8nv" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-kz8nv" /status before checking Spec is unchanged @ 07/12/25 13:42:20.564
  I0712 13:42:20.568221 20 resource_quota.go:1222] Resourcequota "e2e-rq-status-kz8nv" reports status: hard cpu of 2
  I0712 13:42:20.568245 20 resource_quota.go:1224] Resourcequota "e2e-rq-status-kz8nv" reports status: hard memory of 2Gi
  I0712 13:42:20.569399 20 resource_quota.go:1236] Found resourceQuota "e2e-rq-status-kz8nv" in namespace "resourcequota-69" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0712 13:42:20.572944 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002d9f920), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002d9f950), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002d9f980), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:42:21.135629      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:22.135719      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:23.135859      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:24.135943      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:25.136126      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:42:25.573446 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e2e330), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e2e360), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e2e390), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:42:26.137122      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:27.137237      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:28.137376      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:29.137462      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:30.137606      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:42:30.573847 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002d9fb00), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002d9fb30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002d9fb60), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:42:31.138512      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:32.138672      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:33.138794      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:34.138870      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:35.138982      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:42:35.574669 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002d9fd40), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002d9fd70), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002d9fda0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:42:36.139077      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:37.139157      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:38.139360      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:39.139439      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:40.139544      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:42:40.574645 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf8000), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf80a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf8150), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:42:41.140278      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:42.140398      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:43.140516      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:44.140623      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:45.140698      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:42:45.574048 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf83a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf83f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf8438), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:42:46.141407      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:47.141504      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:48.141634      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:49.141745      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:50.141849      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:42:50.575239 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf8660), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf8690), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf86f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:42:51.142421      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:52.142501      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:53.142641      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:54.142719      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:55.142862      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:42:55.575012 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e2e738), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e2e780), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e2e7c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:42:56.143699      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:57.143788      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:58.143930      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:42:59.144017      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:00.144158      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:43:00.574149 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf8930), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf8960), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf8990), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:43:01.144375      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:02.144581      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:03.144698      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:04.144780      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:05.144922      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:43:05.575060 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e2eb10), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e2eb40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e2eb70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:43:06.145738      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:07.145944      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:08.146167      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:09.146286      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:10.147315      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:43:10.574108 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e2ed98), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e2ede0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e2ee28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:43:11.147402      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:12.147477      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:13.147628      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:14.147692      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:15.147825      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:43:15.573632 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e2f1a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e2f200), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e2f260), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:43:16.147943      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:17.148039      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:18.148158      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:19.148360      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:20.148498      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:43:20.574817 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e2f5c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e2f620), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e2f680), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:43:21.149289      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:22.149381      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:23.149449      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:24.149572      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:25.149673      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:43:25.574435 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e2f998), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e2f9c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e2f9f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:43:26.150065      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:27.150141      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:28.150266      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:29.150338      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:30.150458      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:43:30.574242 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e2fc80), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e2fcb0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e2fce0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:43:31.151448      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:32.151657      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:33.152451      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:34.152663      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:35.152779      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:43:35.575290 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf8b70), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf8ba0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf8bd0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:43:36.153427      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:37.153513      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:38.153692      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:39.153920      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:40.153993      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:43:40.574749 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf8e10), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf8e40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf8e70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:43:41.154120      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:42.154244      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:43.154366      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:44.154463      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:45.154524      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:43:45.573095 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e2fde8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e2fe18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e2fe48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:43:46.154702      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:47.154785      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:48.154923      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:49.155010      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:50.155164      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:43:50.575343 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a500c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a50108), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a50138), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:43:51.156029      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:52.156122      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:53.156279      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:54.156348      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:55.156532      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:43:55.574253 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf9068), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf9098), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf90c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:43:56.156629      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:57.156743      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:58.156877      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:43:59.156954      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:00.157094      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:44:00.573907 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf9320), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf9350), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf9398), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:44:01.157525      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:02.157622      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:03.157713      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:04.157842      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:05.158136      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:44:05.574618 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a50030), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a50060), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a500a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:44:06.158194      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:07.158839      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:08.158945      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:09.158981      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:10.159082      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:44:10.573444 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a50240), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a50270), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a502b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:44:11.160104      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:12.160227      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:13.160333      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:14.161410      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:15.161501      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:44:15.574086 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a50468), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a50498), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a504e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:44:16.161629      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:17.161703      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:18.162396      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:19.163407      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:20.163524      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:44:20.574871 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a50678), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a506a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a506d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:44:21.164598      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:22.164708      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:23.165404      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:24.165593      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:25.165709      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:44:25.573837 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a508a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a508d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a50918), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:44:26.166502      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:27.166617      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:28.166809      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:29.166994      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:30.167120      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:44:30.574351 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a50b10), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a50b58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a50b88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:44:31.168099      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:32.168349      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:33.168537      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:34.168730      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:35.168832      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:44:35.573932 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a50d38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a50d68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a50db0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:44:36.169574      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:37.170404      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:38.171408      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:39.171549      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:40.171636      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:44:40.573502 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf8480), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf84c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf84f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:44:41.172088      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:42.172266      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:43.172368      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:44.172563      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:45.172655      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:44:45.574385 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a51380), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a513b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a513f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:44:46.173010      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:47.173408      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:48.174398      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:49.175436      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:50.176503      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:44:50.574996 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf8738), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf8780), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf87c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:44:51.176600      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:52.177396      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:53.178414      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:54.179191      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:55.179949      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:44:55.574169 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf89c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf89f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf8a20), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:44:56.180428      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:57.180550      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:58.180648      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:44:59.181392      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:00.181515      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:45:00.574624 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a51710), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a51758), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a51788), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:45:01.182287      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:02.182372      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:03.183407      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:04.183527      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:05.183641      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:45:05.574250 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a51968), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a519b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a519e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:45:06.183771      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:07.184590      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:08.184708      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:09.185418      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:10.185535      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:45:10.573709 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf8cc0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf8d08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bf8d38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:45:11.186326      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:12.186513      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:13.186692      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:14.186873      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:15.186997      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:45:15.574978 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a51bf0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a51c20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a51c50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:45:16.187667      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:17.187864      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:18.188054      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:19.188280      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:20.188402      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:45:20.573284 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kz8nv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kz8nv", GenerateName:"", Namespace:"resourcequota-69", SelfLink:"", UID:"4459b971-d6ba-403c-a691-78d4841d5ede", ResourceVersion:"45871", Generation:0, CreationTimestamp:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kz8nv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a51dd0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a51e18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 12, 13, 42, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a51e48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0712 13:45:21.188492      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:22.188684      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:23.188985      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:24.189166      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:25.189905      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:45:25.574731 20 resource_quota.go:1264] ResourceQuota "e2e-rq-status-kz8nv" Spec was unchanged and /status reset
  I0712 13:45:25.574871 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-69" for this suite. @ 07/12/25 13:45:25.579
• [185.085 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 07/12/25 13:45:25.587
  I0712 13:45:25.587541 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename projected @ 07/12/25 13:45:25.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:45:25.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:45:25.603
  STEP: Creating secret with name s-test-opt-del-5ce85783-f807-4007-acc8-d497c27cb30a @ 07/12/25 13:45:25.679
  STEP: Creating secret with name s-test-opt-upd-6a2b9b9d-13a9-409f-86f4-8589b1152953 @ 07/12/25 13:45:25.685
  STEP: Creating the pod @ 07/12/25 13:45:25.689
  E0712 13:45:26.190023      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:27.190118      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-5ce85783-f807-4007-acc8-d497c27cb30a @ 07/12/25 13:45:27.742
  STEP: Updating secret s-test-opt-upd-6a2b9b9d-13a9-409f-86f4-8589b1152953 @ 07/12/25 13:45:27.749
  STEP: Creating secret with name s-test-opt-create-c48d453f-5665-4a4f-9e40-37173d0d5e50 @ 07/12/25 13:45:27.755
  STEP: waiting to observe update in volume @ 07/12/25 13:45:27.76
  E0712 13:45:28.190721      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:29.190854      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:30.191444      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:31.191655      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:32.191837      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:33.192414      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:34.193033      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:35.193179      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:36.193307      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:37.193405      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:38.194340      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:39.194551      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:40.195266      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:41.195345      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:42.196265      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:43.196468      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:44.197431      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:45.197529      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:46.198092      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:47.198159      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:48.198373      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:49.199433      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:50.200066      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:51.200435      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:52.200548      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:53.201424      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:54.201522      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:55.201622      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:56.202353      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:57.202449      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:58.202578      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:45:59.202672      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:00.203105      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:01.203339      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:02.203550      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:03.203652      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:04.204292      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:05.204577      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:06.204793      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:07.204983      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:08.205187      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:09.205394      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:10.206292      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:11.206341      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:12.207419      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:13.207602      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:14.207712      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:15.207822      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:16.207932      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:17.208072      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:18.208648      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:19.208749      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:20.209662      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:21.209764      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:22.210731      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:23.211401      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:24.212412      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:25.212562      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:26.212684      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:27.212907      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:28.213858      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:29.213970      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:30.214766      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:31.214961      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:32.215300      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:33.215483      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:34.216451      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:35.216568      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:36.216681      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:37.216776      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:38.217783      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:39.217878      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:40.217967      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:41.218049      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:42.218982      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:43.219047      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:44.219863      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:45.219945      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:46.220659      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:47.220731      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:48.221389      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:49.222400      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:50.222653      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:51.222781      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:52.223440      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:53.223537      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:54.223662      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:55.223760      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:46:56.185511 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6300" for this suite. @ 07/12/25 13:46:56.19
• [90.609 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:87
  STEP: Creating a kubernetes client @ 07/12/25 13:46:56.196
  I0712 13:46:56.196654 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename replication-controller @ 07/12/25 13:46:56.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:46:56.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:46:56.213
  I0712 13:46:56.216375 20 rc.go:546] Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0712 13:46:56.223893      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:46:57.224058      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 07/12/25 13:46:57.227
  STEP: Checking rc "condition-test" has the desired failure condition set @ 07/12/25 13:46:57.232
  E0712 13:46:58.224364      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 07/12/25 13:46:58.241
  I0712 13:46:58.252353 20 rc.go:733] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 07/12/25 13:46:58.252
  E0712 13:46:59.224489      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:46:59.260581 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9631" for this suite. @ 07/12/25 13:46:59.264
• [3.074 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:942
  STEP: Creating a kubernetes client @ 07/12/25 13:46:59.271
  I0712 13:46:59.271266 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename sched-preemption @ 07/12/25 13:46:59.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:46:59.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:46:59.286
  I0712 13:46:59.302257 20 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0712 13:47:00.224604      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:01.224689      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:02.224826      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:03.224917      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:04.225063      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:05.225153      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:06.225324      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:07.225532      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:08.225646      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:09.225755      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:10.225898      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:11.226103      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:12.226252      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:13.226362      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:14.226485      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:15.226590      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:16.226700      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:17.226801      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:18.226940      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:19.227421      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:20.227549      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:21.227607      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:22.227748      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:23.227847      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:24.227964      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:25.228052      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:26.228219      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:27.228453      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:28.228657      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:29.228871      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:30.228967      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:31.229091      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:32.229195      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:33.229357      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:34.230427      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:35.230495      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:36.230617      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:37.230692      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:38.231393      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:39.232428      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:40.232553      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:41.232819      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:42.232909      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:43.233474      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:44.233567      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:45.233643      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:46.233764      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:47.233958      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:48.234519      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:49.234630      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:50.234750      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:51.234968      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:52.235079      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:53.235297      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:54.235569      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:55.235686      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:56.235800      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:57.235987      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:58.236793      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:47:59.236981      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:47:59.309175 20 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 07/12/25 13:47:59.313
  I0712 13:47:59.313686 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename sched-preemption-path @ 07/12/25 13:47:59.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:47:59.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:47:59.328
  I0712 13:47:59.346151 20 preemption.go:948] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0712 13:47:59.348785 20 preemption.go:954] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 07/12/25 13:47:59.404
  STEP: Removing a custom resource @ 07/12/25 13:47:59.412
  STEP: Removing a custom resource @ 07/12/25 13:47:59.42
  I0712 13:47:59.428977 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-13" for this suite. @ 07/12/25 13:47:59.432
  I0712 13:47:59.442239 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9359" for this suite. @ 07/12/25 13:47:59.533
• [60.271 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:802
  STEP: Creating a kubernetes client @ 07/12/25 13:47:59.542
  I0712 13:47:59.542476 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename job @ 07/12/25 13:47:59.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:47:59.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:47:59.558
  STEP: Creating a job @ 07/12/25 13:47:59.56
  STEP: Ensuring job reaches completions @ 07/12/25 13:47:59.567
  E0712 13:48:00.237065      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:01.237166      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:02.237321      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:03.237430      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:04.237555      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:05.237671      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:06.237722      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:07.237802      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:08.237945      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:09.238169      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:48:09.602182 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5695" for this suite. @ 07/12/25 13:48:09.607
• [10.072 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1464
  STEP: Creating a kubernetes client @ 07/12/25 13:48:09.614
  I0712 13:48:09.614338 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename services @ 07/12/25 13:48:09.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:48:09.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:48:09.63
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-6237 @ 07/12/25 13:48:09.633
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 07/12/25 13:48:09.646
  STEP: creating service externalsvc in namespace services-6237 @ 07/12/25 13:48:09.646
  I0712 13:48:09.670897 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0712 13:48:10.238568      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:11.238573      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the ClusterIP service to type=ExternalName @ 07/12/25 13:48:11.689
  I0712 13:48:11.709344 20 resource.go:361] Creating new exec pod
  E0712 13:48:12.239344      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:13.239417      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:48:13.727684 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-6237 exec execpodt2wcg -- /bin/sh -x -c nslookup clusterip-service.services-6237.svc.cluster.local'
  I0712 13:48:13.835859 20 builder.go:146] stderr: "+ nslookup clusterip-service.services-6237.svc.cluster.local\n"
  I0712 13:48:13.835913 20 builder.go:147] stdout: "Server:\t\t10.152.183.248\nAddress:\t10.152.183.248#53\n\nclusterip-service.services-6237.svc.cluster.local\tcanonical name = externalsvc.services-6237.svc.cluster.local.\nName:\texternalsvc.services-6237.svc.cluster.local\nAddress: 10.152.183.134\n\n"
  I0712 13:48:13.866149 20 service.go:1473] Cleaning up the ClusterIP to ExternalName test service
  I0712 13:48:13.882986 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6237" for this suite. @ 07/12/25 13:48:13.889
• [4.281 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 07/12/25 13:48:13.894
  I0712 13:48:13.894949 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename cronjob @ 07/12/25 13:48:13.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:48:13.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:48:13.91
  STEP: Creating a ReplaceConcurrent cronjob @ 07/12/25 13:48:13.913
  STEP: Ensuring a job is scheduled @ 07/12/25 13:48:13.92
  E0712 13:48:14.239552      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:15.239648      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:16.239743      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:17.239809      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:18.240434      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:19.240511      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:20.240629      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:21.240689      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:22.241790      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:23.241913      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:24.242452      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:25.242542      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:26.243405      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:27.243558      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:28.243613      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:29.243710      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:30.244438      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:31.244537      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:32.245102      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:33.245191      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:34.245304      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:35.245404      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:36.246075      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:37.246433      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:38.247364      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:39.247577      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:40.248649      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:41.248728      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:42.249657      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:43.249771      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:44.250068      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:45.250162      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:46.250406      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:47.250478      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:48.251425      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:49.251504      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:50.252522      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:51.252637      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:52.253158      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:53.253248      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:54.254117      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:55.254362      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:56.254411      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:57.254650      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:58.254732      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:48:59.254826      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:00.255653      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:01.255735      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 07/12/25 13:49:01.927
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 07/12/25 13:49:01.931
  STEP: Ensuring the job is replaced with a new one @ 07/12/25 13:49:01.935
  E0712 13:49:02.255874      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:03.255992      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:04.257056      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:05.257183      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:06.257371      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:07.257559      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:08.257629      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:09.257756      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:10.258300      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:11.258407      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:12.259103      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:13.259227      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:14.259433      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:15.259525      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:16.259760      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:17.259819      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:18.260430      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:19.260512      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:20.261422      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:21.261512      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:22.262357      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:23.262445      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:24.262582      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:25.262736      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:26.263439      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:27.263512      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:28.264446      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:29.264668      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:30.265688      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:31.265808      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:32.266650      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:33.267350      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:34.267628      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:35.267732      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:36.268763      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:37.268931      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:38.268977      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:39.269074      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:40.269368      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:41.269432      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:42.270049      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:43.270156      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:44.270932      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:45.271000      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:46.271230      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:47.271337      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:48.272403      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:49.272595      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:50.273270      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:51.273354      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:52.273976      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:53.274165      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:54.274365      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:55.274462      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:56.274852      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:57.275045      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:58.275798      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:49:59.275892      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:00.276399      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:01.276491      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 07/12/25 13:50:01.939
  I0712 13:50:01.946760 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9148" for this suite. @ 07/12/25 13:50:01.95
• [108.061 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:311
  STEP: Creating a kubernetes client @ 07/12/25 13:50:01.956
  I0712 13:50:01.956239 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/12/25 13:50:01.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:50:01.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:50:01.977
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 07/12/25 13:50:01.98
  I0712 13:50:01.980612 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  E0712 13:50:02.277170      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:03.277346      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:04.278258      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:05.278822      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:06.278975      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 07/12/25 13:50:06.902
  I0712 13:50:06.902721 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  E0712 13:50:07.279773      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:50:08.100740 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  E0712 13:50:08.280298      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:09.280850      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:10.281356      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:11.282032      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:12.282725      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:50:13.050241 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4962" for this suite. @ 07/12/25 13:50:13.057
• [11.109 seconds]
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3195
  STEP: Creating a kubernetes client @ 07/12/25 13:50:13.065
  I0712 13:50:13.065277 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename services @ 07/12/25 13:50:13.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:50:13.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:50:13.08
  STEP: fetching services @ 07/12/25 13:50:13.082
  I0712 13:50:13.087801 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2201" for this suite. @ 07/12/25 13:50:13.157
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 07/12/25 13:50:13.167
  I0712 13:50:13.167905 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename pod-network-test @ 07/12/25 13:50:13.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:50:13.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:50:13.183
  STEP: Performing setup for networking test in namespace pod-network-test-9681 @ 07/12/25 13:50:13.185
  STEP: creating a selector @ 07/12/25 13:50:13.185
  STEP: Creating the service pods in kubernetes @ 07/12/25 13:50:13.185
  I0712 13:50:13.185904 20 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0712 13:50:13.283548      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:14.283711      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:15.283793      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:16.283928      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:17.284004      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:18.284362      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:19.284482      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:20.284565      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:21.284830      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:22.284973      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:23.285246      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:24.286154      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:25.286270      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 07/12/25 13:50:25.34
  E0712 13:50:26.286399      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:27.286514      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:50:27.372715 20 utils.go:802] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0712 13:50:27.372750 20 utils.go:495] Going to poll 192.168.214.174 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0712 13:50:27.375578 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.214.174 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9681 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0712 13:50:27.375598 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0712 13:50:27.375638 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9681/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.214.174+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0712 13:50:28.286609      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:50:28.422255 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0712 13:50:28.422314 20 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I0712 13:50:28.422328 20 utils.go:495] Going to poll 192.168.246.178 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0712 13:50:28.426391 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.246.178 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9681 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0712 13:50:28.426407 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0712 13:50:28.426446 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9681/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.246.178+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0712 13:50:29.286851      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:50:29.468491 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0712 13:50:29.468542 20 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I0712 13:50:29.468559 20 utils.go:495] Going to poll 192.168.235.160 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0712 13:50:29.472946 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.235.160 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9681 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0712 13:50:29.472963 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0712 13:50:29.473005 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9681/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.235.160+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0712 13:50:30.287256      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:50:30.506790 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0712 13:50:30.506854 20 utils.go:512] Found all 1 expected endpoints: [netserver-2]
  I0712 13:50:30.507002 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9681" for this suite. @ 07/12/25 13:50:30.511
• [17.350 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 07/12/25 13:50:30.518
  I0712 13:50:30.518290 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename webhook @ 07/12/25 13:50:30.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:50:30.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:50:30.533
  STEP: Setting up server cert @ 07/12/25 13:50:30.554
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/12/25 13:50:30.732
  STEP: Deploying the webhook pod @ 07/12/25 13:50:30.739
  STEP: Wait for the deployment to be ready @ 07/12/25 13:50:30.753
  I0712 13:50:30.761909 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0712 13:50:31.287475      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:32.287709      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/12/25 13:50:32.773
  STEP: Verifying the service has paired with the endpoint @ 07/12/25 13:50:32.794
  E0712 13:50:33.287965      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:50:33.795940 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 07/12/25 13:50:33.8
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/12/25 13:50:33.815
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 07/12/25 13:50:33.822
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/12/25 13:50:33.835
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 07/12/25 13:50:33.846
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/12/25 13:50:33.853
  I0712 13:50:33.905147 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1648" for this suite. @ 07/12/25 13:50:33.91
  STEP: Destroying namespace "webhook-markers-8835" for this suite. @ 07/12/25 13:50:33.917
• [3.407 seconds]
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 07/12/25 13:50:33.925
  I0712 13:50:33.925583 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename container-probe @ 07/12/25 13:50:33.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:50:33.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:50:33.94
  STEP: Creating pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541 @ 07/12/25 13:50:33.943
  E0712 13:50:34.288094      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:35.288929      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/12/25 13:50:35.959
  I0712 13:50:35.964337 20 container_probe.go:1748] Initial restart count of pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 is 0
  I0712 13:50:35.968279 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:50:36.289776      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:37.290773      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:50:37.972979 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:50:38.290871      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:39.291716      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:50:39.977075 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:50:40.292587      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:41.293502      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:50:41.981793 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:50:42.294328      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:43.294807      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:50:43.987241 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:50:44.295661      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:45.295782      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:50:45.991148 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:50:46.296559      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:47.296722      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:50:47.994635 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:50:48.296818      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:49.296931      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:50:49.999691 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:50:50.297025      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:51.297237      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:50:52.004441 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:50:52.297921      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:53.298121      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:50:54.009949 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:50:54.298270      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:55.298353      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:50:56.013827 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:50:56.299191      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:57.299338      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:50:58.019249 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:50:58.300388      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:50:59.301416      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:51:00.025034 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:51:00.302392      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:51:01.302587      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:51:02.028517 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:51:02.302672      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:51:03.303421      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:51:04.032970 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:51:04.304326      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:51:05.304522      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:51:06.038346 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:51:06.304616      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:51:07.304808      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:51:08.042492 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:51:08.305843      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:51:09.305955      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:51:10.046553 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:51:10.306930      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:51:11.307053      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:51:12.051459 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:51:12.307834      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:51:13.308012      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:51:14.056458 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:51:14.308777      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:51:15.308873      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:51:16.061786 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:51:16.309067      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:51:17.310025      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:51:18.067654 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:51:18.310789      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:51:19.311429      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:51:20.071947 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:51:20.312310      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:51:21.312348      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:51:22.076956 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:51:22.313323      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:51:23.313519      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:51:24.082338 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:51:24.314581      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:51:25.314764      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:51:26.085983 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:51:26.315315      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:51:27.315426      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:51:28.090995 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:51:28.316318      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:51:29.316519      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:51:30.096115 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:51:30.317424      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:51:31.317541      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:51:32.100613 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:51:32.317920      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:51:33.318017      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:51:34.106108 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:51:34.318476      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:51:35.318662      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:51:36.110572 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:51:36.318834      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:51:37.318922      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:51:38.116494 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:51:38.319737      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:51:39.320500      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:51:40.121147 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:51:40.321401      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:51:41.321504      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:51:42.126115 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:51:42.322384      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:51:43.322506      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:51:44.130541 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:51:44.322980      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:51:45.323396      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:51:46.135390 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:51:46.323640      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:51:47.324412      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:51:48.139792 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:51:48.325031      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:51:49.325473      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:51:50.145064 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:51:50.326357      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:51:51.327398      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:51:52.150006 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:51:52.328304      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:51:53.328432      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:51:54.154009 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:51:54.329374      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:51:55.330406      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:51:56.158880 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:51:56.331143      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:51:57.331303      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:51:58.163342 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:51:58.331585      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:51:59.332471      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:52:00.167918 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:52:00.333156      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:52:01.333615      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:52:02.173448 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:52:02.334610      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:52:03.334715      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:52:04.178856 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:52:04.335294      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:52:05.335467      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:52:06.184310 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:52:06.335567      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:52:07.335757      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:52:08.190042 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:52:08.336304      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:52:09.336509      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:52:10.194908 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:52:10.337282      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:52:11.337469      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:52:12.200435 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:52:12.337564      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:52:13.337912      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:52:14.205613 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:52:14.338075      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:52:15.338918      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:52:16.210880 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:52:16.338957      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:52:17.339786      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:52:18.216250 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:52:18.340389      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:52:19.340438      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:52:20.220532 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:52:20.340689      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:52:21.340807      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:52:22.225567 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:52:22.341751      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:52:23.342423      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:52:24.230791 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:52:24.343098      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:52:25.343263      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:52:26.234867 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:52:26.344036      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:52:27.344170      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:52:28.240265 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:52:28.344832      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:52:29.344965      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:52:30.245917 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:52:30.345120      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:52:31.345313      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:52:32.250400 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:52:32.345550      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:52:33.345691      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:52:34.255986 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:52:34.346386      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:52:35.346568      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:52:36.260191 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:52:36.347300      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:52:37.347432      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:52:38.264541 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:52:38.347665      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:52:39.348553      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:52:40.269923 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:52:40.349065      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:52:41.349254      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:52:42.274937 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:52:42.350109      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:52:43.350404      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:52:44.280552 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:52:44.350736      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:52:45.351405      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:52:46.285366 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:52:46.351636      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:52:47.351813      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:52:48.290824 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:52:48.351918      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:52:49.352532      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:52:50.296113 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:52:50.353259      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:52:51.353452      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:52:52.300290 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:52:52.354385      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:52:53.354500      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:52:54.306620 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:52:54.354829      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:52:55.354970      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:52:56.310611 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:52:56.355781      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:52:57.355954      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:52:58.315653 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:52:58.356750      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:52:59.357497      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:53:00.320813 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:53:00.357909      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:53:01.358054      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:53:02.326000 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:53:02.358465      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:53:03.358570      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:53:04.330723 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:53:04.358853      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:53:05.358994      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:53:06.335737 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:53:06.359806      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:53:07.359926      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:53:08.340478 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:53:08.360607      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:53:09.361477      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:53:10.345306 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:53:10.362454      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:53:11.362592      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:53:12.350247 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:53:12.363293      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:53:13.363431      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:53:14.354864 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:53:14.363983      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:53:15.364156      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:53:16.359971 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:53:16.365093      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:53:17.365410      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:53:18.364354 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:53:18.366336      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:53:19.366452      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:53:20.366710      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:53:20.368336 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:53:21.366854      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:53:22.367053      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:53:22.373916 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:53:23.367960      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:53:24.368484      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:53:24.378979 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:53:25.369429      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:53:26.369499      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:53:26.384612 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:53:27.369692      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:53:28.369763      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:53:28.389560 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:53:29.370502      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:53:30.370569      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:53:30.395409 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:53:31.371367      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:53:32.372441      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:53:32.401859 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:53:33.372884      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:53:34.373523      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:53:34.407193 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:53:35.373641      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:53:36.373729      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:53:36.413000 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:53:37.373872      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:53:38.373965      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:53:38.418962 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:53:39.374540      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:53:40.374749      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:53:40.424480 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:53:41.374872      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:53:42.374931      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:53:42.429153 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:53:43.375069      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:53:44.375328      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:53:44.434047 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:53:45.375467      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:53:46.375532      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:53:46.439406 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:53:47.376399      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:53:48.376525      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:53:48.444521 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:53:49.377570      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:53:50.377634      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:53:50.449367 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:53:51.377875      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:53:52.378019      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:53:52.454682 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:53:53.378289      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:53:54.378361      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:53:54.460487 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:53:55.378464      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:53:56.378613      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:53:56.465244 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:53:57.379060      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:53:58.379289      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:53:58.469817 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:53:59.379513      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:54:00.379584      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:54:00.473935 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:54:01.380429      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:54:02.380503      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:54:02.479651 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:54:03.381426      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:54:04.381511      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:54:04.485543 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:54:05.382413      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:54:06.382485      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:54:06.490537 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:54:07.383527      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:54:08.383735      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:54:08.496139 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:54:09.384504      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:54:10.384594      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:54:10.501274 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:54:11.384725      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:54:12.384818      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:54:12.505891 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:54:13.385105      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:54:14.385042      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:54:14.511475 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:54:15.385127      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:54:16.385336      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:54:16.516577 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:54:17.385476      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:54:18.385662      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:54:18.521394 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:54:19.386514      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:54:20.386633      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:54:20.526606 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:54:21.387542      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:54:22.387735      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:54:22.532269 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:54:23.388419      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:54:24.388463      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:54:24.536894 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:54:25.389025      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:54:26.389124      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:54:26.541623 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:54:27.389852      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:54:28.389946      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:54:28.546034 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:54:29.390526      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:54:30.390592      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:54:30.551707 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:54:31.391391      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:54:32.391579      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:54:32.557296 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:54:33.392412      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:54:34.392515      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:54:34.562121 20 container_probe.go:1758] Get pod liveness-a20c40be-89d9-4b18-b3a5-3760f4ad05f9 in namespace container-probe-7541
  E0712 13:54:35.393021      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:54:36.393238      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 07/12/25 13:54:36.562
  I0712 13:54:36.576068 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7541" for this suite. @ 07/12/25 13:54:36.58
• [242.662 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1759
  STEP: Creating a kubernetes client @ 07/12/25 13:54:36.588
  I0712 13:54:36.588041 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename kubectl @ 07/12/25 13:54:36.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:54:36.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:54:36.603
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/12/25 13:54:36.605
  I0712 13:54:36.605974 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-8909 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0712 13:54:36.656655 20 builder.go:146] stderr: ""
  I0712 13:54:36.656679 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 07/12/25 13:54:36.656
  I0712 13:54:36.660915 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-8909 delete pods e2e-test-httpd-pod'
  E0712 13:54:37.393349      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:54:38.393462      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:54:38.529382 20 builder.go:146] stderr: ""
  I0712 13:54:38.529420 20 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0712 13:54:38.529546 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8909" for this suite. @ 07/12/25 13:54:38.534
• [1.953 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:55
  STEP: Creating a kubernetes client @ 07/12/25 13:54:38.541
  I0712 13:54:38.541374 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename dns @ 07/12/25 13:54:38.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:54:38.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:54:38.555
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 07/12/25 13:54:38.558
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 07/12/25 13:54:38.558
  STEP: creating a pod to probe DNS @ 07/12/25 13:54:38.558
  STEP: submitting the pod to kubernetes @ 07/12/25 13:54:38.558
  E0712 13:54:39.393536      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:54:40.393766      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/12/25 13:54:40.576
  STEP: looking for the results for each expected name from probers @ 07/12/25 13:54:40.58
  I0712 13:54:40.600255 20 dns_common.go:546] DNS probes using dns-9583/dns-test-568ff468-a6af-450f-9c15-e3bb0b60b3b5 succeeded

  STEP: deleting the pod @ 07/12/25 13:54:40.6
  I0712 13:54:40.611913 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9583" for this suite. @ 07/12/25 13:54:40.615
• [2.081 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 07/12/25 13:54:40.622
  I0712 13:54:40.622154 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename server-version @ 07/12/25 13:54:40.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:54:40.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:54:40.636
  STEP: Request ServerVersion @ 07/12/25 13:54:40.639
  STEP: Confirm major version @ 07/12/25 13:54:40.64
  I0712 13:54:40.640108 20 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 07/12/25 13:54:40.64
  I0712 13:54:40.640132 20 server_version.go:58] cleanMinorVersion: 33
  I0712 13:54:40.640143 20 server_version.go:62] Minor version: 33
  I0712 13:54:40.640231 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-1911" for this suite. @ 07/12/25 13:54:40.716
• [0.100 seconds]
------------------------------
SSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 07/12/25 13:54:40.722
  I0712 13:54:40.722547 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename events @ 07/12/25 13:54:40.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:54:40.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:54:40.736
  STEP: Create set of events @ 07/12/25 13:54:40.738
  STEP: get a list of Events with a label in the current namespace @ 07/12/25 13:54:40.756
  STEP: delete a list of events @ 07/12/25 13:54:40.759
  I0712 13:54:40.759381 20 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 07/12/25 13:54:40.779
  I0712 13:54:40.781768 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6811" for this suite. @ 07/12/25 13:54:40.816
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 07/12/25 13:54:40.823
  I0712 13:54:40.823156 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/12/25 13:54:40.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:54:40.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:54:40.838
  I0712 13:54:40.845087 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7149" for this suite. @ 07/12/25 13:54:40.917
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:166
  STEP: Creating a kubernetes client @ 07/12/25 13:54:40.924
  I0712 13:54:40.924721 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename pods @ 07/12/25 13:54:40.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:54:40.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:54:40.941
  STEP: creating the pod @ 07/12/25 13:54:40.944
  STEP: submitting the pod to kubernetes @ 07/12/25 13:54:40.944
  STEP: verifying QOS class is set on the pod @ 07/12/25 13:54:40.953
  I0712 13:54:40.956558 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5250" for this suite. @ 07/12/25 13:54:41.017
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:131
  STEP: Creating a kubernetes client @ 07/12/25 13:54:41.025
  I0712 13:54:41.025870 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename dns @ 07/12/25 13:54:41.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:54:41.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:54:41.039
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4046.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-4046.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 07/12/25 13:54:41.041
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4046.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-4046.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 07/12/25 13:54:41.041
  STEP: creating a pod to probe /etc/hosts @ 07/12/25 13:54:41.041
  STEP: submitting the pod to kubernetes @ 07/12/25 13:54:41.041
  E0712 13:54:41.393816      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:54:42.394032      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/12/25 13:54:43.065
  STEP: looking for the results for each expected name from probers @ 07/12/25 13:54:43.068
  I0712 13:54:43.089271 20 dns_common.go:546] DNS probes using dns-4046/dns-test-5914f3f1-2366-4169-907b-5af9bab2c31c succeeded

  STEP: deleting the pod @ 07/12/25 13:54:43.089
  I0712 13:54:43.100539 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4046" for this suite. @ 07/12/25 13:54:43.104
• [2.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:850
  STEP: Creating a kubernetes client @ 07/12/25 13:54:43.11
  I0712 13:54:43.110650 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename pods @ 07/12/25 13:54:43.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:54:43.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:54:43.125
  STEP: Create set of pods @ 07/12/25 13:54:43.128
  I0712 13:54:43.136262 20 pods.go:874] created test-pod-1
  I0712 13:54:43.144164 20 pods.go:874] created test-pod-2
  I0712 13:54:43.150932 20 pods.go:874] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 07/12/25 13:54:43.15
  E0712 13:54:43.394916      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:54:44.395580      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 07/12/25 13:54:45.184
  I0712 13:54:45.187950 20 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  E0712 13:54:45.396299      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:54:46.189062 20 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  E0712 13:54:46.396365      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:54:47.190114 20 pods.go:1139] Pod quantity 1 is different from expected quantity 0
  E0712 13:54:47.397413      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:54:48.188844 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-677" for this suite. @ 07/12/25 13:54:48.192
• [5.087 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1836
  STEP: Creating a kubernetes client @ 07/12/25 13:54:48.198
  I0712 13:54:48.198258 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename kubectl @ 07/12/25 13:54:48.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:54:48.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:54:48.214
  STEP: starting the proxy server @ 07/12/25 13:54:48.216
  I0712 13:54:48.216889 20 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-9462 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 07/12/25 13:54:48.249
  I0712 13:54:48.254893 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0712 13:54:48.256159 20 kubectl.go:2227] kubectl proxy stdout: Starting to serve on 127.0.0.1:39693

  I0712 13:54:48.256188 20 kubectl.go:2232] kubectl proxy stderr: W0712 13:54:48.249531     990 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-9462" for this suite. @ 07/12/25 13:54:48.292
• [0.100 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 07/12/25 13:54:48.298
  I0712 13:54:48.298178 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename container-probe @ 07/12/25 13:54:48.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:54:48.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:54:48.314
  STEP: Creating pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752 @ 07/12/25 13:54:48.317
  E0712 13:54:48.397996      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:54:49.398518      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/12/25 13:54:50.335
  I0712 13:54:50.337545 20 container_probe.go:1748] Initial restart count of pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 is 0
  I0712 13:54:50.341112 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:54:50.399350      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:54:51.399431      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:54:52.345458 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:54:52.399503      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:54:53.400412      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:54:54.351677 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:54:54.400803      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:54:55.400884      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:54:56.356889 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:54:56.400973      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:54:57.401045      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:54:58.361126 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:54:58.401218      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:54:59.401488      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:55:00.366383 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:55:00.401546      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:55:01.401631      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:55:02.371081 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:55:02.402230      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:55:03.402373      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:55:04.375623 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:55:04.402766      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:55:05.402878      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:55:06.380686 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:55:06.403838      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:55:07.404050      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:55:08.386548 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:55:08.404645      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:55:09.405537      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:55:10.390866 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:55:10.406006      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:55:11.406253      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:55:12.396343 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:55:12.406515      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:55:13.407431      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:55:14.401364 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:55:14.407450      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:55:15.407651      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:55:16.405589 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:55:16.407624      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:55:17.407838      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:55:18.408640      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:55:18.410908 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:55:19.409576      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:55:20.410428      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:55:20.415902 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:55:21.410526      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:55:22.410602      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:55:22.420504 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:55:23.411360      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:55:24.411457      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:55:24.427021 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:55:25.412438      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:55:26.412501      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:55:26.432680 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:55:27.412706      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:55:28.412903      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:55:28.438025 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:55:29.413788      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:55:30.413905      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:55:30.442993 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:55:31.414055      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:55:32.414293      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:55:32.448224 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:55:33.414390      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:55:34.414546      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:55:34.453478 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:55:35.415402      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:55:36.415510      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:55:36.458780 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:55:37.415799      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:55:38.416056      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:55:38.464398 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:55:39.416530      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:55:40.416644      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:55:40.469801 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:55:41.416797      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:55:42.417584      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:55:42.476678 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:55:43.417679      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:55:44.418565      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:55:44.480942 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:55:45.418914      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:55:46.419832      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:55:46.486663 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:55:47.420363      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:55:48.420441      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:55:48.492105 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:55:49.420524      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:55:50.421090      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:55:50.498165 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:55:51.421412      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:55:52.421644      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:55:52.503064 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:55:53.421759      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:55:54.422581      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:55:54.507647 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:55:55.422640      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:55:56.422750      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:55:56.513354 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:55:57.423313      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:55:58.423525      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:55:58.518531 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:55:59.424524      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:56:00.424733      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:56:00.523385 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:56:01.425373      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:56:02.425593      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:56:02.529525 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:56:03.426477      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:56:04.426608      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:56:04.534699 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:56:05.426648      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:56:06.426868      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:56:06.538915 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:56:07.426908      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:56:08.427136      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:56:08.544066 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:56:09.427595      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:56:10.427721      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:56:10.549884 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:56:11.427838      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:56:12.427918      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:56:12.555169 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:56:13.428551      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:56:14.428540      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:56:14.560270 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:56:15.428682      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:56:16.428785      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:56:16.565354 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:56:17.429643      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:56:18.429740      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:56:18.571347 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:56:19.430424      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:56:20.430512      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:56:20.575838 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:56:21.431403      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:56:22.432402      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:56:22.580566 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:56:23.432458      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:56:24.432526      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:56:24.584299 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:56:25.432642      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:56:26.432830      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:56:26.590247 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:56:27.433413      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:56:28.433599      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:56:28.595679 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:56:29.434613      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:56:30.435350      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:56:30.601268 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:56:31.435456      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:56:32.435663      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:56:32.606395 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:56:33.435754      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:56:34.436602      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:56:34.611437 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:56:35.436759      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:56:36.436959      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:56:36.617777 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:56:37.437073      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:56:38.437306      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:56:38.623438 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:56:39.437344      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:56:40.437473      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:56:40.627766 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:56:41.438398      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:56:42.439046      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:56:42.632781 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:56:43.439329      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:56:44.439716      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:56:44.637751 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:56:45.440328      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:56:46.440428      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:56:46.644300 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:56:47.440516      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:56:48.441399      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:56:48.648968 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:56:49.441498      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:56:50.441669      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:56:50.654333 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:56:51.441780      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:56:52.442631      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:56:52.659690 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:56:53.443692      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:56:54.444606      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:56:54.664354 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:56:55.444855      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:56:56.444951      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:56:56.670393 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:56:57.445049      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:56:58.445293      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:56:58.675735 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:56:59.445569      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:57:00.446392      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:57:00.679914 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:57:01.446695      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:57:02.446883      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:57:02.683514 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:57:03.446998      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:57:04.447758      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:57:04.688697 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:57:05.448342      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:57:06.448443      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:57:06.693769 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:57:07.449274      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:57:08.449346      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:57:08.699420 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:57:09.450398      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:57:10.450503      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:57:10.704325 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:57:11.450597      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:57:12.451412      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:57:12.708417 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:57:13.452291      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:57:14.452839      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:57:14.714523 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:57:15.452965      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:57:16.453150      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:57:16.719865 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:57:17.453333      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:57:18.453450      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:57:18.725857 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:57:19.453524      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:57:20.454537      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:57:20.731363 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:57:21.454653      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:57:22.454838      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:57:22.736880 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:57:23.455686      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:57:24.456684      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:57:24.741826 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:57:25.457692      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:57:26.457787      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:57:26.747262 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:57:27.457948      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:57:28.458131      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:57:28.751428 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:57:29.458321      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:57:30.458503      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:57:30.756669 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:57:31.459498      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:57:32.460398      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:57:32.762631 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:57:33.461396      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:57:34.461548      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:57:34.767163 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:57:35.461651      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:57:36.461848      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:57:36.772233 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:57:37.461975      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:57:38.462169      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:57:38.776570 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:57:39.462407      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:57:40.462602      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:57:40.781293 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:57:41.462667      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:57:42.462854      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:57:42.786919 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:57:43.463440      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:57:44.463581      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:57:44.791749 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:57:45.464401      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:57:46.464588      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:57:46.797049 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:57:47.464700      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:57:48.464883      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:57:48.801238 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:57:49.465725      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:57:50.465920      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:57:50.805880 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:57:51.466621      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:57:52.467406      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:57:52.810813 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:57:53.468396      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:57:54.468534      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:57:54.816898 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:57:55.468648      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:57:56.468826      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:57:56.821326 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:57:57.468954      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:57:58.469057      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:57:58.826529 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:57:59.469404      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:58:00.469602      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:58:00.832013 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:58:01.470399      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:58:02.471430      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:58:02.837369 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:58:03.471508      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:58:04.471584      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:58:04.841839 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:58:05.471627      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:58:06.472404      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:58:06.848393 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:58:07.473168      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:58:08.473305      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:58:08.853877 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:58:09.473631      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:58:10.473816      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:58:10.858937 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:58:11.474397      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:58:12.474581      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:58:12.864931 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:58:13.474828      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:58:14.475662      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:58:14.871387 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:58:15.475998      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:58:16.476109      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:58:16.875904 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:58:17.476502      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:58:18.476701      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:58:18.880903 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:58:19.477676      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:58:20.478390      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:58:20.887139 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:58:21.478483      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:58:22.479398      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:58:22.892066 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:58:23.480404      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:58:24.481404      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:58:24.897067 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:58:25.482408      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:58:26.483405      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:58:26.902459 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:58:27.484193      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:58:28.484408      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:58:28.907888 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:58:29.484562      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:58:30.485562      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:58:30.911796 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:58:31.486401      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:58:32.486507      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:58:32.917155 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:58:33.486604      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:58:34.487487      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:58:34.922710 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:58:35.488427      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:58:36.488842      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:58:36.928517 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:58:37.488947      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:58:38.489933      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:58:38.933932 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:58:39.490603      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:58:40.490701      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:58:40.937984 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:58:41.491424      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:58:42.491635      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:58:42.943964 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:58:43.492416      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:58:44.492573      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:58:44.950058 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:58:45.492675      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:58:46.492863      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:58:46.954424 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:58:47.492979      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:58:48.493448      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:58:48.959869 20 container_probe.go:1758] Get pod test-grpc-b110c496-9607-4812-be51-d3a99d55e2c2 in namespace container-probe-9752
  E0712 13:58:49.493573      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:58:50.494408      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 07/12/25 13:58:50.96
  I0712 13:58:50.975460 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9752" for this suite. @ 07/12/25 13:58:50.979
• [242.689 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 07/12/25 13:58:50.987
  I0712 13:58:50.987412 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename pods @ 07/12/25 13:58:50.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:58:51.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:58:51.008
  I0712 13:58:51.011194 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: creating the pod @ 07/12/25 13:58:51.011
  STEP: submitting the pod to kubernetes @ 07/12/25 13:58:51.011
  E0712 13:58:51.495427      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:58:52.495690      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for the container to be running @ 07/12/25 13:58:53.03
  I0712 13:58:53.055825 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4730" for this suite. @ 07/12/25 13:58:53.06
• [2.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 07/12/25 13:58:53.066
  I0712 13:58:53.066448 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename downward-api @ 07/12/25 13:58:53.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:58:53.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:58:53.083
  STEP: Creating the pod @ 07/12/25 13:58:53.085
  E0712 13:58:53.495848      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:58:54.496655      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:58:55.496719      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:58:55.629437 20 pod_client.go:173] Successfully updated pod "annotationupdatebc7e4145-8bc7-46e9-abd7-d6bbc9147b66"
  E0712 13:58:56.497405      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:58:57.497651      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:58:58.497774      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:58:59.498697      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:58:59.653582 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1860" for this suite. @ 07/12/25 13:58:59.658
• [6.600 seconds]
------------------------------
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 07/12/25 13:58:59.666
  I0712 13:58:59.666553 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename subpath @ 07/12/25 13:58:59.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:58:59.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:58:59.681
  STEP: Setting up data @ 07/12/25 13:58:59.683
  STEP: Creating pod pod-subpath-test-secret-zfs6 @ 07/12/25 13:58:59.692
  STEP: Creating a pod to test atomic-volume-subpath @ 07/12/25 13:58:59.692
  E0712 13:59:00.499429      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:01.499497      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:02.499712      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:03.500425      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:04.500513      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:05.500625      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:06.501421      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:07.501523      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:08.502447      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:09.502541      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:10.502640      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:11.502756      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:12.503737      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:13.503919      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:14.504658      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:15.504825      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:16.504877      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:17.505442      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:18.505489      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:19.505621      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:20.505738      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:21.505831      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:22.505977      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:23.506159      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:59:23.786
  I0712 13:59:23.790162 20 output.go:207] Trying to get logs from node ip-172-31-3-36 pod pod-subpath-test-secret-zfs6 container test-container-subpath-secret-zfs6: <nil>
  STEP: delete the pod @ 07/12/25 13:59:23.805
  STEP: Deleting pod pod-subpath-test-secret-zfs6 @ 07/12/25 13:59:23.821
  I0712 13:59:23.821037 20 delete.go:62] Deleting pod "pod-subpath-test-secret-zfs6" in namespace "subpath-7242"
  I0712 13:59:23.824528 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7242" for this suite. @ 07/12/25 13:59:23.828
• [24.169 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:373
  STEP: Creating a kubernetes client @ 07/12/25 13:59:23.836
  I0712 13:59:23.836142 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename namespaces @ 07/12/25 13:59:23.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:59:23.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:59:23.848
  STEP: Updating Namespace "namespaces-5245" @ 07/12/25 13:59:23.85
  I0712 13:59:23.858637 20 namespace.go:390] Namespace "namespaces-5245" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"950aee42-c137-4164-a80d-ad487f4e83d0", "kubernetes.io/metadata.name":"namespaces-5245", "namespaces-5245":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0712 13:59:23.858719 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5245" for this suite. @ 07/12/25 13:59:23.929
• [0.103 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 07/12/25 13:59:23.938
  I0712 13:59:23.939005 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename deployment @ 07/12/25 13:59:23.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:59:23.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:59:23.953
  STEP: creating a Deployment @ 07/12/25 13:59:23.958
  I0712 13:59:23.958784 20 deployment.go:506] Creating simple deployment test-deployment-ffxgt
  I0712 13:59:23.969520 20 deployment.go:223] new replicaset for deployment "test-deployment-ffxgt" is yet to be created
  E0712 13:59:24.506326      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:25.506367      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Getting /status @ 07/12/25 13:59:25.985
  I0712 13:59:25.988650 20 deployment.go:531] Deployment test-deployment-ffxgt has Conditions: [{Available True 2025-07-12 13:59:24 +0000 UTC 2025-07-12 13:59:24 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-07-12 13:59:24 +0000 UTC 2025-07-12 13:59:23 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-ffxgt-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 07/12/25 13:59:25.988
  I0712 13:59:26.000283 20 deployment.go:551] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 12, 13, 59, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 13, 59, 24, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 12, 13, 59, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 12, 13, 59, 23, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-ffxgt-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 07/12/25 13:59:26
  I0712 13:59:26.001817 20 deployment.go:578] Observed &Deployment event: ADDED
  I0712 13:59:26.001846 20 deployment.go:574] Observed Deployment test-deployment-ffxgt in namespace deployment-632 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-12 13:59:23 +0000 UTC 2025-07-12 13:59:23 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-ffxgt-6fb4c74686"}
  I0712 13:59:26.001911 20 deployment.go:578] Observed &Deployment event: MODIFIED
  I0712 13:59:26.002010 20 deployment.go:574] Observed Deployment test-deployment-ffxgt in namespace deployment-632 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-12 13:59:23 +0000 UTC 2025-07-12 13:59:23 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-ffxgt-6fb4c74686"}
  I0712 13:59:26.002026 20 deployment.go:574] Observed Deployment test-deployment-ffxgt in namespace deployment-632 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-07-12 13:59:23 +0000 UTC 2025-07-12 13:59:23 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0712 13:59:26.002110 20 deployment.go:578] Observed &Deployment event: MODIFIED
  I0712 13:59:26.002155 20 deployment.go:574] Observed Deployment test-deployment-ffxgt in namespace deployment-632 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-07-12 13:59:23 +0000 UTC 2025-07-12 13:59:23 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0712 13:59:26.002170 20 deployment.go:574] Observed Deployment test-deployment-ffxgt in namespace deployment-632 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-12 13:59:24 +0000 UTC 2025-07-12 13:59:23 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-ffxgt-6fb4c74686" is progressing.}
  I0712 13:59:26.002261 20 deployment.go:578] Observed &Deployment event: MODIFIED
  I0712 13:59:26.002278 20 deployment.go:574] Observed Deployment test-deployment-ffxgt in namespace deployment-632 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-07-12 13:59:24 +0000 UTC 2025-07-12 13:59:24 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0712 13:59:26.002332 20 deployment.go:574] Observed Deployment test-deployment-ffxgt in namespace deployment-632 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-12 13:59:24 +0000 UTC 2025-07-12 13:59:23 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-ffxgt-6fb4c74686" has successfully progressed.}
  I0712 13:59:26.002492 20 deployment.go:578] Observed &Deployment event: MODIFIED
  I0712 13:59:26.002507 20 deployment.go:574] Observed Deployment test-deployment-ffxgt in namespace deployment-632 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-07-12 13:59:24 +0000 UTC 2025-07-12 13:59:24 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0712 13:59:26.002562 20 deployment.go:574] Observed Deployment test-deployment-ffxgt in namespace deployment-632 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-12 13:59:24 +0000 UTC 2025-07-12 13:59:23 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-ffxgt-6fb4c74686" has successfully progressed.}
  I0712 13:59:26.002574 20 deployment.go:571] Found Deployment test-deployment-ffxgt in namespace deployment-632 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0712 13:59:26.002587 20 deployment.go:582] Deployment test-deployment-ffxgt has an updated status
  STEP: patching the Statefulset Status @ 07/12/25 13:59:26.002
  I0712 13:59:26.002635 20 deployment.go:586] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0712 13:59:26.009355 20 deployment.go:590] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 07/12/25 13:59:26.009
  I0712 13:59:26.010874 20 deployment.go:615] Observed &Deployment event: ADDED
  I0712 13:59:26.010900 20 deployment.go:611] Observed deployment test-deployment-ffxgt in namespace deployment-632 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-12 13:59:23 +0000 UTC 2025-07-12 13:59:23 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-ffxgt-6fb4c74686"}
  I0712 13:59:26.010966 20 deployment.go:615] Observed &Deployment event: MODIFIED
  I0712 13:59:26.010983 20 deployment.go:611] Observed deployment test-deployment-ffxgt in namespace deployment-632 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-12 13:59:23 +0000 UTC 2025-07-12 13:59:23 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-ffxgt-6fb4c74686"}
  I0712 13:59:26.010993 20 deployment.go:611] Observed deployment test-deployment-ffxgt in namespace deployment-632 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-07-12 13:59:23 +0000 UTC 2025-07-12 13:59:23 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0712 13:59:26.011052 20 deployment.go:615] Observed &Deployment event: MODIFIED
  I0712 13:59:26.011166 20 deployment.go:611] Observed deployment test-deployment-ffxgt in namespace deployment-632 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-07-12 13:59:23 +0000 UTC 2025-07-12 13:59:23 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0712 13:59:26.011182 20 deployment.go:611] Observed deployment test-deployment-ffxgt in namespace deployment-632 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-12 13:59:24 +0000 UTC 2025-07-12 13:59:23 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-ffxgt-6fb4c74686" is progressing.}
  I0712 13:59:26.011333 20 deployment.go:615] Observed &Deployment event: MODIFIED
  I0712 13:59:26.011440 20 deployment.go:611] Observed deployment test-deployment-ffxgt in namespace deployment-632 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-07-12 13:59:24 +0000 UTC 2025-07-12 13:59:24 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0712 13:59:26.011529 20 deployment.go:611] Observed deployment test-deployment-ffxgt in namespace deployment-632 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-12 13:59:24 +0000 UTC 2025-07-12 13:59:23 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-ffxgt-6fb4c74686" has successfully progressed.}
  I0712 13:59:26.011606 20 deployment.go:615] Observed &Deployment event: MODIFIED
  I0712 13:59:26.011620 20 deployment.go:611] Observed deployment test-deployment-ffxgt in namespace deployment-632 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-07-12 13:59:24 +0000 UTC 2025-07-12 13:59:24 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0712 13:59:26.011631 20 deployment.go:611] Observed deployment test-deployment-ffxgt in namespace deployment-632 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-12 13:59:24 +0000 UTC 2025-07-12 13:59:23 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-ffxgt-6fb4c74686" has successfully progressed.}
  I0712 13:59:26.011640 20 deployment.go:611] Observed deployment test-deployment-ffxgt in namespace deployment-632 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0712 13:59:26.011708 20 deployment.go:615] Observed &Deployment event: MODIFIED
  I0712 13:59:26.011727 20 deployment.go:608] Found deployment test-deployment-ffxgt in namespace deployment-632 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0712 13:59:26.011736 20 deployment.go:619] Deployment test-deployment-ffxgt has a patched status
  I0712 13:59:26.015957 20 deployment.go:632] Deployment "test-deployment-ffxgt":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-ffxgt",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-632",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "38245fe6-f200-49a7-ae88-0d6f886599ff",
      ResourceVersion: (string) (len=5) "49236",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887925563,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925566,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925566,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925566,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925566,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-ffxgt-6fb4c74686\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0712 13:59:26.079375 20 deployment.go:40] New ReplicaSet "test-deployment-ffxgt-6fb4c74686" of Deployment "test-deployment-ffxgt":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-ffxgt-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-632",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "510ecc1c-8e2a-4981-adf0-908eb6b69110",
      ResourceVersion: (string) (len=5) "49229",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887925563,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-ffxgt",
          UID: (types.UID) (len=36) "38245fe6-f200-49a7-ae88-0d6f886599ff",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 33 38 32  |k:{\"uid\":\"382|
              00000120  34 35 66 65 36 2d 66 32  30 30 2d 34 39 61 37 2d  |45fe6-f200-49a7-|
              00000130  61 65 38 38 2d 30 64 36  66 38 38 36 35 39 39 66  |ae88-0d6f886599f|
              00000140  66 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |f\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925564,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0712 13:59:26.096413 20 deployment.go:68] Pod "test-deployment-ffxgt-6fb4c74686-9mnlx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-ffxgt-6fb4c74686-9mnlx",
      GenerateName: (string) (len=33) "test-deployment-ffxgt-6fb4c74686-",
      Namespace: (string) (len=14) "deployment-632",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "91177752-5fc8-4ad8-af0a-8894c5618cfc",
      ResourceVersion: (string) (len=5) "49228",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887925563,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-ffxgt-6fb4c74686",
          UID: (types.UID) (len=36) "510ecc1c-8e2a-4981-adf0-908eb6b69110",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 35 31 30 65 63 63 31  63 2d 38 65 32 61 2d 34  |"510ecc1c-8e2a-4|
              000000a0  39 38 31 2d 61 64 66 30  2d 39 30 38 65 62 36 62  |981-adf0-908eb6b|
              000000b0  36 39 31 31 30 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |69110\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925564,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 33  35 2e 31 33 36 5c 22 7d  |2.168.235.136\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qn8vm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qn8vm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-39-13",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925564,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925564,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925564,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925564,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.39.13",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.39.13"
        }
      },
      PodIP: (string) (len=15) "192.168.235.136",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.235.136"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887925564,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63887925564,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://62020cd277eeeed2879d78e04b8096e2021145a174a455b185375a3bedc014e0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qn8vm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:59:26.097613 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-632" for this suite. @ 07/12/25 13:59:26.102
• [2.170 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:119
  STEP: Creating a kubernetes client @ 07/12/25 13:59:26.109
  I0712 13:59:26.109191 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename emptydir @ 07/12/25 13:59:26.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:59:26.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:59:26.125
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 07/12/25 13:59:26.127
  E0712 13:59:26.506783      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:27.506828      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:28.507514      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:29.507646      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:59:30.152
  I0712 13:59:30.155696 20 output.go:207] Trying to get logs from node ip-172-31-3-36 pod pod-37c84a22-5ca7-45b1-8317-d8d3b0072679 container test-container: <nil>
  STEP: delete the pod @ 07/12/25 13:59:30.163
  I0712 13:59:30.182358 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7463" for this suite. @ 07/12/25 13:59:30.186
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 07/12/25 13:59:30.192
  I0712 13:59:30.192767 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename crd-selectable-fields @ 07/12/25 13:59:30.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:59:30.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:59:30.207
  STEP: Setting up server cert @ 07/12/25 13:59:30.209
  E0712 13:59:30.507882      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/12/25 13:59:30.76
  STEP: Deploying the custom resource conversion webhook pod @ 07/12/25 13:59:30.767
  STEP: Wait for the deployment to be ready @ 07/12/25 13:59:30.78
  I0712 13:59:30.786884 20 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0712 13:59:31.508363      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:32.508460      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/12/25 13:59:32.801
  STEP: Verifying the service has paired with the endpoint @ 07/12/25 13:59:32.815
  E0712 13:59:33.508568      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:59:33.815881 20 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 07/12/25 13:59:33.822
  I0712 13:59:33.822461 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Creating a custom resource conversion webhook @ 07/12/25 13:59:34.335
  E0712 13:59:34.508654      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:35.508734      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Watching with field selectors @ 07/12/25 13:59:36.376
  STEP: Registering informers with field selectors @ 07/12/25 13:59:36.379
  STEP: Creating custom resources @ 07/12/25 13:59:36.38
  STEP: Listing v2 custom resources with field selector host=host1 @ 07/12/25 13:59:36.405
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 07/12/25 13:59:36.409
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 07/12/25 13:59:36.413
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 07/12/25 13:59:36.419
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 07/12/25 13:59:36.423
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 07/12/25 13:59:36.428
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 07/12/25 13:59:36.428
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 07/12/25 13:59:36.428
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 07/12/25 13:59:36.428
  STEP: Deleting one custom resources to ensure that deletions are observed @ 07/12/25 13:59:36.428
  STEP: Updating one custom resources to ensure that deletions are observed @ 07/12/25 13:59:36.45
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 07/12/25 13:59:36.466
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 07/12/25 13:59:36.469
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 07/12/25 13:59:36.472
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 07/12/25 13:59:36.478
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 07/12/25 13:59:36.478
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 07/12/25 13:59:36.478
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 07/12/25 13:59:36.478
  E0712 13:59:36.509280      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:59:37.033858 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-546" for this suite. @ 07/12/25 13:59:37.038
• [6.855 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:89
  STEP: Creating a kubernetes client @ 07/12/25 13:59:37.047
  I0712 13:59:37.048010 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename emptydir @ 07/12/25 13:59:37.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:59:37.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:59:37.062
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 07/12/25 13:59:37.065
  E0712 13:59:37.510010      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:38.510082      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:39.511009      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:40.511077      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:59:41.087
  I0712 13:59:41.090250 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-668564ae-4676-4fd9-957b-1b21bfd18b72 container test-container: <nil>
  STEP: delete the pod @ 07/12/25 13:59:41.097
  I0712 13:59:41.114398 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8676" for this suite. @ 07/12/25 13:59:41.119
• [4.080 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 07/12/25 13:59:41.128
  I0712 13:59:41.128297 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename endpointslice @ 07/12/25 13:59:41.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:59:41.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:59:41.142
  I0712 13:59:41.164488      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  E0712 13:59:41.511226      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:42.511441      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:59:43.168510      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0712 13:59:43.196052      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0712 13:59:43.273071 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8844" for this suite. @ 07/12/25 13:59:43.277
• [2.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 07/12/25 13:59:43.286
  I0712 13:59:43.286944 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename deployment @ 07/12/25 13:59:43.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:59:43.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:59:43.3
  I0712 13:59:43.310845 20 resource.go:81] Pod name cleanup-pod: Found 0 pods out of 1
  E0712 13:59:43.512263      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:44.512637      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:45.512782      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:46.512987      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:47.513454      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:59:48.315892 20 resource.go:81] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/12/25 13:59:48.315
  I0712 13:59:48.315962 20 deployment.go:854] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 07/12/25 13:59:48.326
  I0712 13:59:48.337378 20 deployment.go:632] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6930",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d53960c6-7c16-46e5-998e-0e6541d60638",
      ResourceVersion: (string) (len=5) "49528",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887925588,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0712 13:59:48.345106 20 deployment.go:40] New ReplicaSet "test-cleanup-deployment-69b989f764" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6930",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bbf0001e-cdf0-40b4-849e-96497f5c6c72",
      ResourceVersion: (string) (len=5) "49530",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887925588,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "d53960c6-7c16-46e5-998e-0e6541d60638",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 35 33 39 36 30  63 36 2d 37 63 31 36 2d  |\"d53960c6-7c16-|
              00000120  34 36 65 35 2d 39 39 38  65 2d 30 65 36 35 34 31  |46e5-998e-0e6541|
              00000130  64 36 30 36 33 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d60638\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0712 13:59:48.345619 20 deployment.go:45] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0712 13:59:48.345819 20 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6930",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52939916-0266-407f-8501-34b36563d9e8",
      ResourceVersion: (string) (len=5) "49529",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887925583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "d53960c6-7c16-46e5-998e-0e6541d60638",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 64 35 33 39 36 30 63  |"uid\":\"d53960c|
              00000040  36 2d 37 63 31 36 2d 34  36 65 35 2d 39 39 38 65  |6-7c16-46e5-998e|
              00000050  2d 30 65 36 35 34 31 64  36 30 36 33 38 5c 22 7d  |-0e6541d60638\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0712 13:59:48.349117 20 deployment.go:68] Pod "test-cleanup-controller-8mhrc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-8mhrc",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-6930",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "66c81607-11ca-48d4-90f3-141df3d65b6b",
      ResourceVersion: (string) (len=5) "49505",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887925583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "52939916-0266-407f-8501-34b36563d9e8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  35 32 39 33 39 39 31 36  |uid\":\"52939916|
              00000080  2d 30 32 36 36 2d 34 30  37 66 2d 38 35 30 31 2d  |-0266-407f-8501-|
              00000090  33 34 62 33 36 35 36 33  64 39 65 38 5c 22 7d 22  |34b36563d9e8\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 33  35 2e 31 37 38 5c 22 7d  |2.168.235.178\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mrpzg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mrpzg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-39-13",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.39.13",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.39.13"
        }
      },
      PodIP: (string) (len=15) "192.168.235.178",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.235.178"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887925583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63887925583,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a4452f7db9769cb636226e808a0ad8d4c916a7fa2536d06d581bf460e78014a2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mrpzg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:59:48.350606 20 deployment.go:68] Pod "test-cleanup-deployment-69b989f764-zwvpt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-69b989f764-zwvpt",
      GenerateName: (string) (len=35) "test-cleanup-deployment-69b989f764-",
      Namespace: (string) (len=15) "deployment-6930",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5e9df30e-cee4-42ad-b173-90f00d97489b",
      ResourceVersion: (string) (len=5) "49534",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887925588,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
          UID: (types.UID) (len=36) "bbf0001e-cdf0-40b4-849e-96497f5c6c72",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 62  66 30 30 30 31 65 2d 63  |d\":\"bbf0001e-c|
              00000090  64 66 30 2d 34 30 62 34  2d 38 34 39 65 2d 39 36  |df0-40b4-849e-96|
              000000a0  34 39 37 66 35 63 36 63  37 32 5c 22 7d 22 3a 7b  |497f5c6c72\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9jjzs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9jjzs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-3-36",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 13:59:48.352424 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6930" for this suite. @ 07/12/25 13:59:48.355
• [5.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:900
  STEP: Creating a kubernetes client @ 07/12/25 13:59:48.364
  I0712 13:59:48.364702 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename pods @ 07/12/25 13:59:48.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:59:48.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:59:48.382
  STEP: creating a Pod with a static label @ 07/12/25 13:59:48.416
  STEP: watching for Pod to be ready @ 07/12/25 13:59:48.425
  I0712 13:59:48.426597 20 pods.go:947] observed Pod pod-test in namespace pods-6915 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0712 13:59:48.432716 20 pods.go:947] observed Pod pod-test in namespace pods-6915 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-12 13:59:48 +0000 UTC  }]
  I0712 13:59:48.451410 20 pods.go:947] observed Pod pod-test in namespace pods-6915 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-12 13:59:48 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-12 13:59:48 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-12 13:59:48 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-12 13:59:48 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-12 13:59:48 +0000 UTC  }]
  E0712 13:59:48.513554      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:49.513624      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:59:49.994370 20 pods.go:950] Found Pod pod-test in namespace pods-6915 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-12 13:59:49 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-12 13:59:48 +0000 UTC  } {Ready 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-12 13:59:49 +0000 UTC  } {ContainersReady 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-12 13:59:49 +0000 UTC  } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-12 13:59:48 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 07/12/25 13:59:49.997
  STEP: getting the Pod and ensuring that it's patched @ 07/12/25 13:59:50.007
  STEP: replacing the Pod's status Ready condition to False @ 07/12/25 13:59:50.01
  STEP: check the Pod again to ensure its Ready conditions are False @ 07/12/25 13:59:50.022
  STEP: deleting the Pod via a Collection with a LabelSelector @ 07/12/25 13:59:50.022
  STEP: watching for the Pod to be deleted @ 07/12/25 13:59:50.033
  I0712 13:59:50.035306 20 pods.go:1060] observed event type MODIFIED
  E0712 13:59:50.513837      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:51.514053      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:59:51.997889 20 pods.go:1060] observed event type MODIFIED
  I0712 13:59:52.183228 20 pods.go:1060] observed event type MODIFIED
  E0712 13:59:52.514667      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:59:53.007768 20 pods.go:1060] observed event type MODIFIED
  I0712 13:59:53.017293 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6915" for this suite. @ 07/12/25 13:59:53.022
• [4.663 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 07/12/25 13:59:53.028
  I0712 13:59:53.028037 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename projected @ 07/12/25 13:59:53.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:59:53.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:59:53.041
  STEP: Creating configMap with name configmap-projected-all-test-volume-08f945d9-c38e-40ce-aae7-e078139b8920 @ 07/12/25 13:59:53.043
  STEP: Creating secret with name secret-projected-all-test-volume-55c86ce4-e423-4d12-b854-4342ac5ee34f @ 07/12/25 13:59:53.048
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 07/12/25 13:59:53.051
  I0712 13:59:53.058697      20 warnings.go:110] "Warning: volume \"podinfo\" (Projected): overlapping paths: \"podname\" (DownwardAPI) with \"podname\" (DownwardAPI)"
  E0712 13:59:53.515431      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:54.515522      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:55.516253      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:56.516489      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 13:59:57.071
  I0712 13:59:57.074630 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod projected-volume-a5a6a3d0-3cf7-402e-a012-f82e391ad93a container projected-all-volume-test: <nil>
  STEP: delete the pod @ 07/12/25 13:59:57.08
  I0712 13:59:57.095793 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2818" for this suite. @ 07/12/25 13:59:57.1
• [4.080 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2222
  STEP: Creating a kubernetes client @ 07/12/25 13:59:57.108
  I0712 13:59:57.108601 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename services @ 07/12/25 13:59:57.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 13:59:57.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 13:59:57.12
  STEP: creating service in namespace services-1962 @ 07/12/25 13:59:57.123
  STEP: creating service affinity-nodeport in namespace services-1962 @ 07/12/25 13:59:57.123
  I0712 13:59:57.158104 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0712 13:59:57.517479      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 13:59:58.517561      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 13:59:59.180573 20 resource.go:361] Creating new exec pod
  E0712 13:59:59.518430      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:00.518621      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 14:00:01.208653 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-1962 exec execpod-affinityft68k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0712 14:00:01.305350 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.152.183.237) 80 port [tcp/http] succeeded!\n"
  I0712 14:00:01.305406 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0712 14:00:01.305498 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-1962 exec execpod-affinityft68k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.237 80'
  I0712 14:00:01.386959 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.237 80\nConnection to 10.152.183.237 80 port [tcp/http] succeeded!\n"
  I0712 14:00:01.387001 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0712 14:00:01.387073 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-1962 exec execpod-affinityft68k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.23.206 31902'
  I0712 14:00:01.475261 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.23.206 31902\nConnection to 172.31.23.206 31902 port [tcp/*] succeeded!\n"
  I0712 14:00:01.475306 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0712 14:00:01.475401 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-1962 exec execpod-affinityft68k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.39.13 31902'
  E0712 14:00:01.518808      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 14:00:01.560247 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.39.13 31902\nConnection to 172.31.39.13 31902 port [tcp/*] succeeded!\n"
  I0712 14:00:01.560290 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0712 14:00:01.560349 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=services-1962 exec execpod-affinityft68k -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:31902/ ; done'
  I0712 14:00:01.740943 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:31902/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:31902/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:31902/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:31902/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:31902/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:31902/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:31902/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:31902/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:31902/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:31902/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:31902/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:31902/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:31902/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:31902/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:31902/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.23.206:31902/\n"
  I0712 14:00:01.740992 20 builder.go:147] stdout: "\naffinity-nodeport-85dffb5fc7-2f82k\naffinity-nodeport-85dffb5fc7-2f82k\naffinity-nodeport-85dffb5fc7-2f82k\naffinity-nodeport-85dffb5fc7-2f82k\naffinity-nodeport-85dffb5fc7-2f82k\naffinity-nodeport-85dffb5fc7-2f82k\naffinity-nodeport-85dffb5fc7-2f82k\naffinity-nodeport-85dffb5fc7-2f82k\naffinity-nodeport-85dffb5fc7-2f82k\naffinity-nodeport-85dffb5fc7-2f82k\naffinity-nodeport-85dffb5fc7-2f82k\naffinity-nodeport-85dffb5fc7-2f82k\naffinity-nodeport-85dffb5fc7-2f82k\naffinity-nodeport-85dffb5fc7-2f82k\naffinity-nodeport-85dffb5fc7-2f82k\naffinity-nodeport-85dffb5fc7-2f82k"
  I0712 14:00:01.741008 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-2f82k
  I0712 14:00:01.741026 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-2f82k
  I0712 14:00:01.741034 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-2f82k
  I0712 14:00:01.741041 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-2f82k
  I0712 14:00:01.741050 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-2f82k
  I0712 14:00:01.741067 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-2f82k
  I0712 14:00:01.741073 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-2f82k
  I0712 14:00:01.741079 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-2f82k
  I0712 14:00:01.741086 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-2f82k
  I0712 14:00:01.741092 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-2f82k
  I0712 14:00:01.741099 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-2f82k
  I0712 14:00:01.741105 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-2f82k
  I0712 14:00:01.741111 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-2f82k
  I0712 14:00:01.741154 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-2f82k
  I0712 14:00:01.741161 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-2f82k
  I0712 14:00:01.741178 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-2f82k
  I0712 14:00:01.741377 20 service.go:4352] Cleaning up the exec pod
  I0712 14:00:01.793743 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1962" for this suite. @ 07/12/25 14:00:01.801
• [4.708 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 07/12/25 14:00:01.816
  I0712 14:00:01.816800 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename configmap @ 07/12/25 14:00:01.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 14:00:01.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 14:00:01.83
  STEP: Creating configMap with name configmap-test-volume-map-a8aacea6-2990-4bd3-bf7a-6e82e19b1c68 @ 07/12/25 14:00:01.833
  STEP: Creating a pod to test consume configMaps @ 07/12/25 14:00:01.837
  E0712 14:00:02.519357      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:03.519439      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:04.519634      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:05.519758      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 14:00:05.863
  I0712 14:00:05.867095 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-configmaps-dc9677d0-31c2-4097-b64d-bd5401a8a845 container agnhost-container: <nil>
  STEP: delete the pod @ 07/12/25 14:00:05.875
  I0712 14:00:05.893333 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9069" for this suite. @ 07/12/25 14:00:05.897
• [4.090 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:190
  STEP: Creating a kubernetes client @ 07/12/25 14:00:05.907
  I0712 14:00:05.907344 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename emptydir-wrapper @ 07/12/25 14:00:05.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 14:00:05.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 14:00:05.922
  STEP: Creating 50 configmaps @ 07/12/25 14:00:05.924
  STEP: Creating RC which spawns configmap-volume pods @ 07/12/25 14:00:06.165
  I0712 14:00:06.269045 20 resource.go:81] Pod name wrapped-volume-race-c3d2dc88-33c9-47c2-af78-befa15a24000: Found 4 pods out of 5
  E0712 14:00:06.519968      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:07.520035      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:08.520177      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:09.520664      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:10.521445      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 14:00:11.274707 20 resource.go:81] Pod name wrapped-volume-race-c3d2dc88-33c9-47c2-af78-befa15a24000: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/12/25 14:00:11.274
  STEP: Creating RC which spawns configmap-volume pods @ 07/12/25 14:00:11.311
  I0712 14:00:11.337122 20 resource.go:81] Pod name wrapped-volume-race-9c7a9f0f-b18d-471b-b3e5-fa880d686a1a: Found 1 pods out of 5
  E0712 14:00:11.522436      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:12.522627      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:13.522981      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:14.523695      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:15.523895      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 14:00:16.342267 20 resource.go:81] Pod name wrapped-volume-race-9c7a9f0f-b18d-471b-b3e5-fa880d686a1a: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/12/25 14:00:16.342
  STEP: Creating RC which spawns configmap-volume pods @ 07/12/25 14:00:16.365
  I0712 14:00:16.377144 20 resource.go:81] Pod name wrapped-volume-race-f94b8734-af5f-4d8c-b7b2-2790a2221896: Found 0 pods out of 5
  E0712 14:00:16.524514      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:17.524586      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:18.524724      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:19.525686      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:20.525891      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 14:00:21.384073 20 resource.go:81] Pod name wrapped-volume-race-f94b8734-af5f-4d8c-b7b2-2790a2221896: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/12/25 14:00:21.384
  STEP: deleting ReplicationController wrapped-volume-race-f94b8734-af5f-4d8c-b7b2-2790a2221896 in namespace emptydir-wrapper-1174, will wait for the garbage collector to delete the pods @ 07/12/25 14:00:21.402
  I0712 14:00:21.464339 20 resources.go:139] Deleting ReplicationController wrapped-volume-race-f94b8734-af5f-4d8c-b7b2-2790a2221896 took: 8.916227ms
  E0712 14:00:21.526337      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 14:00:21.565395 20 resources.go:163] Terminating ReplicationController wrapped-volume-race-f94b8734-af5f-4d8c-b7b2-2790a2221896 pods took: 101.055391ms
  E0712 14:00:22.526600      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-9c7a9f0f-b18d-471b-b3e5-fa880d686a1a in namespace emptydir-wrapper-1174, will wait for the garbage collector to delete the pods @ 07/12/25 14:00:23.066
  I0712 14:00:23.129015 20 resources.go:139] Deleting ReplicationController wrapped-volume-race-9c7a9f0f-b18d-471b-b3e5-fa880d686a1a took: 7.967667ms
  I0712 14:00:23.229716 20 resources.go:163] Terminating ReplicationController wrapped-volume-race-9c7a9f0f-b18d-471b-b3e5-fa880d686a1a pods took: 100.696476ms
  E0712 14:00:23.527442      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-c3d2dc88-33c9-47c2-af78-befa15a24000 in namespace emptydir-wrapper-1174, will wait for the garbage collector to delete the pods @ 07/12/25 14:00:24.33
  I0712 14:00:24.392347 20 resources.go:139] Deleting ReplicationController wrapped-volume-race-c3d2dc88-33c9-47c2-af78-befa15a24000 took: 7.225216ms
  I0712 14:00:24.493264 20 resources.go:163] Terminating ReplicationController wrapped-volume-race-c3d2dc88-33c9-47c2-af78-befa15a24000 pods took: 100.914193ms
  E0712 14:00:24.527438      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:25.528233      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 07/12/25 14:00:26.193
  I0712 14:00:26.488113 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-1174" for this suite. @ 07/12/25 14:00:26.491
• [20.592 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3630
  STEP: Creating a kubernetes client @ 07/12/25 14:00:26.499
  I0712 14:00:26.499474 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename services @ 07/12/25 14:00:26.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 14:00:26.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 14:00:26.515
  STEP: creating a collection of services @ 07/12/25 14:00:26.517
  I0712 14:00:26.517944 20 service.go:3666] Creating e2e-svc-a-5rzlz
  E0712 14:00:26.528504      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 14:00:26.532993 20 service.go:3666] Creating e2e-svc-b-n7rpc
  I0712 14:00:26.547296 20 service.go:3666] Creating e2e-svc-c-g7658
  STEP: deleting service collection @ 07/12/25 14:00:26.566
  I0712 14:00:26.604558 20 service.go:3701] Collection of services has been deleted
  I0712 14:00:26.604679 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1906" for this suite. @ 07/12/25 14:00:26.607
• [0.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:884
  STEP: Creating a kubernetes client @ 07/12/25 14:00:26.614
  I0712 14:00:26.615005 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename kubectl @ 07/12/25 14:00:26.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 14:00:26.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 14:00:26.629
  STEP: validating api versions @ 07/12/25 14:00:26.631
  I0712 14:00:26.631529 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3383742980 --namespace=kubectl-1773 api-versions'
  I0712 14:00:26.674474 20 builder.go:146] stderr: ""
  I0712 14:00:26.674511 20 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0712 14:00:26.674677 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1773" for this suite. @ 07/12/25 14:00:26.708
• [0.100 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 07/12/25 14:00:26.715
  I0712 14:00:26.715692 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename deployment @ 07/12/25 14:00:26.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 14:00:26.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 14:00:26.732
  I0712 14:00:26.734928 20 deployment.go:1664] Creating simple deployment test-new-deployment
  I0712 14:00:26.747187 20 deployment.go:223] deployment "test-new-deployment" doesn't have the required revision set
  E0712 14:00:27.528692      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:28.529681      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 07/12/25 14:00:28.763
  STEP: updating a scale subresource @ 07/12/25 14:00:28.767
  STEP: verifying the deployment Spec.Replicas was modified @ 07/12/25 14:00:28.774
  STEP: Patch a scale subresource @ 07/12/25 14:00:28.776
  I0712 14:00:28.799046 20 deployment.go:632] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9682",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f7c356a6-6830-4478-bdf1-c64fa4d49850",
      ResourceVersion: (string) (len=5) "50405",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887925626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0712 14:00:28.809165 20 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9682",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8817cc85-c256-4996-8976-8f2b0df3c581",
      ResourceVersion: (string) (len=5) "50412",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887925626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "f7c356a6-6830-4478-bdf1-c64fa4d49850",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 37 63 33 35 36  61 36 2d 36 38 33 30 2d  |\"f7c356a6-6830-|
              00000120  34 34 37 38 2d 62 64 66  31 2d 63 36 34 66 61 34  |4478-bdf1-c64fa4|
              00000130  64 34 39 38 35 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d49850\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0712 14:00:28.812937 20 deployment.go:68] Pod "test-new-deployment-685b768f58-6wcnn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-6wcnn",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9682",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "54a5d394-a790-4627-8352-9918296b73c0",
      ResourceVersion: (string) (len=5) "50408",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887925628,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "8817cc85-c256-4996-8976-8f2b0df3c581",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 38  31 37 63 63 38 35 2d 63  |d\":\"8817cc85-c|
              00000090  32 35 36 2d 34 39 39 36  2d 38 39 37 36 2d 38 66  |256-4996-8976-8f|
              000000a0  32 62 30 64 66 33 63 35  38 31 5c 22 7d 22 3a 7b  |2b0df3c581\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pzmwt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pzmwt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-3-36",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 14:00:28.813997 20 deployment.go:68] Pod "test-new-deployment-685b768f58-jm8hx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-jm8hx",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9682",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b9af2dae-d1ca-46c3-9252-28206d3b894c",
      ResourceVersion: (string) (len=5) "50399",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887925626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "8817cc85-c256-4996-8976-8f2b0df3c581",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 38  31 37 63 63 38 35 2d 63  |d\":\"8817cc85-c|
              00000090  32 35 36 2d 34 39 39 36  2d 38 39 37 36 2d 38 66  |256-4996-8976-8f|
              000000a0  32 62 30 64 66 33 63 35  38 31 5c 22 7d 22 3a 7b  |2b0df3c581\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 33  35 2e 31 33 32 5c 22 7d  |2.168.235.132\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zctwt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zctwt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-39-13",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63887925626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.39.13",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.39.13"
        }
      },
      PodIP: (string) (len=15) "192.168.235.132",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.235.132"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63887925626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63887925627,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://00fb2a91033adfc2a836738200e81487d8869669b97d145a5f9bcd96a7daea8c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zctwt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0712 14:00:28.815630 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9682" for this suite. @ 07/12/25 14:00:28.824
• [2.116 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 07/12/25 14:00:28.832
  I0712 14:00:28.832154 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename projected @ 07/12/25 14:00:28.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 14:00:28.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 14:00:28.853
  STEP: Creating configMap with name projected-configmap-test-volume-280e6f9d-4f2d-4b6c-bf7e-d156b5107516 @ 07/12/25 14:00:28.858
  STEP: Creating a pod to test consume configMaps @ 07/12/25 14:00:28.869
  E0712 14:00:29.530274      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:30.530364      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:31.531431      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:32.531506      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 14:00:32.891
  I0712 14:00:32.895781 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-projected-configmaps-cc5814cc-48dc-4aa9-b03f-ee97cd235612 container agnhost-container: <nil>
  STEP: delete the pod @ 07/12/25 14:00:32.902
  I0712 14:00:32.916366 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4229" for this suite. @ 07/12/25 14:00:32.921
• [4.096 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 07/12/25 14:00:32.928
  I0712 14:00:32.928113 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename container-runtime @ 07/12/25 14:00:32.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 14:00:32.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 14:00:32.94
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 07/12/25 14:00:32.952
  E0712 14:00:33.531629      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:34.532370      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:35.532458      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:36.533429      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:37.534235      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:38.534353      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:39.535354      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:40.536435      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:41.536536      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:42.537529      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:43.537711      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:44.538701      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:45.539427      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:46.540119      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:47.540260      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:48.541043      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:49.541097      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 07/12/25 14:00:50.045
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 07/12/25 14:00:50.049
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 07/12/25 14:00:50.055
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 07/12/25 14:00:50.055
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 07/12/25 14:00:50.077
  E0712 14:00:50.541359      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:51.542002      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:52.542090      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 07/12/25 14:00:53.095
  E0712 14:00:53.542489      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 07/12/25 14:00:54.102
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 07/12/25 14:00:54.111
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 07/12/25 14:00:54.111
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 07/12/25 14:00:54.134
  E0712 14:00:54.543110      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 07/12/25 14:00:55.142
  E0712 14:00:55.543255      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:56.544220      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 07/12/25 14:00:57.156
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 07/12/25 14:00:57.163
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 07/12/25 14:00:57.163
  I0712 14:00:57.187971 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7793" for this suite. @ 07/12/25 14:00:57.192
• [24.273 seconds]
------------------------------
S
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 07/12/25 14:00:57.201
  I0712 14:00:57.201446 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename ingress @ 07/12/25 14:00:57.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 14:00:57.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 14:00:57.217
  STEP: getting /apis @ 07/12/25 14:00:57.22
  STEP: getting /apis/networking.k8s.io @ 07/12/25 14:00:57.223
  STEP: getting /apis/networking.k8s.iov1 @ 07/12/25 14:00:57.224
  STEP: creating @ 07/12/25 14:00:57.225
  STEP: getting @ 07/12/25 14:00:57.248
  STEP: listing @ 07/12/25 14:00:57.251
  STEP: watching @ 07/12/25 14:00:57.257
  I0712 14:00:57.257026 20 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 07/12/25 14:00:57.258
  STEP: cluster-wide watching @ 07/12/25 14:00:57.26
  I0712 14:00:57.260651 20 ingress.go:198] starting watch
  STEP: patching @ 07/12/25 14:00:57.262
  STEP: updating @ 07/12/25 14:00:57.268
  I0712 14:00:57.277492 20 ingress.go:221] waiting for watch events with expected annotations
  I0712 14:00:57.277864 20 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 07/12/25 14:00:57.279
  STEP: updating /status @ 07/12/25 14:00:57.287
  STEP: get /status @ 07/12/25 14:00:57.297
  STEP: deleting @ 07/12/25 14:00:57.304
  STEP: deleting a collection @ 07/12/25 14:00:57.357
  I0712 14:00:57.373978 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-4252" for this suite. @ 07/12/25 14:00:57.378
• [0.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 07/12/25 14:00:57.385
  I0712 14:00:57.385765 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename downward-api @ 07/12/25 14:00:57.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 14:00:57.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 14:00:57.402
  STEP: Creating a pod to test downward api env vars @ 07/12/25 14:00:57.404
  E0712 14:00:57.545018      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:00:58.545225      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 14:00:59.425
  I0712 14:00:59.429837 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod downward-api-64e596e9-f043-4122-8a38-bc1e83787440 container dapi-container: <nil>
  STEP: delete the pod @ 07/12/25 14:00:59.436
  I0712 14:00:59.451476 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-152" for this suite. @ 07/12/25 14:00:59.455
• [2.077 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:468
  STEP: Creating a kubernetes client @ 07/12/25 14:00:59.462
  I0712 14:00:59.462509 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename sched-pred @ 07/12/25 14:00:59.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 14:00:59.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 14:00:59.478
  I0712 14:00:59.480650 20 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  E0712 14:00:59.545292      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 14:00:59.559963 20 util.go:390] Waiting for terminating namespaces to be deleted...
  I0712 14:00:59.563817 20 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-23-206 before test
  I0712 14:00:59.567907 20 predicates.go:958] nginx-ingress-controller-kubernetes-worker-p7kz8 from ingress-nginx-kubernetes-worker started at 2025-07-12 12:00:11 +0000 UTC (1 container statuses recorded)
  I0712 14:00:59.567948 20 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0712 14:00:59.567956 20 predicates.go:958] calico-node-54plq from kube-system started at 2025-07-12 12:17:03 +0000 UTC (1 container statuses recorded)
  I0712 14:00:59.567962 20 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0712 14:00:59.567970 20 predicates.go:958] coredns-5d946bb58-r22cc from kube-system started at 2025-07-12 12:00:11 +0000 UTC (1 container statuses recorded)
  I0712 14:00:59.567975 20 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0712 14:00:59.567981 20 predicates.go:958] kube-state-metrics-b84f44f45-pv9bk from kube-system started at 2025-07-12 12:00:10 +0000 UTC (1 container statuses recorded)
  I0712 14:00:59.567986 20 predicates.go:960] 	Container kube-state-metrics ready: true, restart count 0
  I0712 14:00:59.567993 20 predicates.go:958] metrics-server-v0.7.2-7d878b47f8-n56rt from kube-system started at 2025-07-12 12:00:11 +0000 UTC (2 container statuses recorded)
  I0712 14:00:59.568014 20 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0712 14:00:59.568019 20 predicates.go:960] 	Container metrics-server-nanny ready: true, restart count 0
  I0712 14:00:59.568025 20 predicates.go:958] dashboard-metrics-scraper-5cf87bc988-lp8pr from kubernetes-dashboard started at 2025-07-12 12:00:11 +0000 UTC (1 container statuses recorded)
  I0712 14:00:59.568030 20 predicates.go:960] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0712 14:00:59.568035 20 predicates.go:958] kubernetes-dashboard-6858576c98-27582 from kubernetes-dashboard started at 2025-07-12 12:00:11 +0000 UTC (1 container statuses recorded)
  I0712 14:00:59.568039 20 predicates.go:960] 	Container kubernetes-dashboard ready: true, restart count 5
  I0712 14:00:59.568057 20 predicates.go:958] sonobuoy-systemd-logs-daemon-set-e4f977ec76064d15-wlvd7 from sonobuoy started at 2025-07-12 12:20:11 +0000 UTC (2 container statuses recorded)
  I0712 14:00:59.568062 20 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0712 14:00:59.568068 20 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0712 14:00:59.568073 20 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-3-36 before test
  I0712 14:00:59.571144 20 predicates.go:958] nginx-ingress-controller-kubernetes-worker-l54zn from ingress-nginx-kubernetes-worker started at 2025-07-12 12:16:01 +0000 UTC (1 container statuses recorded)
  I0712 14:00:59.571166 20 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0712 14:00:59.571172 20 predicates.go:958] calico-node-w9rj4 from kube-system started at 2025-07-12 12:16:49 +0000 UTC (1 container statuses recorded)
  I0712 14:00:59.571176 20 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0712 14:00:59.571181 20 predicates.go:958] sonobuoy-e2e-job-ff92fb6baa0d42bd from sonobuoy started at 2025-07-12 12:20:11 +0000 UTC (2 container statuses recorded)
  I0712 14:00:59.571184 20 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0712 14:00:59.571187 20 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0712 14:00:59.571191 20 predicates.go:958] sonobuoy-systemd-logs-daemon-set-e4f977ec76064d15-82lg9 from sonobuoy started at 2025-07-12 12:20:11 +0000 UTC (2 container statuses recorded)
  I0712 14:00:59.571194 20 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0712 14:00:59.571221 20 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0712 14:00:59.571226 20 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-39-13 before test
  I0712 14:00:59.574840 20 predicates.go:958] nginx-ingress-controller-kubernetes-worker-h45h7 from ingress-nginx-kubernetes-worker started at 2025-07-12 13:31:22 +0000 UTC (1 container statuses recorded)
  I0712 14:00:59.574859 20 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0712 14:00:59.574867 20 predicates.go:958] calico-node-r8w6x from kube-system started at 2025-07-12 12:17:33 +0000 UTC (1 container statuses recorded)
  I0712 14:00:59.574872 20 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0712 14:00:59.574879 20 predicates.go:958] sonobuoy from sonobuoy started at 2025-07-12 12:20:10 +0000 UTC (1 container statuses recorded)
  I0712 14:00:59.574886 20 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0712 14:00:59.574891 20 predicates.go:958] sonobuoy-systemd-logs-daemon-set-e4f977ec76064d15-wz4t4 from sonobuoy started at 2025-07-12 12:20:11 +0000 UTC (2 container statuses recorded)
  I0712 14:00:59.574896 20 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0712 14:00:59.574901 20 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/12/25 14:00:59.574
  E0712 14:01:00.545375      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:01:01.545461      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/12/25 14:01:01.595
  STEP: Trying to apply a random label on the found node. @ 07/12/25 14:01:01.606
  STEP: verifying the node has the label kubernetes.io/e2e-b72afcae-c530-46b7-b140-fa67271e0058 42 @ 07/12/25 14:01:01.615
  STEP: Trying to relaunch the pod, now with labels. @ 07/12/25 14:01:01.617
  E0712 14:01:02.545906      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:01:03.546003      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-b72afcae-c530-46b7-b140-fa67271e0058 off the node ip-172-31-39-13 @ 07/12/25 14:01:03.637
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-b72afcae-c530-46b7-b140-fa67271e0058 @ 07/12/25 14:01:03.648
  I0712 14:01:03.652042 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2744" for this suite. @ 07/12/25 14:01:03.655
• [4.201 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 07/12/25 14:01:03.663
  I0712 14:01:03.663633 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename projected @ 07/12/25 14:01:03.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 14:01:03.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 14:01:03.678
  STEP: Creating a pod to test downward API volume plugin @ 07/12/25 14:01:03.681
  E0712 14:01:04.546663      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:01:05.546855      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:01:06.547171      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:01:07.547373      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 14:01:07.703
  I0712 14:01:07.706267 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod downwardapi-volume-4766321e-dfe3-48ed-94cb-b1093f3f16dd container client-container: <nil>
  STEP: delete the pod @ 07/12/25 14:01:07.714
  I0712 14:01:07.734687 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6589" for this suite. @ 07/12/25 14:01:07.738
• [4.082 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 07/12/25 14:01:07.745
  I0712 14:01:07.745491 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename runtimeclass @ 07/12/25 14:01:07.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 14:01:07.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 14:01:07.761
  I0712 14:01:07.770129 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1300" for this suite. @ 07/12/25 14:01:07.839
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 07/12/25 14:01:07.849
  I0712 14:01:07.849792 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename replicaset @ 07/12/25 14:01:07.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 14:01:07.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 14:01:07.861
  I0712 14:01:07.980669 20 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0712 14:01:08.548247      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:01:09.548744      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:01:10.549358      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:01:11.549489      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:01:12.550433      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 14:01:12.985124 20 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/12/25 14:01:12.985
  STEP: Scaling up "test-rs" replicaset @ 07/12/25 14:01:12.985
  I0712 14:01:12.993905 20 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 07/12/25 14:01:12.993
  I0712 14:01:13.003577 20 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-2903 with ReadyReplicas 1, AvailableReplicas 1
  I0712 14:01:13.025695 20 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-2903 with ReadyReplicas 1, AvailableReplicas 1
  I0712 14:01:13.053810 20 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-2903 with ReadyReplicas 1, AvailableReplicas 1
  I0712 14:01:13.062155 20 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-2903 with ReadyReplicas 1, AvailableReplicas 1
  E0712 14:01:13.550528      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0712 14:01:14.071901 20 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-2903 with ReadyReplicas 2, AvailableReplicas 2
  I0712 14:01:14.194235 20 replica_set.go:547] observed Replicaset test-rs in namespace replicaset-2903 with ReadyReplicas 3 found true
  I0712 14:01:14.194362 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2903" for this suite. @ 07/12/25 14:01:14.198
• [6.355 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:199
  STEP: Creating a kubernetes client @ 07/12/25 14:01:14.205
  I0712 14:01:14.205459 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename emptydir @ 07/12/25 14:01:14.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 14:01:14.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 14:01:14.222
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 07/12/25 14:01:14.224
  E0712 14:01:14.551430      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:01:15.551493      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:01:16.552438      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:01:17.552557      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/12/25 14:01:18.245
  I0712 14:01:18.249253 20 output.go:207] Trying to get logs from node ip-172-31-39-13 pod pod-8b094357-ddd1-46a1-ab8c-28f5559b0ca0 container test-container: <nil>
  STEP: delete the pod @ 07/12/25 14:01:18.256
  I0712 14:01:18.271762 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-700" for this suite. @ 07/12/25 14:01:18.275
• [4.079 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 07/12/25 14:01:18.284
  I0712 14:01:18.284851 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/12/25 14:01:18.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 14:01:18.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 14:01:18.301
  STEP: getting /apis @ 07/12/25 14:01:18.313
  STEP: getting /apis/admissionregistration.k8s.io @ 07/12/25 14:01:18.316
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 07/12/25 14:01:18.317
  STEP: creating @ 07/12/25 14:01:18.319
  STEP: getting @ 07/12/25 14:01:18.337
  STEP: listing @ 07/12/25 14:01:18.34
  STEP: watching @ 07/12/25 14:01:18.343
  I0712 14:01:18.343609 20 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 07/12/25 14:01:18.344
  STEP: updating @ 07/12/25 14:01:18.352
  I0712 14:01:18.361153 20 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  STEP: getting /status @ 07/12/25 14:01:18.361
  STEP: patching /status @ 07/12/25 14:01:18.366
  STEP: updating /status @ 07/12/25 14:01:18.376
  STEP: deleting @ 07/12/25 14:01:18.406
  STEP: deleting a collection @ 07/12/25 14:01:18.419
  I0712 14:01:18.443883 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3530" for this suite. @ 07/12/25 14:01:18.447
• [0.169 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1086
  STEP: Creating a kubernetes client @ 07/12/25 14:01:18.454
  I0712 14:01:18.454640 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3383742980
  STEP: Building a namespace api object, basename pods @ 07/12/25 14:01:18.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/12/25 14:01:18.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/12/25 14:01:18.474
  STEP: Create a pod @ 07/12/25 14:01:18.476
  E0712 14:01:18.552669      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0712 14:01:19.553716      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching /status @ 07/12/25 14:01:20.496
  I0712 14:01:20.503390 20 pods.go:1123] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0712 14:01:20.503514 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3468" for this suite. @ 07/12/25 14:01:20.508
• [2.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0712 14:01:20.516052 20 suites.go:34] Running AfterSuite actions on node 1
  I0712 14:01:20.516072 20 util.go:563] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
[ReportAfterSuite] PASSED [0.028 seconds]
------------------------------

Ran 419 of 6731 Specs in 6060.900 seconds
SUCCESS! -- 419 Passed | 0 Failed | 0 Pending | 6312 Skipped
PASS

Ginkgo ran 1 suite in 1h41m1.882011639s
Test Suite Passed
